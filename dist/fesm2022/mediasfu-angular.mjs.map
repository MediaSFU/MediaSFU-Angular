{"version":3,"file":"mediasfu-angular.mjs","sources":["../../../projects/mediasfu-angular/src/lib/methods/utils/initial-values.util.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/loading-modal/loading-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/main-aspect-component/main-aspect-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/control-buttons-component/control-buttons-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/control-buttons-alt-component/control-buttons-alt-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/control-buttons-alt-component/control-buttons-alt-component.component.html","../../../projects/mediasfu-angular/src/lib/components/display-components/control-buttons-component-touch/control-buttons-component-touch.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/meeting-progress-timer/meeting-progress-timer.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/other-grid-component/other-grid-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/main-screen-component/main-screen-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/main-grid-component/main-grid-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/sub-aspect-component/sub-aspect-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/main-container-component/main-container-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/alert-component/alert.component.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/alert-component/alert.component.component.html","../../../projects/mediasfu-angular/src/lib/components/menu-components/custom-buttons/custom-buttons.component.ts","../../../projects/mediasfu-angular/src/lib/components/menu-components/custom-buttons/custom-buttons.component.html","../../../projects/mediasfu-angular/src/lib/components/menu-components/meeting-id-component/meeting-id-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/menu-components/meeting-id-component/meeting-id-component.component.html","../../../projects/mediasfu-angular/src/lib/components/menu-components/meeting-passcode-component/meeting-passcode-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/menu-components/meeting-passcode-component/meeting-passcode-component.component.html","../../../projects/mediasfu-angular/src/lib/components/menu-components/share-buttons-component/share-buttons-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/menu-components/share-buttons-component/share-buttons-component.component.html","../../../projects/mediasfu-angular/src/lib/components/menu-components/menu-modal/menu-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/menu-components/menu-modal/menu-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/recording-components/standard-panel-component/standard-panel-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/recording-components/standard-panel-component/standard-panel-component.component.html","../../../projects/mediasfu-angular/src/lib/components/recording-components/advanced-panel-component/advanced-panel-components.component.ts","../../../projects/mediasfu-angular/src/lib/components/recording-components/advanced-panel-component/advanced-panel-component.component.html","../../../projects/mediasfu-angular/src/lib/components/recording-components/recording-modal/recording-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/recording-components/recording-modal/recording-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/requests-components/render-request-component/render-request-component.component.ts","../../../projects/mediasfu-angular/src/lib/components/requests-components/render-request-component/render-request-component.component.html","../../../projects/mediasfu-angular/src/lib/methods/requests-methods/respond-to-requests.service.ts","../../../projects/mediasfu-angular/src/lib/components/requests-components/requests-modal/requests-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/requests-components/requests-modal/requests-modal.component.html","../../../projects/mediasfu-angular/src/lib/methods/waiting-methods/respond-to-waiting.service.ts","../../../projects/mediasfu-angular/src/lib/components/waiting-components/waiting-room-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/waiting-components/waiting-room-modal.component.html","../../../projects/mediasfu-angular/src/lib/methods/display-settings-methods/modify-display-settings.service.ts","../../../projects/mediasfu-angular/src/lib/components/display-settings-components/display-settings-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-settings-components/display-settings-modal.component.html","../../../projects/mediasfu-angular/src/lib/methods/settings-methods/modify-settings.service.ts","../../../projects/mediasfu-angular/src/lib/components/event-settings-components/event-settings-modal/event-settings-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/event-settings-components/event-settings-modal/event-settings-modal.component.html","../../../projects/mediasfu-angular/src/lib/methods/co-host-methods/modify-co-host-settings.service.ts","../../../projects/mediasfu-angular/src/lib/components/co-host-components/co-host-modal/co-host-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/co-host-components/co-host-modal/co-host-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/participants-components/participant-list-item/participant-list-item.component.ts","../../../projects/mediasfu-angular/src/lib/components/participants-components/participant-list-item/participant-list-item.component.html","../../../projects/mediasfu-angular/src/lib/components/participants-components/participant-list/participant-list.component.ts","../../../projects/mediasfu-angular/src/lib/components/participants-components/participant-list/participant-list.component.html","../../../projects/mediasfu-angular/src/lib/components/participants-components/participant-list-others-item/participant-list-others-item.component.ts","../../../projects/mediasfu-angular/src/lib/components/participants-components/participant-list-others-item/participant-list-others-item.component.html","../../../projects/mediasfu-angular/src/lib/components/participants-components/participant-list-others/participant-list-others.component.ts","../../../projects/mediasfu-angular/src/lib/components/participants-components/participant-list-others/participant-list-others.component.html","../../../projects/mediasfu-angular/src/lib/methods/participants-methods/mute-participants.service.ts","../../../projects/mediasfu-angular/src/lib/methods/participants-methods/message-participants.service.ts","../../../projects/mediasfu-angular/src/lib/methods/participants-methods/remove-participants.service.ts","../../../projects/mediasfu-angular/src/lib/components/participants-components/participants-modal/participants-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/participants-components/participants-modal/participants-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/message-components/message-panel/message-panel.component.ts","../../../projects/mediasfu-angular/src/lib/components/message-components/message-panel/message-panel.component.html","../../../projects/mediasfu-angular/src/lib/methods/message-methods/send-message.service.ts","../../../projects/mediasfu-angular/src/lib/components/message-components/messages-modal/messages-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/message-components/messages-modal/messages-modal.component.html","../../../projects/mediasfu-angular/src/lib/methods/stream-methods/switch-audio.service.ts","../../../projects/mediasfu-angular/src/lib/methods/stream-methods/switch-video.service.ts","../../../projects/mediasfu-angular/src/lib/methods/stream-methods/switch-video-alt.service.ts","../../../projects/mediasfu-angular/src/lib/components/media-settings-components/media-settings-modal/media-settings-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/media-settings-components/media-settings-modal/media-settings-modal.component.html","../../../projects/mediasfu-angular/src/lib/methods/exit-methods/confirm-exit.service.ts","../../../projects/mediasfu-angular/src/lib/components/exit-components/confirm-exit-modal/confirm-exit-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/exit-components/confirm-exit-modal/confirm-exit-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/misc-components/confirm-here-modal/confirm-here-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/misc-components/confirm-here-modal/confirm-here-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/misc-components/share-event-modal/share-event-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/misc-components/share-event-modal/share-event-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/misc-components/welcome-page/welcome-page.component.ts","../../../projects/mediasfu-angular/src/lib/components/misc-components/welcome-page/welcome-page.component.html","../../../projects/mediasfu-angular/src/lib/components/misc-components/pre-join-page/pre-join-page.component.ts","../../../projects/mediasfu-angular/src/lib/components/misc-components/pre-join-page/pre-join-page.component.html","../../../projects/mediasfu-angular/src/lib/components/polls-components/poll-modal/poll-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/polls-components/poll-modal/poll-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/background-components/background-modal/background-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/background-components/background-modal/background-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/breakout-components/room-list/room-list.component.ts","../../../projects/mediasfu-angular/src/lib/components/breakout-components/room-list/room-list.component.html","../../../projects/mediasfu-angular/src/lib/components/breakout-components/edit-room-modal/edit-room-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/breakout-components/edit-room-modal/edit-room-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/breakout-components/breakout-rooms-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/breakout-components/breakout-rooms-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/whiteboard-components/configure-whiteboard-modal/configure-whiteboard-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/whiteboard-components/configure-whiteboard-modal/configure-whiteboard-modal.component.html","../../../projects/mediasfu-angular/src/lib/components/whiteboard-components/whiteboard/whiteboard.component.ts","../../../projects/mediasfu-angular/src/lib/components/whiteboard-components/whiteboard/whiteboard.component.html","../../../projects/mediasfu-angular/src/lib/components/screenboard-components/screenboard/screenboard.component.ts","../../../projects/mediasfu-angular/src/lib/components/screenboard-components/screenboard/screenboard.component.html","../../../projects/mediasfu-angular/src/lib/components/screenboard-components/screenboard-modal/screenboard-modal.component.ts","../../../projects/mediasfu-angular/src/lib/components/screenboard-components/screenboard-modal/screenboard-modal.component.html","../../../projects/mediasfu-angular/src/lib/consumers/generate-page-content.service.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/pagination/pagination.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/flexible-grid/flexible-grid.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/flexible-video/flexible-video.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/audio-grid/audio-grid.component.ts","../../../projects/mediasfu-angular/src/lib/methods/menu-methods/launch-menu-modal.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/launch-recording.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/record-update-timer.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/record-start-timer.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/record-resume-timer.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/start-recording.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/confirm-recording.service.ts","../../../projects/mediasfu-angular/src/lib/methods/waiting-methods/launch-waiting.service.ts","../../../projects/mediasfu-angular/src/lib/methods/co-host-methods/launch-co-host.service.ts","../../../projects/mediasfu-angular/src/lib/methods/media-settings-methods/launch-media-settings.service.ts","../../../projects/mediasfu-angular/src/lib/methods/display-settings-methods/launch-display-settings.service.ts","../../../projects/mediasfu-angular/src/lib/methods/settings-methods/launch-settings.service.ts","../../../projects/mediasfu-angular/src/lib/methods/requests-methods/launch-requests.service.ts","../../../projects/mediasfu-angular/src/lib/methods/participants-methods/launch-participants.service.ts","../../../projects/mediasfu-angular/src/lib/methods/message-methods/launch-messages.service.ts","../../../projects/mediasfu-angular/src/lib/methods/exit-methods/launch-confirm-exit.service.ts","../../../projects/mediasfu-angular/src/lib/methods/polls-methods/launch-poll.service.ts","../../../projects/mediasfu-angular/src/lib/methods/background-methods/launch-background.service.ts","../../../projects/mediasfu-angular/src/lib/methods/breakout-room-methods/launch-breakout-rooms.service.ts","../../../projects/mediasfu-angular/src/lib/methods/whiteboard-methods/launch-configure-whiteboard.service.ts","../../../projects/mediasfu-angular/src/lib/sockets/socket-manager.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/validate-alphanumeric.service.ts","../../../projects/mediasfu-angular/src/lib/producers/producer-emits/join-room.service.ts","../../../projects/mediasfu-angular/src/lib/producers/producer-emits/join-con-room.service.ts","../../../projects/mediasfu-angular/src/lib/producer-client/producer-client-emits/join-room-client.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/producer/video-capture-constraints.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/producer/h-params.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/producer/v-params.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/producer/screen-params.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/producer/a-params.service.ts","../../../projects/mediasfu-angular/src/lib/producer-client/producer-client-emits/update-room-parameters-client.service.ts","../../../projects/mediasfu-angular/src/lib/producer-client/producer-client-emits/create-device-client.service.ts","../../../projects/mediasfu-angular/src/lib/methods/stream-methods/click-video.service.ts","../../../projects/mediasfu-angular/src/lib/methods/stream-methods/click-audio.service.ts","../../../projects/mediasfu-angular/src/lib/methods/stream-methods/click-screen-share.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/stream-success-video.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/stream-success-audio.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/stream-success-screen.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/stream-success-audio-switch.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/check-permission.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/socket-receive-methods/producer-closed.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/signal-new-consumer-transport.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/socket-receive-methods/new-pipe-producer.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/update-mini-cards-grid.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/mix-streams.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/disp-streams.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/stop-share-screen.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/check-screen-share.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/start-share-screen.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/request-screen-share.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/reorder-streams.service.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/mini-card/mini-card.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/card-video-display/card-video-display.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/card-video-display/card-video-display.component.html","../../../projects/mediasfu-angular/src/lib/methods/utils/get-overlay-position.util.ts","../../../projects/mediasfu-angular/src/lib/consumers/control-media.service.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/video-card/video-card.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/video-card/video-card.component.html","../../../projects/mediasfu-angular/src/lib/components/display-components/audio-card/audio-card.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/audio-card/audio-card.component.html","../../../projects/mediasfu-angular/src/lib/consumers/prepopulate-user-media.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/get-videos.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/re-port.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/trigger.service.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/mini-audio/mini-audio.component.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/mini-audio-player/mini-audio-player.component.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/mini-audio-player/mini-audio-player.component.html","../../../projects/mediasfu-angular/src/lib/consumers/consumer-resume.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/connect-send-transport-audio.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/connect-send-transport-video.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/connect-send-transport-screen.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/process-consumer-transports.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/resume-pause-streams.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/readjust.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/check-grid.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/get-estimate.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/calculate-rows-and-columns.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/add-videos-grid.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/on-screen-changes.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/sleep.util.ts","../../../projects/mediasfu-angular/src/lib/consumers/change-vids.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/compare-active-names.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/compare-screen-states.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/create-send-transport.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/resume-send-transport-audio.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/receive-all-piped-transports.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/disconnect-send-transport-video.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/disconnect-send-transport-audio.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/disconnect-send-transport-screen.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/connect-send-transport.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/get-piped-producers-alt.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/connect-recv-transport.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/re-update-inter.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/update-participant-audio-decibels.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/close-and-resize.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/auto-adjust.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/switch-user-video-alt.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/switch-user-video.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/switch-user-audio.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/receive-room-messages.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/format-number.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/socket-receive-methods/join-consume-room.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/connect-ips.service.ts","../../../projects/mediasfu-angular/src/lib/methods/polls-methods/poll-updated.service.ts","../../../projects/mediasfu-angular/src/lib/methods/polls-methods/handle-create-poll.service.ts","../../../projects/mediasfu-angular/src/lib/methods/polls-methods/handle-vote-poll.service.ts","../../../projects/mediasfu-angular/src/lib/methods/polls-methods/handle-end-poll.service.ts","../../../projects/mediasfu-angular/src/lib/methods/breakout-room-methods/breakout-room-updated.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/meeting-timer/start-meeting-progress-timer.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/check-pause-state.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/check-resume-state.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/record-pause-timer.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/update-recording.service.ts","../../../projects/mediasfu-angular/src/lib/methods/recording-methods/stop-recording.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/user-waiting.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/person-joined.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/all-waiting-room-members.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/room-record-params.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/ban-participant.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/updated-co-host.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/participant-requested.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/screen-producer-id.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/update-media-settings.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/producer-media-paused.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/producer-media-resumed.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/producer-media-closed.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/control-media-host.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/meeting-ended.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/disconnect-user-self.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/receive-message.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/meeting-time-remaining.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/meeting-still-there.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/start-records.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/re-initiate-recording.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/get-domains.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/update-consuming-domains.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/sound-player.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/recording-notice.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/time-left-recording.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/stopped-recording.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/host-request-response.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/all-members.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/all-members-rest.service.ts","../../../projects/mediasfu-angular/src/lib/producers/socket-receive-methods/disconnect.service.ts","../../../projects/mediasfu-angular/src/lib/methods/whiteboard-methods/capture-canvas-stream.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/resume-pause-audio-streams.service.ts","../../../projects/mediasfu-angular/src/lib/consumers/process-consumer-transports-audio.service.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/control-widgets/menu-widget.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/control-widgets/message-widget.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/control-widgets/menu-record-widget.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/control-widgets/record-timer-widget.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/control-widgets/menu-participants-widget.component.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/control-widgets/screenshare-widget.component.ts","../../../projects/mediasfu-angular/src/lib/components/mediasfu-components/mediasfu-generic.component.ts","../../../projects/mediasfu-angular/src/lib/components/mediasfu-components/mediasfu-broadcast.component.ts","../../../projects/mediasfu-angular/src/lib/components/mediasfu-components/mediasfu-webinar.component.ts","../../../projects/mediasfu-angular/src/lib/components/mediasfu-components/mediasfu-conference.component.ts","../../../projects/mediasfu-angular/src/lib/components/mediasfu-components/mediasfu-chat.component.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/generate-random-participants.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/generate-random-messages.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/generate-random-request-list.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/generate-random-waiting-room-list.service.ts","../../../projects/mediasfu-angular/src/lib/methods/utils/generate-random-polls.service.ts","../../../projects/mediasfu-angular/src/lib/components/display-components/mini-card-audio/mini-card-audio.component.ts","../../../projects/mediasfu-angular/src/public-api.ts","../../../projects/mediasfu-angular/src/mediasfu-angular.ts"],"sourcesContent":["import { Producer, ProducerOptions, RtpCapabilities, Transport } from 'mediasoup-client/lib/types';\nimport {\n  AParamsType,\n  CoHostResponsibility,\n  EventType,\n  HParamsType,\n  Participant,\n  Poll,\n  ScreenParamsType,\n  Stream,\n  VidCons,\n  VParamsType,\n  ConsumeSocket,\n  MeetingRoomParams,\n  UserRecordingParams,\n  ScreenState,\n  AudioDecibels,\n  CustomMediaComponent,\n  GridSizes,\n  Message,\n  WaitingRoomParticipant,\n  Request,\n  BreakoutParticipant,\n  WhiteboardUser,\n  Shape,\n  ResponseJoinRoom,\n  ComponentSizes,\n  Transport as TransportType,\n} from '../../@types/types';\nimport { Device } from 'mediasoup-client/lib/types';\nimport { Socket } from 'socket.io-client';\nimport { SelfieSegmentation } from '@mediapipe/selfie_segmentation';\n\nexport interface InitialValuesStateType {\n  roomName: string;\n  member: string;\n  adminPasscode: string;\n  islevel: string;\n  coHost: string;\n  coHostResponsibility: CoHostResponsibility[];\n  youAreCoHost: boolean;\n  youAreHost: boolean;\n  confirmedToRecord: boolean;\n  meetingDisplayType: string;\n  meetingVideoOptimized: boolean;\n  eventType: EventType;\n  participants: Participant[];\n  filteredParticipants: Participant[];\n  participantsCounter: number;\n  participantsFilter: string;\n\n  validated: boolean;\n  localUIMode: boolean;\n  socket: Socket;\n  roomData: ResponseJoinRoom | null;\n  device: Device | null;\n  apiKey: string;\n  apiUserName: string;\n  apiToken: string;\n  link: string;\n\n  consume_sockets: ConsumeSocket[];\n  rtpCapabilities: RtpCapabilities | null;\n  roomRecvIPs: string[];\n  meetingRoomParams: MeetingRoomParams | null;\n  itemPageLimit: number;\n  audioOnlyRoom: boolean;\n  addForBasic: boolean;\n  screenPageLimit: number;\n  shareScreenStarted: boolean;\n  shared: boolean;\n  targetOrientation: string;\n  targetResolution: string;\n  targetResolutionHost: string;\n  vidCons: VidCons;\n  frameRate: number;\n  hParams: HParamsType;\n  vParams: VParamsType;\n  screenParams: ScreenParamsType;\n  aParams: AParamsType;\n\n  // Recording Fields\n  recordingAudioPausesLimit: number;\n  recordingAudioPausesCount: number;\n  recordingAudioSupport: boolean;\n  recordingAudioPeopleLimit: number;\n  recordingAudioParticipantsTimeLimit: number;\n  recordingVideoPausesCount: number;\n  recordingVideoPausesLimit: number;\n  recordingVideoSupport: boolean;\n  recordingVideoPeopleLimit: number;\n  recordingVideoParticipantsTimeLimit: number;\n  recordingAllParticipantsSupport: boolean;\n  recordingVideoParticipantsSupport: boolean;\n  recordingAllParticipantsFullRoomSupport: boolean;\n  recordingVideoParticipantsFullRoomSupport: boolean;\n  recordingPreferredOrientation: string;\n  recordingSupportForOtherOrientation: boolean;\n  recordingMultiFormatsSupport: boolean;\n\n  userRecordingParams: UserRecordingParams;\n\n  canRecord: boolean;\n  startReport: boolean;\n  endReport: boolean;\n  recordTimerInterval: NodeJS.Timeout | null;\n  recordStartTime: number;\n  recordElapsedTime: number;\n  isTimerRunning: boolean;\n  canPauseResume: boolean;\n  recordChangeSeconds: number;\n  pauseLimit: number;\n  pauseRecordCount: number;\n  canLaunchRecord: boolean;\n  stopLaunchRecord: boolean;\n\n  // Room properties\n  participantsAll: Participant[];\n  firstAll: boolean;\n  updateMainWindow: boolean;\n  first_round: boolean;\n  landScaped: boolean;\n  lock_screen: boolean;\n  screenId: string;\n  allVideoStreams: (Participant | Stream)[];\n  newLimitedStreams: (Participant | Stream)[];\n  newLimitedStreamsIDs: string[];\n  activeSounds: string[];\n  screenShareIDStream: string;\n  screenShareNameStream: string;\n  adminIDStream: string;\n  adminNameStream: string;\n  youYouStream: (Participant | Stream)[];\n  youYouStreamIDs: string[];\n  localStream: MediaStream | null;\n  recordStarted: boolean;\n  recordResumed: boolean;\n  recordPaused: boolean;\n  recordStopped: boolean;\n  adminRestrictSetting: boolean;\n  videoRequestState: string | null;\n  videoRequestTime: number;\n  videoAction: boolean;\n  localStreamVideo: MediaStream | null;\n  userDefaultVideoInputDevice: string;\n  currentFacingMode: string;\n  prevFacingMode: string;\n  defVideoID: string;\n  allowed: boolean;\n  dispActiveNames: string[];\n  activeNames: string[];\n  prevActiveNames: string[];\n  p_activeNames: string[];\n  p_dispActiveNames: string[];\n  membersReceived: boolean;\n  deferScreenReceived: boolean;\n  hostFirstSwitch: boolean;\n  micAction: boolean;\n  screenAction: boolean;\n  chatAction: boolean;\n  audioRequestState: string | null;\n  screenRequestState: string | null;\n  chatRequestState: string | null;\n  audioRequestTime: number;\n  screenRequestTime: number;\n  chatRequestTime: number;\n  updateRequestIntervalSeconds: number;\n  oldSoundIds: string[];\n  hostLabel: string;\n  mainScreenFilled: boolean;\n  localStreamScreen: MediaStream | null;\n  screenAlreadyOn: boolean;\n  chatAlreadyOn: boolean;\n  redirectURL: string;\n  oldAllStreams: (Participant | Stream)[];\n  adminVidID: string;\n  streamNames: Stream[];\n  non_alVideoStreams: Participant[];\n  sortAudioLoudness: boolean;\n  audioDecibels: AudioDecibels[];\n  mixed_alVideoStreams: (Participant | Stream)[];\n  non_alVideoStreams_muted: Participant[];\n  paginatedStreams: (Participant | Stream)[][];\n  localStreamAudio: MediaStream | null;\n  defAudioID: string;\n  userDefaultAudioInputDevice: string;\n  userDefaultAudioOutputDevice: string;\n  prevAudioInputDevice: string;\n  prevVideoInputDevice: string;\n  audioPaused: boolean;\n  mainScreenPerson: string;\n  adminOnMainScreen: boolean;\n  screenStates: ScreenState[];\n  prevScreenStates: ScreenState[];\n  updateDateState: number | null;\n  lastUpdate: number | null;\n  nForReadjustRecord: number;\n  fixedPageLimit: number;\n  removeAltGrid: boolean;\n  nForReadjust: number;\n  reorderInterval: number;\n  fastReorderInterval: number;\n  lastReorderTime: number;\n  audStreamNames: Stream[];\n  currentUserPage: number;\n  mainHeightWidth: number;\n  prevMainHeightWidth: number;\n  prevDoPaginate: boolean;\n  doPaginate: boolean;\n  shareEnded: boolean;\n  lStreams: (Participant | Stream)[];\n  chatRefStreams: (Participant | Stream)[];\n  controlHeight: number;\n  isWideScreen: boolean;\n  isMediumScreen: boolean;\n  isSmallScreen: boolean;\n  addGrid: boolean;\n  addAltGrid: boolean;\n  gridRows: number;\n  gridCols: number;\n  altGridRows: number;\n  altGridCols: number;\n  numberPages: number;\n  currentStreams: (Participant | Stream)[];\n  showMiniView: boolean;\n  nStream: MediaStream | null;\n  defer_receive: boolean;\n  allAudioStreams: (Participant | Stream)[];\n  remoteScreenStream: Stream[];\n  screenProducer: Producer | null;\n  gotAllVids: boolean;\n  paginationHeightWidth: number;\n  paginationDirection: string;\n  gridSizes: GridSizes;\n  screenForceFullDisplay: boolean;\n  mainGridStream: CustomMediaComponent[];\n  otherGridStreams: CustomMediaComponent[][];\n  audioOnlyStreams: CustomMediaComponent[];\n  videoInputs: MediaDeviceInfo[];\n  audioInputs: MediaDeviceInfo[];\n  meetingProgressTime: string;\n  meetingElapsedTime: number;\n  ref_participants: Participant[];\n\n  // New fields related to messaging, events, modals, and other UI states\n  messages: Message[];\n  startDirectMessage: boolean;\n  directMessageDetails: Participant | null;\n  showMessagesBadge: boolean;\n  audioSetting: string;\n  videoSetting: string;\n  screenshareSetting: string;\n  chatSetting: string;\n  displayOption: string;\n  autoWave: boolean;\n  forceFullDisplay: boolean;\n  prevForceFullDisplay: boolean;\n  prevMeetingDisplayType: string;\n  waitingRoomFilter: string;\n  waitingRoomList: WaitingRoomParticipant[];\n  waitingRoomCounter: number;\n  filteredWaitingRoomList: WaitingRoomParticipant[];\n  requestFilter: string;\n  requestList: Request[];\n  requestCounter: number;\n  filteredRequestList: Request[];\n  totalReqWait: number;\n  alertVisible: boolean;\n  alertMessage: string;\n  alertType: 'success' | 'danger';\n  alertDuration: number;\n  progressTimerVisible: boolean;\n  progressTimerValue: number;\n  isMenuModalVisible: boolean;\n  isRecordingModalVisible: boolean;\n  isSettingsModalVisible: boolean;\n  isRequestsModalVisible: boolean;\n  isWaitingModalVisible: boolean;\n  isCoHostModalVisible: boolean;\n  isMediaSettingsModalVisible: boolean;\n  isDisplaySettingsModalVisible: boolean;\n  isParticipantsModalVisible: boolean;\n  isMessagesModalVisible: boolean;\n  isConfirmExitModalVisible: boolean;\n  isConfirmHereModalVisible: boolean;\n  isShareEventModalVisible: boolean;\n  isLoadingModalVisible: boolean;\n\n  recordingMediaOptions: string;\n  recordingAudioOptions: string;\n  recordingVideoOptions: string;\n  recordingVideoType: string;\n  recordingVideoOptimized: boolean;\n  recordingDisplayType: 'video' | 'media' | 'all';\n  recordingAddHLS: boolean;\n  recordingNameTags: boolean;\n  recordingBackgroundColor: string;\n  recordingNameTagsColor: string;\n  recordingAddText: boolean;\n  recordingCustomText: string;\n  recordingCustomTextPosition: string;\n  recordingCustomTextColor: string;\n  recordingOrientationVideo: string;\n  clearedToResume: boolean;\n  clearedToRecord: boolean;\n  recordState: string;\n  showRecordButtons: boolean;\n  recordingProgressTime: string;\n  audioSwitching: boolean;\n  videoSwitching: boolean;\n  videoAlreadyOn: boolean;\n  audioAlreadyOn: boolean;\n  componentSizes: ComponentSizes;\n  hasCameraPermission: boolean;\n  hasAudioPermission: boolean;\n  transportCreated: boolean;\n  transportCreatedVideo: boolean;\n  transportCreatedAudio: boolean;\n  transportCreatedScreen: boolean;\n  producerTransport: Transport | null;\n  videoProducer: Producer | null;\n  params: ProducerOptions;\n  videoParams: ProducerOptions;\n  audioParams: ProducerOptions;\n  audioProducer: Producer | null;\n  consumerTransports: TransportType[];\n  consumingTransports: string[];\n\n  // Polls\n  polls: Poll[];\n  poll: Poll | null;\n  isPollModalVisible: boolean;\n\n  // Background\n  customImage: string;\n  selectedImage: string;\n  segmentVideo: MediaStream | null;\n  selfieSegmentation: SelfieSegmentation | null;\n  pauseSegmentation: boolean;\n  processedStream: MediaStream | null;\n  keepBackground: boolean;\n  backgroundHasChanged: boolean;\n  virtualStream: MediaStream | null;\n  mainCanvas: HTMLCanvasElement | null;\n  prevKeepBackground: boolean;\n  appliedBackground: boolean;\n  isBackgroundModalVisible: boolean;\n  autoClickBackground: boolean;\n\n  // Breakout Rooms\n  breakoutRooms: BreakoutParticipant[][];\n  currentRoomIndex: number;\n  canStartBreakout: boolean;\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n  hostNewRoom: number;\n  limitedBreakRoom: BreakoutParticipant[];\n  mainRoomsLength: number;\n  memberRoom: number;\n  isBreakoutRoomsModalVisible: boolean;\n\n  // Whiteboard\n  whiteboardUsers: WhiteboardUser[];\n  currentWhiteboardIndex: number;\n  canStartWhiteboard: boolean;\n  whiteboardStarted: boolean;\n  whiteboardEnded: boolean;\n  whiteboardLimit: number;\n  isWhiteboardModalVisible: boolean;\n  isConfigureWhiteboardModalVisible: boolean;\n  shapes: Shape[];\n  useImageBackground: boolean;\n  redoStack: Shape[];\n  undoStack: string[];\n  canvasStream: MediaStream | null;\n  canvasWhiteboard: HTMLCanvasElement | null;\n\n  // Screenboard\n  canvasScreenboard: HTMLCanvasElement | null;\n  processedScreenStream: MediaStream | null;\n  annotateScreenStream: boolean;\n  mainScreenCanvas: HTMLCanvasElement | null;\n  isScreenboardModalVisible: boolean;\n\n  // Control Buttons\n  micActive: boolean;\n  videoActive: boolean;\n  screenShareActive: boolean;\n  endCallActive: boolean;\n  participantsActive: boolean;\n  menuActive: boolean;\n  commentsActive: boolean;\n}\n\nexport const initialValuesState: InitialValuesStateType = {\n  // The following are the initial values\n\n  roomName: '',\n  member: '',\n  adminPasscode: '',\n  islevel: '1',\n  coHost: 'No coHost',\n  coHostResponsibility: [\n    { name: 'participants', value: false, dedicated: false },\n    { name: 'media', value: false, dedicated: false },\n    { name: 'waiting', value: false, dedicated: false },\n    { name: 'chat', value: false, dedicated: false },\n  ],\n  youAreCoHost: false,\n  youAreHost: false,\n  confirmedToRecord: false,\n  meetingDisplayType: 'media',\n  meetingVideoOptimized: false,\n  eventType: 'webinar',\n  participants: [],\n  filteredParticipants: [],\n  participantsCounter: 0,\n  participantsFilter: '',\n\n  validated: false,\n  localUIMode: false,\n  socket: {} as Socket,\n  roomData: null,\n  device: null,\n  apiKey: '',\n  apiUserName: '',\n  apiToken: '',\n  link: '',\n\n  consume_sockets: [],\n  rtpCapabilities: null,\n  roomRecvIPs: [],\n  meetingRoomParams: null,\n  itemPageLimit: 4,\n  audioOnlyRoom: false,\n  addForBasic: false,\n  screenPageLimit: 4,\n  shareScreenStarted: false,\n  shared: false,\n  targetOrientation: 'landscape',\n  targetResolution: 'sd',\n  targetResolutionHost: 'sd',\n  vidCons: { width: 640, height: 360 },\n  frameRate: 10,\n  hParams: {} as HParamsType,\n  vParams: {} as VParamsType,\n  screenParams: {} as ScreenParamsType,\n  aParams: {} as AParamsType,\n\n  // Initial Values for New Recording Fields\n  recordingAudioPausesLimit: 0,\n  recordingAudioPausesCount: 0,\n  recordingAudioSupport: false,\n  recordingAudioPeopleLimit: 0,\n  recordingAudioParticipantsTimeLimit: 0,\n  recordingVideoPausesCount: 0,\n  recordingVideoPausesLimit: 0,\n  recordingVideoSupport: false,\n  recordingVideoPeopleLimit: 0,\n  recordingVideoParticipantsTimeLimit: 0,\n  recordingAllParticipantsSupport: false,\n  recordingVideoParticipantsSupport: false,\n  recordingAllParticipantsFullRoomSupport: false,\n  recordingVideoParticipantsFullRoomSupport: false,\n  recordingPreferredOrientation: 'landscape',\n  recordingSupportForOtherOrientation: false,\n  recordingMultiFormatsSupport: false,\n\n  userRecordingParams: {\n    mainSpecs: {\n      mediaOptions: 'video',\n      audioOptions: 'all',\n      videoOptions: 'all',\n      videoType: 'fullDisplay',\n      videoOptimized: false,\n      recordingDisplayType: 'media',\n      addHLS: false,\n    },\n    dispSpecs: {\n      nameTags: true,\n      backgroundColor: '#000000',\n      nameTagsColor: '#ffffff',\n      orientationVideo: 'portrait',\n    },\n  },\n\n  canRecord: false,\n  startReport: false,\n  endReport: false,\n  recordTimerInterval: null,\n  recordStartTime: 0,\n  recordElapsedTime: 0,\n  isTimerRunning: false,\n  canPauseResume: false,\n  recordChangeSeconds: 15000,\n  pauseLimit: 0,\n  pauseRecordCount: 0,\n  canLaunchRecord: true,\n  stopLaunchRecord: false,\n\n  // Room properties\n  participantsAll: [],\n  firstAll: false,\n  updateMainWindow: false,\n  first_round: false,\n  landScaped: false,\n  lock_screen: false,\n  screenId: '',\n  allVideoStreams: [],\n  newLimitedStreams: [],\n  newLimitedStreamsIDs: [],\n  activeSounds: [],\n  screenShareIDStream: '',\n  screenShareNameStream: '',\n  adminIDStream: '',\n  adminNameStream: '',\n  youYouStream: [],\n  youYouStreamIDs: [],\n  localStream: null,\n  recordStarted: false,\n  recordResumed: false,\n  recordPaused: false,\n  recordStopped: false,\n  adminRestrictSetting: false,\n  videoRequestState: null,\n  videoRequestTime: 0,\n  videoAction: false,\n  localStreamVideo: null,\n  userDefaultVideoInputDevice: '',\n  currentFacingMode: 'user',\n  prevFacingMode: 'user',\n  defVideoID: '',\n  allowed: false,\n  dispActiveNames: [],\n  activeNames: [],\n  prevActiveNames: [],\n  p_activeNames: [],\n  p_dispActiveNames: [],\n  membersReceived: false,\n  deferScreenReceived: false,\n  hostFirstSwitch: false,\n  micAction: false,\n  screenAction: false,\n  chatAction: false,\n  audioRequestState: null,\n  screenRequestState: null,\n  chatRequestState: null,\n  audioRequestTime: 0,\n  screenRequestTime: 0,\n  chatRequestTime: 0,\n  updateRequestIntervalSeconds: 240,\n  oldSoundIds: [],\n  hostLabel: 'Host',\n  mainScreenFilled: false,\n  localStreamScreen: null,\n  screenAlreadyOn: false,\n  chatAlreadyOn: false,\n  redirectURL: '',\n  oldAllStreams: [],\n  adminVidID: '',\n  streamNames: [],\n  non_alVideoStreams: [],\n  sortAudioLoudness: false,\n  audioDecibels: [],\n  mixed_alVideoStreams: [],\n  non_alVideoStreams_muted: [],\n  paginatedStreams: [],\n  localStreamAudio: null,\n  defAudioID: '',\n  userDefaultAudioInputDevice: '',\n  userDefaultAudioOutputDevice: '',\n  prevAudioInputDevice: '',\n  prevVideoInputDevice: '',\n  audioPaused: false,\n  mainScreenPerson: '',\n  adminOnMainScreen: false,\n  screenStates: [{\n    mainScreenPerson: \"\",\n    mainScreenProducerId: \"\",\n    mainScreenFilled: false,\n    adminOnMainScreen: false,\n  }],\n  prevScreenStates: [{\n    mainScreenPerson: \"\",\n    mainScreenProducerId: \"\",\n    mainScreenFilled: false,\n    adminOnMainScreen: false,\n  }],\n  updateDateState: null,\n  lastUpdate: null,\n  nForReadjustRecord: 0,\n  fixedPageLimit: 4,\n  removeAltGrid: false,\n  nForReadjust: 0,\n  reorderInterval: 30000,\n  fastReorderInterval: 10000,\n  lastReorderTime: 0,\n  audStreamNames: [],\n  currentUserPage: 0,\n  mainHeightWidth: 0,\n  prevMainHeightWidth: 0,\n  prevDoPaginate: false,\n  doPaginate: false,\n  shareEnded: false,\n  lStreams: [],\n  chatRefStreams: [],\n  controlHeight: 0,\n  isWideScreen: false,\n  isMediumScreen: false,\n  isSmallScreen: false,\n  addGrid: false,\n  addAltGrid: false,\n  gridRows: 0,\n  gridCols: 0,\n  altGridRows: 0,\n  altGridCols: 0,\n  numberPages: 0,\n  currentStreams: [],\n  showMiniView: false,\n  nStream: null,\n  defer_receive: false,\n  allAudioStreams: [],\n  remoteScreenStream: [],\n  screenProducer: null,\n  gotAllVids: false,\n  paginationHeightWidth: 40,\n  paginationDirection: 'horizontal',\n  gridSizes: { gridWidth: 0, gridHeight: 0, altGridWidth: 0, altGridHeight: 0 },\n  screenForceFullDisplay: false,\n  mainGridStream: [],\n  otherGridStreams: [[], []],\n  audioOnlyStreams: [],\n  videoInputs: [],\n  audioInputs: [],\n  meetingProgressTime: '00:00:00',\n  meetingElapsedTime: 0,\n  ref_participants: [],\n\n  // Messaging, event, modals, and other UI states\n  messages: [],\n  startDirectMessage: false,\n  directMessageDetails: null,\n  showMessagesBadge: false,\n  audioSetting: 'allow',\n  videoSetting: 'allow',\n  screenshareSetting: 'allow',\n  chatSetting: 'allow',\n  displayOption: 'media',\n  autoWave: true,\n  forceFullDisplay: true,\n  prevForceFullDisplay: false,\n  prevMeetingDisplayType: 'video',\n  waitingRoomFilter: '',\n  waitingRoomList: [],\n  waitingRoomCounter: 0,\n  filteredWaitingRoomList: [],\n  requestFilter: '',\n  requestList: [],\n  requestCounter: 0,\n  filteredRequestList: [],\n  totalReqWait: 0,\n  alertVisible: false,\n  alertMessage: '',\n  alertType: 'success',\n  alertDuration: 3000,\n  progressTimerVisible: true,\n  progressTimerValue: 0,\n  isMenuModalVisible: false,\n  isRecordingModalVisible: false,\n  isSettingsModalVisible: false,\n  isRequestsModalVisible: false,\n  isWaitingModalVisible: false,\n  isCoHostModalVisible: false,\n  isMediaSettingsModalVisible: false,\n  isDisplaySettingsModalVisible: false,\n  isParticipantsModalVisible: false,\n  isMessagesModalVisible: false,\n  isConfirmExitModalVisible: false,\n  isConfirmHereModalVisible: false,\n  isShareEventModalVisible: false,\n  isLoadingModalVisible: false,\n\n  recordingMediaOptions: 'video',\n  recordingAudioOptions: 'all',\n  recordingVideoOptions: 'all',\n  recordingVideoType: 'fullDisplay',\n  recordingVideoOptimized: false,\n  recordingDisplayType: 'video',\n  recordingAddHLS: true,\n  recordingNameTags: true,\n  recordingBackgroundColor: '#83c0e9',\n  recordingNameTagsColor: '#ffffff',\n  recordingAddText: false,\n  recordingCustomText: 'Add Text',\n  recordingCustomTextPosition: 'top',\n  recordingCustomTextColor: '#ffffff',\n  recordingOrientationVideo: 'landscape',\n  clearedToResume: true,\n  clearedToRecord: true,\n  recordState: 'green',\n  showRecordButtons: false,\n  recordingProgressTime: '00:00:00',\n  audioSwitching: false,\n  videoSwitching: false,\n  videoAlreadyOn: false,\n  audioAlreadyOn: false,\n  componentSizes: { mainHeight: 0, otherHeight: 0, mainWidth: 0, otherWidth: 0 },\n  hasCameraPermission: false,\n  hasAudioPermission: false,\n  transportCreated: false,\n  transportCreatedVideo: false,\n  transportCreatedAudio: false,\n  transportCreatedScreen: false,\n  producerTransport: null,\n  videoProducer: null,\n  params: {} as ProducerOptions,\n  videoParams: {} as ProducerOptions,\n  audioParams: {} as ProducerOptions,\n  audioProducer: null,\n  consumerTransports: [],\n  consumingTransports: [],\n\n  // Polls\n  polls: [],\n  poll: null,\n  isPollModalVisible: false,\n\n  // Background\n  customImage: '',\n  selectedImage: '',\n  segmentVideo: null,\n  selfieSegmentation: null,\n  pauseSegmentation: false,\n  processedStream: null,\n  keepBackground: false,\n  backgroundHasChanged: false,\n  virtualStream: null,\n  mainCanvas: null,\n  prevKeepBackground: false,\n  appliedBackground: false,\n  isBackgroundModalVisible: false,\n  autoClickBackground: false,\n\n  // Breakout Rooms\n  breakoutRooms: [],\n  currentRoomIndex: 0,\n  canStartBreakout: false,\n  breakOutRoomStarted: false,\n  breakOutRoomEnded: false,\n  hostNewRoom: -1,\n  limitedBreakRoom: [],\n  mainRoomsLength: 0,\n  memberRoom: -1,\n  isBreakoutRoomsModalVisible: false,\n\n  // Whiteboard\n  whiteboardUsers: [],\n  currentWhiteboardIndex: 0,\n  canStartWhiteboard: false,\n  whiteboardStarted: false,\n  whiteboardEnded: false,\n  whiteboardLimit: 4,\n  isWhiteboardModalVisible: false,\n  isConfigureWhiteboardModalVisible: false,\n  shapes: [],\n  useImageBackground: true,\n  redoStack: [],\n  undoStack: [],\n  canvasStream: null,\n  canvasWhiteboard: null,\n\n  // Screenboard\n  canvasScreenboard: null,\n  processedScreenStream: null,\n  annotateScreenStream: false,\n  mainScreenCanvas: null,\n  isScreenboardModalVisible: false,\n\n  // Control Buttons\n  micActive: false,\n  videoActive: false,\n  screenShareActive: false,\n  endCallActive: false,\n  participantsActive: false,\n  menuActive: false,\n  commentsActive: false,\n};\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nexport interface LoadingModalOptions {\n  isVisible: boolean;\n  backgroundColor?: string;\n  displayColor?: string;\n}\n\nexport type LoadingModalType = (options: LoadingModalOptions) => HTMLElement;\n\n/**\n * Component representing a loading modal.\n *\n * @selector app-loading-modal\n * @standalone true\n * @imports CommonModule\n *\n * @description\n * This component displays a loading modal with a spinner and a loading text.\n * It is designed to be displayed as an overlay with customizable background and text colors.\n *\n * @example\n * <app-loading-modal [isVisible]=\"true\" [backgroundColor]=\"'rgba(0, 0, 0, 0.5)'\" [displayColor]=\"'white'\"></app-loading-modal>\n *\n * @styles\n * - .spinner: Styles for the loading spinner.\n * - @keyframes spin: Keyframes for the spinner animation.\n * - .modal-content: Styles for the modal content container.\n * - .loading-text: Styles for the loading text.\n *\n * @inputs\n * - `isVisible` (boolean): Determines if the modal is visible. Default is `false`.\n * - `backgroundColor` (string): Background color of the modal. Default is `'rgba(0, 0, 0, 0.5)'`.\n * - `displayColor` (string): Color of the loading text. Default is `'white'`.\n *\n * @properties\n * - `modalContainerStyle` (object): Computed styles for the modal container.\n * - `modalContentStyle` (object): Computed styles for the modal content.\n * - `spinnerContainerStyle` (object): Computed styles for the spinner container.\n * - `loadingTextStyle` (object): Computed styles for the loading text.\n */\n@Component({\n  selector: 'app-loading-modal',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div *ngIf=\"isVisible\" [ngStyle]=\"modalContainerStyle\">\n      <div [ngStyle]=\"modalContentStyle\" class=\"modal-content\">\n        <div class=\"spinner\" [ngStyle]=\"spinnerContainerStyle\"></div>\n        <div [ngStyle]=\"loadingTextStyle\" class=\"loading-text\">Loading...</div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .spinner {\n        border: 12px solid #f3f3f3; /* Light grey */\n        border-top: 12px solid black; /* Black */\n        border-radius: 50%;\n        width: 50px;\n        height: 50px;\n        animation: spin 2s linear infinite;\n      }\n      @keyframes spin {\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n      .modal-content {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n      .loading-text {\n        margin-top: 10px;\n      }\n    `,\n  ],\n})\nexport class LoadingModal {\n  @Input() isVisible = false;\n  @Input() backgroundColor?: string = 'rgba(0, 0, 0, 0.5)';\n  @Input() displayColor?: string = 'white';\n\n  get modalContainerStyle() {\n    return {\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      backgroundColor: this.backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: '999',\n    };\n  }\n\n  get modalContentStyle() {\n    return {\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      maxWidth: '200px',\n      textAlign: 'center',\n    };\n  }\n\n  get spinnerContainerStyle() {\n    return {\n      marginBottom: '20px',\n    };\n  }\n\n  get loadingTextStyle() {\n    return {\n      color: this.displayColor,\n    };\n  }\n}\n","import { Component, Input, OnInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface MainAspectComponentOptions {\n  backgroundColor?: string;\n  showControls?: boolean;\n  containerWidthFraction?: number;\n  containerHeightFraction?: number;\n  defaultFraction?: number;\n  updateIsWideScreen: (isWideScreen: boolean) => void;\n  updateIsMediumScreen: (isMediumScreen: boolean) => void;\n  updateIsSmallScreen: (isSmallScreen: boolean) => void;\n}\n\nexport type MainAspectComponentType = (options: MainAspectComponentOptions) => HTMLElement;\n\n/**\n * MainAspectComponent is a standalone Angular component that adjusts its aspect ratio\n * based on the window size and other input properties. It listens to window resize\n * and orientation change events to dynamically update its styles.\n *\n * @selector app-main-aspect-component\n * @standalone true\n * @imports [CommonModule]\n *\n * @template\n * ```html\n * <div [ngStyle]=\"aspectStyles\" [style.backgroundColor]=\"backgroundColor\" class=\"aspect-container\">\n *   <ng-content></ng-content>\n * </div>\n * ```\n *\n * @styles\n * ```css\n * .aspect-container {\n *   overflow: hidden;\n * }\n * ```\n *\n * @class MainAspectComponent\n * @implements OnInit, OnDestroy, OnChanges\n *\n * @property {string} backgroundColor - The background color of the aspect container.\n * @property {boolean} showControls - Flag to show or hide controls.\n * @property {number} containerWidthFraction - Fraction of the window width for the container.\n * @property {number} containerHeightFraction - Fraction of the window height for the container.\n * @property {number} defaultFraction - Default fraction to adjust the height when controls are shown.\n * @property {(isWideScreen: boolean) => void} updateIsWideScreen - Callback to update wide screen status.\n * @property {(isMediumScreen: boolean) => void} updateIsMediumScreen - Callback to update medium screen status.\n * @property {(isSmallScreen: boolean) => void} updateIsSmallScreen - Callback to update small screen status.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes.\n * @method ngOnDestroy - Lifecycle hook that is called just before the component is destroyed.\n * @method private updateAspectStyles - Updates the aspect styles based on the window size and input properties.\n */\n@Component({\n  selector: 'app-main-aspect-component',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div\n      [ngStyle]=\"aspectStyles\"\n      [style.backgroundColor]=\"backgroundColor\"\n      class=\"aspect-container\"\n    >\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: [\n    `\n      .aspect-container {\n        overflow: hidden;\n      }\n    `,\n  ],\n})\nexport class MainAspectComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() backgroundColor = '';\n  @Input() showControls = true;\n  @Input() containerWidthFraction = 1;\n  @Input() containerHeightFraction = 1;\n  @Input() defaultFraction = 0.94;\n  @Input() updateIsWideScreen!: (isWideScreen: boolean) => void;\n  @Input() updateIsMediumScreen!: (isMediumScreen: boolean) => void;\n  @Input() updateIsSmallScreen!: (isSmallScreen: boolean) => void;\n\n  aspectStyles: { [key: string]: any } = {};\n\n  ngOnInit() {\n    this.updateAspectStyles();\n\n    window.addEventListener('resize', this.updateAspectStyles);\n    window.addEventListener('orientationchange', this.updateAspectStyles);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes['showControls'] ||\n      changes['containerWidthFraction'] ||\n      changes['containerHeightFraction'] ||\n      changes['defaultFraction']\n    ) {\n      this.updateAspectStyles();\n    }\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.updateAspectStyles);\n    window.removeEventListener('orientationchange', this.updateAspectStyles);\n  }\n\n  private updateAspectStyles = () => {\n    const windowHeight = window.innerHeight;\n    const windowWidth = window.innerWidth;\n\n    const parentWidth = Math.floor(this.containerWidthFraction * windowWidth);\n    const parentHeight = this.showControls\n      ? Math.floor(this.containerHeightFraction * windowHeight * this.defaultFraction)\n      : Math.floor(this.containerHeightFraction * windowHeight);\n\n    let isWideScreen = parentWidth >= 768;\n    const isMediumScreen = parentWidth >= 576 && parentWidth < 768;\n    const isSmallScreen = parentWidth < 576;\n\n    if (!isWideScreen && parentWidth > 1.5 * parentHeight) {\n      isWideScreen = true;\n    }\n\n    this.updateIsWideScreen(isWideScreen);\n    this.updateIsMediumScreen(isMediumScreen);\n    this.updateIsSmallScreen(isSmallScreen);\n\n    this.aspectStyles = {\n      height: parentHeight + 'px',\n      width: parentWidth + 'px',\n    };\n  };\n}\n","import { Component, Injector, Input, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\nexport interface CustomComponent {\n  component: Type<any>;\n  injector: Injector;\n}\nexport interface Button {\n  name?: string;\n  icon?: IconDefinition;\n  alternateIcon?: IconDefinition;\n  onPress?: () => void;\n  active?: boolean | (() => boolean);\n  activeColor?: string | (() => string);\n  inActiveColor?: string | (() => string);\n  color?: string;\n  backgroundColor?: {\n    default?: string;\n  };\n  customComponent?: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent);\n  iconComponent?: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent);\n  alternateIconComponent?: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent);\n  disabled?: boolean | (() => boolean);\n  show?: boolean | (() => boolean);\n}\n\nexport interface ControlButtonsComponentOptions {\n  buttons: Button[];\n  buttonColor?: string;\n  buttonBackgroundColor?: {\n    default?: string;\n    pressed?: string;\n  };\n  alignment?:\n    | 'flex-start'\n    | 'center'\n    | 'flex-end'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly';\n  vertical?: boolean;\n  buttonsContainerStyle?: Partial<CSSStyleDeclaration>;\n  alternateIconComponent?: HTMLElement | CustomComponent;\n}\n\nexport type ControlButtonsComponentType = (options: ControlButtonsComponentOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-control-buttons-component',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  template: `\n    <div class=\"container\" [ngStyle]=\"mergeStyles(getAlignmentStyle(), buttonsContainerStyle)\">\n      <button\n        *ngFor=\"let button of buttons; let i = index\"\n        class=\"buttonContainer\"\n        [ngClass]=\"{ verticalButton: vertical }\"\n        [ngStyle]=\"{\n          'background-color': button.show\n            ? buttonBackgroundColor?.default || 'transparent'\n            : 'transparent',\n          display: button.show ? 'flex' : 'none'\n        }\"\n        [disabled]=\"button.disabled\"\n        (click)=\"button.onPress ? button.onPress() : null\"\n      >\n        <!-- Custom component when defined -->\n        <ng-container *ngIf=\"button.customComponent; else iconTemplate\">\n          <ng-container *ngIf=\"isCustomComponent(button.customComponent)\">\n            <ng-container\n              *ngComponentOutlet=\"\n                button.customComponent.component;\n                injector: button.customComponent.injector\n              \"\n            ></ng-container>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              !isCustomComponent(button.customComponent) &&\n              !isFunctionComponent(button.customComponent)\n            \"\n          >\n            <!-- Handle the HTMLElement case, e.g., render it using [innerHTML] -->\n            <div [innerHTML]=\"button.customComponent.outerHTML\"></div>\n          </ng-container>\n        </ng-container>\n\n        <!-- Icon logic for active/inactive states -->\n        <ng-template #iconTemplate>\n          <ng-container *ngIf=\"button.active && button.alternateIconComponent; else defaultIcon\">\n            <!-- Alternate icon component when button is active -->\n            <ng-container *ngIf=\"isCustomComponent(button.alternateIconComponent)\">\n              <ng-container\n                *ngComponentOutlet=\"\n                  button.alternateIconComponent.component;\n                  injector: button.alternateIconComponent.injector\n                \"\n              ></ng-container>\n            </ng-container>\n            <ng-container\n              *ngIf=\"\n                !isCustomComponent(button.alternateIconComponent) &&\n                !isFunctionComponent(button.alternateIconComponent)\n              \"\n            >\n              <!-- Handle the HTMLElement case, e.g., render it using [innerHTML] -->\n              <div [innerHTML]=\"button.alternateIconComponent.outerHTML\"></div>\n            </ng-container>\n          </ng-container>\n\n          <!-- Default icon fallback for active/inactive states -->\n          <ng-template #defaultIcon>\n            <fa-icon\n              *ngIf=\"button.active\"\n              [icon]=\"button.alternateIcon! || button.icon\"\n              [style.color]=\"button.activeColor || 'transparent'\"\n            ></fa-icon>\n            <fa-icon\n              *ngIf=\"!button.active\"\n              [icon]=\"button.icon!\"\n              [style.color]=\"button.inActiveColor || '#ffffff'\"\n            ></fa-icon>\n          </ng-template>\n        </ng-template>\n\n        <!-- Button text -->\n        <span\n          *ngIf=\"button.name\"\n          class=\"buttonText\"\n          [ngStyle]=\"{ color: button.color || '#ffffff' }\"\n        >\n          {{ button.name }}\n        </span>\n      </button>\n    </div>\n  `,\n  styleUrls: ['./control-buttons-component.component.css'],\n})\nexport class ControlButtonsComponent {\n  @Input() buttons: Button[] = [];\n  @Input() buttonColor = '';\n  @Input() buttonBackgroundColor: any = {};\n  @Input() alignment = 'flex-start';\n  @Input() vertical = false;\n  @Input() buttonsContainerStyle: any = {};\n\n  // Function to get the alignment styles dynamically\n  getAlignmentStyle() {\n    const alignmentMap: any = {\n      center: { 'justify-content': 'center' },\n      'flex-end': { 'justify-content': 'flex-end' },\n      'space-between': { 'justify-content': 'space-between' },\n      'space-around': { 'justify-content': 'space-around' },\n      'space-evenly': { 'justify-content': 'space-evenly' },\n      'flex-start': { 'justify-content': 'flex-start' },\n    };\n    return {\n      display: 'flex',\n      flexDirection: this.vertical ? 'column' : 'row',\n      ...alignmentMap[this.alignment],\n    };\n  }\n\n  // Utility function to merge multiple styles into one object\n  mergeStyles(...styles: any[]) {\n    return Object.assign({}, ...styles);\n  }\n  isCustomComponent(\n    comp: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent),\n  ): comp is CustomComponent {\n    return (\n      comp &&\n      typeof comp === 'object' &&\n      'component' in comp &&\n      typeof comp.component === 'function' &&\n      'injector' in comp\n    );\n  }\n\n  isFunctionComponent(\n    comp: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent),\n  ): comp is () => HTMLElement | CustomComponent {\n    return typeof comp === 'function';\n  }\n}\n","import { Component, Injector, Input, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nexport interface CustomComponent {\n  component: Type<any>;\n  injector: Injector;\n}\n\nexport interface AltButton {\n  name?: string;\n  icon?: IconDefinition;\n  alternateIcon?: IconDefinition;\n  onPress?: () => void;\n  active?: boolean | (() => boolean);\n  activeColor?: string | (() => string);\n  inActiveColor?: string | (() => string);\n  color?: string;\n  backgroundColor?: {\n    default?: string;\n  };\n  customComponent?: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent);\n  iconComponent?: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent);\n  alternateIconComponent?: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent);\n  show?: boolean | (() => boolean);\n}\n\nexport interface ControlButtonsAltComponentOptions {\n  buttons: AltButton[];\n  position?: 'left' | 'right' | 'middle';\n  location?: 'top' | 'bottom' | 'center';\n  direction?: 'horizontal' | 'vertical';\n  buttonsContainerStyle?: Partial<CSSStyleDeclaration>;\n  alternateIconComponent?: HTMLElement | CustomComponent;\n  iconComponent?: HTMLElement | CustomComponent;\n  showAspect?: boolean;\n}\n\nexport type ControlButtonsAltComponentType = (\n  options: ControlButtonsAltComponentOptions,\n) => HTMLElement;\n\n@Component({\n  selector: 'app-control-buttons-alt-component',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: './control-buttons-alt-component.component.html',\n  styleUrls: ['./control-buttons-alt-component.component.css'],\n})\nexport class ControlButtonsAltComponent {\n  @Input() buttons: AltButton[] = [];\n  @Input() position: 'left' | 'right' | 'middle' = 'left';\n  @Input() location: 'top' | 'bottom' | 'center' = 'top';\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\n  @Input() buttonsContainerStyle: any = {};\n  @Input() showAspect = false;\n\n  getAlignmentStyle() {\n    let alignmentStyle: any = {};\n\n    if (this.position === 'left' || this.position === 'right' || this.position === 'middle') {\n      alignmentStyle.justifyContent =\n        this.position === 'left' ? 'flex-start' : this.position === 'right' ? 'flex-end' : 'center';\n    }\n\n    if (this.location === 'top' || this.location === 'bottom' || this.location === 'center') {\n      alignmentStyle.alignItems =\n        this.location === 'top' ? 'flex-start' : this.location === 'bottom' ? 'flex-end' : 'center';\n    }\n\n    alignmentStyle.flexDirection = this.direction === 'vertical' ? 'column' : 'row';\n\n    return alignmentStyle;\n  }\n\n  getContainerStyle() {\n    return {\n      ...this.styles.container,\n      ...this.getAlignmentStyle(),\n      ...this.buttonsContainerStyle,\n      display: this.showAspect ? 'flex' : 'none',\n    };\n  }\n\n  getButtonStyle(button: AltButton) {\n    return {\n      ...this.styles.buttonContainer,\n      backgroundColor: button.backgroundColor?.default || 'transparent',\n      ...(this.direction === 'vertical' ? this.styles.verticalButton : {}),\n    };\n  }\n\n  getTextStyle(button: AltButton) {\n    return {\n      ...this.styles.buttonText,\n      color: button.color || '#ffffff',\n    };\n  }\n\n  isCustomComponent(\n    comp: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent),\n  ): comp is CustomComponent {\n    return (\n      comp &&\n      typeof comp === 'object' &&\n      'component' in comp &&\n      typeof comp.component === 'function' &&\n      'injector' in comp\n    );\n  }\n\n  isFunctionComponent(\n    comp: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent),\n  ): comp is () => HTMLElement | CustomComponent {\n    return typeof comp === 'function';\n  }\n\n  styles = {\n    container: {\n      marginTop: '5px',\n      marginBottom: '5px',\n      zIndex: 9,\n    },\n    buttonContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '10px',\n      borderRadius: '5px',\n      marginLeft: '5px',\n      marginRight: '5px',\n      cursor: 'pointer',\n    },\n    verticalButton: {\n      flexDirection: 'column',\n    },\n    buttonText: {\n      fontSize: '12px',\n      marginTop: '5px',\n    },\n  };\n}\n","<div [ngStyle]=\"getContainerStyle()\">\r\n  <div\r\n    *ngFor=\"let button of buttons; let i = index\"\r\n    [ngStyle]=\"getButtonStyle(button)\"\r\n    (click)=\"button.onPress && button.onPress()\"\r\n  >\r\n    <ng-container *ngIf=\"button.icon\">\r\n      <fa-icon\r\n        *ngIf=\"button.active\"\r\n        [icon]=\"button.alternateIcon || button.icon\"\r\n        [style.color]=\"button.inActiveColor || 'transparent'\"\r\n      ></fa-icon>\r\n      <fa-icon\r\n        *ngIf=\"!button.active\"\r\n        [icon]=\"button.icon\"\r\n        [style.color]=\"button.inActiveColor || 'transparent'\"\r\n      ></fa-icon>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!button.icon\">\r\n      <ng-container *ngIf=\"button.customComponent\">\r\n        <ng-container *ngIf=\"isCustomComponent(button.customComponent)\">\r\n          <ng-container\r\n            *ngComponentOutlet=\"\r\n              button.customComponent.component;\r\n              injector: button.customComponent.injector\r\n            \"\r\n          ></ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!isCustomComponent(button.customComponent) && !isFunctionComponent(button.customComponent)\">\r\n          <!-- Handle the HTMLElement case, e.g., render it using [innerHTML] -->\r\n          <div [innerHTML]=\"button.customComponent.outerHTML\"></div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n    <span *ngIf=\"button.name\" [ngStyle]=\"getTextStyle(button)\">{{\r\n      button.name\r\n    }}</span>\r\n  </div>\r\n</div>\r\n","import { Component, Injector, Input, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\nexport interface CustomComponent {\n  component: Type<any>;\n  injector: Injector;\n}\n\nexport interface ButtonTouch {\n  name?: string;\n  icon?: IconDefinition;\n  alternateIcon?: any;\n  onPress?: () => void;\n  backgroundColor?: {\n    default?: string;\n  };\n  active?: boolean | (() => boolean);\n  alternateIconComponent?: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent);\n  iconComponent?: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent);\n  customComponent?: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent);\n  color?: string;\n  activeColor?: string | (() => string);\n  inActiveColor?: string | (() => string);\n  show?: boolean | (() => boolean);\n  disabled?: boolean | (() => boolean);\n}\n\nexport interface ControlButtonsComponentTouchOptions {\n  buttons: ButtonTouch[];\n  position?: 'left' | 'right' | 'middle';\n  location?: 'top' | 'bottom' | 'center';\n  direction?: 'horizontal' | 'vertical';\n  buttonsContainerStyle?: Partial<CSSStyleDeclaration>;\n  showAspect?: boolean;\n}\n\nexport type ControlButtonsComponentTouchType = (\n  options: ControlButtonsComponentTouchOptions,\n) => HTMLElement;\n\n/**\n * ControlButtonsComponentTouch is an Angular component that displays a set of control buttons.\n * The buttons can be customized with various styles, icons, and actions.\n *\n * @component\n * @selector app-control-buttons-component-touch\n * @standalone true\n * @imports [CommonModule, FontAwesomeModule]\n *\n * @template\n * The template includes a container div that holds the buttons. Each button can display an icon,\n * a custom component, or a name. The styles and visibility of the buttons are controlled by the\n * component's inputs.\n *\n * @styles\n * The host element is styled to be a flex container centered both horizontally and vertically.\n *\n * @class ControlButtonsComponentTouch\n *\n * @property {any[]} buttons - An array of button configurations. Each button can have properties like\n * `show`, `backgroundColor`, `onPress`, `icon`, `alternateIcon`, `active`, `activeColor`, `inActiveColor`,\n * `customComponent`, and `name`.\n *\n * @property {string} position - The horizontal alignment of the buttons container. Can be 'left', 'right', or 'middle'.\n * Default is 'left'.\n *\n * @property {string} location - The vertical alignment of the buttons container. Can be 'top', 'bottom', or 'center'.\n * Default is 'top'.\n *\n * @property {string} direction - The direction of the buttons layout. Can be 'horizontal' or 'vertical'.\n * Default is 'horizontal'.\n *\n * @property {any} buttonsContainerStyle - Additional styles for the buttons container.\n *\n * @property {boolean} showAspect - A flag to control the visibility of the buttons container.\n *\n * @method getAlignmentStyle\n * Returns the alignment styles based on the `position`, `location`, and `direction` inputs.\n *\n * @method mergeStyles\n * Merges multiple style objects into one.\n *\n * @example\n * <app-control-buttons-component-touch\n *   [buttons]=\"buttonsArray\"\n *   position=\"right\"\n *   location=\"bottom\"\n *   direction=\"vertical\"\n *   [buttonsContainerStyle]=\"customStyles\"\n *   [showAspect]=\"true\">\n * </app-control-buttons-component-touch>\n */\n@Component({\n  selector: 'app-control-buttons-component-touch',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  template: `\n    <div\n      [ngStyle]=\"\n        mergeStyles(getAlignmentStyle(), buttonsContainerStyle, {\n          position: 'absolute',\n          bottom: '0',\n          left: '0',\n          right: '0',\n          'margin-top': '5px',\n          'margin-bottom': '5px',\n          elevation: '9',\n          'z-index': '9',\n          'background-color': 'transparent',\n          display: showAspect ? 'flex' : 'none'\n        })\n      \"\n    >\n      <button\n        *ngFor=\"let button of buttons\"\n        [ngStyle]=\"\n          mergeStyles(\n            {\n              'align-items': 'center',\n              padding: '10px',\n              'border-radius': '5px',\n              'margin-right': '5px',\n              'margin-left': '5px',\n              'margin-bottom': '5px',\n              'margin-top': '5px',\n              cursor: 'pointer',\n              'background-color': button.show\n                ? button.backgroundColor?.default || 'rgba(255, 255, 255, 0.25)'\n                : 'transparent',\n              border: 'none',\n              display: button.show\n                ? 'flex'\n                : button.inActiveColor === 'transparent' && button.activeColor === 'transparent'\n                ? 'flex'\n                : 'none'\n            },\n            direction === 'vertical' ? { 'flex-direction': 'column' } : {}\n          )\n        \"\n        (click)=\"button.onPress ? button.onPress() : null\"\n        [disabled]=\"button.disabled\"\n      >\n        <ng-container *ngIf=\"button.icon\">\n          <fa-icon\n            *ngIf=\"button.active\"\n            [icon]=\"button.alternateIcon || button.icon\"\n            [style.color]=\"button.activeColor || 'transparent'\"\n          ></fa-icon>\n          <fa-icon\n            *ngIf=\"!button.active\"\n            [icon]=\"button.icon\"\n            [style.color]=\"button.inActiveColor || 'transparent'\"\n          ></fa-icon>\n        </ng-container>\n        <ng-container *ngIf=\"!button.icon\">\n          <ng-container *ngIf=\"button.customComponent\">\n            <ng-container *ngIf=\"isCustomComponent(button.customComponent)\">\n              <ng-container\n                *ngComponentOutlet=\"\n                  button.customComponent.component;\n                  injector: button.customComponent.injector\n                \"\n              ></ng-container>\n            </ng-container>\n            <ng-container\n              *ngIf=\"\n                !isCustomComponent(button.customComponent) &&\n                !isFunctionComponent(button.customComponent)\n              \"\n            >\n              <!-- Handle the HTMLElement case, e.g., render it using [innerHTML] -->\n              <div [innerHTML]=\"button.customComponent.outerHTML\"></div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n        <span\n          *ngIf=\"button.name\"\n          [ngStyle]=\"{\n            color: button.color || 'transparent',\n            'font-size': '12px',\n            'margin-top': '5px'\n          }\"\n        >\n          {{ button.name }}\n        </span>\n      </button>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n    `,\n  ],\n})\nexport class ControlButtonsComponentTouch {\n  @Input() buttons: ButtonTouch[] = [];\n  @Input() position = 'left';\n  @Input() location = 'top';\n  @Input() direction = 'horizontal';\n  @Input() buttonsContainerStyle: any = {};\n  @Input() showAspect = false;\n\n  getAlignmentStyle() {\n    let alignmentStyle: any = {};\n\n    if (this.position === 'left' || this.position === 'right' || this.position === 'middle') {\n      alignmentStyle['justify-content'] =\n        this.position === 'left' ? 'flex-start' : this.position === 'right' ? 'flex-end' : 'center';\n    }\n\n    if (this.location === 'top' || this.location === 'bottom' || this.location === 'center') {\n      alignmentStyle['align-items'] =\n        this.location === 'top' ? 'flex-start' : this.location === 'bottom' ? 'flex-end' : 'center';\n    }\n\n    if (this.direction === 'vertical') {\n      alignmentStyle['flex-direction'] = 'column';\n    } else {\n      alignmentStyle['flex-direction'] = 'row';\n    }\n\n    return alignmentStyle;\n  }\n\n  mergeStyles(...styles: any[]) {\n    return Object.assign({}, ...styles);\n  }\n\n  isCustomComponent(\n    comp: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent),\n  ): comp is CustomComponent {\n    return (\n      comp &&\n      typeof comp === 'object' &&\n      'component' in comp &&\n      typeof comp.component === 'function' &&\n      'injector' in comp\n    );\n  }\n\n  isFunctionComponent(\n    comp: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent),\n  ): comp is () => HTMLElement | CustomComponent {\n    return typeof comp === 'function';\n  }\n}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nexport interface MeetingProgressTimerOptions {\n  meetingProgressTime: string;\n  initialBackgroundColor?: string;\n  position?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n  textStyle?: { [key: string]: string | number };\n  showTimer?: boolean;\n}\n\nexport type MeetingProgressTimerType = (options: MeetingProgressTimerOptions) => HTMLElement;\n\n/**\n * Component to display a meeting progress timer.\n *s\n * @selector app-meeting-progress-timer\n * @standalone true\n * @imports CommonModule\n *\n * @template\n * ```html\n * <div [ngStyle]=\"positions[position]\" class=\"badge-container\">\n *   <div [ngStyle]=\"{ backgroundColor: initialBackgroundColor, display: showTimer ? 'block' : 'none' }\" class=\"progress-timer\">\n *     <span [ngStyle]=\"textStyle\" class=\"progress-timer-text\">{{ meetingProgressTime }}</span>\n *   </div>\n * </div>\n * ```\n *\n * @styles\n * ```css\n * .badge-container {\n *   padding: 5px;\n *   position: relative;\n *   z-index: 1000;\n * }\n * .progress-timer {\n *   background-color: green;\n *   padding: 5px;\n *   border-radius: 5px;\n *   color: white;\n * }\n * .progress-timer-text {\n *   color: black;\n * }\n * ```\n *\n * @class MeetingProgressTimer\n * @implements OnInit, OnChanges\n *\n * @property {string} meetingProgressTime - The time to be displayed in the timer.\n * @property {string} [initialBackgroundColor='green'] - The initial background color of the timer.\n * @property {'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight'} [position='topLeft'] - The position of the timer on the screen.\n * @property {{ [key: string]: string | number }} [textStyle={}] - The style to be applied to the timer text.\n * @property {boolean} [showTimer=true] - Flag to show or hide the timer.\n *\n * @property {{ [key: string]: { position: string, top?: string, bottom?: string, left?: string, right?: string } }} positions - The possible positions for the timer.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property of a directive changes.\n * @param {SimpleChanges} changes - The changed properties.\n */\n@Component({\n  selector: 'app-meeting-progress-timer',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div [ngStyle]=\"positions[position]\" class=\"badge-container\">\n      <div\n        [ngStyle]=\"{\n          backgroundColor: initialBackgroundColor,\n          display: showTimer ? 'block' : 'none'\n        }\"\n        class=\"progress-timer\"\n      >\n        <span [ngStyle]=\"textStyle\" class=\"progress-timer-text\">{{ meetingProgressTime }}</span>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .badge-container {\n        padding: 5px;\n        position: relative;\n        z-index: 1000;\n      }\n      .progress-timer {\n        background-color: green;\n        padding: 5px;\n        border-radius: 5px;\n        color: white;\n      }\n      .progress-timer-text {\n        color: black;\n      }\n    `,\n  ],\n})\nexport class MeetingProgressTimer implements OnChanges {\n  @Input()\n  meetingProgressTime!: string;\n  @Input() initialBackgroundColor = 'green';\n  @Input() position: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' = 'topLeft';\n  @Input() textStyle: { [key: string]: string | number } = {};\n  @Input() showTimer = true;\n\n  positions: {\n    [key: string]: {\n      position: string;\n      top?: string;\n      bottom?: string;\n      left?: string;\n      right?: string;\n    };\n  } = {\n    topLeft: { position: 'absolute', top: '0', left: '0' },\n    topRight: { position: 'absolute', top: '0', right: '0' },\n    bottomLeft: { position: 'absolute', bottom: '0', left: '0' },\n    bottomRight: { position: 'absolute', bottom: '0', right: '0' },\n  };\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['position']) {\n      this.positions = {\n        topLeft: { position: 'absolute', top: '0', left: '0' },\n        topRight: { position: 'absolute', top: '0', right: '0' },\n        bottomLeft: { position: 'absolute', bottom: '0', left: '0' },\n        bottomRight: { position: 'absolute', bottom: '0', right: '0' },\n      };\n    }\n\n    if (changes['showTimer']) {\n      this.showTimer = changes['showTimer'].currentValue;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MeetingProgressTimer } from '../meeting-progress-timer/meeting-progress-timer.component';\n\nexport interface OtherGridComponentOptions {\n  backgroundColor?: string;\n  width?: number;\n  height?: number;\n  showAspect?: boolean;\n  timeBackgroundColor?: string;\n  showTimer?: boolean;\n  meetingProgressTime?: string;\n}\n\nexport type OtherGridComponentType = (options: OtherGridComponentOptions) => HTMLElement;\n\n/**\n * Component representing a customizable grid with an optional timer.\n *\n * @selector app-other-grid-component\n * @standalone true\n * @imports CommonModule, MeetingProgressTimer\n *\n * @template\n * <div [ngStyle]=\"{...}\">\n *   <app-meeting-progress-timer *ngIf=\"showTimer\" [meetingProgressTime]=\"meetingProgressTime\" [initialBackgroundColor]=\"timeBackgroundColor\" [showTimer]=\"showTimer\"></app-meeting-progress-timer>\n *   <ng-content></ng-content>\n * </div>\n *\n * @class OtherGridComponent\n *\n * @property {string} backgroundColor - The background color of the grid. Default is 'transparent'.\n * @property {number} width - The width of the grid in pixels. Default is 0.\n * @property {number} height - The height of the grid in pixels. Default is 0.\n * @property {boolean} showAspect - Flag to show or hide the grid. Default is true.\n * @property {string} timeBackgroundColor - The background color of the timer. Default is 'green'.\n * @property {boolean} showTimer - Flag to show or hide the timer. Default is false.\n * @property {string} meetingProgressTime - The meeting progress time to be displayed in the timer. Default is '00:00:00'.\n */\n@Component({\n  selector: 'app-other-grid-component',\n  standalone: true,\n  imports: [CommonModule, MeetingProgressTimer],\n  template: `\n    <div\n      [ngStyle]=\"{\n        'background-color': backgroundColor,\n        width: width + 'px',\n        height: height + 'px',\n        display: showAspect ? 'block' : 'none',\n        overflow: 'hidden',\n        'border-style': 'solid',\n        'border-color': 'black',\n        'border-width': '2px',\n        'border-radius': '0',\n        margin: '0',\n        padding: '0'\n      }\"\n    >\n      <app-meeting-progress-timer\n        *ngIf=\"showTimer\"\n        [meetingProgressTime]=\"meetingProgressTime\"\n        [initialBackgroundColor]=\"timeBackgroundColor\"\n        [showTimer]=\"showTimer\"\n      ></app-meeting-progress-timer>\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class OtherGridComponent {\n  @Input() backgroundColor = 'transparent';\n  @Input() width = 0;\n  @Input() height = 0;\n  @Input() showAspect = true;\n  @Input() timeBackgroundColor = 'green';\n  @Input() showTimer = false;\n  @Input() meetingProgressTime = '00:00:00';\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ContentChildren,\n  QueryList,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentSizes } from '../../../@types/types';\nexport interface MainScreenComponentOptions {\n  mainSize?: number;\n  doStack?: boolean;\n  containerWidthFraction?: number;\n  containerHeightFraction?: number;\n  defaultFraction?: number;\n  showControls?: boolean;\n  updateComponentSizes: (sizes: ComponentSizes) => void;\n}\n\nexport type MainScreenComponentType = (options: MainScreenComponentOptions) => HTMLElement;\n\n/**\n * MainScreenComponent is responsible for displaying a main screen with dynamic dimensions\n * and layout based on the input properties and screen size.\n *\n * @selector app-main-screen-component\n * @standalone true\n * @imports CommonModule\n *\n * @property {number} mainSize - The size of the main component as a percentage.\n * @property {boolean} doStack - Determines if the components should be stacked.\n * @property {number} containerWidthFraction - Fraction of the container width.\n * @property {number} containerHeightFraction - Fraction of the container height.\n * @property {number} defaultFraction - Default fraction for height calculation.\n * @property {boolean} showControls - Flag to show or hide controls.\n * @property {(sizes: ComponentSizes) => void} updateComponentSizes - Callback to update component sizes.\n *\n * @ContentChildren('child') children - Query list of child elements.\n *\n * @property {number} parentWidth - The width of the parent container.\n * @property {number} parentHeight - The height of the parent container.\n * @property {boolean} isWideScreen - Flag to determine if the screen is wide.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnDestroy - Lifecycle hook that is called when the component is destroyed.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes.\n * @method ngAfterViewInit - Lifecycle hook that is called after the component's view has been fully initialized.\n * @method computeDimensions - Computes the dimensions of the main and other components based on the input properties.\n * @method updateDimensions - Updates the dimensions of the parent container and child components.\n * @method get containerStyle - Returns the style object for the container.\n * @method applyChildStyles - Applies the computed styles to the child components.\n */\n@Component({\n  selector: 'app-main-screen-component',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div [ngStyle]=\"containerStyle\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class MainScreenComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input() mainSize = 40; // percentage\n  @Input() doStack = true;\n  @Input() containerWidthFraction = 1;\n  @Input() containerHeightFraction = 1;\n  @Input() defaultFraction = 0.94;\n  @Input() showControls = true;\n  @Input() updateComponentSizes = (sizes: ComponentSizes) => {\n    console.log(sizes);\n  };\n\n  @ContentChildren('child')\n  children!: QueryList<ElementRef>;\n\n  parentWidth!: number;\n  parentHeight!: number;\n  isWideScreen!: boolean;\n\n  constructor(private renderer: Renderer2) {}\n\n  ngOnInit() {\n    this.updateDimensions();\n\n    window.addEventListener('resize', this.updateDimensions);\n    window.addEventListener('orientationchange', this.updateDimensions);\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.updateDimensions);\n    window.removeEventListener('orientationchange', this.updateDimensions);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes['mainSize'] ||\n      changes['doStack'] ||\n      changes['parentWidth'] ||\n      changes['parentHeight'] ||\n      changes['showControls'] ||\n      changes['defaultFraction']\n    ) {\n      this.updateDimensions();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.applyChildStyles();\n  }\n\n  computeDimensions() {\n    if (this.doStack) {\n      return this.isWideScreen\n        ? {\n            mainHeight: Math.floor(this.parentHeight),\n            otherHeight: Math.floor(this.parentHeight),\n            mainWidth: Math.floor((this.mainSize / 100) * this.parentWidth),\n            otherWidth: Math.floor(((100 - this.mainSize) / 100) * this.parentWidth),\n          }\n        : {\n            mainHeight: Math.floor((this.mainSize / 100) * this.parentHeight),\n            otherHeight: Math.floor(((100 - this.mainSize) / 100) * this.parentHeight),\n            mainWidth: Math.floor(this.parentWidth),\n            otherWidth: Math.floor(this.parentWidth),\n          };\n    } else {\n      return {\n        mainHeight: Math.floor(this.parentHeight),\n        otherHeight: Math.floor(this.parentHeight),\n        mainWidth: Math.floor(this.parentWidth),\n        otherWidth: Math.floor(this.parentWidth),\n      };\n    }\n  }\n\n  updateDimensions = () => {\n    this.parentWidth = window.innerWidth * this.containerWidthFraction;\n    this.parentHeight = this.showControls\n      ? window.innerHeight * this.containerHeightFraction * this.defaultFraction\n      : window.innerHeight * this.containerHeightFraction;\n\n    this.isWideScreen = this.parentWidth >= 768;\n\n    if (!this.isWideScreen && this.parentWidth > 1.5 * this.parentHeight) {\n      this.isWideScreen = true;\n    }\n\n    const { mainHeight, otherHeight, mainWidth, otherWidth } = this.computeDimensions();\n    this.updateComponentSizes({ mainHeight, otherHeight, mainWidth, otherWidth });\n    this.applyChildStyles();\n  };\n\n  get containerStyle() {\n    return {\n      display: 'flex',\n      flex: 1,\n      flexDirection: this.isWideScreen ? 'row' : 'column',\n      width: `${this.parentWidth}px`,\n      height: `${this.parentHeight}px`,\n      padding: 0,\n      margin: 0,\n    };\n  }\n\n  applyChildStyles() {\n    if (this.children) {\n      const { mainHeight, otherHeight, mainWidth, otherWidth } = this.computeDimensions();\n      this.children.forEach((child, index) => {\n        const childStyle = this.doStack\n          ? {\n              height: index === 0 ? mainHeight : otherHeight,\n              width: index === 0 ? mainWidth : otherWidth,\n            }\n          : {\n              height: mainHeight,\n              width: mainWidth,\n            };\n\n        this.renderer.setStyle(child.nativeElement, 'height', `${childStyle.height}px`);\n        this.renderer.setStyle(child.nativeElement, 'width', `${childStyle.width}px`);\n      });\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MeetingProgressTimer } from '../meeting-progress-timer/meeting-progress-timer.component';\n\nexport interface MainGridComponentOptions {\n  backgroundColor?: string;\n  mainSize?: number;\n  height?: number;\n  width?: number;\n  showAspect?: boolean;\n  timeBackgroundColor?: string;\n  showTimer?: boolean;\n  meetingProgressTime?: string;\n}\n\nexport type MainGridComponentType = (options: MainGridComponentOptions) => HTMLElement;\n\n/**\n * MainGridComponent is a standalone Angular component that displays a grid container\n * with optional meeting progress timer and customizable styles.\n *\n * @selector app-main-grid-component\n * @standalone true\n * @imports CommonModule, MeetingProgressTimer\n *\n * @template\n * <div [ngStyle]=\"maingridContainerStyle\">\n *   <app-meeting-progress-timer\n *     *ngIf=\"showTimer\"\n *     [meetingProgressTime]=\"meetingProgressTime\"\n *     [initialBackgroundColor]=\"timeBackgroundColor\"\n *   ></app-meeting-progress-timer>\n *   <ng-content></ng-content>\n * </div>\n *\n * @Inputs\n * @property {string} backgroundColor - The background color of the grid container.\n * @property {number} mainSize - The main size of the grid container.\n * @property {number} height - The height of the grid container in pixels.\n * @property {number} width - The width of the grid container in pixels.\n * @property {boolean} showAspect - Determines if the grid container should be displayed as flex.\n * @property {string} timeBackgroundColor - The background color of the meeting progress timer.\n * @property {boolean} showTimer - Determines if the meeting progress timer should be displayed.\n * @property {string} meetingProgressTime - The progress time to be displayed in the meeting progress timer.\n *\n * @getter maingridContainerStyle - Returns the style object for the grid container.\n * @returns {Object} The style object for the grid container.\n */\n@Component({\n  selector: 'app-main-grid-component',\n  standalone: true,\n  imports: [CommonModule, MeetingProgressTimer],\n  template: `\n    <div [ngStyle]=\"maingridContainerStyle\">\n      <app-meeting-progress-timer\n        *ngIf=\"showTimer\"\n        [meetingProgressTime]=\"meetingProgressTime\"\n        [initialBackgroundColor]=\"timeBackgroundColor\"\n      ></app-meeting-progress-timer>\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class MainGridComponent {\n  @Input() backgroundColor = '';\n  @Input() mainSize = 0;\n  @Input() height = 0;\n  @Input() width = 0;\n  @Input() showAspect = true;\n  @Input() timeBackgroundColor = 'green';\n  @Input() showTimer = true;\n  @Input() meetingProgressTime = '0';\n\n  get maingridContainerStyle() {\n    return {\n      display: this.showAspect ? 'flex' : 'none',\n      backgroundColor: this.backgroundColor,\n      height: `${this.height}px`,\n      width: `${this.width}px`,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderStyle: 'solid',\n      borderColor: '#000',\n      borderWidth: '4px',\n    };\n  }\n}\n","import { Component, Input, OnInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface SubAspectComponentOptions {\n  backgroundColor?: string;\n  showControls?: boolean;\n  containerWidthFraction?: number;\n  containerHeightFraction?: number;\n  defaultFractionSub?: number;\n}\n\nexport type SubAspectComponentType = (options: SubAspectComponentOptions) => HTMLElement;\n\n/**\n * @fileoverview SubAspectComponent is an Angular component that displays a sub-aspect of a media element.\n * It adjusts its size and visibility based on input properties and window events.\n *\n * @component\n * @selector app-sub-aspect-component\n * @standalone true\n * @imports CommonModule\n *\n * @template\n * <div *ngIf=\"showControls\" [ngStyle]=\"{ position: 'absolute', bottom: '0', margin: '0', backgroundColor: backgroundColor, height: aspectStyles.height + 'px', width: aspectStyles.width + 'px' }\">\n *   <ng-content></ng-content>\n * </div>\n *\n * @styles []\n *\n * @class SubAspectComponent\n * @implements OnInit, OnDestroy, OnChanges\n *\n * @property {string} backgroundColor - The background color of the component. Default is 'transparent'.\n * @property {boolean} showControls - Determines whether the controls are shown. Default is true.\n * @property {number} containerWidthFraction - The fraction of the container's width. Default is 1.\n * @property {number} containerHeightFraction - The fraction of the container's height. Default is 1.\n * @property {number} defaultFractionSub - The default fraction for the sub-aspect. Default is 0.0.\n * @property {object} aspectStyles - The styles for the aspect, including height and width.\n * @property {number} aspectStyles.height - The height of the aspect.\n * @property {number} aspectStyles.width - The width of the aspect.\n * @property {number} subAspectFraction - The fraction of the sub-aspect.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized. Adds event listeners for window resize and orientation change.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes. Updates aspect styles if relevant properties change.\n * @method ngOnDestroy - Lifecycle hook that is called just before the component is destroyed. Removes event listeners for window resize and orientation change.\n * @method updateAspectStyles - Updates the aspect styles based on the current window size and input properties.\n */\n@Component({\n  selector: 'app-sub-aspect-component',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div\n      *ngIf=\"showControls\"\n      [ngStyle]=\"{\n        position: 'absolute',\n        bottom: '0',\n        margin: '0',\n        backgroundColor: backgroundColor,\n        height: aspectStyles.height + 'px',\n        width: aspectStyles.width + 'px'\n      }\"\n    >\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: [],\n})\nexport class SubAspectComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() backgroundColor = 'transparent';\n  @Input() showControls = true;\n  @Input() containerWidthFraction = 1;\n  @Input() containerHeightFraction = 1;\n  @Input() defaultFractionSub = 0.0;\n\n  aspectStyles = {\n    height: 0,\n    width: 0,\n  };\n\n  ngOnInit() {\n    this.updateAspectStyles();\n    window.addEventListener('resize', this.updateAspectStyles.bind(this));\n    window.addEventListener('orientationchange', this.updateAspectStyles.bind(this));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes['showControls'] ||\n      changes['containerWidthFraction'] ||\n      changes['containerHeightFraction'] ||\n      changes['defaultFractionSub']\n    ) {\n      this.updateAspectStyles();\n    }\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.updateAspectStyles.bind(this));\n    window.removeEventListener('orientationchange', this.updateAspectStyles.bind(this));\n  }\n\n  private updateAspectStyles() {\n    const windowWidth = window.innerWidth;\n\n    this.aspectStyles = {\n      height: this.showControls ? 40 : 0,\n      width: this.containerWidthFraction ? this.containerWidthFraction * windowWidth : windowWidth,\n    };\n  }\n}\n","import { Component, Input, OnInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface MainContainerComponentOptions {\n  backgroundColor?: string;\n  containerWidthFraction?: number;\n  containerHeightFraction?: number;\n  marginLeft?: number;\n  marginRight?: number;\n  marginTop?: number;\n  marginBottom?: number;\n  padding?: number;\n}\n\nexport type MainContainerComponentType = (options: MainContainerComponentOptions) => HTMLElement;\n/**\n * MainContainerComponent is a standalone Angular component that dynamically adjusts its styles\n * based on the provided input properties and window size changes.\n *\n * @selector app-main-container-component\n * @standalone true\n * @imports CommonModule\n *\n * @template\n * ```html\n * <div [ngStyle]=\"containerStyles\">\n *   <ng-content></ng-content>\n * </div>\n * ```\n *\n * @class MainContainerComponent\n * @implements OnInit, OnDestroy, OnChanges\n *\n * @property {string} backgroundColor - The background color of the container.\n * @property {number} containerWidthFraction - The fraction of the window width the container should occupy.\n * @property {number} containerHeightFraction - The fraction of the window height the container should occupy.\n * @property {number} marginLeft - The left margin of the container in pixels.\n * @property {number} marginRight - The right margin of the container in pixels.\n * @property {number} marginTop - The top margin of the container in pixels.\n * @property {number} marginBottom - The bottom margin of the container in pixels.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized. Sets up event listeners for window resize and orientation change.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes. Updates the container styles accordingly.\n * @method ngOnDestroy - Lifecycle hook that is called just before the component is destroyed. Removes event listeners for window resize and orientation change.\n * @method updateContainerStyles - Updates the container styles based on the current input properties and window size.\n */\n@Component({\n  selector: 'app-main-container-component',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div [ngStyle]=\"containerStyles\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class MainContainerComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() backgroundColor = '';\n  @Input() containerWidthFraction = 1;\n  @Input() containerHeightFraction = 1;\n  @Input() marginLeft = 0;\n  @Input() marginRight = 0;\n  @Input() marginTop = 0;\n  @Input() marginBottom = 0;\n  @Input() padding = 0;\n\n  containerStyles: { [key: string]: any } = {};\n\n  ngOnInit() {\n    this.updateContainerStyles();\n\n    window.addEventListener('resize', this.updateContainerStyles);\n    window.addEventListener('orientationchange', this.updateContainerStyles);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes['containerHeightFraction'] ||\n      changes['containerWidthFraction'] ||\n      changes['backgroundColor'] ||\n      changes['marginLeft'] ||\n      changes['marginRight'] ||\n      changes['marginTop'] ||\n      changes['marginBottom']\n    ) {\n      this.updateContainerStyles();\n    }\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.updateContainerStyles);\n    window.removeEventListener('orientationchange', this.updateContainerStyles);\n  }\n\n  updateContainerStyles = () => {\n    const windowHeight = window.innerHeight;\n    const windowWidth = window.innerWidth;\n\n    this.containerStyles = {\n      backgroundColor: this.backgroundColor,\n      marginLeft: `${this.marginLeft}px`,\n      marginRight: `${this.marginRight}px`,\n      marginTop: `${this.marginTop}px`,\n      marginBottom: `${this.marginBottom}px`,\n      height: Math.floor(this.containerHeightFraction * windowHeight) + 'px',\n      maxHeight: Math.floor(this.containerHeightFraction * windowHeight) + 'px',\n      width: Math.floor(this.containerWidthFraction * windowWidth) + 'px',\n      maxWidth: Math.floor(this.containerWidthFraction * windowWidth) + 'px',\n      padding: `${this.padding}px`,\n      overflow: 'hidden',\n    };\n  };\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface AlertComponentOptions {\n  visible: boolean;\n  message: string;\n  type: 'success' | 'danger'; // Optional prop with 'success' or 'danger' as default values\n  duration?: number; // Optional with default value\n  onHide?: () => void; // Optional callback function\n  textColor?: string; // Optional text color\n}\n\nexport type AlertComponentType = (options: AlertComponentOptions) => HTMLElement;\n\n/**\n * AlertComponent is a standalone Angular component that displays an alert message.\n * It supports different types of alerts such as 'success' and 'danger', and can be configured\n * to automatically hide after a specified duration.\n *\n * @selector app-alert-component\n * @standalone true\n * @imports CommonModule\n * @templateUrl ./alert.component.html\n * @styleUrls ./alert.component.css\n *\n * @class AlertComponent\n * @implements OnChanges\n *\n * @property {boolean} visible - Determines if the alert is visible.\n * @property {string} message - The message to be displayed in the alert.\n * @property {'success' | 'danger'} type - The type of alert, either 'success' or 'danger'.\n * @property {number} duration - The duration (in milliseconds) for which the alert is visible before hiding.\n * @property {string} textColor - The color of the text in the alert.\n * @property {() => void} onHide - A callback function that is called when the alert is hidden.\n *\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property of a directive changes.\n * @param {SimpleChanges} changes - An object of changes to the data-bound properties.\n *\n * @method handlePress - Manually hides the alert by calling the onHide callback.\n */\n@Component({\n  selector: 'app-alert-component',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './alert.component.component.html',\n  styleUrls: ['./alert.component.component.css'],\n})\nexport class AlertComponent implements OnChanges {\n  @Input() visible = false;\n  @Input() message = '';\n  @Input() type: 'success' | 'danger' = 'success';\n  @Input() duration = 4000;\n  @Input() textColor = 'black';\n  @Input() onHide!: () => void;\n\n  alertType: 'success' | 'danger' = 'success';\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['type']) {\n      this.alertType = this.type;\n    }\n\n    if (changes['visible']) {\n      if (this.visible) {\n        setTimeout(() => {\n          this.onHide();\n        }, this.duration);\n      }\n    }\n  }\n\n  handlePress() {\n    this.onHide();\n  }\n}\n","<div *ngIf=\"visible\" (click)=\"handlePress()\" class=\"centeredView\">\r\n  <div [ngStyle]=\"{ 'background-color': alertType === 'success' ? 'green' : 'red' }\" class=\"modalView\">\r\n    <p [ngStyle]=\"{ color: textColor }\" class=\"modalText\">{{ message }}</p>\r\n  </div>\r\n</div>\r\n","import { Component, Input, Injector, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nexport interface CustomComponent {\n  component: Type<any>;\n  injector: Injector;\n}\n\nexport interface CustomButton {\n  action: () => void;\n  show: boolean | (() => boolean);\n  backgroundColor?: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  iconStyle?: Partial<CSSStyleDeclaration>;\n  text?: string;\n  textStyle?: Partial<CSSStyleDeclaration>;\n  customComponent?: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent);\n  injector?: Injector;\n}\n\nexport interface CustomButtonsOptions {\n  buttons: CustomButton[];\n}\n\nexport type CustomButtonsType = (options: CustomButtonsOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-custom-buttons',\n  templateUrl: './custom-buttons.component.html',\n  styleUrls: ['./custom-buttons.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, FontAwesomeModule],\n})\nexport class CustomButtons {\n  /**\n   * CustomButtons component renders a list of customizable buttons.\n   *\n   * @component\n   * @param {CustomButtonsOptions} props - The properties for the CustomButtons component.\n   * @param {Array} props.buttons - An array of button configurations.\n   * @param {Object} props.buttons[].action - The function to be called when the button is clicked.\n   * @param {boolean} props.buttons[].show - Determines if the button should be displayed.\n   * @param {string} props.buttons[].backgroundColor - The background color of the button.\n   * @param {boolean} props.buttons[].disabled - Determines if the button should be disabled.\n   * @param {Object} [props.buttons[].icon] - The icon to be displayed on the button.\n   * @param {Object} [props.buttons[].iconStyle] - The style to be applied to the icon.\n   * @param {string} [props.buttons[].text] - The text to be displayed on the button.\n   * @param {Object} [props.buttons[].textStyle] - The style to be applied to the text.\n   * @param {React.ReactNode} [props.buttons[].customComponent] - A custom component to be rendered inside the button.\n   * @param {Injector} [props.buttons[].injector] - The injector to be used for the custom component.\n   * @returns {HTMLElement} The CustomButtons component.\n   * @example\n   * ```html\n   * <app-custom-buttons [buttons]=\"buttons\"></app-custom-buttons>\n   * ```\n   * @example\n   * ```typescript\n   * const buttons = [\n   *  {\n   *   action: () => console.log('Button 1 clicked'),\n   *  show: true,\n   * backgroundColor: 'blue',\n   * disabled: false,\n   * icon: faCoffee,\n   * iconStyle: { color: 'white' },\n   * text: 'Button 1',\n   * textStyle: { color: 'white' },\n   * customComponent: <CustomComponent />,\n   * injector: Injector.create({ providers: [{ provide: 'customProp', useValue: 'customValue' }] }),\n   * },\n   * {\n   *  action: () => console.log('Button 2 clicked'),\n   * show: true,\n   * backgroundColor: 'red',\n   * disabled: false,\n   * icon: faCoffee,\n   * iconStyle: { color: 'white' },\n   * text: 'Button 2',\n   * textStyle: { color: 'white' },\n   * customComponent: <CustomComponent />,\n   * injector: Injector.create({ providers: [{ provide: 'customProp', useValue: 'customValue' }] }),\n   * },\n   * ];\n   * ```\n   */\n\n  @Input() buttons!: CustomButton[];\n\n  faSpinner = faSpinner;\n\n  mergeStyles(defaultStyle: any, customStyle: any): any {\n    return { ...defaultStyle, ...customStyle };\n  }\n\n  get customButtonIcon(): any {\n    return {\n      fontSize: '20px',\n      marginRight: '5px',\n    };\n  }\n\n  // Type guard to check if customComponent is of type CustomComponentConfig\n  isCustomComponentConfig(obj: any): obj is CustomComponent {\n    return obj && typeof obj === 'object' && 'component' in obj && 'injector' in obj;\n  }\n}\n","<div class=\"customButtonsContainer\">\r\n  <button\r\n    *ngFor=\"let button of buttons; let i = index\"\r\n    (click)=\"button.action()\"\r\n    class=\"customButton\"\r\n    [ngStyle]=\"{\r\n      'background-color': button.show ? button.backgroundColor : 'transparent',\r\n      'display': button.show ? 'flex' : 'none'\r\n    }\"\r\n    [disabled]=\"button.disabled\"\r\n  >\r\n    <div class=\"buttonContent\">\r\n      <ng-container *ngIf=\"button.icon; else customOrSpinner\">\r\n        <fa-icon [icon]=\"button.icon\" [ngStyle]=\"mergeStyles(customButtonIcon, button.iconStyle)\"></fa-icon>\r\n        <span *ngIf=\"button.text\" class=\"customButtonText\" [ngStyle]=\"button.textStyle\">{{ button.text }}</span>\r\n      </ng-container>\r\n      <ng-template #customOrSpinner>\r\n        <ng-container *ngIf=\"isCustomComponentConfig(button.customComponent)\">\r\n          <ng-container *ngComponentOutlet=\"button.customComponent.component; injector: button.customComponent.injector\"></ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"button.customComponent && !isCustomComponentConfig(button.customComponent)\">\r\n          <div #customElementContainer></div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!button.customComponent\">\r\n          <fa-icon [icon]=\"faSpinner\"></fa-icon>\r\n        </ng-container>\r\n      </ng-template>\r\n    </div>\r\n  </button>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\n\nexport interface MeetingIdComponentOptions {\n  meetingID?: string;\n}\n\nexport type MeetingIdComponentType = (options: MeetingIdComponentOptions) => HTMLElement;\n\n/**\n * Component representing a meeting ID.\n *\n * @selector app-meeting-id-component\n * @templateUrl ./meeting-id-component.component.html\n * @styleUrls ./meeting-id-component.component.css\n * @standalone true\n */\n@Component({\n  selector: 'app-meeting-id-component',\n  templateUrl: './meeting-id-component.component.html',\n  styleUrls: ['./meeting-id-component.component.css'],\n  standalone: true,\n})\nexport class MeetingIdComponent {\n  @Input() meetingID = '';\n}\n","<div class=\"form-group\">\r\n  <label class=\"label\">Event ID:</label>\r\n  <input\r\n    class=\"disabled-input\"\r\n    [value]=\"meetingID\"\r\n    readonly\r\n  />\r\n</div>\r\n","import { Component, Input } from '@angular/core';\n\nexport interface MeetingPasscodeComponentOptions {\n  meetingPasscode: string;\n}\n\nexport type MeetingPasscodeComponentType = (\n  options: MeetingPasscodeComponentOptions,\n) => HTMLElement;\n\n/**\n * Component for displaying and managing a meeting passcode.\n *\n * @selector app-meeting-passcode-component\n * @standalone true\n * @templateUrl ./meeting-passcode-component.component.html\n * @styleUrls ./meeting-passcode-component.component.css\n */\n@Component({\n  selector: 'app-meeting-passcode-component',\n  standalone: true,\n  templateUrl: './meeting-passcode-component.component.html',\n  styleUrls: ['./meeting-passcode-component.component.css'],\n})\nexport class MeetingPasscodeComponent {\n  @Input() meetingPasscode = '';\n}\n","<div class=\"form-group\">\r\n  <label class=\"label\">Event Passcode (Host):</label>\r\n  <input\r\n    class=\"disabled-input\"\r\n    [value]=\"meetingPasscode\"\r\n    readonly\r\n  />\r\n</div>\r\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faCopy, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faWhatsapp, faTelegram } from '@fortawesome/free-brands-svg-icons';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { EventType } from '../../../@types/types';\n\nexport interface ShareButton {\n  icon: IconDefinition;\n  action: () => void;\n  show: boolean;\n  color?: string;\n  iconColor?: string;\n}\n\nexport interface ShareButtonsComponentOptions {\n  meetingID: string;\n  shareButtons?: ShareButton[];\n  eventType: EventType;\n}\n\nexport type ShareButtonsComponentType = (options: ShareButtonsComponentOptions) => HTMLElement;\n\n/**\n * @component ShareButtonsComponent\n * @description This component provides a set of share buttons for different social media platforms and email.\n * It allows users to share a meeting link via various channels.\n *\n * @selector app-share-buttons-component\n * @templateUrl ./share-buttons-component.component.html\n * @styleUrls ./share-buttons-component.component.css\n * @standalone true\n * @imports [CommonModule, FontAwesomeModule]\n *\n * @input {string} meetingID - The ID of the meeting to be shared.\n * @input {ShareButton[]} shareButtons - An array of custom share buttons.\n * @input {string} eventType - The type of event (e.g., 'chat', 'broadcast', 'webinar').\n *\n * @property {ShareButton[]} defaultShareButtons - The default set of share buttons.\n *\n * @getter {string} shareName - Determines the share name based on the event type.\n * @getter {ShareButton[]} filteredShareButtons - Returns the filtered share buttons based on visibility.\n */\n@Component({\n  selector: 'app-share-buttons-component',\n  templateUrl: './share-buttons-component.component.html',\n  styleUrls: ['./share-buttons-component.component.css'],\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n})\nexport class ShareButtonsComponent {\n  @Input() meetingID!: string;\n  @Input() shareButtons: ShareButton[] = [];\n  @Input() eventType!: EventType;\n\n  defaultShareButtons: ShareButton[] = [\n    {\n      icon: faCopy,\n      action: async () => {\n        try {\n          await navigator.clipboard.writeText(\n            `https://${this.shareName}.mediasfu.com/${this.shareName}/${this.meetingID}`,\n          );\n        } catch (error) {\n          console.error('Failed to copy to clipboard:', error);\n        }\n      },\n      show: true,\n    },\n    {\n      icon: faEnvelope,\n      action: () => {\n        const emailUrl = `mailto:?subject=Join my meeting&body=Here's the link to the meeting: https://${this.shareName}.mediasfu.com/${this.shareName}/${this.meetingID}`;\n        window.open(emailUrl, '_blank');\n      },\n      show: true,\n    },\n    {\n      icon: faFacebook,\n      action: () => {\n        const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n          `https://${this.shareName}.mediasfu.com/${this.shareName}/${this.meetingID}`,\n        )}`;\n        window.open(facebookUrl, '_blank');\n      },\n      show: true,\n    },\n    {\n      icon: faWhatsapp,\n      action: () => {\n        const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(\n          `https://${this.shareName}.mediasfu.com/${this.shareName}/${this.meetingID}`,\n        )}`;\n        window.open(whatsappUrl, '_blank');\n      },\n      show: true,\n    },\n    {\n      icon: faTelegram,\n      action: () => {\n        const telegramUrl = `https://t.me/share/url?url=${encodeURIComponent(\n          `https://${this.shareName}.mediasfu.com/${this.shareName}/${this.meetingID}`,\n        )}`;\n        window.open(telegramUrl, '_blank');\n      },\n      show: true,\n    },\n  ];\n\n  get shareName() {\n    return this.eventType === 'chat'\n      ? 'chat'\n      : this.eventType === 'broadcast'\n      ? 'broadcast'\n      : 'meeting';\n  }\n\n  get filteredShareButtons() {\n    return this.shareButtons.length > 0\n      ? this.shareButtons.filter((button) => button.show)\n      : this.defaultShareButtons.filter((button) => button.show);\n  }\n}\n","<div class=\"share-buttons-container\">\r\n  <div\r\n    *ngFor=\"let button of filteredShareButtons; let i = index\"\r\n    (click)=\"button.action()\"\r\n    [ngStyle]=\"{\r\n      'background-color': button.color || 'black',\r\n      'margin-right': i !== filteredShareButtons.length - 1 ? '10px' : '0'\r\n    }\"\r\n    class=\"share-button\"\r\n  >\r\n    <fa-icon [icon]=\"button.icon\" [ngStyle]=\"{ color: button.iconColor || '#ffffff', 'font-size': '24px' }\"></fa-icon>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\n\nimport { CustomButton, CustomButtons } from '../custom-buttons/custom-buttons.component';\nimport { MeetingIdComponent } from '../meeting-id-component/meeting-id-component.component';\nimport { MeetingPasscodeComponent } from '../meeting-passcode-component/meeting-passcode-component.component';\nimport { ShareButtonsComponent } from '../share-buttons-component/share-buttons-component.component';\nimport { EventType } from '../../../@types/types';\n\nexport interface MenuModalOptions {\n  backgroundColor?: string;\n  isVisible: boolean;\n  customButtons?: CustomButton[];\n  shareButtons?: boolean;\n  position?: string;\n  roomName: string;\n  adminPasscode: string;\n  islevel: string;\n  eventType: EventType;\n\n  onClose: () => void;\n}\n\nexport type MenuModalType = (options: MenuModalOptions) => HTMLElement;\n\n/**\n * @component MenuModal\n *\n * @description\n * The MenuModal component is a standalone Angular component that displays a modal dialog.\n * It includes various customizable properties and imports necessary modules and components.\n *\n * @selector app-menu-modal\n * @templateUrl ./menu-modal.component.html\n * @styleUrls ./menu-modal.component.css\n *\n * @inputs\n * @input {string} backgroundColor - The background color of the modal content. Default is '#83c0e9'.\n * @input {boolean} isVisible - Determines whether the modal is visible.\n * @input {CustomButton[]} customButtons - An array of custom buttons to be displayed in the modal.\n * @input {boolean} shareButtons - Determines whether share buttons are displayed. Default is true.\n * @input {string} position - The position of the modal on the screen. Default is 'bottomRight'.\n * @input {string} roomName - The name of the room.\n * @input {string} adminPasscode - The admin passcode for the room.\n * @input {string} islevel - The level of the user.\n * @input {() => void} onClose - A function to be called when the modal is closed.\n *\n * @methods\n * @method modalContainerStyle - Returns the style object for the modal container.\n * @method modalContentStyle - Returns the style object for the modal content.\n * @method handleClose - Calls the onClose function to handle closing the modal.\n *\n * @dependencies\n * - CommonModule\n * - FontAwesomeModule\n * - FormsModule\n * - CustomButtons\n * - MeetingIdComponent\n * - MeetingPasscodeComponent\n * - ShareButtonsComponent\n */\n@Component({\n  selector: 'app-menu-modal',\n  templateUrl: './menu-modal.component.html',\n  styleUrls: ['./menu-modal.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    FormsModule,\n    CustomButtons,\n    MeetingIdComponent,\n    MeetingPasscodeComponent,\n    ShareButtonsComponent,\n  ],\n})\nexport class MenuModal {\n  @Input() backgroundColor = '#83c0e9';\n  @Input() isVisible!: boolean;\n  @Input() customButtons: CustomButton[] = [];\n  @Input() shareButtons = true;\n  @Input() position = 'bottomRight';\n  @Input() roomName!: string;\n  @Input() adminPasscode!: string;\n  @Input() islevel!: string;\n  @Input() eventType!: EventType;\n  // Define inputs for functions\n  @Input() onClose!: () => void;\n\n  faBars = faBars;\n  faTimes = faTimes;\n\n  modalContainerStyle() {\n    return {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: this.isVisible ? 'block' : 'none',\n      zIndex: 999,\n    };\n  }\n\n  modalContentStyle() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.7 * screenWidth;\n\n    if (modalWidth > 400) {\n      modalWidth = 400;\n    }\n\n    return {\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '5px',\n      width: `${modalWidth}px`,\n      maxHeight: '80%',\n      overflowY: 'auto',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n\n  handleClose() {\n    this.onClose();\n  }\n}\n","<div [ngStyle]=\"modalContainerStyle()\">\r\n  <div class=\"modal-content\" [ngStyle]=\"modalContentStyle()\">\r\n    <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;\">\r\n      <div style=\"font-size: 18px; font-weight: bold; color: black;\">\r\n        <fa-icon [icon]=\"faBars\" style=\"font-size: 20px; color: black;\"></fa-icon> Menu\r\n      </div>\r\n      <div (click)=\"handleClose()\" style=\"padding: 5px;\">\r\n        <fa-icon [icon]=\"faTimes\" style=\"font-size: 20px; color: black;\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <hr style=\"height: 1px; background-color: black; margin: 5px 0;\" />\r\n    <div style=\"flex: 1;\">\r\n      <div style=\"max-height: calc(70% - 70px); overflow-y: auto;\">\r\n        <app-custom-buttons [buttons]=\"customButtons\"></app-custom-buttons>\r\n        <div style=\"height: 1px; background-color: #ffffff; margin: 10px 0;\"></div>\r\n        <ng-container *ngIf=\"islevel === '2'\">\r\n          <app-meeting-passcode-component\r\n            [meetingPasscode]=\"adminPasscode\"\r\n          ></app-meeting-passcode-component>\r\n        </ng-container>\r\n        <div style=\"margin-bottom: 10px;\">\r\n          <app-meeting-id-component [meetingID]=\"roomName\"></app-meeting-id-component>\r\n        </div>\r\n        <ng-container *ngIf=\"true\">\r\n          <app-share-buttons-component [meetingID]=\"roomName\" [eventType]=\"eventType\"></app-share-buttons-component>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EventType } from '../../../@types/types';\n\nexport interface StandardPanelParameters {\n  recordingMediaOptions: string;\n  recordingAudioOptions: string;\n  recordingVideoOptions: string;\n  recordingAddHLS: boolean;\n  updateRecordingMediaOptions: (mediaOptions: string) => void;\n  updateRecordingAudioOptions: (audioOptions: string) => void;\n  updateRecordingVideoOptions: (videoOptions: string) => void;\n  updateRecordingAddHLS: (addHLS: boolean) => void;\n  eventType: EventType;\n}\n\nexport type StandardPanelType = (options: StandardPanelParameters) => HTMLElement;\n\n/**\n * @component StandardPanelComponent\n * @description This component represents a standard panel for recording options.\n * It allows users to select media, audio, and video options, as well as toggle HLS recording.\n *\n * @selector app-standard-panel-component\n * @standalone true\n * @templateUrl ./standard-panel-component.component.html\n * @styleUrls ./standard-panel-component.component.css\n * @imports [CommonModule, FormsModule]\n *\n * @input {StandardPanelParameters} parameters - The parameters for the standard panel component.\n *\n * @property {string} selectedRecordingMediaOptions - The selected media options for recording.\n * @property {string} selectedRecordingAudioOptions - The selected audio options for recording.\n * @property {string} selectedRecordingVideoOptions - The selected video options for recording.\n * @property {boolean} selectedRecordingAddHLS - The flag indicating whether HLS recording is enabled.\n *\n * @method ngOnInit - Initializes the component and sets the initial values for recording options.\n * @method ngOnChanges - Handles changes to the input parameters and updates the recording options accordingly.\n * @method handleMediaOptionsChange - Handles changes to the media options and updates the parameters.\n * @method handleAudioOptionsChange - Handles changes to the audio options and updates the parameters.\n * @method handleVideoOptionsChange - Handles changes to the video options and updates the parameters.\n * @method handleAddHLSChange - Handles changes to the HLS recording option and updates the parameters.\n *\n * @param {SimpleChanges} changes - The changes to the input properties.\n * @param {any} event - The event object from the change event.\n */\n@Component({\n  selector: 'app-standard-panel-component',\n  standalone: true,\n  templateUrl: './standard-panel-component.component.html',\n  styleUrls: ['./standard-panel-component.component.css'],\n  imports: [CommonModule, FormsModule],\n})\nexport class StandardPanelComponent implements OnInit, OnChanges {\n  @Input() parameters: StandardPanelParameters = {} as StandardPanelParameters;\n\n  selectedRecordingMediaOptions!: string;\n  selectedRecordingAudioOptions!: string;\n  selectedRecordingVideoOptions!: string;\n  selectedRecordingAddHLS!: boolean;\n\n  ngOnInit() {\n    this.selectedRecordingMediaOptions = this.parameters.recordingMediaOptions;\n    this.selectedRecordingAudioOptions = this.parameters.recordingAudioOptions;\n    this.selectedRecordingVideoOptions = this.parameters.recordingVideoOptions;\n    this.selectedRecordingAddHLS = this.parameters.recordingAddHLS;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['parameters']) {\n      this.parameters = changes['parameters'].currentValue;\n      this.selectedRecordingMediaOptions = this.parameters.recordingMediaOptions;\n      this.selectedRecordingAudioOptions = this.parameters.recordingAudioOptions;\n      this.selectedRecordingVideoOptions = this.parameters.recordingVideoOptions;\n      this.selectedRecordingAddHLS = this.parameters.recordingAddHLS;\n    }\n  }\n\n  handleMediaOptionsChange(event: any) {\n    const value = event.target.value;\n    this.selectedRecordingMediaOptions = value;\n    this.parameters.updateRecordingMediaOptions(value);\n  }\n\n  handleAudioOptionsChange(event: any) {\n    const value = event.target.value;\n    this.selectedRecordingAudioOptions = value;\n    this.parameters.updateRecordingAudioOptions(value);\n  }\n\n  handleVideoOptionsChange(event: any) {\n    const value = event.target.value;\n    this.selectedRecordingVideoOptions = value;\n    this.parameters.updateRecordingVideoOptions(value);\n  }\n\n  handleAddHLSChange(event: any) {\n    const value = event.target.value === 'true';\n    this.selectedRecordingAddHLS = value;\n    this.parameters.updateRecordingAddHLS(value);\n  }\n}\n","<div>\r\n  <!-- Media Options -->\r\n  <div>\r\n    <label style=\"margin-right:10px; font-weight: bold;\">Media Options:</label>\r\n    <select [(ngModel)]=\"selectedRecordingMediaOptions\" (change)=\"handleMediaOptionsChange($event)\">\r\n      <option value=\"video\">Record Video</option>\r\n      <option value=\"audio\">Record Audio Only</option>\r\n    </select>\r\n  </div>\r\n  <hr />\r\n\r\n  <!-- Specific Audios -->\r\n  <div *ngIf=\"parameters.eventType !== 'broadcast'\">\r\n    <div>\r\n      <label style=\"margin-right:10px; font-weight: bold;\">Specific Audios:</label>\r\n      <select [(ngModel)]=\"selectedRecordingAudioOptions\" (change)=\"handleAudioOptionsChange($event)\">\r\n        <option value=\"all\">Add All</option>\r\n        <option value=\"onScreen\">Add All On Screen</option>\r\n        <option value=\"host\">Add Host Only</option>\r\n      </select>\r\n    </div>\r\n    <hr />\r\n\r\n    <!-- Specific Videos -->\r\n    <div id=\"conditionalConference\">\r\n      <label style=\"margin-right:10px; font-weight: bold;\">Specific Videos:</label>\r\n      <select [(ngModel)]=\"selectedRecordingVideoOptions\" (change)=\"handleVideoOptionsChange($event)\">\r\n        <option value=\"all\">Add All</option>\r\n        <option value=\"mainScreen\">Big Screen Only (includes screenshare)</option>\r\n      </select>\r\n    </div>\r\n    <hr />\r\n  </div>\r\n\r\n  <!-- Add HLS -->\r\n  <div id=\"addHLSPart\">\r\n    <label style=\"margin-right:10px; font-weight: bold;\">Add HLS:</label>\r\n    <select [(ngModel)]=\"selectedRecordingAddHLS\" (change)=\"handleAddHLSChange($event)\">\r\n      <option [ngValue]=\"true\">True</option>\r\n      <option [ngValue]=\"false\">False</option>\r\n    </select>\r\n  </div>\r\n  <hr />\r\n</div>\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EventType } from '../../../@types/types';\n\nexport interface AdvancedPanelParameters {\n  recordingOrientationVideo: string;\n  recordingNameTags: boolean;\n  recordingVideoType: string;\n  recordingDisplayType: 'video' | 'media' | 'all';\n  recordingAddText: boolean;\n  recordingCustomText: string;\n  recordingCustomTextPosition: string;\n  recordingBackgroundColor: string;\n  recordingCustomTextColor: string;\n  recordingNameTagsColor: string;\n  updateRecordingOrientationVideo: (orientation: string) => void;\n  updateRecordingNameTags: (nameTags: boolean) => void;\n  updateRecordingVideoType: (videoType: string) => void;\n  updateRecordingDisplayType: (displayType: 'video' | 'media' | 'all') => void;\n  updateRecordingAddText: (addText: boolean) => void;\n  updateRecordingCustomText: (customText: string) => void;\n  updateRecordingCustomTextPosition: (position: string) => void;\n  updateRecordingBackgroundColor: (color: string) => void;\n  updateRecordingCustomTextColor: (color: string) => void;\n  updateRecordingNameTagsColor: (color: string) => void;\n  eventType: EventType;\n}\n\nexport type AdvancedPanelType = (options: AdvancedPanelParameters) => HTMLElement;\n\n@Component({\n  selector: 'app-advanced-panel-component',\n  standalone: true,\n  templateUrl: './advanced-panel-component.component.html',\n  styleUrls: ['./advanced-panel-component.component.css'],\n  imports: [CommonModule, FormsModule],\n})\nexport class AdvancedPanelComponent implements OnInit, OnChanges {\n  @Input() parameters: AdvancedPanelParameters = {} as AdvancedPanelParameters;\n\n  selectedOrientationVideo!: string;\n  selectedRecordingNameTags!: boolean;\n  selectedRecordingVideoType!: string;\n  selectedRecordingDisplayType!: 'video' | 'media' | 'all';\n  showBackgroundColorModal = false;\n  showNameTagsColorModal = false;\n  selectedColorType = '';\n  recordingText!: boolean;\n  customText!: string;\n  recordingPosition!: string;\n\n  ngOnInit() {\n    this.selectedOrientationVideo = this.parameters?.recordingOrientationVideo ?? '';\n    this.selectedRecordingNameTags = this.parameters?.recordingNameTags ?? false;\n    this.selectedRecordingVideoType = this.parameters?.recordingVideoType ?? '';\n    this.selectedRecordingDisplayType = this.parameters?.recordingDisplayType ?? 'media';\n    this.recordingText = this.parameters?.recordingAddText ?? false;\n    this.customText = this.parameters?.recordingCustomText ?? '';\n    this.recordingPosition = this.parameters?.recordingCustomTextPosition ?? '';\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['parameters']) {\n      this.parameters = changes['parameters'].currentValue;\n      this.selectedOrientationVideo = this.parameters.recordingOrientationVideo;\n      this.selectedRecordingNameTags = this.parameters.recordingNameTags;\n      this.selectedRecordingVideoType = this.parameters.recordingVideoType;\n      this.selectedRecordingDisplayType = this.parameters.recordingDisplayType;\n      this.recordingText = this.parameters.recordingAddText;\n      this.customText = this.parameters.recordingCustomText;\n      this.recordingPosition = this.parameters.recordingCustomTextPosition;\n    }\n  }\n\n  validateTextInput(input: string): boolean {\n    const regex = /^[a-zA-Z0-9\\s]{1,40}$/;\n    return regex.test(input);\n  }\n\n  handleTextChange(value: boolean) {\n    this.recordingText = value;\n    this.parameters.updateRecordingAddText(value);\n  }\n\n  onChangeTextHandler(text: string) {\n    if (text && text.length > 0 && !this.validateTextInput(text)) {\n      return;\n    }\n    this.parameters.updateRecordingCustomText(text);\n    this.customText = text;\n  }\n\n  handleColorChange(selectedColor: string, event: Event) {\n    const input = event.target as HTMLInputElement;\n    const color = input.value;\n    if (selectedColor === 'backgroundColor') {\n      this.parameters.updateRecordingBackgroundColor(color);\n    } else if (selectedColor === 'customTextColor') {\n      this.parameters.updateRecordingCustomTextColor(color);\n    } else if (selectedColor === 'nameTagsColor') {\n      this.parameters.updateRecordingNameTagsColor(color);\n    }\n  }\n}\n","<div>\r\n  <!-- Video Type -->\r\n  <div>\r\n    <label class=\"label\">Video Type:</label>\r\n    <select [(ngModel)]=\"selectedRecordingVideoType\" (change)=\"parameters.updateRecordingVideoType(selectedRecordingVideoType)\">\r\n      <option value=\"fullDisplay\">Full Display (no background)</option>\r\n      <option value=\"bestDisplay\">Full Video</option>\r\n      <option value=\"all\">All</option>\r\n    </select>\r\n  </div>\r\n  <hr />\r\n\r\n  <!-- Display Type -->\r\n  <div *ngIf=\"parameters.eventType !== 'broadcast'\">\r\n    <label class=\"label\">Display Type:</label>\r\n    <select [(ngModel)]=\"selectedRecordingDisplayType\" (change)=\"parameters.updateRecordingDisplayType(selectedRecordingDisplayType)\">\r\n      <option value=\"video\">Only Video Participants</option>\r\n      <option value=\"videoOpt\">Only Video Participants (optimized)</option>\r\n      <option value=\"media\">Participants with media</option>\r\n      <option value=\"all\">All Participants</option>\r\n    </select>\r\n  </div>\r\n  <hr />\r\n\r\n  <!-- Background Color -->\r\n  <div>\r\n    <label class=\"label\">Background Color:</label>\r\n    <div class=\"color-preview\" [ngStyle]=\"{'background-color': parameters.recordingBackgroundColor}\">\r\n      {{ parameters.recordingBackgroundColor }}\r\n    </div>\r\n    <input type=\"color\" [(ngModel)]=\"parameters.recordingBackgroundColor\" (change)=\"handleColorChange('backgroundColor', $event)\" />\r\n    <span class=\"label\">Click to select color</span>\r\n  </div>\r\n  <hr />\r\n\r\n  <!-- Add Text -->\r\n  <div>\r\n    <label class=\"label\">Add Text:</label>\r\n    <select [(ngModel)]=\"recordingText\" (change)=\"handleTextChange(recordingText)\">\r\n      <option [ngValue]=\"true\">True</option>\r\n      <option [ngValue]=\"false\">False</option>\r\n    </select>\r\n  </div>\r\n  <hr />\r\n\r\n  <!-- Custom Text -->\r\n  <div *ngIf=\"recordingText\">\r\n    <label class=\"label\">Custom Text:</label>\r\n    <input type=\"text\" [(ngModel)]=\"customText\" (input)=\"onChangeTextHandler(customText)\" />\r\n    <hr />\r\n  </div>\r\n\r\n  <!-- Custom Text Position -->\r\n  <div *ngIf=\"recordingText\">\r\n    <label class=\"label\">Custom Text Position:</label>\r\n    <select [(ngModel)]=\"recordingPosition\" (change)=\"parameters.updateRecordingCustomTextPosition(recordingPosition)\">\r\n      <option value=\"top\">Top</option>\r\n      <option value=\"middle\">Middle</option>\r\n      <option value=\"bottom\">Bottom</option>\r\n    </select>\r\n    <hr />\r\n  </div>\r\n\r\n  <!-- Custom Text Color -->\r\n  <div *ngIf=\"recordingText\">\r\n    <label class=\"label\">Custom Text Color:</label>\r\n    <div class=\"color-preview\" [ngStyle]=\"{'background-color': parameters.recordingCustomTextColor}\">\r\n      {{ parameters.recordingCustomTextColor }}\r\n    </div>\r\n    <input type=\"color\" [(ngModel)]=\"parameters.recordingCustomTextColor\" (change)=\"handleColorChange('customTextColor', $event)\" />\r\n    <span class=\"label\">Click to select color</span>\r\n    <hr />\r\n  </div>\r\n\r\n  <!-- Add Name Tags -->\r\n  <div>\r\n    <label class=\"label\">Add Name Tags:</label>\r\n    <select [(ngModel)]=\"selectedRecordingNameTags\" (change)=\"parameters.updateRecordingNameTags(selectedRecordingNameTags)\">\r\n      <option [ngValue]=\"true\">True</option>\r\n      <option [ngValue]=\"false\">False</option>\r\n    </select>\r\n  </div>\r\n  <hr />\r\n\r\n  <!-- Name Tags Color -->\r\n  <div>\r\n    <label class=\"label\">Name Tags Color:</label>\r\n    <div class=\"color-preview\" [ngStyle]=\"{'background-color': parameters.recordingNameTagsColor}\">\r\n      {{ parameters.recordingNameTagsColor }}\r\n    </div>\r\n    <input type=\"color\" [(ngModel)]=\"parameters.recordingNameTagsColor\" (change)=\"handleColorChange('nameTagsColor', $event)\" />\r\n    <span class=\"label\">Click to select color</span>\r\n  </div>\r\n  <hr />\r\n\r\n  <!-- Orientation (Video) -->\r\n  <div>\r\n    <label class=\"label\">Orientation (Video):</label>\r\n    <select [(ngModel)]=\"selectedOrientationVideo\" (change)=\"parameters.updateRecordingOrientationVideo(selectedOrientationVideo)\">\r\n      <option value=\"landscape\">Landscape</option>\r\n      <option value=\"portrait\">Portrait</option>\r\n      <option value=\"all\">All</option>\r\n    </select>\r\n  </div>\r\n  <hr />\r\n</div>\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes, faCheck, faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { StandardPanelComponent } from '../standard-panel-component/standard-panel-component.component';\nimport { AdvancedPanelComponent } from '../advanced-panel-component/advanced-panel-components.component';\nimport {\n  EventType,\n  ConfirmRecordingParameters,\n  StartRecordingParameters,\n  ConfirmRecordingOptions,\n  StartRecordingOptions,\n} from '../../../@types/types';\n\nexport interface RecordingModalParameters\n  extends ConfirmRecordingParameters,\n    StartRecordingParameters {\n  recordPaused: boolean;\n  recordingVideoType: string;\n  recordingDisplayType: 'video' | 'media' | 'all';\n  recordingBackgroundColor: string;\n  recordingNameTagsColor: string;\n  recordingOrientationVideo: string;\n  recordingNameTags: boolean;\n  recordingAddText: boolean;\n  recordingCustomText: string;\n  recordingCustomTextPosition: string;\n  recordingCustomTextColor: string;\n  recordingMediaOptions: string;\n  recordingAudioOptions: string;\n  recordingVideoOptions: string;\n  recordingAddHLS: boolean;\n  eventType: EventType;\n  updateRecordingVideoType: (value: string) => void;\n  updateRecordingDisplayType: (value: 'video' | 'media' | 'all') => void;\n  updateRecordingBackgroundColor: (value: string) => void;\n  updateRecordingNameTagsColor: (value: string) => void;\n  updateRecordingOrientationVideo: (value: string) => void;\n  updateRecordingNameTags: (value: boolean) => void;\n  updateRecordingAddText: (value: boolean) => void;\n  updateRecordingCustomText: (value: string) => void;\n  updateRecordingCustomTextPosition: (value: string) => void;\n  updateRecordingCustomTextColor: (value: string) => void;\n  updateRecordingMediaOptions: (value: string) => void;\n  updateRecordingAudioOptions: (value: string) => void;\n  updateRecordingVideoOptions: (value: string) => void;\n  updateRecordingAddHLS: (value: boolean) => void;\n\n  // mediasfu functions\n  getUpdatedAllParams: () => RecordingModalParameters;\n  [key: string]: any;\n}\n\nexport interface RecordingModalOptions {\n  isRecordingModalVisible: boolean;\n  onClose: () => void;\n  backgroundColor: string;\n  position: string;\n\n  confirmRecording: (options: ConfirmRecordingOptions) => void;\n  startRecording: (options: StartRecordingOptions) => void;\n  parameters: RecordingModalParameters;\n}\n\nexport type RecordingModalType = (options: RecordingModalOptions) => HTMLElement;\n\n/**\n * Component representing a recording modal.\n *\n * @selector app-recording-modal\n * @standalone true\n * @imports CommonModule, FontAwesomeModule, StandardPanelComponent, AdvancedPanelComponent\n * @templateUrl ./recording-modal.component.html\n * @styleUrls ./recording-modal.component.css\n *\n * @class RecordingModal\n * @implements OnChanges\n *\n * @property {boolean} isRecordingModalVisible - Determines if the recording modal is visible.\n * @property {() => void} onClose - Callback function to close the modal.\n * @property {string} backgroundColor - Background color of the modal.\n * @property {string} position - Position of the modal on the screen.\n * @property {(options: ConfirmRecordingOptions) => void} confirmRecording - Callback function to confirm recording.\n * @property {(options: StartRecordingOptions) => void} startRecording - Callback function to start recording.\n * @property {RecordingModalParameters} parameters - Parameters for the recording modal.\n *\n * @property {IconDefinition} faTimes - FontAwesome icon for times (close).\n * @property {IconDefinition} faCheck - FontAwesome icon for check (confirm).\n * @property {IconDefinition} faPlay - FontAwesome icon for play (start).\n *\n * @method modalContainerStyle - Returns the style object for the modal container.\n * @method modalContentStyle - Returns the style object for the modal content.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property of a directive changes.\n * @method confirm - Calls the confirmRecording callback with the current parameters.\n * @method start - Calls the startRecording callback with the current parameters.\n */\n@Component({\n  selector: 'app-recording-modal',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, StandardPanelComponent, AdvancedPanelComponent],\n  templateUrl: './recording-modal.component.html',\n  styleUrls: ['./recording-modal.component.css'],\n})\nexport class RecordingModal implements OnChanges {\n  @Input() isRecordingModalVisible = false;\n  @Input() onClose!: () => void;\n  @Input() backgroundColor = '#83c0e9';\n  @Input() position = 'bottomRight';\n  @Input() confirmRecording!: (options: ConfirmRecordingOptions) => void;\n  @Input() startRecording!: (options: StartRecordingOptions) => void;\n  @Input() parameters: RecordingModalParameters = {} as RecordingModalParameters;\n\n  faTimes = faTimes;\n  faCheck = faCheck;\n  faPlay = faPlay;\n\n  get modalContainerStyle() {\n    return {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: this.isRecordingModalVisible ? 'block' : 'none',\n      zIndex: 999,\n    };\n  }\n\n  get modalContentStyle() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.8 * screenWidth;\n    if (modalWidth > 350) {\n      modalWidth = 350;\n    }\n    return {\n      position: 'fixed',\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      width: `${modalWidth}px`,\n      maxHeight: '85%',\n      overflowY: 'auto',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['isRecordingModalVisible']) {\n      if (this.parameters) {\n        this.parameters = this.parameters.getUpdatedAllParams();\n      }\n    }\n  }\n\n  confirm() {\n    this.confirmRecording({\n      parameters: { ...this.parameters },\n    });\n  }\n\n  start() {\n    this.startRecording({\n      parameters: { ...this.parameters },\n    });\n  }\n}\n","<div [ngStyle]=\"modalContainerStyle\">\r\n  <div [ngStyle]=\"modalContentStyle\">\r\n    <div style=\"display: flex; flex-direction: column;\">\r\n      <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;\">\r\n        <h2 style=\"font-size: x-large; font-weight: bold; color: black;\">\r\n          Recording Settings\r\n        </h2>\r\n        <button (click)=\"onClose()\" style=\"border: none; background: none; cursor: pointer;\">\r\n          <fa-icon [icon]=\"faTimes\" size=\"xl\" style=\"font-size: 20px; color: black;\"></fa-icon>\r\n        </button>\r\n      </div>\r\n      <hr style=\"height: 1px; background-color: black; margin: 5px 0;\" />\r\n      <div style=\"flex: 1;\">\r\n        <div style=\"overflow-y: auto; max-height: calc(100% - 120px); padding: 0;\">\r\n          <div style=\"margin: 0; padding: 0;\">\r\n            <app-standard-panel-component [parameters]=\"parameters\"></app-standard-panel-component>\r\n            <app-advanced-panel-component [parameters]=\"parameters\"></app-advanced-panel-component>\r\n          </div>\r\n        </div>\r\n        <div style=\"height: 1px; background-color: white; \"></div>\r\n        <div style=\"display: flex; justify-content: space-between; margin-top: 20px;\">\r\n          <button\r\n            (click)=\"confirm()\"\r\n            style=\"flex: 1; padding: 5px; border-radius: 5px; justify-content: center; align-items: center; margin: 0 10px; background: #4CAF50; cursor: pointer;\">\r\n            <span style=\"color: black; font-size: 14px;\">Confirm</span>\r\n          </button>\r\n          <button *ngIf=\"!parameters.recordPaused\"\r\n            (click)=\"start()\"\r\n            style=\"flex: 1; padding: 5px; border-radius: 5px; justify-content: center; align-items: center; margin: 0 10px; background: #f44336; cursor: pointer;\">\r\n            <span style=\"color: black; font-size: 14px;\">Start <fa-icon [icon]=\"faPlay\"></fa-icon></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  faMicrophone,\n  faDesktop,\n  faVideo,\n  faComments,\n  faCheck,\n  faTimes,\n  IconDefinition,\n} from '@fortawesome/free-solid-svg-icons';\nimport { RespondToRequestsType, RespondToRequestsOptions, Request } from '../../../@types/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface RenderRequestComponentOptions {\n  request: Request;\n  onRequestItemPress: RespondToRequestsType;\n  requestList: Request[];\n  updateRequestList: (newRequestList: Request[]) => void;\n  roomName: string;\n  socket: Socket;\n}\n\nexport type RenderRequestComponentType = (options: RenderRequestComponentOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-render-request-component',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: './render-request-component.component.html',\n  styleUrls: ['./render-request-component.component.css'],\n})\nexport class RenderRequestComponent {\n  @Input() request: Request = {} as Request;\n  @Input() requestList: Request[] = [];\n  @Input() roomName!: string;\n  @Input() socket: Socket = {} as Socket;\n  @Input() onRequestItemPress!: (options: RespondToRequestsOptions) => void;\n  @Input() updateRequestList!: (newRequestList: Request[]) => void;\n\n  faMicrophone = faMicrophone;\n  faDesktop = faDesktop;\n  faVideo = faVideo;\n  faComments = faComments;\n  faCheck = faCheck;\n  faTimes = faTimes;\n\n  keyMap: { [key: string]: IconDefinition } = {\n    'fa-microphone': this.faMicrophone,\n    'fa-desktop': this.faDesktop,\n    'fa-video': this.faVideo,\n    'fa-comments': this.faComments,\n  };\n\n  getIcon(iconName: string): IconDefinition {\n    return this.keyMap[iconName];\n  }\n\n  handleRequestAction = (action: string) => {\n    this.onRequestItemPress({\n      request: this.request,\n      updateRequestList: this.updateRequestList,\n      requestList: this.requestList,\n      action: action,\n      roomName: this.roomName,\n      socket: this.socket,\n    });\n  };\n}\n","<div class=\"request-container\" *ngIf=\"request\">\r\n  <div class=\"request-name\">{{ request.name }}</div>\r\n  <div class=\"request-icon\">\r\n    <fa-icon [icon]=\"getIcon(request.icon)\" size=\"lg\" color=\"black\"></fa-icon>\r\n  </div>\r\n  <div class=\"request-action accept\">\r\n    <button (click)=\"handleRequestAction('accepted')\">\r\n      <fa-icon [icon]=\"faCheck\" size=\"lg\" style=\"color: green;\"></fa-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"request-action reject\">\r\n    <button (click)=\"handleRequestAction('rejected')\">\r\n      <fa-icon [icon]=\"faTimes\" size=\"lg\" style=\"color: red;\"></fa-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { Request, RequestResponse } from '../../@types/types';\n\nexport interface RespondToRequestsOptions {\n  socket: Socket;\n  request: Request;\n  updateRequestList: (newRequestList: Request[]) => void;\n  requestList: Request[];\n  action: string;\n  roomName: string;\n}\n\n// Export the type definition for the function\nexport type RespondToRequestsType = (options: RespondToRequestsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RespondToRequests {\n  /**\n   * Responds to incoming requests by updating the request list and emitting a response to the server.\n   *\n   * @param {Object} options - The options for responding to requests.\n   * @param {Socket} options.socket - The socket instance used to emit the response.\n   * @param {Request} options.request - The request object containing details of the request.\n   * @param {Function} options.updateRequestList - The function to update the request list.\n   * @param {Request[]} options.requestList - The current list of requests.\n   * @param {string} options.action - The action to be taken on the request.\n   * @param {string} options.roomName - The name of the room to which the response should be emitted.\n   *\n   * @returns {Promise<void>} A promise that resolves when the response has been emitted.\n   */\n\n  async respondToRequests({\n    socket,\n    request,\n    updateRequestList,\n    requestList,\n    action,\n    roomName,\n  }: RespondToRequestsOptions): Promise<void> {\n    // Filter out the request that is being responded to\n    let newRequestList = requestList.filter((request_: any) => {\n      return !(\n        request_.id === request.id &&\n        request_.icon === request.icon &&\n        request_.name === request.name\n      );\n    });\n\n    // Update the request list\n    updateRequestList(newRequestList);\n\n    // Prepare the request response object\n    let requestResponse: RequestResponse = {\n      id: request.id,\n      name: request.name,\n      type: request.icon,\n      action: action,\n    };\n\n    // Emit the response via the socket\n    socket.emit('updateUserofRequestStatus', { requestResponse, roomName });\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  RenderRequestComponent,\n  RenderRequestComponentOptions,\n} from '../render-request-component/render-request-component.component';\nimport {\n  RespondToRequests,\n  RespondToRequestsType,\n} from '../../../methods/requests-methods/respond-to-requests.service';\nimport { Socket } from 'socket.io-client';\nimport { Request } from '../../../@types/types';\n\nexport interface RequestsModalParameters {\n  getUpdatedAllParams: () => { filteredRequestList: Request[] };\n  [key: string]: any;\n}\n\nexport interface RequestsModalOptions {\n  isRequestsModalVisible: boolean;\n  requestCounter: number;\n  requestList: Request[];\n  roomName: string;\n  socket: Socket;\n  backgroundColor: string;\n  position: string;\n  parameters: RequestsModalParameters;\n  onRequestClose: () => void;\n  onRequestFilterChange: (filter: string) => void;\n  onRequestItemPress?: RespondToRequestsType;\n  updateRequestList: (newRequestList: any[]) => void;\n}\n\nexport type RequestsModalType = (options: RenderRequestComponentOptions) => HTMLElement;\n\n/**\n * @component RequestsModal\n * @description A modal component to display and manage requests.\n *\n * @selector app-requests-modal\n * @standalone true\n * @imports [CommonModule, FontAwesomeModule, RenderRequestComponent]\n * @templateUrl ./requests-modal.component.html\n * @styleUrls ./requests-modal.component.css\n *\n * @property {boolean} isRequestsModalVisible - Determines if the requests modal is visible.\n * @property {number} requestCounter - Counter for the number of requests.\n * @property {Request[]} requestList - List of requests.\n * @property {string} roomName - Name of the room.\n * @property {Socket} socket - Socket instance for communication.\n * @property {string} backgroundColor - Background color of the modal.\n * @property {string} position - Position of the modal.\n * @property {any} parameters - Additional parameters for the modal.\n * @property {Function} onRequestClose - Callback function when the modal is closed.\n * @property {Function} onRequestFilterChange - Callback function when the request filter changes.\n * @property {Function} onRequestItemPress - Callback function when a request item is pressed.\n * @property {Function} updateRequestList - Function to update the request list.\n *\n * @property {IconDefinition} faTimes - FontAwesome icon for closing the modal.\n * @property {any[]} requestList_s - Filtered list of requests.\n * @property {number} requestCounter_s - Counter for the filtered list of requests.\n * @property {boolean} reRender - Flag to trigger re-rendering.\n *\n * @constructor\n * @param {RespondToRequests} respondToRequestsService - Service to handle request responses.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes.\n * @param {SimpleChanges} changes - Object of current and previous property values.\n *\n * @method updateRequests - Updates the request list and counter based on the current parameters.\n * @method handleModalClose - Handles the modal close action.\n * @method handleFilterChange - Handles the filter change event.\n * @param {Event} event - The filter change event.\n */\n@Component({\n  selector: 'app-requests-modal',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, RenderRequestComponent],\n  templateUrl: './requests-modal.component.html',\n  styleUrls: ['./requests-modal.component.css'],\n})\nexport class RequestsModal implements OnInit, OnChanges {\n  @Input() isRequestsModalVisible = false;\n  @Input() requestCounter = 0;\n  @Input() requestList: Request[] = [];\n  @Input() roomName!: string;\n  @Input() socket: Socket = {} as Socket;\n  @Input() backgroundColor = '#83c0e9';\n  @Input() position = 'topRight';\n  @Input() parameters: any;\n  @Input() onRequestClose!: () => void;\n  @Input() onRequestFilterChange!: (filter: string) => void;\n  @Input() onRequestItemPress!: (params: any) => void;\n  @Input() updateRequestList!: (newRequestList: any[]) => void;\n\n  faTimes = faTimes;\n  requestList_s: any[] = [];\n  requestCounter_s = 0;\n  reRender = false;\n\n  constructor(private respondToRequestsService: RespondToRequests) {}\n\n  ngOnInit() {\n    if (!this.onRequestItemPress) {\n      this.onRequestItemPress = (params: any) =>\n        this.respondToRequestsService.respondToRequests(params);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['requestList'] || changes['reRender'] || changes['requestCounter']) {\n      this.updateRequests();\n    }\n\n    if (changes['isRequestsModalVisible'] && this.isRequestsModalVisible) {\n      this.parameters = this.parameters.getUpdatedAllParams();\n      this.updateRequests();\n    }\n  }\n\n  updateRequests() {\n    this.parameters = this.parameters.getUpdatedAllParams();\n    this.requestList_s = this.parameters.filteredRequestList || [];\n    this.requestCounter_s = this.parameters.filteredRequestList.length;\n  }\n\n  handleModalClose() {\n    this.onRequestClose();\n  }\n\n  handleFilterChange(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.onRequestFilterChange(input.value);\n    this.parameters = this.parameters.getUpdatedAllParams();\n    this.reRender = !this.reRender;\n  }\n}\n","<div *ngIf=\"isRequestsModalVisible\" class=\"modal-container\" [ngStyle]=\"{'background-color': 'rgba(0, 0, 0, 0.5)'}\">\r\n  <div class=\"modal-content\" [ngStyle]=\"{'background-color': backgroundColor, 'top': position.includes('top') ? '10px' : 'auto', 'bottom': position.includes('bottom') ? '10px' : 'auto', 'left': position.includes('Left') ? '10px' : 'auto', 'right': position.includes('Right') ? '10px' : 'auto'}\">\r\n    <div class=\"modal-header\">\r\n      <div>\r\n        Requests <span class=\"badge text-dark\">{{ requestCounter_s }}</span>\r\n      </div>\r\n      <div class=\"close-icon\" (click)=\"handleModalClose()\">\r\n        <fa-icon [icon]=\"faTimes\" size=\"lg\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <hr class=\"separator\" />\r\n    <div class=\"modal-body\">\r\n      <input type=\"text\" class=\"filter-input\" placeholder=\"Search ...\" (input)=\"handleFilterChange($event)\">\r\n      <div class=\"request-list\">\r\n        <ng-container *ngFor=\"let requestItem of requestList_s; let i = index\">\r\n          <app-render-request-component\r\n            [request]=\"requestItem\"\r\n            [requestList]=\"requestList\"\r\n            [roomName]=\"roomName\"\r\n            [socket]=\"socket\"\r\n            [onRequestItemPress]=\"onRequestItemPress\"\r\n            [updateRequestList]=\"updateRequestList\">\r\n          </app-render-request-component>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { WaitingRoomParticipant } from '../../@types/types';\n\nexport interface RespondToWaitingOptions {\n  participantId: string;\n  participantName: string;\n  updateWaitingList: (waitingList: WaitingRoomParticipant[]) => void;\n  waitingList: WaitingRoomParticipant[];\n  type: string | boolean;\n  roomName: string;\n  socket: Socket;\n}\n\n// Export the type definition for the function\nexport type RespondToWaitingType = (options: RespondToWaitingOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RespondToWaiting {\n  /**\n   * Responds to a participant waiting to join a room by either allowing or denying their entry.\n   *\n   * @param {Object} options - The options for responding to the waiting participant.\n   * @param {string} options.participantId - The ID of the participant.\n   * @param {string} options.participantName - The name of the participant.\n   * @param {Function} options.updateWaitingList - The function to update the waiting list.\n   * @param {Array} options.waitingList - The current waiting list of participants.\n   * @param {boolean | string} options.type - The type of response, either \"true\" or \"false\".\n   * @param {string} options.roomName - The name of the room.\n   * @param {Object} options.socket - The socket instance to emit events.\n   * @returns {Promise<void>} - A promise that resolves when the response has been processed.\n   */\n  async respondToWaiting({\n    participantId,\n    participantName,\n    updateWaitingList,\n    waitingList,\n    type,\n    roomName,\n    socket,\n  }: RespondToWaitingOptions): Promise<void> {\n    // Filter out the participant from the waiting list\n    const newWaitingList = waitingList.filter((item) => item.name !== participantName);\n\n    // Update the waiting list\n    updateWaitingList(newWaitingList);\n\n    const responseType = type === 'true' || type === true ? 'true' : 'false';\n\n    // Emit an event to allow or deny the participant based on the response type\n    await socket.emit('allowUserIn', {\n      participantId,\n      participantName,\n      type: responseType,\n      roomName,\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Component, Input, OnChanges, SimpleChanges, OnInit } from '@angular/core';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\nimport { WaitingRoomParticipant } from '../../@types/types';\nimport {\n  RespondToWaiting,\n  RespondToWaitingOptions,\n  RespondToWaitingType,\n} from '../../methods/waiting-methods/respond-to-waiting.service';\nimport { Socket } from 'socket.io-client';\n\nexport interface WaitingRoomModalParameters {\n  filteredWaitingRoomList: WaitingRoomParticipant[];\n\n  // mediasfu functions\n  getUpdatedAllParams: () => WaitingRoomModalParameters;\n  [key: string]: any;\n}\n\nexport interface WaitingRoomModalOptions {\n  isWaitingModalVisible: boolean;\n  onWaitingRoomClose: () => void;\n  waitingRoomCounter: number;\n  onWaitingRoomFilterChange: (filter: string) => void;\n  waitingRoomList: WaitingRoomParticipant[];\n  updateWaitingList: (updatedList: WaitingRoomParticipant[]) => void;\n  roomName: string;\n  socket: Socket;\n  position?: string;\n  backgroundColor?: string;\n  parameters: WaitingRoomModalParameters;\n\n  // mediasfu functions\n  onWaitingRoomItemPress?: RespondToWaitingType;\n}\n\nexport type WaitingRoomModalType = (options: WaitingRoomModalOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-waiting-room-modal',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, FormsModule],\n  templateUrl: './waiting-room-modal.component.html',\n  styleUrls: ['./waiting-room-modal.component.css'],\n})\nexport class WaitingRoomModal implements OnChanges, OnInit {\n  constructor(private respondToWaitingService: RespondToWaiting) {}\n\n  @Input() isWaitingModalVisible = false;\n  @Input() waitingRoomCounter = 0;\n  @Input() waitingRoomList: WaitingRoomParticipant[] = [];\n  @Input() roomName = '';\n  @Input() socket: Socket = {} as Socket;\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#83c0e9';\n  @Input() parameters: WaitingRoomModalParameters = {} as WaitingRoomModalParameters;\n  @Input() onWaitingRoomClose: () => void = () => {};\n  @Input() onWaitingRoomFilterChange: (value: string) => void = () => {};\n  @Input() updateWaitingList: (data: WaitingRoomParticipant[]) => void = () => {};\n  @Input() onWaitingRoomItemPress!: (data: RespondToWaitingOptions) => void;\n\n  faTimes = faTimes;\n  faCheck = faCheck;\n  waitingRoomList_s: WaitingRoomParticipant[] = [];\n  waitingRoomCounter_s = 0;\n  reRender = false;\n\n  ngOnInit() {\n    if (!this.onWaitingRoomItemPress) {\n      this.onWaitingRoomItemPress = (data: any) =>\n        this.respondToWaitingService.respondToWaiting(data);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['waitingRoomList'] || changes['reRender']) {\n      this.updateParameters();\n    }\n  }\n\n  updateParameters() {\n    let { getUpdatedAllParams } = this.parameters;\n    this.parameters = getUpdatedAllParams();\n\n    this.waitingRoomList_s = this.parameters.filteredWaitingRoomList;\n    this.waitingRoomCounter_s = this.parameters.filteredWaitingRoomList.length;\n  }\n\n  handleModalClose() {\n    this.onWaitingRoomClose();\n  }\n\n  handleFilterChange(event: Event) {\n    const inputElement = event.target as HTMLInputElement;\n    const value = inputElement?.value || '';\n    this.onWaitingRoomFilterChange(value);\n    this.reRender = !this.reRender;\n  }\n\n  handleItemPress(participant: WaitingRoomParticipant, type: boolean) {\n    this.onWaitingRoomItemPress({\n      participantId: participant.id,\n      participantName: participant.name,\n      updateWaitingList: this.updateWaitingList,\n      waitingList: this.waitingRoomList,\n      roomName: this.roomName,\n      type: type, // true for accepted, false for rejected\n      socket: this.socket,\n    });\n  }\n\n  get modalContainerStyle() {\n    return {\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: this.isWaitingModalVisible ? 'block' : 'none',\n      zIndex: '999',\n    };\n  }\n\n  get modalContentStyle() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.8 * screenWidth;\n    if (modalWidth > 350) {\n      modalWidth = 350;\n    }\n    return {\n      position: 'fixed',\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      width: `${modalWidth}px`,\n      maxHeight: '65%',\n      overflowY: 'auto',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n\n  get inputStyle() {\n    return {\n      width: '90%',\n      padding: '10px',\n      borderRadius: '5px',\n      border: '1px solid #000',\n      fontSize: '16px',\n      marginBottom: '10px',\n    };\n  }\n}\n","<div *ngIf=\"isWaitingModalVisible\" [ngStyle]=\"modalContainerStyle\">\r\n  <div [ngStyle]=\"modalContentStyle\">\r\n    <div class=\"modal-header\">\r\n      <div class=\"modal-title\">\r\n        Waiting <span class=\"badge\">{{ waitingRoomCounter_s }}</span>\r\n      </div>\r\n      <div (click)=\"handleModalClose()\" class=\"btn-close-waitings\">\r\n        <fa-icon [icon]=\"faTimes\" class=\"icon\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <hr class=\"hr\" />\r\n    <div class=\"modal-body\">\r\n      <div class=\"form-group\">\r\n        <input\r\n          class=\"form-control\"\r\n          [ngStyle]=\"inputStyle\"\r\n          placeholder=\"Search ...\"\r\n          (input)=\"handleFilterChange($event)\"\r\n        />\r\n      </div>\r\n      <div class=\"waiting-list\">\r\n        <div\r\n          *ngFor=\"let participant of waitingRoomList_s\"\r\n          class=\"waiting-item\"\r\n        >\r\n          <div class=\"col7\">{{ participant.name }}</div>\r\n          <div class=\"col2\">\r\n            <button (click)=\"handleItemPress(participant, true)\">\r\n              <fa-icon [icon]=\"faCheck\" size=\"lg\" color=\"green\"></fa-icon>\r\n            </button>\r\n          </div>\r\n          <div class=\"col2\">\r\n            <button (click)=\"handleItemPress(participant, false)\">\r\n              <fa-icon [icon]=\"faTimes\" size=\"lg\" color=\"red\"></fa-icon>\r\n            </button>\r\n          </div>\r\n          <div class=\"col1\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { OnScreenChangesParameters, OnScreenChangesType, ShowAlert } from '../../@types/types';\n\nexport interface ModifyDisplaySettingsParameters extends OnScreenChangesParameters {\n  showAlert?: ShowAlert;\n  meetingDisplayType: string;\n  autoWave: boolean;\n  forceFullDisplay: boolean;\n  meetingVideoOptimized: boolean;\n  islevel: string;\n  recordStarted: boolean;\n  recordResumed: boolean;\n  recordStopped: boolean;\n  recordPaused: boolean;\n  recordingDisplayType: 'video' | 'media' | 'all';\n  recordingVideoOptimized: boolean;\n  prevForceFullDisplay: boolean;\n  prevMeetingDisplayType: string;\n  updateMeetingDisplayType: (displayType: string) => void;\n  updateAutoWave: (autoWave: boolean) => void;\n  updateForceFullDisplay: (forceFullDisplay: boolean) => void;\n  updateMeetingVideoOptimized: (optimized: boolean) => void;\n  updatePrevForceFullDisplay: (forceFullDisplay: boolean) => void;\n  updatePrevMeetingDisplayType: (displayType: string) => void;\n  updateIsDisplaySettingsModalVisible: (isVisible: boolean) => void;\n  updateFirstAll: (firstAll: boolean) => void;\n  updateUpdateMainWindow: (update: boolean) => void;\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n\n  // mediasfu functions\n  onScreenChanges: OnScreenChangesType;\n\n  [key: string]: any;\n}\n\nexport interface ModifyDisplaySettingsOptions {\n  parameters: ModifyDisplaySettingsParameters;\n}\n\n// Export the type definition for the function\nexport type ModifyDisplaySettingsType = (options: ModifyDisplaySettingsOptions) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModifyDisplaySettings {\n  /**\n   * Modifies the display settings based on the provided parameters.\n   *\n   * @param {ModifyDisplaySettingsOptions} options - The options containing the parameters to modify the display settings.\n   * @param {Object} options.parameters - The parameters for modifying the display settings.\n   * @param {Function} options.parameters.showAlert - Function to show alert messages.\n   * @param {string} options.parameters.meetingDisplayType - The current meeting display type.\n   * @param {boolean} options.parameters.autoWave - Flag indicating if auto wave is enabled.\n   * @param {boolean} options.parameters.forceFullDisplay - Flag indicating if full display is forced.\n   * @param {boolean} options.parameters.meetingVideoOptimized - Flag indicating if the meeting video is optimized.\n   * @param {string} options.parameters.islevel - The current level of the meeting.\n   * @param {boolean} options.parameters.recordStarted - Flag indicating if recording has started.\n   * @param {boolean} options.parameters.recordResumed - Flag indicating if recording has resumed.\n   * @param {boolean} options.parameters.recordStopped - Flag indicating if recording has stopped.\n   * @param {boolean} options.parameters.recordPaused - Flag indicating if recording is paused.\n   * @param {string} options.parameters.recordingDisplayType - The current recording display type.\n   * @param {boolean} options.parameters.recordingVideoOptimized - Flag indicating if the recording video is optimized.\n   * @param {string} options.parameters.prevForceFullDisplay - The previous force full display value.\n   * @param {string} options.parameters.prevMeetingDisplayType - The previous meeting display type.\n   * @param {Function} options.parameters.updateMeetingDisplayType - Function to update the meeting display type.\n   * @param {Function} options.parameters.updateAutoWave - Function to update the auto wave setting.\n   * @param {Function} options.parameters.updateForceFullDisplay - Function to update the force full display setting.\n   * @param {Function} options.parameters.updateMeetingVideoOptimized - Function to update the meeting video optimization setting.\n   * @param {Function} options.parameters.updatePrevForceFullDisplay - Function to update the previous force full display setting.\n   * @param {Function} options.parameters.updatePrevMeetingDisplayType - Function to update the previous meeting display type.\n   * @param {Function} options.parameters.updateIsDisplaySettingsModalVisible - Function to update the visibility of the display settings modal.\n   * @param {Function} options.parameters.updateFirstAll - Function to update the first all setting.\n   * @param {Function} options.parameters.updateUpdateMainWindow - Function to update the main window.\n   * @param {boolean} options.parameters.breakOutRoomStarted - Flag indicating if a breakout room has started.\n   * @param {boolean} options.parameters.breakOutRoomEnded - Flag indicating if a breakout room has ended.\n   * @param {Function} options.parameters.onScreenChanges - Function to handle screen changes.\n   *\n   * @returns {Promise<void>} A promise that resolves when the display settings have been modified.\n   */\n\n  modifyDisplaySettings = async ({ parameters }: ModifyDisplaySettingsOptions): Promise<void> => {\n    // Destructure the parameters\n    let {\n      showAlert,\n      meetingDisplayType,\n      autoWave,\n      forceFullDisplay,\n      meetingVideoOptimized,\n      islevel,\n      recordStarted,\n      recordResumed,\n      recordStopped,\n      recordPaused,\n      recordingDisplayType,\n      recordingVideoOptimized,\n      prevForceFullDisplay,\n      prevMeetingDisplayType,\n      updateMeetingDisplayType,\n      updateAutoWave,\n      updateForceFullDisplay,\n      updateMeetingVideoOptimized,\n      updatePrevForceFullDisplay,\n      updatePrevMeetingDisplayType,\n      updateIsDisplaySettingsModalVisible,\n      updateFirstAll,\n      updateUpdateMainWindow,\n      breakOutRoomStarted,\n      breakOutRoomEnded,\n      onScreenChanges,\n    } = parameters;\n\n    // Update previous states\n    updateAutoWave(autoWave);\n    updateForceFullDisplay(forceFullDisplay);\n\n    if (islevel === '2' && (recordStarted || recordResumed) && !recordStopped && !recordPaused) {\n      if (\n        recordingDisplayType === 'video' &&\n        meetingDisplayType === 'video' &&\n        meetingVideoOptimized &&\n        !recordingVideoOptimized\n      ) {\n        showAlert?.({\n          message:\n            'Meeting display type can be either video, media, or all when recording display type is non-optimized video.',\n          type: 'danger',\n          duration: 3000,\n        });\n        // Reset to previous values or handle as needed\n        meetingDisplayType = recordingDisplayType;\n        updateMeetingDisplayType(meetingDisplayType);\n        meetingVideoOptimized = recordingVideoOptimized;\n        updateMeetingVideoOptimized(meetingVideoOptimized);\n        return;\n      } else if (recordingDisplayType === 'media' && meetingDisplayType === 'video') {\n        showAlert?.({\n          message:\n            'Meeting display type can be either media or all when recording display type is media.',\n          type: 'danger',\n          duration: 3000,\n        });\n\n        // Reset to previous values or handle as needed\n        meetingDisplayType = recordingDisplayType;\n        updateMeetingDisplayType(meetingDisplayType);\n        return;\n      } else if (\n        recordingDisplayType === 'all' &&\n        (meetingDisplayType === 'video' || meetingDisplayType === 'media')\n      ) {\n        showAlert?.({\n          message: 'Meeting display type can be only all when recording display type is all.',\n          type: 'danger',\n          duration: 3000,\n        });\n        // Reset to previous values or handle as needed\n        meetingDisplayType = recordingDisplayType;\n        updateMeetingDisplayType(meetingDisplayType);\n        return;\n      }\n    }\n\n    updateMeetingDisplayType(meetingDisplayType);\n    updateMeetingVideoOptimized(meetingVideoOptimized);\n\n    // Close the modal or perform additional actions\n    updateIsDisplaySettingsModalVisible(false);\n\n    if (\n      prevMeetingDisplayType !== meetingDisplayType ||\n      prevForceFullDisplay !== forceFullDisplay\n    ) {\n      if (breakOutRoomStarted && !breakOutRoomEnded && meetingDisplayType !== 'all') {\n        showAlert?.({\n          message: 'Breakout room is active. Display type can only be all.',\n          type: 'danger',\n        });\n        meetingDisplayType = prevMeetingDisplayType;\n        updateMeetingDisplayType(prevMeetingDisplayType);\n        return;\n      }\n\n      updateFirstAll(meetingDisplayType !== 'all' ? true : false);\n      updateUpdateMainWindow(true);\n      await onScreenChanges({\n        changed: true,\n        parameters: { ...parameters, meetingDisplayType, forceFullDisplay },\n      });\n      updatePrevForceFullDisplay(forceFullDisplay);\n      updatePrevMeetingDisplayType(meetingDisplayType);\n    }\n  };\n}\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  ModifyDisplaySettings,\n  ModifyDisplaySettingsOptions,\n  ModifyDisplaySettingsParameters,\n} from '../../methods/display-settings-methods/modify-display-settings.service';\n\nexport interface DisplaySettingsModalParameters extends ModifyDisplaySettingsParameters {\n  meetingDisplayType: string;\n  autoWave: boolean;\n  forceFullDisplay: boolean;\n  meetingVideoOptimized: boolean;\n}\n\nexport interface DisplaySettingsModalOptions {\n  isDisplaySettingsModalVisible: boolean;\n  onDisplaySettingsClose: () => void;\n  onModifyDisplaySettings: (options: ModifyDisplaySettingsOptions) => void;\n  parameters: DisplaySettingsModalParameters;\n  position: string;\n  backgroundColor: string;\n}\n\nexport type DisplaySettingsModalType = (options: DisplaySettingsModalOptions) => HTMLElement;\n\n/**\n * Component for displaying and modifying display settings in a modal.\n *\n * @selector app-display-settings-modal\n * @standalone true\n * @imports [CommonModule, FontAwesomeModule, FormsModule]\n * @templateUrl ./display-settings-modal.component.html\n * @styleUrls ['./display-settings-modal.component.css']\n *\n * @property {boolean} isDisplaySettingsModalVisible - Determines if the display settings modal is visible.\n * @property {() => void} onDisplaySettingsClose - Callback function to handle closing the display settings modal.\n * @property {(params: any) => void} onModifyDisplaySettings - Callback function to handle modifying display settings.\n * @property {DisplaySettingsModalParameters} parameters - Parameters for the display settings modal.\n * @property {string} position - Position of the modal on the screen. Default is 'topRight'.\n * @property {string} backgroundColor - Background color of the modal. Default is '#83c0e9'.\n *\n * @property {IconDefinition} faTimes - FontAwesome icon for the close button.\n *\n * @property {string} meetingDisplayTypeState - State for the meeting display type.\n * @property {boolean} autoWaveState - State for the auto wave setting. Default is false.\n * @property {boolean} forceFullDisplayState - State for the force full display setting. Default is false.\n * @property {boolean} meetingVideoOptimizedState - State for the meeting video optimized setting. Default is false.\n *\n * @constructor\n * @param {ModifyDisplaySettings} modifyDisplaySettingsService - Service to modify display settings.\n *\n * @method ngOnInit - Initializes the component and sets the initial state based on the input parameters.\n * @method handleSaveSettings - Handles saving the modified display settings.\n */\n@Component({\n  selector: 'app-display-settings-modal',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, FormsModule],\n  templateUrl: './display-settings-modal.component.html',\n  styleUrls: ['./display-settings-modal.component.css'],\n})\nexport class DisplaySettingsModal {\n  @Input() isDisplaySettingsModalVisible = false;\n  @Input() onDisplaySettingsClose!: () => void;\n  @Input() onModifyDisplaySettings!: (params: any) => void;\n  @Input() parameters!: DisplaySettingsModalParameters;\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#83c0e9';\n\n  faTimes = faTimes;\n\n  meetingDisplayTypeState!: string;\n  autoWaveState = false;\n  forceFullDisplayState = false;\n  meetingVideoOptimizedState = false;\n\n  constructor(private modifyDisplaySettingsService: ModifyDisplaySettings) {}\n\n  ngOnInit(): void {\n    this.meetingDisplayTypeState = this.parameters.meetingDisplayType;\n    this.autoWaveState = this.parameters.autoWave;\n    this.forceFullDisplayState = this.parameters.forceFullDisplay;\n    this.meetingVideoOptimizedState = this.parameters.meetingVideoOptimized;\n\n    if (!this.onModifyDisplaySettings) {\n      this.onModifyDisplaySettings = this.modifyDisplaySettingsService.modifyDisplaySettings.bind(\n        this.modifyDisplaySettingsService,\n      );\n    }\n  }\n\n  handleSaveSettings = async () => {\n    await this.onModifyDisplaySettings({\n      parameters: {\n        ...this.parameters,\n        meetingDisplayType: this.meetingDisplayTypeState,\n        autoWave: this.autoWaveState,\n        forceFullDisplay: this.forceFullDisplayState,\n        meetingVideoOptimized: this.meetingVideoOptimizedState,\n      },\n    });\n  };\n}\n","<div *ngIf=\"isDisplaySettingsModalVisible\" class=\"modal-container\">\r\n  <div class=\"modal-content\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\r\n    <div class=\"modal-header\">\r\n      <h2>Display Settings</h2>\r\n      <div class=\"btn-close-media-settings\" (click)=\"onDisplaySettingsClose()\">\r\n        <fa-icon [icon]=\"faTimes\" size=\"xl\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <hr class=\"modal-divider\" />\r\n    <div class=\"modal-body\">\r\n      <div class=\"setting-group\">\r\n        <label>Display Option:</label>\r\n        <select [(ngModel)]=\"meetingDisplayTypeState\" class=\"select-control\">\r\n          <option value=\"video\">Video Participants Only</option>\r\n          <option value=\"media\">Media Participants Only</option>\r\n          <option value=\"all\">Show All Participants</option>\r\n        </select>\r\n      </div>\r\n      <hr class=\"modal-divider\" />\r\n      <div class=\"setting-group\">\r\n        <div class=\"setting-toggle\">\r\n          <label>Display Audiographs</label>\r\n          <button (click)=\"autoWaveState = !autoWaveState\" [ngClass]=\"{ 'active': autoWaveState }\">\r\n            <span class=\"toggle-icon\">{{ autoWaveState ? '&#10003;' : '&#10007;' }}</span>\r\n          </button>\r\n        </div>\r\n        <hr class=\"modal-divider\" />\r\n        <div class=\"setting-toggle\">\r\n          <label>Force Full Display</label>\r\n          <button (click)=\"forceFullDisplayState = !forceFullDisplayState\" [ngClass]=\"{ 'active': forceFullDisplayState }\">\r\n            <span class=\"toggle-icon\">{{ forceFullDisplayState ? '&#10003;' : '&#10007;' }}</span>\r\n          </button>\r\n        </div>\r\n        <hr class=\"modal-divider\" />\r\n        <div class=\"setting-toggle\">\r\n          <label>Force Video Participants</label>\r\n          <button (click)=\"meetingVideoOptimizedState = !meetingVideoOptimizedState\" [ngClass]=\"{ 'active': meetingVideoOptimizedState }\">\r\n            <span class=\"toggle-icon\">{{ meetingVideoOptimizedState ? '&#10003;' : '&#10007;' }}</span>\r\n          </button>\r\n        </div>\r\n        <hr class=\"modal-divider\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button class=\"save-button\" (click)=\"handleSaveSettings()\">Save</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// modify-settings.service.ts\nimport { Socket } from 'socket.io-client';\nimport { Injectable } from '@angular/core';\nimport { ShowAlert } from '../../@types/types';\n\nexport interface ModifySettingsOptions {\n  showAlert?: ShowAlert;\n  roomName: string;\n  audioSet: string;\n  videoSet: string;\n  screenshareSet: string;\n  chatSet: string;\n  socket: Socket;\n  updateAudioSetting: (audioSet: string) => void;\n  updateVideoSetting: (videoSet: string) => void;\n  updateScreenshareSetting: (screenshareSet: string) => void;\n  updateChatSetting: (chatSet: string) => void;\n  updateIsSettingsModalVisible: (isVisible: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type ModifySettingsType = (options: ModifySettingsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModifySettings {\n  /**\n   * Modifies the settings for a given room and updates the state accordingly.\n   *\n   * @param {Object} options - The options for modifying settings.\n   * @param {Function} options.showAlert - Function to show alert messages.\n   * @param {string} options.roomName - The name of the room.\n   * @param {string} options.audioSet - The audio setting to be applied.\n   * @param {string} options.videoSet - The video setting to be applied.\n   * @param {string} options.screenshareSet - The screenshare setting to be applied.\n   * @param {string} options.chatSet - The chat setting to be applied.\n   * @param {Object} options.socket - The socket instance for emitting events.\n   * @param {Function} options.updateAudioSetting - Function to update the audio setting state.\n   * @param {Function} options.updateVideoSetting - Function to update the video setting state.\n   * @param {Function} options.updateScreenshareSetting - Function to update the screenshare setting state.\n   * @param {Function} options.updateChatSetting - Function to update the chat setting state.\n   * @param {Function} options.updateIsSettingsModalVisible - Function to update the visibility of the settings modal.\n   *\n   * @returns {Promise<void>} A promise that resolves when the settings have been modified.\n   *\n   * @throws Will show an alert if any setting is set to \"approval\" in demo mode (room name starts with \"d\").\n   */\n\n  modifySettings = async ({\n    showAlert,\n    roomName,\n    audioSet,\n    videoSet,\n    screenshareSet,\n    chatSet,\n    socket,\n    updateAudioSetting,\n    updateVideoSetting,\n    updateScreenshareSetting,\n    updateChatSetting,\n    updateIsSettingsModalVisible,\n  }: ModifySettingsOptions): Promise<void> => {\n    if (roomName.toLowerCase().startsWith('d')) {\n      // none should be approval\n      if (\n        audioSet === 'approval' ||\n        videoSet === 'approval' ||\n        screenshareSet === 'approval' ||\n        chatSet === 'approval'\n      ) {\n        showAlert?.({\n          message: 'You cannot set approval for demo mode.',\n          type: 'danger',\n          duration: 3000,\n        });\n\n        return;\n      }\n    }\n\n    // Check and update state variables based on the provided logic\n    if (audioSet) {\n      updateAudioSetting(audioSet);\n    }\n    if (videoSet) {\n      updateVideoSetting(videoSet);\n    }\n    if (screenshareSet) {\n      updateScreenshareSetting(screenshareSet);\n    }\n    if (chatSet) {\n      updateChatSetting(chatSet);\n    }\n\n    const settings = [audioSet, videoSet, screenshareSet, chatSet];\n    socket.emit('updateSettingsForRequests', { settings, roomName });\n\n    // Close modal\n    updateIsSettingsModalVisible(false);\n  };\n}\n","// event-settings-modal.component.ts\n\nimport { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  ModifySettings,\n  ModifySettingsOptions,\n} from '../../../methods/settings-methods/modify-settings.service';\nimport { Socket } from 'socket.io-client';\nimport { ShowAlert } from '../../../@types/types';\n\nexport interface EventSettingsModalOptions {\n  isEventSettingsModalVisible: boolean;\n  onEventSettingsClose: () => void;\n  onModifyEventSettings?: (options: ModifySettingsOptions) => Promise<void>;\n  position?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n  backgroundColor?: string;\n  audioSetting: string;\n  videoSetting: string;\n  screenshareSetting: string;\n  chatSetting: string;\n  updateAudioSetting: (setting: string) => void;\n  updateVideoSetting: (setting: string) => void;\n  updateScreenshareSetting: (setting: string) => void;\n  updateChatSetting: (setting: string) => void;\n  updateIsSettingsModalVisible: (isVisible: boolean) => void;\n  roomName: string;\n  socket: Socket;\n  showAlert?: ShowAlert;\n}\n\nexport type EventSettingsModalType = (options: EventSettingsModalOptions) => HTMLElement;\n\n/**\n * Component for managing event settings modal.\n *\n * @selector app-event-settings-modal\n * @standalone true\n * @imports CommonModule, FontAwesomeModule, FormsModule\n * @templateUrl ./event-settings-modal.component.html\n * @styleUrls ./event-settings-modal.component.css\n *\n * @class EventSettingsModal\n * @implements OnInit, OnChanges\n *\n * @property {boolean} isEventSettingsModalVisible - Indicates if the event settings modal is visible.\n * @property {() => void} onEventSettingsClose - Callback function to close the event settings modal.\n * @property {(options: ModifySettingsOptions) => Promise<void>} onModifyEventSettings - Callback function to modify event settings.\n * @property {string} position - Position of the modal on the screen.\n * @property {string} backgroundColor - Background color of the modal.\n * @property {string} audioSetting - Current audio setting.\n * @property {string} videoSetting - Current video setting.\n * @property {string} screenshareSetting - Current screenshare setting.\n * @property {string} chatSetting - Current chat setting.\n * @property {(setting: string) => void} updateAudioSetting - Callback function to update audio setting.\n * @property {(setting: string) => void} updateVideoSetting - Callback function to update video setting.\n * @property {(setting: string) => void} updateScreenshareSetting - Callback function to update screenshare setting.\n * @property {(setting: string) => void} updateChatSetting - Callback function to update chat setting.\n * @property {(isVisible: boolean) => void} updateIsSettingsModalVisible - Callback function to update modal visibility.\n * @property {string} roomName - Name of the room.\n * @property {Socket} socket - Socket instance for communication.\n * @property {ShowAlert} [showAlert] - Optional alert function.\n *\n * @property {string} audioState - State of the audio setting.\n * @property {string} videoState - State of the video setting.\n * @property {string} screenshareState - State of the screenshare setting.\n * @property {string} chatState - State of the chat setting.\n *\n * @property {IconDefinition} faTimes - FontAwesome icon for close button.\n *\n * @constructor\n * @param {ModifySettings} modifySettingsService - Service for modifying settings.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes.\n * @param {SimpleChanges} changes - Object of current and previous property values.\n *\n * @method updateStatesFromParameters - Updates the state variables from the input parameters.\n *\n * @method getModalContentStyle - Returns the style object for the modal content.\n * @returns {Object} Style object for the modal content.\n *\n * @method handleSaveSettings - Handles the save settings action.\n * @returns {Promise<void>} Promise that resolves when settings are saved.\n *\n * @method closeModal - Closes the modal.\n */\n@Component({\n  selector: 'app-event-settings-modal',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, FormsModule],\n  templateUrl: './event-settings-modal.component.html',\n  styleUrls: ['./event-settings-modal.component.css'],\n})\nexport class EventSettingsModal implements OnInit, OnChanges {\n  @Input() isEventSettingsModalVisible = false;\n  @Input() onEventSettingsClose!: () => void;\n  @Input()\n  onModifyEventSettings!: (options: ModifySettingsOptions) => Promise<void>;\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#83c0e9';\n  @Input() audioSetting = '';\n  @Input() videoSetting = '';\n  @Input() screenshareSetting = '';\n  @Input() chatSetting = '';\n  @Input() updateAudioSetting!: (setting: string) => void;\n  @Input() updateVideoSetting!: (setting: string) => void;\n  @Input() updateScreenshareSetting!: (setting: string) => void;\n  @Input() updateChatSetting!: (setting: string) => void;\n  @Input() updateIsSettingsModalVisible!: (isVisible: boolean) => void;\n  @Input() roomName = '';\n  @Input() socket: Socket = {} as Socket;\n  @Input() showAlert?: ShowAlert;\n\n  audioState!: string;\n  videoState!: string;\n  screenshareState!: string;\n  chatState!: string;\n\n  faTimes = faTimes;\n\n  constructor(private modifySettingsService: ModifySettings) {}\n\n  ngOnInit() {\n    if (!this.onModifyEventSettings) {\n      this.onModifyEventSettings = this.modifySettingsService.modifySettings.bind(\n        this.modifySettingsService,\n      );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['isEventSettingsModalVisible']) {\n      if (this.isEventSettingsModalVisible) {\n        this.updateStatesFromParameters();\n      }\n    }\n  }\n\n  updateStatesFromParameters() {\n    this.audioState = this.audioSetting;\n    this.videoState = this.videoSetting;\n    this.screenshareState = this.screenshareSetting;\n    this.chatState = this.chatSetting;\n  }\n\n  getModalContentStyle() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.8 * screenWidth;\n    if (modalWidth > 350) {\n      modalWidth = 350;\n    }\n\n    return {\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      width: `${modalWidth}px`,\n      maxHeight: '65%',\n      overflowY: 'auto',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n\n  async handleSaveSettings() {\n    await this.onModifyEventSettings({\n      audioSet: this.audioState,\n      videoSet: this.videoState,\n      screenshareSet: this.screenshareState,\n      chatSet: this.chatState,\n      updateAudioSetting: this.updateAudioSetting,\n      updateVideoSetting: this.updateVideoSetting,\n      updateScreenshareSetting: this.updateScreenshareSetting,\n      updateChatSetting: this.updateChatSetting,\n      updateIsSettingsModalVisible: this.updateIsSettingsModalVisible,\n      roomName: this.roomName,\n      socket: this.socket,\n      showAlert: this.showAlert,\n    });\n  }\n\n  closeModal() {\n    this.onEventSettingsClose();\n  }\n}\n","<!-- event-settings-modal.component.html -->\r\n\r\n<div *ngIf=\"isEventSettingsModalVisible\" class=\"modal-container\">\r\n  <div class=\"modal-content\" [ngStyle]=\"getModalContentStyle()\">\r\n    <div class=\"modal-header\">\r\n      <div class=\"modal-title\">Event Settings</div>\r\n      <div (click)=\"closeModal()\" class=\"icon-close\">\r\n        <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <hr class=\"hr\" />\r\n    <div class=\"modal-body\">\r\n      <div class=\"form-group\">\r\n        <label class=\"label\">User audio:</label>\r\n        <select class=\"picker-select\" [(ngModel)]=\"audioState\">\r\n          <option value=\"disallow\">Disallow</option>\r\n          <option value=\"allow\">Allow</option>\r\n          <option value=\"approval\">Upon approval</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"sep\"></div>\r\n      <div class=\"form-group\">\r\n        <label class=\"label\">User video:</label>\r\n        <select class=\"picker-select\" [(ngModel)]=\"videoState\">\r\n          <option value=\"disallow\">Disallow</option>\r\n          <option value=\"allow\">Allow</option>\r\n          <option value=\"approval\">Upon approval</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"sep\"></div>\r\n      <div class=\"form-group\">\r\n        <label class=\"label\">User screenshare:</label>\r\n        <select class=\"picker-select\" [(ngModel)]=\"screenshareState\">\r\n          <option value=\"disallow\">Disallow</option>\r\n          <option value=\"allow\">Allow</option>\r\n          <option value=\"approval\">Upon approval</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"sep\"></div>\r\n      <div class=\"form-group\">\r\n        <label class=\"label\">User chat:</label>\r\n        <select class=\"picker-select\" [(ngModel)]=\"chatState\">\r\n          <option value=\"disallow\">Disallow</option>\r\n          <option value=\"allow\">Allow</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-apply-settings\" (click)=\"handleSaveSettings()\">Save</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This method is used to modify the co-host settings in the chat room.\n\nimport { Injectable } from '@angular/core';\nimport { ShowAlert, CoHostResponsibility } from '../../@types/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface ModifyCoHostSettingsOptions {\n  roomName: string;\n  showAlert?: ShowAlert;\n  selectedParticipant: string;\n  coHost: string;\n  coHostResponsibility: CoHostResponsibility[];\n  updateIsCoHostModalVisible: (isVisible: boolean) => void;\n  updateCoHostResponsibility: (coHostResponsibility: CoHostResponsibility[]) => void;\n  updateCoHost: (coHost: string) => void;\n  socket: Socket;\n}\n\n// Export the type definition for the function\nexport type ModifyCoHostSettingsType = (options: ModifyCoHostSettingsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModifyCoHostSettings {\n  /**\n   * Modifies the co-host settings for a given room.\n   *\n   * @param {Object} options - The options for modifying co-host settings.\n   * @param {string} options.roomName - The name of the room.\n   * @param {Function} options.showAlert - Function to show an alert message.\n   * @param {string} options.selectedParticipant - The participant selected to be co-host.\n   * @param {string} options.coHost - The current co-host.\n   * @param {string} options.coHostResponsibility - The responsibility assigned to the co-host.\n   * @param {Function} options.updateIsCoHostModalVisible - Function to update the visibility of the co-host modal.\n   * @param {Function} options.updateCoHostResponsibility - Function to update the co-host responsibility.\n   * @param {Function} options.updateCoHost - Function to update the co-host.\n   * @param {Object} options.socket - The socket instance for emitting events.\n   * @returns {Promise<void>} A promise that resolves when the co-host settings have been modified.\n   *\n   * @remarks\n   * - If the room is in demo mode (room name starts with \"d\"), co-host cannot be added and an alert is shown.\n   * - If a valid participant is selected, they are set as the new co-host.\n   * - The co-host responsibility is updated.\n   * - A socket event is emitted to update the co-host information.\n   * - The co-host modal is closed after updating the settings.\n   */\n  async modifyCoHostSettings({\n    roomName,\n    showAlert,\n    selectedParticipant,\n    coHost,\n    coHostResponsibility,\n    updateIsCoHostModalVisible,\n    updateCoHostResponsibility,\n    updateCoHost,\n    socket,\n  }: ModifyCoHostSettingsOptions): Promise<void> {\n    // Check if the chat room is in demo mode\n    if (roomName.toLowerCase().startsWith('d')) {\n      showAlert?.({\n        message: 'You cannot add co-host in demo mode.',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n\n    let newCoHost = coHost;\n\n    if (\n      coHost != 'No coHost' ||\n      (selectedParticipant && selectedParticipant != 'Select a participant')\n    ) {\n      if (selectedParticipant && selectedParticipant != 'Select a participant') {\n        newCoHost = selectedParticipant;\n        updateCoHost(newCoHost);\n      }\n\n      updateCoHostResponsibility(coHostResponsibility);\n\n      // Emit a socket event to update co-host information\n      socket.emit('updateCoHost', { roomName, coHost: newCoHost, coHostResponsibility });\n    }\n\n    // Close the co-host modal\n    updateIsCoHostModalVisible(false);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Component, Input, OnChanges, SimpleChanges, OnInit } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ModifyCoHostSettings } from '../../../methods/co-host-methods/modify-co-host-settings.service';\nimport {\n  Participant,\n  CoHostResponsibility,\n  ModifyCoHostSettingsOptions,\n  ShowAlert,\n} from '../../../@types/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface CoHostModalOptions {\n  isCoHostModalVisible: boolean;\n  currentCohost?: string;\n  participants: Participant[];\n  coHostResponsibility: CoHostResponsibility[];\n  position?: string;\n  backgroundColor?: string;\n  roomName: string;\n  showAlert?: ShowAlert;\n  updateCoHostResponsibility: (coHostResponsibility: CoHostResponsibility[]) => void;\n  updateCoHost: (coHost: string) => void;\n  updateIsCoHostModalVisible: (isCoHostModalVisible: boolean) => void;\n  socket: Socket;\n  onCoHostClose: () => void;\n  onModifyEventSettings?: (settings: ModifyCoHostSettingsOptions) => void;\n}\n\nexport type CoHostModalType = (options: CoHostModalOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-co-host-modal',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, FormsModule],\n  templateUrl: './co-host-modal.component.html',\n  styleUrls: ['./co-host-modal.component.css'],\n})\n\n/**\n * CoHostModal component allows managing co-host settings for an event.\n *\n * @selector app-co-host-modal\n * @inputs\n * - `isCoHostModalVisible` (boolean): A boolean value that determines whether the modal is visible. Default is false.\n * - `currentCohost` (string): The current co-host for the event. Default is 'No coHost'.\n * - `participants` (Participant[]): An array of participants in the event.\n * - `coHostResponsibility` (CoHostResponsibility[]): An array of co-host responsibilities.\n * - `position` (string): The position of the modal. Default is 'topRight'.\n * - `backgroundColor` (string): The background color of the modal. Default is '#83c0e9'.\n * - `roomName` (string): The name of the room.\n * - `showAlert` (ShowAlert): A function to show alerts.\n *\n * @outputs\n * - `updateCoHostResponsibility` (coHostResponsibility: CoHostResponsibility[]): A function to update co-host responsibilities.\n * - `updateCoHost` (coHost: string): A function to update the co-host.\n * - `updateIsCoHostModalVisible` (isCoHostModalVisible: boolean): A function to update the visibility of the modal.\n * - `socket` (Socket): The socket object.\n *\n * @methods\n * - `ngOnInit()`: Lifecycle hook that is called after the component is initialized. It sets the default value for `onModifyCoHost` if not provided.\n * - `ngOnChanges(changes: SimpleChanges)`: Lifecycle hook that is called when any data-bound property of the component changes. It initializes the responsibilities and calculates the modal width.\n * - `initializeResponsibilities()`: Initializes the responsibilities.\n * - `get filteredParticipants()`: Returns the filtered participants.\n * - `handleToggleSwitch(key: string)`: Handles the toggle switch for the given key.\n * - `handleSave()`: Handles the save action.\n * - `handleClose()`: Handles the close action.\n * - `calculateModalWidth()`: Calculates the modal width.\n * - `modalContainerStyle()`: Returns the modal container style.\n * - `modalContentStyle()`: Returns the modal content style.\n *\n * @dependencies\n * - `CommonModule`: Angular's common module is imported for common directives.\n * - `FontAwesomeModule`: Angular's font awesome module is imported for icons.\n * - `FormsModule`: Angular's forms module is imported for form-related directives.\n * - `ModifyCoHostSettings`: The ModifyCoHostSettings service is used to modify co-host settings.\n *\n * @styles\n * - `.container`: The container style.\n *\n * @example\n * ```html\n * <app-co-host-modal\n *  [isCoHostModalVisible]=\"isCoHostModalVisible\"\n * [currentCohost]=\"currentCohost\"\n * [participants]=\"participants\"\n * [coHostResponsibility]=\"coHostResponsibility\"\n * [position]=\"position\"\n * [backgroundColor]=\"backgroundColor\"\n * [roomName]=\"roomName\"\n * [showAlert]=\"showAlert\"\n * [updateCoHostResponsibility]=\"updateCoHostResponsibility\"\n * [updateCoHost]=\"updateCoHost\"\n * [updateIsCoHostModalVisible]=\"updateIsCoHostModalVisible\"\n * [socket]=\"socket\"\n * [onCoHostClose]=\"onCoHostClose\"\n * [onModifyCoHost]=\"onModifyCoHost\">\n * </app-co-host-modal>\n * ```\n *\n **/\nexport class CoHostModal implements OnChanges, OnInit {\n  @Input() isCoHostModalVisible = false;\n  @Input() currentCohost = 'No coHost';\n  @Input() participants: Participant[] = [];\n  @Input() coHostResponsibility: CoHostResponsibility[] = [];\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#83c0e9';\n  @Input() roomName = '';\n  @Input() showAlert: ShowAlert = () => {};\n  @Input() updateCoHostResponsibility: (coHostResponsibility: CoHostResponsibility[]) => void =\n    () => {};\n  @Input() updateCoHost: (coHost: string) => void = () => {};\n  @Input() updateIsCoHostModalVisible: (isCoHostModalVisible: boolean) => void = () => {};\n  @Input() socket: Socket = {} as Socket;\n  @Input()\n  onCoHostClose!: () => void;\n  @Input()\n  onModifyCoHost!: (settings: ModifyCoHostSettingsOptions) => void;\n\n  faTimes = faTimes;\n\n  selectedCohost: string = this.currentCohost;\n  CoHostResponsibilityCopy: any[] = [];\n  CoHostResponsibilityCopyAlt: any[] = [];\n  responsibilities: { [key: string]: boolean } = {};\n  responsibilityKeys: { manageKey: string; dedicateKey: string }[] = [];\n\n  modalWidth!: number;\n\n  constructor(private modifyCoHostSettingsService: ModifyCoHostSettings) {}\n\n  ngOnInit() {\n    // Set default value for onModifyCoHost if not provided\n    if (!this.onModifyCoHost) {\n      this.onModifyCoHost = (params: any) =>\n        this.modifyCoHostSettingsService.modifyCoHostSettings(params);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['isCoHostModalVisible'] && this.isCoHostModalVisible) {\n      this.initializeResponsibilities();\n      this.calculateModalWidth();\n    }\n  }\n\n  initializeResponsibilities() {\n    this.CoHostResponsibilityCopy = [...this.coHostResponsibility];\n    this.CoHostResponsibilityCopyAlt = [...this.coHostResponsibility];\n    this.responsibilityKeys = this.coHostResponsibility.map((item) => {\n      const manageKey = `manage${item.name.charAt(0).toUpperCase() + item.name.slice(1)}`;\n      const dedicateKey = `dedicateToManage${\n        item.name.charAt(0).toUpperCase() + item.name.slice(1)\n      }`;\n      return { manageKey, dedicateKey };\n    });\n\n    const initialResponsibilities = this.CoHostResponsibilityCopyAlt.reduce(\n      (acc: any, item: any) => {\n        const str2 = item.name.charAt(0).toUpperCase() + item.name.slice(1);\n        acc[`manage${str2}`] = item.value;\n        acc[`dedicateToManage${str2}`] = item.dedicated;\n        return acc;\n      },\n      {},\n    );\n\n    this.responsibilities = initialResponsibilities;\n  }\n\n  get filteredParticipants() {\n    return this.participants.filter(\n      (participant) => participant.name !== this.currentCohost && participant.islevel !== '2',\n    );\n  }\n\n  handleToggleSwitch(key: string) {\n    if (key.startsWith('dedicateTo')) {\n      const responsibilityName = key.replace('dedicateToManage', '').toLowerCase();\n      const manageKey = `manage${\n        responsibilityName.charAt(0).toUpperCase() + responsibilityName.slice(1)\n      }`;\n\n      // Ensure that the 'dedicated' checkbox can only be toggled if the corresponding 'responsibility' is checked\n      if (this.responsibilities[manageKey]) {\n        const responsibilityDedicated = this.CoHostResponsibilityCopy.find(\n          (item) => item.name === responsibilityName,\n        ).dedicated;\n        this.responsibilities[key] = !responsibilityDedicated;\n        this.CoHostResponsibilityCopy.find((item) => item.name === responsibilityName).dedicated =\n          !responsibilityDedicated;\n      }\n    } else if (key.startsWith('manage')) {\n      const responsibilityName = key.replace('manage', '').toLowerCase();\n      const responsibilityValue = this.CoHostResponsibilityCopy.find(\n        (item) => item.name === responsibilityName,\n      ).value;\n\n      // Toggle the 'responsibility' checkbox and ensure the corresponding 'dedicated' checkbox is also disabled if unchecked\n      this.responsibilities[key] = !responsibilityValue;\n      this.CoHostResponsibilityCopy.find((item) => item.name === responsibilityName).value =\n        !responsibilityValue;\n\n      if (!this.responsibilities[key]) {\n        const dedicateKey = `dedicateToManage${\n          responsibilityName.charAt(0).toUpperCase() + responsibilityName.slice(1)\n        }`;\n        this.responsibilities[dedicateKey] = false;\n        this.CoHostResponsibilityCopy.find((item) => item.name === responsibilityName).dedicated =\n          false;\n      }\n    }\n  }\n\n  handleSave() {\n    console.log('handleSave');\n\n    this.onModifyCoHost({\n      roomName: this.roomName,\n      showAlert: this.showAlert,\n      selectedParticipant: this.selectedCohost,\n      coHost: this.currentCohost,\n      coHostResponsibility: this.CoHostResponsibilityCopy,\n      updateCoHostResponsibility: this.updateCoHostResponsibility,\n      updateCoHost: this.updateCoHost,\n      updateIsCoHostModalVisible: this.updateIsCoHostModalVisible,\n      socket: this.socket,\n    });\n  }\n\n  handleClose() {\n    this.onCoHostClose();\n  }\n\n  calculateModalWidth() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.8 * screenWidth;\n    if (modalWidth > 400) {\n      modalWidth = 400;\n    }\n    this.modalWidth = modalWidth;\n  }\n\n  modalContainerStyle() {\n    return {\n      display: this.isCoHostModalVisible ? 'block' : 'none',\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      zIndex: '999',\n    };\n  }\n\n  modalContentStyle() {\n    return {\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      width: `${this.modalWidth}px`,\n      maxHeight: '65%',\n      overflowX: 'hidden',\n      overflowY: 'auto',\n      position: 'fixed',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n}\n","<!-- co-host-modal.component.html -->\r\n<div [ngStyle]=\"modalContainerStyle()\">\r\n  <div [ngStyle]=\"modalContentStyle()\">\r\n    <div class=\"modal-header\">\r\n      <div class=\"modal-title\">Manage Co-Host</div>\r\n      <div class=\"btn-close-settings\" (click)=\"handleClose()\">\r\n        <fa-icon [icon]=\"faTimes\" class=\"icon\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <hr class=\"hr\" />\r\n    <div class=\"modal-body\">\r\n      <div class=\"form-group\">\r\n        <label class=\"font-weight-bold\">Current Co-host:</label>\r\n        <input class=\"form-control\" [value]=\"currentCohost\" readonly />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"font-weight-bold\">Select New Co-host:</label>\r\n        <select class=\"form-control\" [(ngModel)]=\"selectedCohost\">\r\n          <option value=\"\">Select a participant</option>\r\n          <option *ngFor=\"let participant of filteredParticipants\" [value]=\"participant.name\">\r\n            {{ participant.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-5\">\r\n          <label style=\"font-weight: bold\">Responsibility</label>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <label style=\"font-weight: bold\">Select</label>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <label style=\"font-weight: bold\">Dedicated</label>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let key of responsibilityKeys\" class=\"row\" style=\"margin-bottom: 10px;\">\r\n        <div class=\"col-5\" style=\"font-weight: bold\">{{ key.manageKey.replace('manage', '') }}</div>\r\n        <div class=\"col-3\">\r\n          <input type=\"checkbox\" [(ngModel)]=\"responsibilities[key.manageKey]\" (change)=\"handleToggleSwitch(key.manageKey)\">\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <input type=\"checkbox\" [(ngModel)]=\"responsibilities[key.dedicateKey]\" (change)=\"handleToggleSwitch(key.dedicateKey)\" [disabled]=\"!responsibilities[key.manageKey]\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-apply-settings\" (click)=\"handleSave()\">Save</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  faMicrophone,\n  faMicrophoneSlash,\n  faComment,\n  faTrash,\n  faDotCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  CoHostResponsibility,\n  MessageParticipantsType,\n  MuteParticipantsType,\n  Participant,\n  RemoveParticipantsType,\n  ShowAlert,\n} from '../../../@types/types'; // Adjust the import based on your file structure\nimport { Socket } from 'socket.io-client';\n\nexport interface ParticipantListItemOptions {\n  participant: Participant;\n  isBroadcast: boolean;\n  onMuteParticipants: MuteParticipantsType;\n  onMessageParticipants: MessageParticipantsType;\n  onRemoveParticipants: RemoveParticipantsType;\n  socket: Socket;\n  coHostResponsibility: CoHostResponsibility[];\n  member: string;\n  islevel: string;\n  showAlert?: ShowAlert;\n  coHost: string;\n  roomName: string;\n  participants: Participant[];\n  updateIsMessagesModalVisible: (isVisible: boolean) => void;\n  updateDirectMessageDetails: (participant: Participant | null) => void;\n  updateStartDirectMessage: (start: boolean) => void;\n  updateParticipants: (participants: Participant[]) => void;\n}\n\nexport type ParticipantListItemType = (options: ParticipantListItemOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-participant-list-item',\n  standalone: true,\n  templateUrl: './participant-list-item.component.html',\n  styleUrls: ['./participant-list-item.component.css'],\n  imports: [CommonModule, FontAwesomeModule],\n})\nexport class ParticipantListItem {\n  @Input() participant!: Participant;\n  @Input() isBroadcast!: boolean;\n  @Input() onMuteParticipants!: (params: any) => Promise<void>;\n  @Input() onMessageParticipants!: (params: any) => void;\n  @Input() onRemoveParticipants!: (params: any) => Promise<void>;\n  @Input() socket!: Socket;\n  @Input() coHostResponsibility!: CoHostResponsibility[];\n  @Input() member!: string;\n  @Input() islevel!: string;\n  @Input() showAlert?: ShowAlert;\n  @Input() coHost!: string;\n  @Input() roomName!: string;\n  @Input() updateIsMessagesModalVisible!: (isVisible: boolean) => void;\n  @Input() updateDirectMessageDetails!: (participant: Participant | null) => void;\n  @Input() updateStartDirectMessage!: (start: boolean) => void;\n  @Input() participants!: Participant[];\n  @Input() updateParticipants!: (participants: Participant[]) => void;\n\n  faMicrophone = faMicrophone;\n  faMicrophoneSlash = faMicrophoneSlash;\n  faComment = faComment;\n  faTrash = faTrash;\n  faDotCircle = faDotCircle;\n\n  getIconName() {\n    return this.participant.muted ? this.faMicrophoneSlash : this.faMicrophone;\n  }\n\n  muteParticipant() {\n    if (this.onMuteParticipants) {\n      this.onMuteParticipants({\n        socket: this.socket,\n        participant: this.participant,\n        coHostResponsibility: this.coHostResponsibility,\n        member: this.member,\n        islevel: this.islevel,\n        showAlert: this.showAlert,\n        coHost: this.coHost,\n        roomName: this.roomName,\n      });\n    }\n  }\n\n  messageParticipant() {\n    if (this.onMessageParticipants) {\n      this.onMessageParticipants({\n        participant: this.participant,\n        coHostResponsibility: this.coHostResponsibility,\n        member: this.member,\n        islevel: this.islevel,\n        showAlert: this.showAlert,\n        coHost: this.coHost,\n        updateIsMessagesModalVisible: this.updateIsMessagesModalVisible,\n        updateDirectMessageDetails: this.updateDirectMessageDetails,\n        updateStartDirectMessage: this.updateStartDirectMessage,\n      });\n    }\n  }\n\n  removeParticipant() {\n    if (this.onRemoveParticipants) {\n      this.onRemoveParticipants({\n        socket: this.socket,\n        participant: this.participant,\n        coHostResponsibility: this.coHostResponsibility,\n        member: this.member,\n        islevel: this.islevel,\n        showAlert: this.showAlert,\n        coHost: this.coHost,\n        roomName: this.roomName,\n        participants: this.participants,\n        updateParticipants: this.updateParticipants,\n      });\n    }\n  }\n}\n","<div class=\"container\" style=\"display: flex; flex-direction: row; align-items: center; margin-bottom: 0px; margin-top: 0px;\">\r\n  <div class=\"nameContainer\" style=\"flex: 4;\">\r\n    <p class=\"nameText\" style=\"font-size: 16px;\">\r\n      {{ participant.islevel === '2' ? participant.name + ' (host)' : participant.name }}\r\n    </p>\r\n  </div>\r\n  <div *ngIf=\"!isBroadcast\" class=\"iconContainer\" style=\"flex: 1; align-items: center;\">\r\n    <fa-icon [icon]=\"participant.muted ? faDotCircle : faDotCircle\" [style.font-size.px]=\"20\" [style.color]=\"participant.muted ? 'red' : 'green'\"></fa-icon>\r\n  </div>\r\n  <div *ngIf=\"!isBroadcast\" class=\"buttonContainer\" style=\"flex: 2; align-items: flex-end;\">\r\n    <button (click)=\"muteParticipant()\" style=\"padding: 5px; border-radius: 5px; align-items: center; background-color: #007bff; color: white;\">\r\n      <fa-icon [icon]=\"getIconName()\" style=\"font-size: 20px;\"></fa-icon>\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"!isBroadcast\" class=\"buttonContainer\" style=\"flex: 2; align-items: flex-end;\">\r\n    <button (click)=\"messageParticipant()\" style=\"padding: 5px; border-radius: 5px; align-items: center; background-color: #007bff; color: white;\">\r\n      <fa-icon [icon]=\"faComment\" style=\"font-size: 20px; color: white;\"></fa-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"buttonContainer\" style=\"flex: 2; align-items: flex-end;\">\r\n    <button (click)=\"removeParticipant()\" style=\"padding: 5px; border-radius: 5px; align-items: center; background-color: #dc3545; color: white;\">\r\n      <fa-icon [icon]=\"faTrash\" style=\"font-size: 20px; color: white;\"></fa-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ParticipantListItem } from '../participant-list-item/participant-list-item.component';\nimport {\n  CoHostResponsibility,\n  Participant,\n  ShowAlert,\n  MuteParticipantsOptions,\n  MessageParticipantsOptions,\n  RemoveParticipantsOptions,\n} from '../../../@types/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface ParticipantListOptions {\n  participants: Participant[];\n  isBroadcast: boolean;\n  onMuteParticipants: (options: MuteParticipantsOptions) => Promise<void>;\n  onMessageParticipants: (options: MessageParticipantsOptions) => void;\n  onRemoveParticipants: (options: RemoveParticipantsOptions) => void;\n  socket: Socket;\n  coHostResponsibility: CoHostResponsibility[];\n  member: string;\n  islevel: string;\n  showAlert?: ShowAlert;\n  coHost: string;\n  roomName: string;\n  updateIsMessagesModalVisible: (isVisible: boolean) => void;\n  updateDirectMessageDetails: (participant: Participant | null) => void;\n  updateStartDirectMessage: (start: boolean) => void;\n  updateParticipants: (participants: Participant[]) => void;\n}\n\n@Component({\n  selector: 'app-participant-list',\n  standalone: true,\n  imports: [CommonModule, ParticipantListItem],\n  templateUrl: './participant-list.component.html',\n  styleUrls: ['./participant-list.component.css'],\n})\nexport class ParticipantList {\n  @Input() participants: Participant[] = [];\n  @Input() isBroadcast = false;\n  @Input() onMuteParticipants!: (options: MuteParticipantsOptions) => Promise<void>;\n  @Input() onMessageParticipants!: (options: MessageParticipantsOptions) => void;\n  @Input() onRemoveParticipants!: (options: RemoveParticipantsOptions) => Promise<void>;\n  @Input() socket: Socket = {} as Socket;\n  @Input() coHostResponsibility: CoHostResponsibility[] = [];\n  @Input() member = '';\n  @Input() islevel = '';\n  @Input() showAlert?: ShowAlert;\n  @Input() coHost = '';\n  @Input() roomName = '';\n  @Input() updateIsMessagesModalVisible: (isVisible: boolean) => void = () => {};\n  @Input() updateDirectMessageDetails: (participant: Participant | null) => void = () => {};\n  @Input() updateStartDirectMessage: (start: boolean) => void = () => {};\n  @Input() updateParticipants: (participants: Participant[]) => void = () => {};\n}\n","<div *ngFor=\"let participant of participants; let i = index\">\r\n  <app-participant-list-item\r\n    [participant]=\"participant\"\r\n    [isBroadcast]=\"isBroadcast\"\r\n    [onMuteParticipants]=\"onMuteParticipants\"\r\n    [onMessageParticipants]=\"onMessageParticipants\"\r\n    [onRemoveParticipants]=\"onRemoveParticipants\"\r\n    [socket]=\"socket\"\r\n    [coHostResponsibility]=\"coHostResponsibility\"\r\n    [coHost]=\"coHost\"\r\n    [member]=\"member\"\r\n    [islevel]=\"islevel\"\r\n    [roomName]=\"roomName\"\r\n    [participants]=\"participants\"\r\n    [updateIsMessagesModalVisible]=\"updateIsMessagesModalVisible\"\r\n    [updateStartDirectMessage]=\"updateStartDirectMessage\"\r\n    [updateDirectMessageDetails]=\"updateDirectMessageDetails\"\r\n    [updateParticipants]=\"updateParticipants\"\r\n  ></app-participant-list-item>\r\n  <hr *ngIf=\"i < participants.length - 1\" class=\"separator\" />\r\n</div>\r\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Participant } from '../../../@types/types';\n\nexport interface ParticipantListOthersItemOptions {\n  participant: Participant;\n  member: string;\n  coHost: string;\n}\n\nexport type ParticipantListOthersItemType = (\n  options: ParticipantListOthersItemOptions,\n) => HTMLElement;\n\n@Component({\n  selector: 'app-participant-list-others-item',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: './participant-list-others-item.component.html',\n  styleUrls: ['./participant-list-others-item.component.css'],\n})\nexport class ParticipantListOthersItem {\n  @Input() participant!: Participant;\n  @Input() member!: string;\n  @Input() coHost!: string;\n\n  faCircle = faCircle;\n\n  getParticipantDisplayName(): string {\n    if (this.participant.islevel === '2') {\n      return this.participant.name === this.member\n        ? `${this.participant.name} (you)`\n        : `${this.participant.name} (host)`;\n    } else {\n      if (this.participant.name === this.member) {\n        return `${this.participant.name} (you)`;\n      } else if (this.coHost === this.participant.name) {\n        return `${this.participant.name} (co-host)`;\n      } else {\n        return this.participant.name;\n      }\n    }\n  }\n}\n","<div class=\"container\">\r\n  <div class=\"name-container\">\r\n    <span class=\"name-text\">\r\n      {{ getParticipantDisplayName() }}\r\n    </span>\r\n  </div>\r\n  <div class=\"icon-container\">\r\n    <fa-icon [icon]=\"faCircle\" [style.color]=\"participant.muted ? 'red' : 'green'\"></fa-icon>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ParticipantListOthersItem } from '../participant-list-others-item/participant-list-others-item.component';\nimport { Participant } from '../../../@types/types';\n\nexport interface ParticipantListOthersOptions {\n  participants: Participant[];\n  coHost: string;\n  member: string;\n}\n\nexport type ParticipantListOthersType = (options: ParticipantListOthersOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-participant-list-others',\n  standalone: true,\n  imports: [CommonModule, ParticipantListOthersItem],\n  templateUrl: './participant-list-others.component.html',\n  styleUrls: ['./participant-list-others.component.css'],\n})\nexport class ParticipantListOthers {\n  @Input() participants: Participant[] = [];\n  @Input() coHost = '';\n  @Input() member = '';\n}\n","<div *ngFor=\"let participant of participants; let i = index\">\r\n  <app-participant-list-others-item\r\n    [participant]=\"participant\"\r\n    [coHost]=\"coHost\"\r\n    [member]=\"member\"\r\n  ></app-participant-list-others-item>\r\n  <hr *ngIf=\"i < participants.length - 1\" class=\"separator\" />\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { Participant, CoHostResponsibility, ShowAlert } from '../../@types/types';\nexport interface MuteParticipantsOptions {\n  socket: Socket;\n  coHostResponsibility: CoHostResponsibility[];\n  participant: Participant;\n  member: string;\n  islevel: string;\n  showAlert?: ShowAlert;\n  coHost: string;\n  roomName: string;\n}\n\n// Export the type definition for the function\nexport type MuteParticipantsType = (options: MuteParticipantsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MuteParticipants {\n  /**\n   * Mutes a participant in a media session if certain conditions are met.\n   *\n   * @param {Object} options - The options for muting participants.\n   * @param {Socket} options.socket - The socket instance for communication.\n   * @param {Array} options.coHostResponsibility - List of co-host responsibilities.\n   * @param {Object} options.participant - The participant to be muted.\n   * @param {Object} options.member - The current member attempting to mute.\n   * @param {string} options.islevel - The level of the current member.\n   * @param {Function} [options.showAlert] - Optional function to show alerts.\n   * @param {Object} options.coHost - The co-host information.\n   * @param {string} options.roomName - The name of the room.\n   *\n   * @returns {Promise<void>} A promise that resolves when the participant is muted.\n   *\n   * @throws Will log an error if there is an issue accessing co-host responsibilities.\n   */\n\n  async muteParticipants({\n    socket,\n    coHostResponsibility,\n    participant,\n    member,\n    islevel,\n    showAlert,\n    coHost,\n    roomName,\n  }: MuteParticipantsOptions): Promise<void> {\n    let mediaValue = false;\n\n    try {\n      mediaValue = coHostResponsibility.find((item) => item.name === 'media')?.value ?? false;\n    } catch (error) {\n      console.error(error);\n    }\n\n    if (islevel === '2' || (coHost === member && mediaValue === true)) {\n      if (!participant.muted && participant.islevel !== '2') {\n        const participantId = participant.id;\n        socket.emit('controlMedia', {\n          participantId,\n          participantName: participant.name,\n          type: 'all',\n          roomName,\n        });\n      }\n    } else {\n      showAlert?.({\n        message: 'You are not allowed to mute other participants',\n        type: 'danger',\n        duration: 3000,\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Participant, CoHostResponsibility, ShowAlert } from '../../@types/types';\nexport interface MessageParticipantsOptions {\n  coHostResponsibility: CoHostResponsibility[];\n  participant: Participant;\n  member: string;\n  islevel: string;\n  showAlert?: ShowAlert;\n  coHost: string;\n  updateIsMessagesModalVisible: (isVisible: boolean) => void;\n  updateDirectMessageDetails: (participant: Participant | null) => void;\n  updateStartDirectMessage: (start: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type MessageParticipantsType = (options: MessageParticipantsOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageParticipants {\n  /**\n   * Sends a direct message to a participant if certain conditions are met.\n   *s\n   * @param coHostResponsibility - Array of responsibilities assigned to the co-host.\n   * @param participant - The participant to whom the message is to be sent.\n   * @param member - The current member attempting to send the message.\n   * @param islevel - The level of the current member.\n   * @param showAlert - Function to show an alert message.\n   * @param coHost - The co-host member.\n   * @param updateIsMessagesModalVisible - Function to update the visibility of the messages modal.\n   * @param updateDirectMessageDetails - Function to update the details of the direct message.\n   * @param updateStartDirectMessage - Function to start the direct message.\n   *\n   * @returns void\n   */\n  messageParticipants({\n    coHostResponsibility,\n    participant,\n    member,\n    islevel,\n    showAlert,\n    coHost,\n    updateIsMessagesModalVisible,\n    updateDirectMessageDetails,\n    updateStartDirectMessage,\n  }: MessageParticipantsOptions): void {\n    let chatValue = false;\n\n    try {\n      chatValue = coHostResponsibility.find((item) => item.name === 'chat')?.value ?? false;\n    } catch (error) {\n      console.error(error);\n    }\n\n    if (islevel === '2' || (coHost === member && chatValue === true)) {\n      if (participant.islevel !== '2') {\n        updateDirectMessageDetails(participant);\n        updateStartDirectMessage(true);\n        updateIsMessagesModalVisible(true);\n      }\n    } else {\n      showAlert?.({\n        message: 'You are not allowed to send this message',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { CoHostResponsibility, Participant, ShowAlert } from '../../@types/types';\n\nexport interface RemoveParticipantsOptions {\n  coHostResponsibility: CoHostResponsibility[];\n  participant: Participant;\n  member: string;\n  islevel: string;\n  showAlert?: ShowAlert;\n  coHost: string;\n  participants: Participant[];\n  socket: Socket;\n  roomName: string;\n  updateParticipants: (participants: Participant[]) => void;\n}\n\n// Export the type definition for the function\nexport type RemoveParticipantsType = (options: RemoveParticipantsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RemoveParticipants {\n  /**\n   * Removes a participant from the room if the user has the appropriate permissions.\n   *\n   * @param {RemoveParticipantsOptions} options - The options for removing a participant.\n   * @param {Array} options.coHostResponsibility - The responsibilities of the co-host.\n   * @param {Object} options.participant - The participant to be removed.\n   * @param {Object} options.member - The current member attempting to remove the participant.\n   * @param {string} options.islevel - The level of the current member.\n   * @param {Function} [options.showAlert] - Function to show an alert message.\n   * @param {Object} options.coHost - The co-host information.\n   * @param {Array} options.participants - The list of current participants.\n   * @param {Object} options.socket - The socket instance for emitting events.\n   * @param {string} options.roomName - The name of the room.\n   * @param {Function} options.updateParticipants - Function to update the participants list.\n   *\n   * @returns {Promise<void>} - A promise that resolves when the participant is removed.\n   */\n\n  async removeParticipants({\n    coHostResponsibility,\n    participant,\n    member,\n    islevel,\n    showAlert,\n    coHost,\n    participants,\n    socket,\n    roomName,\n    updateParticipants,\n  }: RemoveParticipantsOptions): Promise<void> {\n    let participantsValue = false;\n\n    try {\n      participantsValue =\n        coHostResponsibility.find((item) => item.name === 'participants')?.value ?? false;\n    } catch (error) {\n      participantsValue = false;\n    }\n\n    if (islevel === '2' || (coHost === member && participantsValue === true)) {\n      if (participant.islevel !== '2') {\n        const participantId = participant.id;\n\n        // Emit a socket event to disconnect the user\n        socket.emit('disconnectUserInitiate', {\n          member: participant.name,\n          roomName,\n          id: participantId,\n        });\n\n        // Remove the participant from the local array\n        participants.splice(\n          participants.findIndex((obj: any) => obj.name === participant.name),\n          1,\n        );\n\n        // Update the participants array\n        updateParticipants(participants);\n      }\n    } else {\n      showAlert?.({\n        message: 'You are not allowed to remove other participants',\n        type: 'danger',\n        duration: 3000,\n      });\n    }\n  }\n}\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { CoHostResponsibility, EventType, Participant, ShowAlert } from '../../../@types/types';\nimport { ParticipantList } from '../participant-list/participant-list.component';\nimport { ParticipantListOthers } from '../participant-list-others/participant-list-others.component';\nimport {\n  MuteParticipants,\n  MuteParticipantsOptions,\n} from '../../../methods/participants-methods/mute-participants.service';\nimport {\n  MessageParticipants,\n  MessageParticipantsOptions,\n} from '../../../methods/participants-methods/message-participants.service';\nimport {\n  RemoveParticipants,\n  RemoveParticipantsOptions,\n} from '../../../methods/participants-methods/remove-participants.service';\nimport { Socket } from 'socket.io-client';\n\nexport interface ParticipantsModalParameters {\n  position?: string;\n  backgroundColor?: string;\n  coHostResponsibility: CoHostResponsibility[];\n  coHost: string;\n  member: string;\n  islevel: string;\n  participants: Participant[];\n  eventType: EventType;\n  filteredParticipants: Participant[];\n  socket: Socket;\n  showAlert?: ShowAlert;\n  roomName: string;\n  updateIsMessagesModalVisible: (isVisible: boolean) => void;\n  updateDirectMessageDetails: (participant: Participant | null) => void;\n  updateStartDirectMessage: (start: boolean) => void;\n  updateParticipants: (participants: Participant[]) => void;\n\n  //mediasfu functions\n  getUpdatedAllParams: () => ParticipantsModalParameters;\n  [key: string]: any;\n}\n\nexport interface ParticipantsModalOptions {\n  isParticipantsModalVisible: boolean;\n  onParticipantsClose: () => void;\n  onParticipantsFilterChange: (filter: string) => void;\n  participantsCounter: number;\n  onMuteParticipants?: typeof MuteParticipants;\n  onMessageParticipants?: typeof MessageParticipants;\n  onRemoveParticipants?: typeof RemoveParticipants;\n  RenderParticipantList?: HTMLElement;\n  RenderParticipantListOthers?: HTMLElement;\n  parameters: ParticipantsModalParameters;\n  backgroundColor?: string;\n  position?: string;\n}\n\nexport type ParticipantsModalType = (options: ParticipantsModalOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-participants-modal',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, ParticipantList, ParticipantListOthers],\n  templateUrl: './participants-modal.component.html',\n  styleUrls: ['./participants-modal.component.css'],\n})\nexport class ParticipantsModal implements OnInit, OnChanges {\n  @Input() isParticipantsModalVisible = false;\n  @Input() onParticipantsClose!: () => void;\n  @Input() onParticipantsFilterChange!: (filter: string) => void;\n  @Input() participantsCounter = 0;\n  @Input() onMuteParticipants!: (options: MuteParticipantsOptions) => Promise<void>;\n  @Input() onMessageParticipants!: (options: MessageParticipantsOptions) => void;\n  @Input() onRemoveParticipants!: (options: RemoveParticipantsOptions) => Promise<void>;\n  @Input() parameters: ParticipantsModalParameters = {} as ParticipantsModalParameters;\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#83c0e9';\n\n  participant_s: Participant[] = [];\n  participantsCounter_s = 0;\n  reRender = false;\n\n  faTimes = faTimes;\n\n  constructor(\n    private muteParticipantsService: MuteParticipants,\n    private messageParticipantsService: MessageParticipants,\n    private removeParticipantsService: RemoveParticipants,\n  ) {}\n\n  ngOnInit() {\n    this.updateParticipantsData();\n    if (!this.onMuteParticipants) {\n      this.onMuteParticipants = this.muteParticipantsService.muteParticipants.bind(\n        this.muteParticipantsService,\n      );\n    }\n    if (!this.onMessageParticipants) {\n      this.onMessageParticipants = this.messageParticipantsService.messageParticipants.bind(\n        this.messageParticipantsService,\n      );\n    }\n    if (!this.onRemoveParticipants) {\n      this.onRemoveParticipants = this.removeParticipantsService.removeParticipants.bind(\n        this.removeParticipantsService,\n      );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['parameters'] || changes['participantsCounter']) {\n      this.updateParticipantsData();\n    }\n  }\n\n  updateParticipantsData() {\n    let { getUpdatedAllParams } = this.parameters;\n    this.parameters = getUpdatedAllParams();\n    this.participant_s = this.parameters.filteredParticipants;\n    this.participantsCounter_s = this.parameters.filteredParticipants.length;\n  }\n\n  handleFilterChange(event: Event) {\n    const inputElement = event.target as HTMLInputElement;\n    const filterValue = inputElement.value;\n    this.onParticipantsFilterChange(filterValue);\n    this.reRender = !this.reRender;\n  }\n\n  handleClose() {\n    this.onParticipantsClose();\n  }\n\n  canShowParticipantList() {\n    const participantsValue = this.parameters.coHostResponsibility?.find(\n      (item: any) => item.name === 'participants',\n    )?.value;\n    return (\n      this.parameters.islevel === '2' ||\n      (this.parameters.coHost === this.parameters.member && participantsValue === true)\n    );\n  }\n}\n","<div *ngIf=\"isParticipantsModalVisible\" class=\"modal-container\" [ngStyle]=\"{'background-color': 'rgba(0, 0, 0, 0.5)'}\">\r\n  <div class=\"modal-content\" [ngStyle]=\"{'background-color': backgroundColor, 'top': position.includes('top') ? '10px' : 'auto', 'bottom': position.includes('bottom') ? '10px' : 'auto', 'left': position.includes('Left') ? '10px' : 'auto', 'right': position.includes('Right') ? '10px' : 'auto'}\">\r\n    <div class=\"modal-header\">\r\n      <div>\r\n        Participants <span class=\"badge\">{{ participantsCounter_s }}</span>\r\n      </div>\r\n      <div class=\"close-icon\" (click)=\"handleClose()\">\r\n        <fa-icon [icon]=\"faTimes\" size=\"xl\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <input type=\"text\" class=\"filter-input\" placeholder=\"Search ...\" (input)=\"handleFilterChange($event)\">\r\n      <ng-container *ngIf=\"parameters.participants\">\r\n        <ng-container *ngIf=\"canShowParticipantList()\">\r\n          <app-participant-list\r\n            [participants]=\"participant_s\"\r\n            [isBroadcast]=\"parameters.eventType === 'broadcast'\"\r\n            [onMuteParticipants]=\"onMuteParticipants\"\r\n            [onMessageParticipants]=\"onMessageParticipants\"\r\n            [onRemoveParticipants]=\"onRemoveParticipants\"\r\n            [socket]=\"parameters.socket\"\r\n            [coHostResponsibility]=\"parameters.coHostResponsibility\"\r\n            [coHost]=\"parameters.coHost\"\r\n            [member]=\"parameters.member\"\r\n            [islevel]=\"parameters.islevel\"\r\n            [roomName]=\"parameters.roomName\"\r\n            [updateIsMessagesModalVisible]=\"parameters.updateIsMessagesModalVisible\"\r\n            [updateStartDirectMessage]=\"parameters.updateStartDirectMessage\"\r\n            [updateDirectMessageDetails]=\"parameters.updateDirectMessageDetails\"\r\n            [updateParticipants]=\"parameters.updateParticipants\"\r\n          >\r\n          </app-participant-list>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!canShowParticipantList()\">\r\n          <app-participant-list-others\r\n            [participants]=\"participant_s\"\r\n            [coHost]=\"parameters.coHost\"\r\n            [member]=\"parameters.member\"\r\n            >\r\n          </app-participant-list-others>\r\n        </ng-container>\r\n      </ng-container>\r\n      <div *ngIf=\"!parameters.participants\">No participants</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { faPaperPlane, faReply } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\nimport { SendMessageOptions } from '../../../methods/message-methods/send-message.service';\nimport {\n  CoHostResponsibility,\n  EventType,\n  Message,\n  Participant,\n  ShowAlert,\n} from '../../../@types/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface MessagePanelOptions {\n  messages: Message[];\n  messagesLength: number;\n  type: string;\n  username: string;\n  onSendMessagePress: (options: SendMessageOptions) => Promise<void>;\n  focusedInput: boolean;\n  showAlert?: ShowAlert;\n  eventType: EventType;\n  member: string;\n  islevel: string;\n  startDirectMessage: boolean;\n  updateStartDirectMessage: (start: boolean) => void;\n  directMessageDetails: Participant | null;\n  updateDirectMessageDetails: (participant: Participant | null) => void;\n  coHostResponsibility: CoHostResponsibility[];\n  coHost: string;\n  roomName: string;\n  socket: Socket;\n  chatSetting: string;\n}\n\nexport type MessagePanelType = (options: MessagePanelOptions) => HTMLElement;\n\n/**\n * @fileoverview MessagePanel component for handling message interactions in the MediaSFU-Angular application.\n *\n * @component\n * @selector app-message-panel\n * @templateUrl ./message-panel.component.html\n * @styleUrls ['./message-panel.component.css']\n * @standalone true\n * @imports [CommonModule, FontAwesomeModule, FormsModule]\n *\n * @description\n * The MessagePanel component is responsible for displaying and managing messages in a chat interface.\n * It supports both group and direct messaging, and includes various input properties to customize its behavior.\n *\n * @property {Array<any>} messages - Array of messages to be displayed.\n * @property {number} messagesLength - The length of the messages array.\n * @property {string} type - The type of chat, either 'group' or 'direct'.\n * @property {string} username - The username of the current user.\n * @property {(options: SendMessageOptions) => Promise<void>} onSendMessagePress - Function to handle sending messages.\n * @property {string} backgroundColor - Background color of the message panel.\n * @property {boolean} focusedInput - Indicates if the input field is focused.\n * @property {EventType} eventType - The type of event, e.g., 'webinar'.\n * @property {string} member - The member associated with the chat.\n * @property {string} islevel - The level of the user.\n * @property {boolean} startDirectMessage - Indicates if a direct message should be started.\n * @property {(start: boolean) => void} updateStartDirectMessage - Function to update the startDirectMessage state.\n * @property {Participant | null} directMessageDetails - Details of the participant for direct messaging.\n * @property {(participant: Participant | null) => void} updateDirectMessageDetails - Function to update directMessageDetails.\n * @property {CoHostResponsibility[]} coHostResponsibility - Array of co-host responsibilities.\n * @property {string} coHost - The co-host of the chat.\n * @property {string} roomName - The name of the chat room.\n * @property {Socket} socket - The socket connection for real-time communication.\n * @property {string} chatSetting - Settings for the chat.\n * @property {ShowAlert} [showAlert] - Optional function to show alerts.\n *\n * @property {IconDefinition} faPaperPlane - FontAwesome icon for paper plane.\n * @property {IconDefinition} faReply - FontAwesome icon for reply.\n *\n * @property {any} replyInfo - Information about the reply.\n * @property {string | null} senderId - ID of the sender.\n * @property {string} directMessageText - Text of the direct message.\n * @property {string} groupMessageText - Text of the group message.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method defaultSendMessage - Default implementation for sending a message.\n * @method handleTextInputChange - Handles changes in the text input field.\n * @method openReplyInput - Opens the reply input for a specific sender.\n * @method handleSendButton - Handles the send button click event.\n */\n@Component({\n  selector: 'app-message-panel',\n  templateUrl: './message-panel.component.html',\n  styleUrls: ['./message-panel.component.css'],\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, FormsModule],\n})\nexport class MessagePanel implements OnInit, OnChanges {\n  @Input() messages: Array<any> = [];\n  @Input() messagesLength = 0;\n  @Input() type = 'group';\n  @Input() username = '';\n  @Input() onSendMessagePress!: (options: SendMessageOptions) => Promise<void>;\n  @Input() backgroundColor = '#f5f5f5';\n  @Input() focusedInput = false;\n  @Input() eventType: EventType = 'webinar';\n  @Input() member = '';\n  @Input() islevel = '';\n  @Input() startDirectMessage = false;\n  @Input() updateStartDirectMessage!: (start: boolean) => void;\n  @Input() directMessageDetails: Participant | null = null;\n  @Input() updateDirectMessageDetails!: (participant: Participant | null) => void;\n  @Input() coHostResponsibility: CoHostResponsibility[] = [];\n  @Input() coHost = '';\n  @Input() roomName = '';\n  @Input() socket: Socket = {} as Socket;\n  @Input() chatSetting = '';\n  @Input() showAlert?: ShowAlert;\n\n  faPaperPlane = faPaperPlane;\n  faReply = faReply;\n\n  replyInfo: any = null;\n  senderId: string | null = null;\n  directMessageText = '';\n  groupMessageText = '';\n\n  ngOnInit() {\n    if (!this.onSendMessagePress) {\n      this.onSendMessagePress = this.defaultSendMessage.bind(this);\n    }\n  }\n\n  defaultSendMessage(): Promise<void> {\n    // Default send message implementation\n    return Promise.resolve();\n  }\n\n  handleTextInputChange(event: Event) {\n    const text = (event.target as HTMLInputElement).value;\n    if (this.type === 'direct') {\n      this.directMessageText = text;\n    } else {\n      this.groupMessageText = text;\n    }\n  }\n\n  ngOnChanges() {\n    if (this.startDirectMessage && this.directMessageDetails) {\n      this.openReplyInput(this.directMessageDetails['name']);\n    }\n  }\n\n  openReplyInput(senderId: string) {\n    this.replyInfo = {\n      text: 'Replying to: ',\n      username: senderId,\n    };\n    this.senderId = senderId;\n  }\n\n  async handleSendButton() {\n    const message = this.type === 'direct' ? this.directMessageText : this.groupMessageText;\n\n    if (!message) {\n      this.showAlert?.({ message: 'Please enter a message', type: 'danger' });\n      return;\n    }\n\n    if (message.length > 350) {\n      this.showAlert?.({ message: 'Message is too long.', type: 'danger' });\n      return;\n    }\n\n    if (message.trim() === '') {\n      this.showAlert?.({ message: 'Message cannot be empty.', type: 'danger' });\n      return;\n    }\n\n    if (this.type === 'direct' && !this.senderId && this.islevel == '2') {\n      this.showAlert?.({ message: 'Please select a user to send a message to.', type: 'danger' });\n      return;\n    }\n\n    await this.onSendMessagePress({\n      message,\n      receivers: this.type === 'direct' && this.senderId ? [this.senderId] : [],\n      group: this.type === 'group',\n      messagesLength: this.messagesLength,\n      member: this.member,\n      sender: this.username,\n      islevel: this.islevel,\n      showAlert: this.showAlert,\n      coHostResponsibility: this.coHostResponsibility,\n      coHost: this.coHost,\n      roomName: this.roomName,\n      socket: this.socket,\n      chatSetting: this.chatSetting,\n    });\n\n    if (this.type === 'direct') {\n      this.directMessageText = '';\n    } else {\n      this.groupMessageText = '';\n    }\n\n    this.replyInfo = null;\n    this.senderId = null;\n  }\n}\n","<div [style.maxHeight]=\"'100%'\" [style.backgroundColor]=\"backgroundColor\" style=\"overflow-y: auto;\">\r\n  <!-- Message rendering logic -->\r\n  <div *ngFor=\"let message of messages; let index = index\" [ngStyle]=\"{ marginBottom: '10px' }\">\r\n    <div [ngStyle]=\"{ display: 'flex', flexDirection: 'column', alignItems: message.sender === username ? 'flex-end' : 'flex-start', marginBottom: '10px' }\">\r\n      <div [ngStyle]=\"{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '3px' }\">\r\n        <span *ngIf=\"message.sender === username && !message.group\" [ngStyle]=\"{ fontWeight: 'bold', color: 'black', fontSize: '8px', marginLeft: '6px' }\">To: {{ message.receivers.join(', ') }}</span>\r\n        <span [ngStyle]=\"{ fontWeight: 'bold', color: 'black', fontSize: '8px', marginRight: '10px' }\">{{ message.sender === username ? '' : message.sender }}</span>\r\n        <span [ngStyle]=\"{ fontSize: '8px', color: '#0D0D0DFF' }\">{{ message.timestamp }}</span>\r\n        <div *ngIf=\"message.sender !== username && !message.group\" (click)=\"openReplyInput(message.sender)\" [ngStyle]=\"{ padding: '1px', marginLeft: '5px', borderRadius: '2px', backgroundColor: 'transparent' }\">\r\n          <fa-icon [icon]=\"faReply\" size=\"xs\" color=\"black\"></fa-icon>\r\n        </div>\r\n      </div>\r\n      <div [ngStyle]=\"{ backgroundColor: message.sender === member ? '#DCF8C6' : '#1ce5c7', padding: '10px', borderRadius: '10px' }\">\r\n        <span [ngStyle]=\"{ color: 'black' }\">{{ message.message }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Reply info -->\r\n  <div *ngIf=\"replyInfo\" [ngStyle]=\"{ flexDirection: 'row', alignItems: 'center', padding: '2px', backgroundColor: '#e6e6e6', borderRadius: '5px', marginBottom: '1px' }\">\r\n    <span [ngStyle]=\"{ fontWeight: 'bold', marginRight: '2px', fontSize: '8px' }\">Replying to: </span>\r\n    <span [ngStyle]=\"{ color: 'red', fontSize: '8px' }\">{{ replyInfo.username }}</span>\r\n  </div>\r\n\r\n  <!-- Input area -->\r\n  <div [ngStyle]=\"{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '10px', marginTop: 'auto' }\">\r\n    <input\r\n      type=\"text\"\r\n      [ngStyle]=\"{ flex: 1, minHeight: '40px', maxHeight: '80px', resize: 'vertical', border: '1px solid gray', borderRadius: '5px', padding: '10px', overflowY: 'auto' }\"\r\n      placeholder=\"{{ type === 'direct' ? (focusedInput && startDirectMessage && directMessageDetails ? 'Send a direct message to ' + directMessageDetails.name : 'Select a message to reply to') : (eventType === 'chat' ? 'Send a message' : 'Send a message to everyone') }}\"\r\n      maxLength=\"350\"\r\n      (input)=\"handleTextInputChange($event)\"\r\n      [value]=\"type === 'direct' ? directMessageText : groupMessageText\"\r\n    />\r\n    <button [ngStyle]=\"{ backgroundColor: '#83c0e9', padding: '10px', borderRadius: '5px', display: 'flex', alignItems: 'center' }\" (click)=\"handleSendButton()\">\r\n      <fa-icon [icon]=\"faPaperPlane\" size=\"sm\" color=\"white\"></fa-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { CoHostResponsibility, Message, ShowAlert } from '../../@types/types';\n\nexport interface SendMessageOptions {\n  member: string;\n  islevel: string;\n  showAlert?: ShowAlert;\n  coHostResponsibility: CoHostResponsibility[];\n  coHost: string;\n  chatSetting: string;\n  message: string;\n  roomName: string;\n  messagesLength: number;\n  receivers: string[];\n  group: boolean;\n  sender: string;\n  socket: Socket;\n}\n\n// Export the type definition for the function\nexport type SendMessageType = (options: SendMessageOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SendMessage {\n  /**\n   * Sends a message to the specified room.\n   *\n   * @param {Object} options - The options for sending the message.\n   * @param {string} options.member - The member sending the message.\n   * @param {string} options.islevel - The level of the member.\n   * @param {Function} options.showAlert - Function to show alert messages.\n   * @param {Array} options.coHostResponsibility - List of co-host responsibilities.\n   * @param {string} options.coHost - The co-host of the room.\n   * @param {boolean} options.chatSetting - Chat setting for the room.\n   * @param {string} options.message - The message to be sent.\n   * @param {string} options.roomName - The name of the room.\n   * @param {number} options.messagesLength - The current number of messages in the room.\n   * @param {Array} options.receivers - List of receivers for the message.\n   * @param {boolean} options.group - Indicates if the message is for a group.\n   * @param {string} options.sender - The sender of the message.\n   * @param {Object} options.socket - The socket instance for communication.\n   *\n   * @returns {Promise<void>} A promise that resolves when the message is sent.\n   *\n   * @throws Will throw an error if the message count limit is exceeded.\n   * @throws Will throw an error if the message, sender, or receivers are not valid.\n   * @throws Will throw an error if the user is not allowed to send a message in the event room.\n   */\n\n  async sendMessage({\n    member,\n    islevel,\n    showAlert,\n    coHostResponsibility,\n    coHost,\n    chatSetting,\n    message,\n    roomName,\n    messagesLength,\n    receivers,\n    group,\n    sender,\n    socket,\n  }: SendMessageOptions): Promise<void> {\n    let chatValue = false;\n\n    // Check message count limit based on the room type\n    if (\n      (messagesLength > 100 && roomName.startsWith('d')) ||\n      (messagesLength > 500 && roomName.startsWith('s')) ||\n      (messagesLength > 100000 && roomName.startsWith('p'))\n    ) {\n      showAlert?.({\n        message: 'You have reached the maximum number of messages allowed.',\n        type: 'danger',\n        duration: 3000,\n      });\n      return;\n    }\n\n    // Validate message, sender, and receivers\n    if (!message || !receivers || (!member && !sender)) {\n      showAlert?.({\n        message: 'Message is not valid.',\n        type: 'danger',\n        duration: 3000,\n      });\n      return;\n    }\n\n    // Create the message object\n    const messageObject: Message = {\n      sender: sender ? sender : member,\n      receivers: receivers,\n      message: message,\n      timestamp: new Date().toLocaleTimeString(),\n      group: group !== undefined && group !== null ? group : false,\n    };\n\n    try {\n      // Check co-host responsibility for chat\n      chatValue = coHostResponsibility.find((item) => item.name === 'chat')?.value ?? false;\n    } catch (error) {\n      console.error(error);\n    }\n\n    if (islevel === '2' || (coHost === member && chatValue === true)) {\n      // Allow sending message\n    } else {\n      // Check if user is allowed to send a message in the event room\n      if (!chatSetting) {\n        showAlert?.({\n          message: 'You are not allowed to send a message in this event room',\n          type: 'danger',\n          duration: 3000,\n        });\n        return;\n      }\n    }\n\n    // Send the message to the server\n    socket.emit('sendMessage', {\n      messageObject: messageObject,\n      roomName: roomName,\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MessagePanel } from '../message-panel/message-panel.component';\nimport {\n  CoHostResponsibility,\n  EventType,\n  Message,\n  Participant,\n  ShowAlert,\n} from '../../../@types/types';\nimport {\n  SendMessage,\n  SendMessageOptions,\n} from '../../../methods/message-methods/send-message.service';\nimport { Socket } from 'socket.io-client';\n\nexport interface MessagesModalOptions {\n  isMessagesModalVisible: boolean;\n  onMessagesClose: () => void;\n  onSendMessagePress?: (options: SendMessageOptions) => Promise<void>;\n  messages: Message[];\n  position?: string;\n  backgroundColor?: string;\n  activeTabBackgroundColor?: string;\n  eventType: EventType;\n  member: string;\n  islevel: string;\n  coHostResponsibility: CoHostResponsibility[];\n  coHost: string;\n  startDirectMessage: boolean;\n  directMessageDetails: Participant | null;\n  updateStartDirectMessage: (start: boolean) => void;\n  updateDirectMessageDetails: (participant: Participant | null) => void;\n  showAlert?: ShowAlert;\n  roomName: string;\n  socket: Socket;\n  chatSetting: string;\n}\n\nexport type MessagesModalType = (options: MessagesModalOptions) => void;\n\n@Component({\n  selector: 'app-messages-modal',\n  templateUrl: './messages-modal.component.html',\n  styleUrls: ['./messages-modal.component.css'],\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, MessagePanel],\n})\nexport class MessagesModal implements OnInit, OnChanges {\n  constructor(private SendMessageService: SendMessage) {}\n\n  @Input() isMessagesModalVisible = false;\n  @Input() onMessagesClose = () => {};\n  @Input() onSendMessagePress!: (options: SendMessageOptions) => Promise<void>;\n  @Input() messages: Message[] = [];\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#f5f5f5';\n  @Input() activeTabBackgroundColor = '#2b7ce5';\n  @Input() eventType: EventType = 'webinar';\n  @Input() member = '';\n  @Input() islevel = '';\n  @Input() coHostResponsibility: CoHostResponsibility[] = [];\n  @Input() coHost = '';\n  @Input() startDirectMessage = false;\n  @Input() directMessageDetails: Participant | null = null;\n  @Input() updateStartDirectMessage = (start: boolean) => {\n    console.log(start);\n  };\n  @Input() updateDirectMessageDetails = (participant: Participant | null) => {\n    console.log(participant);\n  };\n  @Input() showAlert?: ShowAlert;\n  @Input() roomName = '';\n  @Input() socket: Socket = {} as Socket;\n  @Input() chatSetting = '';\n\n  faTimes = faTimes;\n\n  directMessages: Array<any> = [];\n  groupMessages: Array<any> = [];\n  activeTab = 'group';\n  focusedInput = false;\n  reRender = false;\n\n  modalContainerStyle: any;\n  modalContentStyle: any;\n\n  ngOnInit() {\n    if (!this.onSendMessagePress) {\n      this.onSendMessagePress = this.SendMessageService.sendMessage.bind(this.SendMessageService);\n    }\n\n    if (this.eventType == 'webinar' || this.eventType == 'conference') {\n      this.activeTab = 'direct';\n    } else {\n      this.activeTab = 'group';\n      this.switchToGroupTab();\n    }\n\n    this.updateModalStyles();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['isMessagesModalVisible']) {\n      this.updateModalStyles();\n\n      if (\n        this.eventType != 'webinar' &&\n        this.eventType != 'conference' &&\n        this.activeTab == 'direct'\n      ) {\n        this.activeTab = 'group';\n        this.focusedInput = false;\n        this.switchToGroupTab();\n      } else if (this.eventType == 'webinar' || this.eventType == 'conference') {\n        if (this.startDirectMessage && this.directMessageDetails) {\n          this.activeTab = 'direct';\n          this.focusedInput = true;\n          this.switchToDirectTab();\n        }\n      }\n\n      if (this.isMessagesModalVisible) {\n        this.populateMessages();\n      }\n    }\n    if (changes['messages']) {\n      this.populateMessages();\n    }\n  }\n\n  switchToDirectTab() {\n    this.activeTab = 'direct';\n    this.reRender = !this.reRender;\n  }\n\n  switchToGroupTab() {\n    this.activeTab = 'group';\n    this.reRender = !this.reRender;\n  }\n\n  populateMessages() {\n    let chatValue = false;\n    try {\n      chatValue =\n        this.coHostResponsibility?.find((item: any) => item.name == 'chat')?.value || false;\n    } catch {\n      /* handle error */\n    }\n\n    let directMsgs = this.messages ? this.messages.filter((message) => !message.group) : [];\n    directMsgs = directMsgs.filter(\n      (message) =>\n        message.sender == this.member ||\n        message.receivers.includes(this.member) ||\n        this.islevel == '2' ||\n        (this.coHost == this.member && chatValue == true),\n    );\n    this.directMessages = directMsgs;\n\n    const groupMsgs = this.messages ? this.messages.filter((message) => message.group) : [];\n    this.groupMessages = groupMsgs;\n  }\n\n  closeMessagesModal() {\n    this.onMessagesClose();\n  }\n\n  updateModalStyles() {\n    const screenWidth = window.innerWidth;\n    const modalWidth = Math.min(0.8 * screenWidth, 400);\n\n    this.modalContainerStyle = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: this.isMessagesModalVisible ? 'block' : 'none',\n      zIndex: 999,\n    };\n\n    this.modalContentStyle = {\n      position: 'fixed',\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      width: `${modalWidth}px`,\n      maxWidth: `${modalWidth}px`,\n      maxHeight: '75%',\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n\n  getTabStyle(tab: string) {\n    return {\n      ...this.styles.tabText,\n      ...(this.activeTab == tab ? this.styles.activeTabText : {}),\n      ...(this.activeTab == tab ? { backgroundColor: this.activeTabBackgroundColor } : {}),\n    };\n  }\n\n  getButtonCloseStyle() {\n    return {\n      ...this.styles.btnCloseMessages,\n      marginLeft: this.eventType == 'webinar' || this.eventType == 'conference' ? '20%' : '65%',\n    };\n  }\n\n  get styles() {\n    return {\n      modalContent: {\n        borderRadius: '10px',\n        padding: '10px',\n      },\n      modalBody: {\n        marginTop: '10px',\n      },\n      tabText: {\n        paddingRight: '10px',\n        paddingLeft: '10px',\n        paddingTop: '5px',\n        paddingBottom: '5px',\n        fontWeight: 'bold',\n        marginRight: '10px',\n        marginLeft: '10px',\n      },\n      activeTabText: {\n        color: '#ffffff',\n        backgroundColor: '#2b7ce5',\n        borderRadius: '4px',\n      },\n      separator: {\n        height: '1px',\n        backgroundColor: 'black',\n        marginVertical: '1px',\n      },\n      btnCloseMessages: {\n        padding: '5px',\n        marginRight: '0',\n        paddingRight: '0',\n      },\n      icon: {\n        fontSize: '24px',\n        color: 'black',\n      },\n    };\n  }\n}\n","<div [ngStyle]=\"modalContainerStyle\">\r\n  <div [ngStyle]=\"modalContentStyle\">\r\n    <div\r\n      [ngStyle]=\"{\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n      }\"\r\n    >\r\n      <button\r\n        *ngIf=\"eventType === 'webinar' || eventType === 'conference'\"\r\n        (click)=\"switchToDirectTab()\"\r\n        [ngStyle]=\"getTabStyle('direct')\"\r\n      >\r\n        Direct\r\n      </button>\r\n      <button\r\n        *ngIf=\"eventType === 'webinar' || eventType === 'conference'\"\r\n        (click)=\"switchToGroupTab()\"\r\n        [ngStyle]=\"getTabStyle('group')\"\r\n      >\r\n        Group\r\n      </button>\r\n      <span (click)=\"closeMessagesModal()\" [ngStyle]=\"getButtonCloseStyle()\">\r\n        <fa-icon [icon]=\"faTimes\" class=\"icon\" size=\"xl\"></fa-icon>\r\n      </span>\r\n    </div>\r\n    <hr [ngStyle]=\"styles.separator\" />\r\n    <div [ngStyle]=\"styles.modalBody\">\r\n      <app-message-panel\r\n        *ngIf=\"\r\n          activeTab === 'direct' &&\r\n          (eventType === 'webinar' || eventType === 'conference')\r\n        \"\r\n        [messages]=\"directMessages\"\r\n        [messagesLength]=\"messages.length\"\r\n        type=\"direct\"\r\n        [onSendMessagePress]=\"onSendMessagePress\"\r\n        [username]=\"member\"\r\n        [backgroundColor]=\"backgroundColor\"\r\n        [focusedInput]=\"focusedInput\"\r\n        [showAlert]=\"showAlert\"\r\n        [eventType]=\"eventType\"\r\n        [member]=\"member\"\r\n        [islevel]=\"islevel\"\r\n        [coHostResponsibility]=\"coHostResponsibility\"\r\n        [coHost]=\"coHost\"\r\n        [directMessageDetails]=\"directMessageDetails\"\r\n        [updateStartDirectMessage]=\"updateStartDirectMessage\"\r\n        [updateDirectMessageDetails]=\"updateDirectMessageDetails\"\r\n        [roomName]=\"roomName\"\r\n        [socket]=\"socket\"\r\n        [chatSetting]=\"chatSetting\"\r\n        [startDirectMessage]=\"startDirectMessage\"\r\n      >\r\n      </app-message-panel>\r\n\r\n      <app-message-panel\r\n        *ngIf=\"activeTab === 'group'\"\r\n        [messages]=\"groupMessages\"\r\n        [messagesLength]=\"messages.length\"\r\n        type=\"group\"\r\n        [onSendMessagePress]=\"onSendMessagePress\"\r\n        [username]=\"member\"\r\n        [backgroundColor]=\"backgroundColor\"\r\n        [focusedInput]=\"focusedInput\"\r\n        [showAlert]=\"showAlert\"\r\n        [eventType]=\"eventType\"\r\n        [member]=\"member\"\r\n        [islevel]=\"islevel\"\r\n        [coHostResponsibility]=\"coHostResponsibility\"\r\n        [coHost]=\"coHost\"\r\n        [directMessageDetails]=\"directMessageDetails\"\r\n        [updateStartDirectMessage]=\"updateStartDirectMessage\"\r\n        [updateDirectMessageDetails]=\"updateDirectMessageDetails\"\r\n        [roomName]=\"roomName\"\r\n        [socket]=\"socket\"\r\n        [chatSetting]=\"chatSetting\"\r\n        [startDirectMessage]=\"startDirectMessage\"\r\n      >\r\n      </app-message-panel>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { SwitchUserAudioType, SwitchUserAudioParameters } from '../../@types/types';\n\nexport interface SwitchAudioParameters extends SwitchUserAudioParameters {\n  defAudioID: string;\n  userDefaultAudioInputDevice: string;\n  prevAudioInputDevice: string;\n  updateUserDefaultAudioInputDevice: (deviceId: string) => void;\n  updatePrevAudioInputDevice: (deviceId: string) => void;\n\n  // mediasfu functions\n  switchUserAudio: SwitchUserAudioType;\n\n  getUpdatedAllParams: () => SwitchAudioParameters;\n  [key: string]: any;\n}\n\nexport interface SwitchAudioOptions {\n  audioPreference: string;\n  parameters: SwitchAudioParameters;\n}\n\n// Export the type definition for the function\nexport type SwitchAudioType = (options: SwitchAudioOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SwitchAudio {\n  /**\n   * Switches the audio input device based on user preference.\n   *\n   * @param {SwitchAudioParams} options - The function parameters.\n   * @returns {Promise<void>}\n   */\n\n  async switchAudio({ audioPreference, parameters }: SwitchAudioOptions): Promise<void> {\n    let {\n      defAudioID,\n      userDefaultAudioInputDevice,\n      prevAudioInputDevice,\n      updateUserDefaultAudioInputDevice,\n      updatePrevAudioInputDevice,\n\n      //mediasfu functions\n      switchUserAudio,\n    } = parameters;\n\n    if (audioPreference !== defAudioID) {\n      prevAudioInputDevice = userDefaultAudioInputDevice;\n      updatePrevAudioInputDevice(prevAudioInputDevice);\n      userDefaultAudioInputDevice = audioPreference;\n      updateUserDefaultAudioInputDevice(userDefaultAudioInputDevice);\n\n      if (defAudioID) {\n        await switchUserAudio({ audioPreference, parameters });\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert, SwitchUserVideoParameters, SwitchUserVideoType } from '../../@types/types';\n\nexport interface SwitchVideoParameters extends SwitchUserVideoParameters {\n  recordStarted: boolean;\n  recordResumed: boolean;\n  recordStopped: boolean;\n  recordPaused: boolean;\n  recordingMediaOptions: string;\n  videoAlreadyOn: boolean;\n  userDefaultVideoInputDevice: string;\n  defVideoID: string;\n  allowed: boolean;\n  updateDefVideoID: (deviceId: string) => void;\n  updatePrevVideoInputDevice: (deviceId: string) => void;\n  updateUserDefaultVideoInputDevice: (deviceId: string) => void;\n  updateIsMediaSettingsModalVisible: (isVisible: boolean) => void;\n  showAlert?: ShowAlert;\n\n  // Mediasfu functions\n  switchUserVideo: SwitchUserVideoType;\n\n  [key: string]: any;\n}\n\nexport interface SwitchVideoOptions {\n  videoPreference: string;\n  parameters: SwitchVideoParameters;\n}\n\n// Export the type definition for the function\nexport type SwitchVideoType = (options: SwitchVideoOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SwitchVideo {\n  /**\n   * Switches the user's video device based on the provided video preference.\n   *\n   * @param {SwitchVideoParams} options - The function parameters.\n   */\n\n  async switchVideo({ videoPreference, parameters }: SwitchVideoOptions): Promise<void> {\n    let {\n      recordStarted,\n      recordResumed,\n      recordStopped,\n      recordPaused,\n      recordingMediaOptions,\n      videoAlreadyOn,\n      userDefaultVideoInputDevice,\n      defVideoID,\n      allowed,\n      updateDefVideoID,\n      updatePrevVideoInputDevice,\n      updateUserDefaultVideoInputDevice,\n      updateIsMediaSettingsModalVisible,\n\n      //mediasfu functions\n      showAlert,\n      switchUserVideo,\n    } = parameters;\n\n    // Check if recording is in progress and whether the selected video device is the default one\n    let checkoff = false;\n    if ((recordStarted || recordResumed) && !recordStopped && !recordPaused) {\n      if (recordingMediaOptions === 'video') {\n        checkoff = true;\n      }\n    }\n\n    // Check camera access permission\n    if (!allowed) {\n      showAlert?.({\n        message: 'Allow access to your camera by starting it for the first time.',\n        type: 'danger',\n        duration: 3000,\n      });\n      return;\n    }\n\n    // Check video state and display appropriate alert messages\n    if (checkoff) {\n      if (videoAlreadyOn) {\n        showAlert?.({\n          message: 'Please turn off your video before switching.',\n          type: 'danger',\n          duration: 3000,\n        });\n        return;\n      }\n    } else {\n      if (!videoAlreadyOn) {\n        showAlert?.({\n          message: 'Please turn on your video before switching.',\n          type: 'danger',\n          duration: 3000,\n        });\n        return;\n      }\n    }\n\n    // Set default video ID if not already set\n    if (!defVideoID) {\n      defVideoID = userDefaultVideoInputDevice ?? 'default';\n      updateDefVideoID(defVideoID);\n    }\n\n    // Switch video only if the selected video device is different from the default\n    if (videoPreference !== defVideoID) {\n      const prevVideoInputDevice = userDefaultVideoInputDevice;\n      updatePrevVideoInputDevice(prevVideoInputDevice);\n\n      userDefaultVideoInputDevice = videoPreference;\n      updateUserDefaultVideoInputDevice(userDefaultVideoInputDevice);\n\n      if (defVideoID) {\n        updateIsMediaSettingsModalVisible(false);\n        await switchUserVideo({ videoPreference, checkoff, parameters });\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert, SwitchUserVideoAltType, SwitchUserVideoParameters } from '../../@types/types';\n\nexport interface SwitchVideoAltParameters extends SwitchUserVideoParameters {\n  recordStarted: boolean;\n  recordResumed: boolean;\n  recordStopped: boolean;\n  recordPaused: boolean;\n  recordingMediaOptions: string;\n  videoAlreadyOn: boolean;\n  currentFacingMode: string;\n  prevFacingMode: string;\n  allowed: boolean;\n  audioOnlyRoom: boolean;\n  updateCurrentFacingMode: (mode: string) => void;\n  updatePrevFacingMode: (mode: string) => void;\n  updateIsMediaSettingsModalVisible: (isVisible: boolean) => void;\n  showAlert?: ShowAlert;\n\n  // mediasfu functions\n  switchUserVideoAlt: SwitchUserVideoAltType;\n\n  getUpdatedAllParams: () => SwitchVideoAltParameters;\n  // [key: string]: any;\n}\n\nexport interface SwitchVideoAltOptions {\n  parameters: SwitchVideoAltParameters;\n}\n\n// Export the type definition for the function\nexport type SwitchVideoAltType = (options: SwitchVideoAltOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SwitchVideoAlt {\n  async switchVideoAlt({ parameters }: SwitchVideoAltOptions): Promise<void> {\n    let {\n      recordStarted,\n      recordResumed,\n      recordStopped,\n      recordPaused,\n      recordingMediaOptions,\n      videoAlreadyOn,\n      currentFacingMode,\n      allowed,\n      audioOnlyRoom,\n      updateCurrentFacingMode,\n      updateIsMediaSettingsModalVisible,\n\n      showAlert,\n\n      //media functions\n      switchUserVideoAlt,\n    } = parameters;\n\n    if (audioOnlyRoom) {\n      showAlert?.({\n        message: 'You cannot turn on your camera in an audio-only event.',\n        type: 'danger',\n        duration: 3000,\n      });\n      return;\n    }\n\n    let checkoff = false;\n    if (\n      (recordStarted || recordResumed) &&\n      !recordStopped &&\n      !recordPaused &&\n      recordingMediaOptions === 'video'\n    ) {\n      checkoff = true;\n    }\n\n    if (!allowed) {\n      showAlert?.({\n        message: 'Allow access to your camera by starting it for the first time.',\n        type: 'danger',\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (checkoff) {\n      if (videoAlreadyOn) {\n        showAlert?.({\n          message: 'Please turn off your video before switching.',\n          type: 'danger',\n          duration: 3000,\n        });\n        return;\n      }\n    } else {\n      if (!videoAlreadyOn) {\n        showAlert?.({\n          message: 'Please turn on your video before switching.',\n          type: 'danger',\n          duration: 3000,\n        });\n        return;\n      }\n    }\n\n    // Camera switching logic here\n    let newFacingMode = currentFacingMode === 'environment' ? 'user' : 'environment';\n\n    updateCurrentFacingMode(newFacingMode);\n    updateIsMediaSettingsModalVisible(false);\n\n    await switchUserVideoAlt({ videoPreference: newFacingMode, checkoff, parameters });\n  }\n}\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport {\n  faTimes,\n  faSyncAlt,\n  faCamera,\n  faMicrophone,\n  faPhotoFilm,\n} from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\nimport {\n  SwitchAudio,\n  SwitchAudioOptions,\n  SwitchAudioParameters,\n} from '../../../methods/stream-methods/switch-audio.service';\nimport {\n  SwitchVideo,\n  SwitchVideoOptions,\n  SwitchVideoParameters,\n} from '../../../methods/stream-methods/switch-video.service';\nimport {\n  SwitchVideoAlt,\n  SwitchVideoAltOptions,\n  SwitchVideoAltParameters,\n} from '../../../methods/stream-methods/switch-video-alt.service';\n\nexport interface MediaSettingsModalParameters\n  extends SwitchAudioParameters,\n    SwitchVideoParameters,\n    SwitchVideoAltParameters {\n  userDefaultVideoInputDevice: string;\n  videoInputs: MediaDeviceInfo[];\n  audioInputs: MediaDeviceInfo[];\n  userDefaultAudioInputDevice: string;\n  isBackgroundModalVisible: boolean;\n  updateIsBackgroundModalVisible: (visible: boolean) => void;\n\n  // mediasfu functions\n  getUpdatedAllParams: () => MediaSettingsModalParameters;\n}\n\nexport interface MediaSettingsModalOptions {\n  isMediaSettingsModalVisible: boolean;\n  onMediaSettingsClose: () => void;\n  switchCameraOnPress?: (options: SwitchVideoAltOptions) => Promise<void>;\n  switchVideoOnPress?: (options: SwitchVideoOptions) => Promise<void>;\n  switchAudioOnPress?: (options: SwitchAudioOptions) => Promise<void>;\n  parameters: MediaSettingsModalParameters;\n  position: string;\n  backgroundColor: string;\n}\n\nexport type MediaSettingsModalType = (options: MediaSettingsModalOptions) => HTMLElement;\n\n/**\n * Component for displaying and managing media settings in a modal.\n *\n * @selector app-media-settings-modal\n * @templateUrl ./media-settings-modal.component.html\n * @styleUrls ./media-settings-modal.component.css\n * @standalone true\n * @imports [CommonModule, FontAwesomeModule, FormsModule]\n *\n * @class MediaSettingsModal\n * @implements OnInit, OnChanges\n *\n * @property {boolean} isMediaSettingsModalVisible - Determines if the media settings modal is visible.\n * @property {() => void} onMediaSettingsClose - Callback function to close the media settings modal.\n * @property {(params: any) => Promise<void>} switchCameraOnPress - Callback function to switch the camera.\n * @property {(params: any) => Promise<void>} switchVideoOnPress - Callback function to switch the video.\n * @property {(params: any) => Promise<void>} switchAudioOnPress - Callback function to switch the audio.\n * @property {MediaSettingsModalParameters} parameters - Parameters for the media settings modal.\n * @property {string} position - Position of the modal on the screen. Default is 'topRight'.\n * @property {string} backgroundColor - Background color of the modal. Default is '#83c0e9'.\n *\n * @property {IconDefinition} faTimes - FontAwesome icon for closing the modal.\n * @property {IconDefinition} faSyncAlt - FontAwesome icon for sync.\n * @property {IconDefinition} faCamera - FontAwesome icon for camera.\n * @property {IconDefinition} faMicrophone - FontAwesome icon for microphone.\n * @property {IconDefinition} faPhotoFilm - FontAwesome icon for photo film.\n *\n * @property {string} selectedVideoInput - Currently selected video input device ID.\n * @property {string} selectedAudioInput - Currently selected audio input device ID.\n * @property {string} prevSelectedVideoInput - Previously selected video input device ID.\n * @property {string} prevSelectedAudioInput - Previously selected audio input device ID.\n *\n * @constructor\n * @param {SwitchAudio} switchAudioService - Service for switching audio.\n * @param {SwitchVideo} switchVideoService - Service for switching video.\n * @param {SwitchVideoAlt} switchVideoAltService - Alternative service for switching video.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes.\n * @method setupDefaultServices - Sets up default services for switching camera, video, and audio if not provided.\n * @method updateParameters - Updates the parameters for the modal.\n * @method ensureDefaultSelections - Ensures that default selections for video and audio inputs are set.\n * @method initializeModalSettings - Initializes settings for the modal.\n * @method modalContentStyle - Returns the style object for the modal content.\n * @method handleSwitchCamera - Handles the action to switch the camera.\n * @method handleVideoSwitch - Handles the action to switch the video input.\n * @method handleAudioSwitch - Handles the action to switch the audio input.\n * @method handleModalClose - Handles the action to close the modal.\n * @method showVirtual - Toggles the visibility of the virtual background modal.\n */\n@Component({\n  selector: 'app-media-settings-modal',\n  templateUrl: './media-settings-modal.component.html',\n  styleUrls: ['./media-settings-modal.component.css'],\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, FormsModule],\n})\nexport class MediaSettingsModal implements OnInit, OnChanges {\n  @Input() isMediaSettingsModalVisible = false;\n  @Input() onMediaSettingsClose!: () => void;\n  @Input() switchCameraOnPress!: (params: any) => Promise<void>;\n  @Input() switchVideoOnPress!: (params: any) => Promise<void>;\n  @Input() switchAudioOnPress!: (params: any) => Promise<void>;\n  @Input() parameters!: MediaSettingsModalParameters;\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#83c0e9';\n\n  faTimes = faTimes;\n  faSyncAlt = faSyncAlt;\n  faCamera = faCamera;\n  faMicrophone = faMicrophone;\n  faPhotoFilm = faPhotoFilm;\n\n  selectedVideoInput!: string;\n  selectedAudioInput!: string;\n  prevSelectedVideoInput!: string;\n  prevSelectedAudioInput!: string;\n\n  constructor(\n    private switchAudioService: SwitchAudio,\n    private switchVideoService: SwitchVideo,\n    private switchVideoAltService: SwitchVideoAlt,\n  ) {}\n\n  ngOnInit() {\n    if (this.isMediaSettingsModalVisible) {\n      this.updateParameters();\n      this.setupDefaultServices();\n      this.initializeModalSettings();\n      this.ensureDefaultSelections();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes['isMediaSettingsModalVisible'] &&\n      this.isMediaSettingsModalVisible &&\n      this.parameters\n    ) {\n      this.updateParameters();\n      this.setupDefaultServices();\n      this.ensureDefaultSelections();\n    }\n  }\n\n  setupDefaultServices() {\n    if (!this.switchCameraOnPress) {\n      this.switchCameraOnPress = (params: any) => this.switchVideoAltService.switchVideoAlt(params);\n    }\n\n    if (!this.switchVideoOnPress) {\n      this.switchVideoOnPress = (params: any) => this.switchVideoService.switchVideo(params);\n    }\n\n    if (!this.switchAudioOnPress) {\n      this.switchAudioOnPress = (params: any) => this.switchAudioService.switchAudio(params);\n    }\n  }\n\n  updateParameters() {\n    this.parameters = {\n      ...this.parameters,\n      ...this.parameters.getUpdatedAllParams(),\n    };\n  }\n\n  ensureDefaultSelections() {\n    if (!this.selectedVideoInput && this.parameters.videoInputs.length > 0) {\n      this.selectedVideoInput = this.parameters.videoInputs[0].deviceId;\n      this.prevSelectedVideoInput = this.selectedVideoInput;\n      this.handleVideoSwitch({ target: { value: this.selectedVideoInput } } as any);\n    }\n\n    if (!this.selectedAudioInput && this.parameters.audioInputs.length > 0) {\n      this.selectedAudioInput = this.parameters.audioInputs[0].deviceId;\n      this.prevSelectedAudioInput = this.selectedAudioInput;\n      this.handleAudioSwitch({ target: { value: this.selectedAudioInput } } as any);\n    }\n  }\n\n  initializeModalSettings() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.7 * screenWidth;\n    if (modalWidth > 350) {\n      modalWidth = 350;\n    }\n  }\n\n  modalContentStyle() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.8 * screenWidth;\n    if (modalWidth > 350) {\n      modalWidth = 350;\n    }\n\n    return {\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      width: `${modalWidth}px`,\n      maxHeight: '65%',\n      overflowY: 'auto',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n\n  handleSwitchCamera = async () => {\n    await this.switchCameraOnPress({ parameters: this.parameters });\n  };\n\n  handleVideoSwitch = async (event: Event) => {\n    const value = (event.target as HTMLSelectElement).value;\n    if (value !== this.prevSelectedVideoInput) {\n      this.selectedVideoInput = value;\n      this.prevSelectedVideoInput = this.selectedVideoInput;\n      await this.switchVideoOnPress({ videoPreference: value, parameters: this.parameters });\n    }\n  };\n\n  handleAudioSwitch = async (event: Event) => {\n    const value = (event.target as HTMLSelectElement).value;\n    if (value !== this.prevSelectedAudioInput) {\n      this.selectedAudioInput = value;\n      this.prevSelectedAudioInput = this.selectedAudioInput;\n      await this.switchAudioOnPress({ audioPreference: value, parameters: this.parameters });\n    }\n  };\n\n  handleModalClose() {\n    this.onMediaSettingsClose();\n  }\n\n  showVirtual() {\n    this.parameters.updateIsBackgroundModalVisible(!this.parameters.isBackgroundModalVisible);\n  }\n}\n","<div *ngIf=\"isMediaSettingsModalVisible\" class=\"modal-container\">\r\n  <div class=\"modal-content\" [ngStyle]=\"modalContentStyle()\">\r\n    <div class=\"modal-header\">\r\n      <div class=\"modal-title\">Media Settings</div>\r\n      <div (click)=\"handleModalClose()\">\r\n        <fa-icon [icon]=\"faTimes\" class=\"icon\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <hr class=\"hr\" />\r\n    <div class=\"modal-body\">\r\n      <div class=\"form-group\">\r\n        <label>\r\n          <fa-icon [icon]=\"faCamera\" [ngStyle]=\"{'margin-right': '8px'}\"></fa-icon> Select Camera:\r\n        </label>\r\n        <select [(ngModel)]=\"selectedVideoInput\" (change)=\"handleVideoSwitch($event)\" class=\"form-control\">\r\n          <option *ngFor=\"let input of parameters.videoInputs\" [value]=\"input.deviceId\">\r\n            {{ input.label }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>\r\n          <fa-icon [icon]=\"faMicrophone\" [ngStyle]=\"{'margin-right': '8px'}\"></fa-icon> Select Microphone:\r\n        </label>\r\n        <select [(ngModel)]=\"selectedAudioInput\" (change)=\"handleAudioSwitch($event)\" class=\"form-control\">\r\n          <option *ngFor=\"let input of parameters.audioInputs\" [value]=\"input.deviceId\">\r\n            {{ input.label }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <hr class=\"hr\" />\r\n      <div class=\"form-group\">\r\n        <button (click)=\"handleSwitchCamera()\" class=\"btn-switch\">\r\n          <fa-icon [icon]=\"faSyncAlt\" [ngStyle]=\"{'margin-right': '8px'}\"></fa-icon> Switch Camera\r\n        </button>\r\n      </div>\r\n      <hr class=\"hr\" />\r\n      <div class=\"form-group\">\r\n        <button (click)=\"showVirtual()\" class=\"btn-virtual\">\r\n          <fa-icon [icon]=\"faPhotoFilm\" [ngStyle]=\"{'margin-right': '8px'}\"></fa-icon> Virtual Background\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// confirm-exit.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\n\nexport interface ConfirmExitOptions {\n  socket: Socket;\n  member: string;\n  roomName: string;\n  ban?: boolean;\n}\n\n// Export the type definition for the function\nexport type ConfirmExitType = (options: ConfirmExitOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmExit {\n  /**\n   * Confirms the exit of a member from a room and optionally bans them.\n   *\n   * @param {Object} options - The options for confirming the exit.\n   * @param {Socket} options.socket - The socket instance to emit the event.\n   * @param {string} options.member - The member who is exiting.\n   * @param {string} options.roomName - The name of the room the member is exiting from.\n   * @param {boolean} [options.ban=false] - Whether to ban the member from the room.\n   * @returns {Promise<void>} A promise that resolves when the exit is confirmed.\n   */\n  async confirmExit({ socket, member, roomName, ban = false }: ConfirmExitOptions): Promise<void> {\n    // Emit a socket event to disconnect the user from the room\n    socket.emit('disconnectUser', { member: member, roomName: roomName, ban: ban });\n  }\n}\n","import { Component, Input, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  ConfirmExit,\n  ConfirmExitOptions,\n} from '../../../methods/exit-methods/confirm-exit.service';\nimport { Socket } from 'socket.io-client';\n\nexport interface ConfirmExitModalOptions {\n  isConfirmExitModalVisible: boolean;\n  onConfirmExitClose: () => void;\n  position?: 'topRight' | 'topLeft' | 'bottomRight' | 'bottomLeft';\n  backgroundColor?: string;\n  exitEventOnConfirm?: (options: ConfirmExitOptions) => void;\n  member: string;\n  ban?: boolean;\n  roomName: string;\n  socket: Socket;\n  islevel: string;\n}\n\nexport type ConfirmExitModalType = (options: ConfirmExitModalOptions) => HTMLElement;\n/**\n * Component for displaying a confirmation modal when exiting.\n *\n * @selector app-confirm-exit-modal\n * @templateUrl ./confirm-exit-modal.component.html\n * @styleUrls ./confirm-exit-modal.component.css\n * @standalone true\n * @imports [CommonModule, FormsModule, FontAwesomeModule]\n *\n * @class ConfirmExitModal\n * @implements OnInit, OnChanges\n *\n * @property {boolean} isConfirmExitModalVisible - Visibility state of the confirmation modal.\n * @property {() => void} onConfirmExitClose - Callback function to close the modal.\n * @property {string} position - Position of the modal on the screen.\n * @property {string} backgroundColor - Background color of the modal.\n * @property {(options: ConfirmExitOptions) => void} exitEventOnConfirm - Event triggered on confirming exit.\n * @property {string} member - Member information.\n * @property {boolean} ban - Ban status.\n * @property {string} roomName - Name of the room.\n * @property {Socket} socket - Socket instance.\n * @property {string} islevel - Level information.\n * @property {IconDefinition} faTimes - FontAwesome icon for close button.\n * @property {any} modalContentStyle - Style object for modal content.\n *\n * @constructor\n * @param {ConfirmExit} confirmExitService - Service for handling exit confirmation.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes.\n * @param {SimpleChanges} changes - Object of current and previous property values.\n * @method handleConfirmExit - Handles the exit confirmation event.\n */\n@Component({\n  selector: 'app-confirm-exit-modal',\n  templateUrl: './confirm-exit-modal.component.html',\n  styleUrls: ['./confirm-exit-modal.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, FontAwesomeModule],\n})\nexport class ConfirmExitModal implements OnInit, OnChanges {\n  @Input() isConfirmExitModalVisible = false;\n  @Input() onConfirmExitClose!: () => void;\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#83c0e9';\n  @Input() exitEventOnConfirm!: (options: ConfirmExitOptions) => void;\n  @Input() member = '';\n  @Input() ban = false;\n  @Input() roomName = '';\n  @Input() socket: Socket = {} as Socket;\n  @Input() islevel = '';\n\n  faTimes = faTimes;\n\n  modalContentStyle: any;\n\n  constructor(private confirmExitService: ConfirmExit) {}\n\n  ngOnInit() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.8 * screenWidth;\n    if (modalWidth > 350) {\n      modalWidth = 350;\n    }\n\n    this.modalContentStyle = {\n      backgroundColor: this.backgroundColor,\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n      width: `${modalWidth}px`,\n    };\n\n    if (!this.exitEventOnConfirm) {\n      this.exitEventOnConfirm = this.confirmExitService.confirmExit.bind(this.confirmExitService);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['isConfirmExitModalVisible'] && changes['islevel']) {\n      this.islevel = changes['islevel'].currentValue;\n    }\n  }\n\n  handleConfirmExit() {\n    this.exitEventOnConfirm({\n      socket: this.socket,\n      member: this.member,\n      roomName: this.roomName,\n      ban: this.ban,\n    });\n    this.onConfirmExitClose();\n  }\n}\n","<div *ngIf=\"isConfirmExitModalVisible\" class=\"modal-container\">\r\n  <div class=\"modal-content\" [ngStyle]=\"modalContentStyle\">\r\n    <div class=\"modal-header\" style=\"display: flex; justify-content: space-between;\">\r\n      <h2 class=\"modal-title\">Confirm Exit</h2>\r\n      <span class=\"close-icon\" (click)=\"onConfirmExitClose()\">\r\n        <fa-icon [icon]=\"faTimes\" size=\"lg\"></fa-icon>\r\n      </span>\r\n    </div>\r\n    <hr />\r\n    <div class=\"modal-body\">\r\n      <p class=\"confirm-exit-text\">\r\n        {{ islevel === '2' ? 'This will end the event for all. Confirm exit.' : 'Are you sure you want to exit?' }}\r\n      </p>\r\n    </div>\r\n    <hr />\r\n    <div class=\"modal-footer\">\r\n      <button class=\"cancel-button\" (click)=\"onConfirmExitClose()\">Cancel</button>\r\n      <button class=\"confirm-button\" (click)=\"handleConfirmExit()\">\r\n        {{ islevel === '2' ? 'End Event' : 'Exit' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, OnDestroy, SimpleChanges } from '@angular/core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Socket } from 'socket.io-client';\n\nexport interface ConfirmHereModalOptions {\n  isConfirmHereModalVisible: boolean;\n  position: string;\n  backgroundColor: string;\n  displayColor: string;\n  onConfirmHereClose: () => void;\n  socket: Socket;\n  roomName: string;\n  member: string;\n  countdownDuration?: number;\n}\n\nexport type ConfirmHereModalType = (options: ConfirmHereModalOptions) => void;\n\n/**\n * Component representing a confirmation modal with a countdown timer.\n *\n * @selector app-confirm-here-modal\n * @templateUrl ./confirm-here-modal.component.html\n * @styleUrls ./confirm-here-modal.component.css\n * @standalone true\n * @imports [CommonModule, FontAwesomeModule]\n *\n * @styles\n * - .spinner: Styles for the loading spinner.\n * - @keyframes spin: Keyframes for spinner animation.\n * - .modal-content: Styles for the modal content container.\n * - .loading-text: Styles for the loading text.\n *\n * @class ConfirmHereModal\n * @implements OnInit, OnDestroy\n *\n * @property {boolean} isConfirmHereModalVisible - Determines if the modal is visible.\n * @property {string} position - Position of the modal.\n * @property {string} backgroundColor - Background color of the modal.\n * @property {string} displayColor - Display color of the modal.\n * @property {Function} onConfirmHereClose - Callback function to execute when the modal is closed.\n * @property {number} [countdownDuration=120] - Duration of the countdown in seconds.\n * @property {Socket} socket - Socket instance for communication.\n * @property {string} roomName - Name of the room for socket communication.\n * @property {string} member - Member identifier for socket communication.\n * @property {IconDefinition} faSpinner - FontAwesome spinner icon.\n * @property {number} counter - Countdown counter.\n * @property {any} countdownInterval - Interval ID for the countdown timer.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes.\n * @method ngOnDestroy - Lifecycle hook that is called just before the component is destroyed.\n * @method startCountdown - Starts the countdown timer.\n * @method clearCountdown - Clears the countdown timer.\n * @method handleConfirmHere - Handles the confirmation action and closes the modal.\n *\n * @getter spinnerContainerStyle - Returns the style object for the spinner container.\n * @getter modalContainerStyle - Returns the style object for the modal container.\n * @getter modalContentStyle - Returns the style object for the modal content.\n */\n@Component({\n  selector: 'app-confirm-here-modal',\n  templateUrl: './confirm-here-modal.component.html',\n  styleUrls: ['./confirm-here-modal.component.css'],\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  styles: [\n    `\n      .spinner {\n        border: 12px solid #f3f3f3; /* Light grey */\n        border-top: 12px solid black; /* Black */\n        border-radius: 50%;\n        width: 50px;\n        height: 50px;\n        animation: spin 2s linear infinite;\n      }\n      @keyframes spin {\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n      .modal-content {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n      .loading-text {\n        margin-top: 10px;\n      }\n    `,\n  ],\n})\nexport class ConfirmHereModal implements OnInit, OnDestroy {\n  @Input() isConfirmHereModalVisible = false;\n  @Input() position = 'center';\n  @Input() backgroundColor = '#83c0e9';\n  @Input() displayColor = '#000000';\n  @Input() onConfirmHereClose!: () => void;\n  @Input() countdownDuration?: number = 120;\n  @Input() socket!: Socket;\n  @Input() roomName!: string;\n  @Input() member!: string;\n\n  faSpinner = faSpinner;\n  counter!: number;\n  countdownInterval: any;\n\n  ngOnInit() {\n    this.counter = this.countdownDuration ? this.countdownDuration : 120;\n    if (this.isConfirmHereModalVisible) {\n      this.startCountdown();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['isConfirmHereModalVisible'] && changes['isConfirmHereModalVisible'].currentValue) {\n      this.counter = this.countdownDuration ? this.countdownDuration : 120;\n      this.startCountdown();\n    } else {\n      this.clearCountdown();\n    }\n  }\n\n  ngOnDestroy() {\n    this.clearCountdown();\n  }\n\n  startCountdown = () => {\n    this.countdownInterval = setInterval(() => {\n      this.counter--;\n      if (this.counter <= 0) {\n        this.clearCountdown();\n        this.socket.emit('disconnectUser', {\n          member: this.member,\n          roomName: this.roomName,\n          ban: false,\n        });\n        this.onConfirmHereClose();\n      }\n    }, 1000);\n  };\n\n  clearCountdown = () => {\n    if (this.countdownInterval) {\n      clearInterval(this.countdownInterval);\n    }\n  };\n\n  handleConfirmHere() {\n    this.clearCountdown();\n    this.onConfirmHereClose();\n  }\n\n  get spinnerContainerStyle() {\n    return {\n      marginBottom: '20px',\n    };\n  }\n\n  get modalContainerStyle() {\n    return {\n      'background-color': this.backgroundColor || 'rgba(0, 0, 0, 0.5)',\n      display: this.isConfirmHereModalVisible ? 'block' : 'none',\n    };\n  }\n\n  get modalContentStyle() {\n    return {\n      'background-color': this.backgroundColor,\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n    };\n  }\n}\n","<div *ngIf=\"isConfirmHereModalVisible\" [ngStyle]=\"modalContainerStyle\" class=\"modal-container\">\r\n  <div [ngStyle]=\"modalContentStyle\" class=\"modal-content\">\r\n    <div class=\"spinner\" [ngStyle]=\"spinnerContainerStyle\"></div>\r\n    <h2 style=\"font-size: 1.5rem; font-weight: bold; margin-bottom: 1rem; color: black;\">Are you still there?</h2>\r\n    <p style=\"font-size: 1rem; color: black; margin-bottom: 1.5rem;\">Please confirm if you are still present.</p>\r\n    <p style=\"font-size: 0.9rem; color: black; margin-bottom: 1rem;\">Time remaining: <strong>{{ counter }}</strong></p>\r\n    <button (click)=\"handleConfirmHere()\" style=\"background-color: #dc3545; color: white; padding: 0.5rem 1rem; border-radius: 5px; border: none; cursor: pointer; font-weight: bold; font-size: 1rem;\">\r\n      Yes\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { MeetingIdComponent } from '../../menu-components/meeting-id-component/meeting-id-component.component';\nimport { MeetingPasscodeComponent } from '../../menu-components/meeting-passcode-component/meeting-passcode-component.component';\nimport { ShareButtonsComponent } from '../../menu-components/share-buttons-component/share-buttons-component.component';\nimport { EventType } from '../../../@types/types';\n\nexport interface ShareEventModalOptions {\n  backgroundColor?: string;\n  isShareEventModalVisible: boolean;\n  onShareEventClose: () => void;\n  shareButtons?: boolean;\n  position?: string;\n  roomName: string;\n  adminPasscode?: string;\n  islevel?: string;\n  eventType: EventType;\n}\n\nexport type ShareEventModalType = (options: ShareEventModalOptions) => void;\n\n/**\n * Component for displaying a modal to share event details.\n *\n * @component\n * @selector app-share-event-modal\n * @templateUrl ./share-event-modal.component.html\n * @styleUrls ./share-event-modal.component.css\n *\n * @imports CommonModule, FontAwesomeModule, MeetingIdComponent, MeetingPasscodeComponent, ShareButtonsComponent\n *\n * @property {string} backgroundColor - Background color of the modal content.\n * @property {boolean} isShareEventModalVisible - Visibility state of the share event modal.\n * @property {Function} onShareEventClose - Callback function to handle modal close event.\n * @property {string} roomName - Name of the room to be shared.\n * @property {string} adminPasscode - Admin passcode for the room.\n * @property {string} islevel - Level of the event (e.g., admin, user).\n * @property {string} position - Position of the modal on the screen (e.g., topRight, bottomLeft).\n * @property {boolean} shareButtons - Flag to display share buttons in the modal.\n * @property {EventType} eventType - Type of event (e.g., chat, broadcast, webinar).\n *\n * @method handleClose - Closes the share event modal by invoking the onShareEventClose callback.\n *\n * @getter modalContainerStyle - Returns the style object for the modal container.\n * @getter modalContentStyle - Returns the style object for the modal content.\n */\n@Component({\n  selector: 'app-share-event-modal',\n  templateUrl: './share-event-modal.component.html',\n  styleUrls: ['./share-event-modal.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    MeetingIdComponent,\n    MeetingPasscodeComponent,\n    ShareButtonsComponent,\n  ],\n})\nexport class ShareEventModal {\n  @Input() backgroundColor = 'rgba(255, 255, 255, 0.25)';\n  @Input() isShareEventModalVisible = false;\n  @Input() onShareEventClose!: () => void;\n  @Input() roomName!: string;\n  @Input() adminPasscode!: string;\n  @Input() islevel!: string;\n  @Input() position = 'topRight';\n  @Input() shareButtons = true;\n  @Input() eventType!: EventType;\n\n  faTimes = faTimes;\n\n  handleClose() {\n    this.onShareEventClose();\n  }\n\n  get modalContainerStyle() {\n    return {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: this.isShareEventModalVisible ? 'block' : 'none',\n      zIndex: 999,\n    };\n  }\n\n  get modalContentStyle() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.8 * screenWidth;\n    if (modalWidth > 350) {\n      modalWidth = 350;\n    }\n\n    return {\n      position: 'fixed',\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      width: `${modalWidth}px`,\n      maxHeight: '60%',\n      overflowY: 'auto',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n}\n","<div [ngStyle]=\"modalContainerStyle\">\r\n  <div [ngStyle]=\"modalContentStyle\">\r\n    <div style=\"display: flex; flex-direction: row-reverse; margin-bottom: 15px;\">\r\n      <div (click)=\"handleClose()\" style=\"padding: 5px;\">\r\n        <fa-icon [icon]=\"faTimes\" size=\"xl\" style=\"font-size: 20px; color: black;\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <hr style=\"height: 1px; background-color: black; margin: 5px 0;\" />\r\n    <div style=\"flex: 1;\">\r\n      <div style=\"margin-bottom: 10px;\" *ngIf=\"islevel === '2'\">\r\n        <app-meeting-passcode-component [meetingPasscode]=\"adminPasscode\"></app-meeting-passcode-component>\r\n      </div>\r\n      <div style=\"margin-bottom: 10px;\">\r\n        <app-meeting-id-component [meetingID]=\"roomName\"></app-meeting-id-component>\r\n      </div>\r\n      <div *ngIf=\"shareButtons\">\r\n        <app-share-buttons-component [meetingID]=\"roomName\" [eventType]=\"eventType\"></app-share-buttons-component>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faQrcode } from '@fortawesome/free-solid-svg-icons';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner'; // Import the zxing-ngx-scanner module\nimport { Socket } from 'socket.io-client';\nimport { ConnectSocketType } from '../../../sockets/socket-manager.service';\nimport { ShowAlert } from '../../../@types/types';\n\nconst MAX_ATTEMPTS = 10; // Maximum number of unsuccessful attempts before rate limiting\nconst RATE_LIMIT_DURATION = 3 * 60 * 60 * 1000; // 3 hours in milliseconds\n\nexport interface WelcomePageParameters {\n  imgSrc?: string;\n  showAlert?: ShowAlert;\n  updateIsLoadingModalVisible: (visible: boolean) => void;\n  connectSocket: ConnectSocketType;\n  updateSocket: (socket: Socket) => void;\n  updateValidated: (validated: boolean) => void;\n  updateApiUserName: (apiUserName: string) => void;\n  updateApiToken: (apiToken: string) => void;\n  updateLink: (link: string) => void;\n  updateRoomName: (roomName: string) => void;\n  updateMember: (userName: string) => void;\n}\n\n// Define the prop type for the component\nexport interface WelcomePageOptions {\n  parameters: WelcomePageParameters;\n}\n\n// Define the type for the component function\nexport type WelcomePageType = (options: WelcomePageOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.css'],\n  standalone: true,\n  imports: [ZXingScannerModule, CommonModule, FontAwesomeModule, ReactiveFormsModule],\n  providers: [CookieService],\n})\nexport class WelcomePage implements OnInit {\n  welcomeForm: FormGroup;\n  error = '';\n  isScannerVisible = false;\n  scannedData: any = null;\n  parameters: WelcomePageParameters = {} as WelcomePageParameters;\n  faQrcode = faQrcode;\n  allowedCameras: MediaDeviceInfo[] = []; // List of allowed cameras\n  currentDevice: MediaDeviceInfo | null = null; // Active camera device\n  imgSrc = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private cookieService: CookieService,\n    @Optional() @Inject('parameters') injectedParameters: WelcomePageParameters,\n  ) {\n    this.welcomeForm = this.fb.group({\n      name: [\n        '',\n        [Validators.required, Validators.pattern('^[a-zA-Z0-9]+$'), Validators.maxLength(12)],\n      ],\n      secret: [\n        '',\n        [Validators.required, Validators.pattern('^[a-zA-Z0-9]+$'), Validators.maxLength(64)],\n      ],\n      eventID: [\n        '',\n        [Validators.required, Validators.pattern('^[a-zA-Z0-9]+$'), Validators.maxLength(32)],\n      ],\n      link: ['', [Validators.required, Validators.pattern('^https?://.+mediasfu\\\\.com.+$')]],\n    });\n    this.parameters = injectedParameters || this.parameters;\n  }\n\n  ngOnInit() {\n    this.askForCameraPermission();\n  }\n\n  async checkLimitsAndMakeRequest(\n    apiUserName: string,\n    apiToken: string,\n    link: string,\n    userName: string,\n  ) {\n    const TIMEOUT_DURATION = 10000; // 10 seconds\n\n    let unsuccessfulAttempts = parseInt(this.cookieService.get('unsuccessfulAttempts')) || 0;\n    let lastRequestTimestamp = parseInt(this.cookieService.get('lastRequestTimestamp')) || 0;\n\n    if (unsuccessfulAttempts >= MAX_ATTEMPTS) {\n      if (Date.now() - lastRequestTimestamp < RATE_LIMIT_DURATION) {\n        this.parameters.showAlert?.({\n          message: 'Too many unsuccessful attempts. Please try again later.',\n          type: 'danger',\n          duration: 3000,\n        });\n        this.cookieService.set('lastRequestTimestamp', Date.now().toString());\n        return;\n      } else {\n        unsuccessfulAttempts = 0;\n        this.cookieService.set('unsuccessfulAttempts', unsuccessfulAttempts.toString());\n        this.cookieService.set('lastRequestTimestamp', Date.now().toString());\n      }\n    }\n\n    try {\n      this.parameters.updateIsLoadingModalVisible(true);\n\n      const socketPromise = this.parameters.connectSocket({ apiUserName, apiToken, link });\n      const timeoutPromise = new Promise((_, reject) =>\n        setTimeout(() => reject(new Error('Request timed out')), TIMEOUT_DURATION),\n      );\n\n      const socket = await Promise.race([socketPromise, timeoutPromise]);\n\n      if (socket && socket instanceof Socket && socket.id) {\n        unsuccessfulAttempts = 0;\n        this.cookieService.set('unsuccessfulAttempts', unsuccessfulAttempts.toString());\n        this.cookieService.set('lastRequestTimestamp', Date.now().toString());\n        this.parameters.updateSocket(socket);\n        this.parameters.updateApiUserName(apiUserName);\n        this.parameters.updateApiToken(apiToken);\n        this.parameters.updateLink(link);\n        this.parameters.updateRoomName(apiUserName);\n        this.parameters.updateMember(userName);\n        this.parameters.updateValidated(true);\n      } else {\n        unsuccessfulAttempts += 1;\n        this.cookieService.set('unsuccessfulAttempts', unsuccessfulAttempts.toString());\n        this.cookieService.set('lastRequestTimestamp', Date.now().toString());\n        this.parameters.updateIsLoadingModalVisible(false);\n\n        if (unsuccessfulAttempts >= MAX_ATTEMPTS) {\n          this.parameters.showAlert?.({\n            message: 'Too many unsuccessful attempts. Please try again later.',\n            type: 'danger',\n            duration: 3000,\n          });\n        } else {\n          this.parameters.showAlert?.({\n            message: 'Invalid credentials.',\n            type: 'danger',\n            duration: 3000,\n          });\n        }\n      }\n    } catch (error) {\n      this.parameters.showAlert?.({\n        message: 'Unable to connect. Check your credentials and try again.',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      unsuccessfulAttempts += 1;\n      this.cookieService.set('unsuccessfulAttempts', unsuccessfulAttempts.toString());\n      this.cookieService.set('lastRequestTimestamp', Date.now().toString());\n      this.parameters.updateIsLoadingModalVisible(false);\n    }\n  }\n\n  handleScanSuccess(data: any) {\n    try {\n      const scannedText = data;\n      const parts = scannedText.split(';');\n\n      if (parts.length === 5) {\n        const [userName, link, userSecret, passWord, meetingID] = parts;\n\n        if (\n          !userName.length ||\n          !link.length ||\n          !userSecret.length ||\n          !passWord.length ||\n          !meetingID.length ||\n          !this.validateAlphanumeric(userName) ||\n          !this.validateAlphanumeric(userSecret) ||\n          !this.validateAlphanumeric(passWord) ||\n          !this.validateAlphanumeric(meetingID) ||\n          userSecret.length !== 64 ||\n          userName.length > 12 ||\n          userName.length < 2 ||\n          meetingID.length > 32 ||\n          meetingID.length < 8 ||\n          !link.includes('mediasfu.com') ||\n          meetingID.toLowerCase().startsWith('d')\n        ) {\n          this.parameters.showAlert?.({\n            message: 'Invalid scanned data.',\n            type: 'danger',\n            duration: 3000,\n          });\n          return;\n        }\n\n        this.welcomeForm.setValue({\n          name: userName,\n          secret: userSecret,\n          eventID: meetingID,\n          link: link,\n        });\n\n        this.isScannerVisible = false;\n        this.scannedData = null;\n\n        this.checkLimitsAndMakeRequest(meetingID, userSecret, link, userName);\n      } else {\n        this.parameters.showAlert?.({\n          message: 'Invalid scanned data.',\n          type: 'danger',\n          duration: 3000,\n        });\n      }\n    } catch (error) {\n      this.parameters.showAlert?.({\n        message: 'Invalid scanned data.',\n        type: 'danger',\n        duration: 3000,\n      });\n    }\n  }\n\n  validateAlphanumeric(str: string): boolean {\n    const alphanumericRegex = /^[a-zA-Z0-9]+$/;\n    return alphanumericRegex.test(str);\n  }\n\n  // Method to list available cameras\n  askForCameraPermission() {\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then((devices: MediaDeviceInfo[]) => {\n        this.allowedCameras = devices.filter((device) => device.kind === 'videoinput');\n        if (this.allowedCameras.length > 0) {\n          this.currentDevice = this.allowedCameras[0]; // Set the first available camera as the default\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        this.parameters.showAlert?.({\n          message: 'Camera access denied.',\n          type: 'danger',\n          duration: 3000,\n        });\n      });\n  }\n\n  toggleScanner() {\n    this.isScannerVisible = !this.isScannerVisible;\n    if (this.isScannerVisible) {\n      this.askForCameraPermission();\n    }\n  }\n\n  async handleConfirm() {\n    if (this.welcomeForm.invalid) {\n      this.error = 'Please fill all the fields correctly.';\n      return;\n    }\n\n    const { name, secret, eventID, link } = this.welcomeForm.value;\n\n    await this.checkLimitsAndMakeRequest(eventID, secret, link, name);\n  }\n}\n","<div class=\"container\">\r\n  <div class=\"logo-container\">\r\n    <img [src]=\"imgSrc || 'https://mediasfu.com/images/logo192.png'\" class=\"logo-image\" alt=\"Logo\" />\r\n  </div>\r\n  <form [formGroup]=\"welcomeForm\" (ngSubmit)=\"handleConfirm()\">\r\n    <div class=\"input-container\">\r\n      <input\r\n        formControlName=\"name\"\r\n        type=\"text\"\r\n        placeholder=\"Event Display Name\"\r\n        class=\"input-field\"\r\n      />\r\n      <input\r\n        formControlName=\"secret\"\r\n        type=\"text\"\r\n        placeholder=\"Event Token (Secret)\"\r\n        class=\"input-field\"\r\n      />\r\n      <input\r\n        formControlName=\"eventID\"\r\n        type=\"text\"\r\n        placeholder=\"Event ID\"\r\n        class=\"input-field\"\r\n      />\r\n      <input\r\n        formControlName=\"link\"\r\n        type=\"text\"\r\n        placeholder=\"Event Link\"\r\n        class=\"input-field\"\r\n      />\r\n    </div>\r\n    <button type=\"submit\" class=\"confirm-button\">Confirm</button>\r\n  </form>\r\n\r\n  <div class=\"scanner-container\">\r\n    <div class=\"or-container\">\r\n      <hr class=\"horizontal-line\" />\r\n      <span class=\"or-text\">OR</span>\r\n      <hr class=\"horizontal-line\" />\r\n    </div>\r\n    <div *ngIf=\"isScannerVisible\" class=\"scanner-wrapper\">\r\n      <zxing-scanner\r\n        [device]=\"currentDevice!\"\r\n        (scanSuccess)=\"handleScanSuccess($event)\"\r\n        [tryHarder]=\"true\"\r\n      ></zxing-scanner>\r\n    </div>\r\n    <div class=\"scan-button-container\" *ngIf=\"!isScannerVisible\">\r\n      <button (click)=\"toggleScanner()\" class=\"scan-button\">\r\n        <fa-icon [icon]=\"faQrcode\" style=\"margin-right: 5px\"></fa-icon>\r\n        Scan QR Code\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"additional-options-container\">\r\n    <p>\r\n      Provide the event details either by typing manually or scanning the\r\n      QR-code to autofill.\r\n    </p>\r\n    <p>Don't have a secret?</p>\r\n    <a\r\n      href=\"https://meeting.mediasfu.com/meeting/start/\"\r\n      target=\"_blank\"\r\n      class=\"link\"\r\n      >Get one from mediasfu.com</a\r\n    >\r\n  </div>\r\n</div>\r\n","import { Component, Inject, Input, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { CommonModule } from '@angular/common';\nimport { Socket } from 'socket.io-client';\nimport { ConnectSocketType } from '../../../sockets/socket-manager.service';\nimport { ShowAlert } from '../../../@types/types';\n\nexport interface PreJoinPageParameters {\n  imgSrc?: string;\n  showAlert?: ShowAlert;\n  updateIsLoadingModalVisible: (visible: boolean) => void;\n  connectSocket: ConnectSocketType;\n  updateSocket: (socket: Socket) => void;\n  updateValidated: (validated: boolean) => void;\n  updateApiUserName: (userName: string) => void;\n  updateApiToken: (token: string) => void;\n  updateLink: (link: string) => void;\n  updateRoomName: (roomName: string) => void;\n  updateMember: (member: string) => void;\n}\n\nexport interface Credentials {\n  apiUserName: string;\n  apiKey: string;\n}\n\nexport interface PreJoinPageOptions {\n  parameters: PreJoinPageParameters;\n  credentials?: Credentials;\n}\n\nexport interface CreateJoinRoomResponse {\n  message: string;\n  roomName: string;\n  secureCode?: string;\n  publicURL: string;\n  link: string;\n  secret: string;\n  success: boolean;\n}\n\nexport interface CreateJoinRoomError {\n  error: string;\n  success?: boolean;\n}\n\nexport type CreateJoinRoomType = (options: {\n  payload: any;\n  apiUserName: string;\n  apiKey: string;\n}) => Promise<{\n  data: CreateJoinRoomResponse | CreateJoinRoomError | null;\n  success: boolean;\n}>;\n\nexport type CreateRoomOnMediaSFUType = (options: {\n  payload: any;\n  apiUserName: string;\n  apiKey: string;\n}) => Promise<{\n  data: CreateJoinRoomResponse | CreateJoinRoomError | null;\n  success: boolean;\n}>;\n\nexport type PreJoinPageType = (options: PreJoinPageOptions) => void;\n\nconst MAX_ATTEMPTS = 20; // Maximum number of unsuccessful attempts before rate limiting\nconst RATE_LIMIT_DURATION = 3 * 60 * 60 * 1000; // 3 hours in milliseconds\nconst TIMEOUT_DURATION = 10000; // 5 seconds in milliseconds\n\n/**\n * @fileoverview PreJoinPage component for handling room creation and joining on MediaSFU.\n *\n * @component\n * @selector app-pre-join-page\n * @standalone true\n * @templateUrl ./pre-join-page.component.html\n * @styleUrls ./pre-join-page.component.css\n * @imports [CommonModule, ReactiveFormsModule]\n *\n * @description\n * This component provides functionality for users to create or join a room on MediaSFU.\n * It includes form validation, error handling, and API requests to the MediaSFU service.\n *\n * @property {any} parameters - Input parameters for the component.\n * @property {Object} credentials - API credentials for MediaSFU.\n * @property {string} credentials.apiUserName - API username.\n * @property {string} credentials.apiKey - API key.\n * @property {boolean} isCreateMode - Flag to toggle between create and join modes.\n * @property {FormGroup} preJoinForm - Form group for pre-join form.\n * @property {string} error - Error message to display.\n *\n * @constructor\n * @param {FormBuilder} fb - FormBuilder service for creating form groups.\n * @param {HttpClient} http - HttpClient service for making HTTP requests.\n * @param {CookieService} cookieService - CookieService for managing cookies.\n *\n * @method ngOnInit\n * @description Lifecycle hook that is called after data-bound properties are initialized.\n *\n * @method toggleMode\n * @description Toggles between create and join modes and resets the error message.\n *\n * @method handleCreateRoom\n * @description Handles the creation of a room on MediaSFU. Validates form inputs, sends a request to create a room, and handles the response.\n *\n * @method handleJoinRoom\n * @description Handles joining a room on MediaSFU. Validates form inputs, sends a request to join a room, and handles the response.\n *\n * @method checkLimitsAndMakeRequest\n * @description Checks rate limits and makes a request to connect to a room. Handles unsuccessful attempts and updates the state accordingly.\n *\n * @method createRoomOnMediaSFU\n * @description Sends a request to create a room on MediaSFU.\n * @param {Object} params - Parameters for the request.\n * @param {any} params.payload - Payload for the request.\n * @param {string} params.apiUserName - API username.\n * @param {string} params.apiKey - API key.\n * @returns {Promise<{ data: CreateJoinRoomResponse | CreateJoinRoomError | null; success: boolean }>} Response from the API.\n *\n * @method joinRoomOnMediaSFU\n * @description Sends a request to join a room on MediaSFU.\n * @param {Object} params - Parameters for the request.\n * @param {any} params.payload - Payload for the request.\n * @param {string} params.apiUserName - API username.\n * @param {string} params.apiKey - API key.\n * @returns {Promise<{ data: CreateJoinRoomResponse | CreateJoinRoomError | null; success: boolean }>} Response from the API.\n */\n@Component({\n  selector: 'app-pre-join-page',\n  standalone: true,\n  templateUrl: './pre-join-page.component.html',\n  styleUrls: ['./pre-join-page.component.css'],\n  imports: [CommonModule, ReactiveFormsModule],\n})\nexport class PreJoinPage {\n  @Input() parameters: PreJoinPageParameters = {} as PreJoinPageParameters;\n  @Input() credentials = { apiUserName: 'yourAPIUSERNAME', apiKey: 'yourAPIKEY' };\n\n  isCreateMode = false;\n  preJoinForm: FormGroup;\n  error = '';\n  imgSrc: string = this.parameters.imgSrc || '';\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private cookieService: CookieService,\n    @Optional() @Inject('parameters') injectedParameters: PreJoinPageParameters,\n    @Optional() @Inject('credentials') injectedCredentials: Credentials,\n  ) {\n    this.preJoinForm = this.fb.group({\n      name: ['', Validators.required],\n      duration: [''],\n      eventType: [''],\n      capacity: [''],\n      eventID: [''],\n    });\n    this.parameters = injectedParameters || this.parameters;\n    this.credentials = injectedCredentials || this.credentials;\n  }\n\n  toggleMode() {\n    this.isCreateMode = !this.isCreateMode;\n    this.error = '';\n  }\n\n  async handleCreateRoom() {\n    if (this.preJoinForm.invalid) {\n      this.error = 'Please fill all the fields.';\n      return;\n    }\n\n    const { name, duration, eventType, capacity } = this.preJoinForm.value;\n\n    if (!name || !duration || !eventType || !capacity) {\n      this.error = 'Please fill all the fields.';\n      return;\n    }\n\n    const payload = {\n      action: 'create',\n      duration: parseInt(duration),\n      capacity: parseInt(capacity),\n      eventType,\n      userName: name,\n    };\n\n    this.parameters.updateIsLoadingModalVisible(true);\n\n    try {\n      const response = await this.createRoomOnMediaSFU({\n        payload,\n        apiUserName: this.credentials.apiUserName,\n        apiKey: this.credentials.apiKey,\n      });\n\n      if (response.success && response.data && 'roomName' in response.data) {\n        await this.checkLimitsAndMakeRequest({\n          apiUserName: response.data.roomName,\n          apiToken: response.data.secret,\n          link: response.data.link,\n          userName: name,\n        });\n        this.error = '';\n      } else {\n        this.parameters.updateIsLoadingModalVisible(false);\n        this.error = `${\n          response.data ? ('error' in response.data ? response.data.error : '') : ''\n        }`;\n      }\n    } catch (error) {\n      this.parameters.updateIsLoadingModalVisible(false);\n      this.error = `Unable to connect. ${(error as any).message}`;\n    }\n  }\n\n  async handleJoinRoom() {\n    if (this.preJoinForm.invalid) {\n      this.error = 'Please fill all the fields.';\n      return;\n    }\n\n    const { name, eventID } = this.preJoinForm.value;\n\n    if (!name || !eventID) {\n      this.error = 'Please fill all the fields.';\n      return;\n    }\n\n    const payload = {\n      action: 'join',\n      meetingID: eventID,\n      userName: name,\n    };\n\n    this.parameters.updateIsLoadingModalVisible(true);\n\n    try {\n      const response = await this.joinRoomOnMediaSFU({\n        payload,\n        apiUserName: this.credentials.apiUserName,\n        apiKey: this.credentials.apiKey,\n      });\n\n      if (response.success && response.data && 'roomName' in response.data) {\n        await this.checkLimitsAndMakeRequest({\n          apiUserName: response.data.roomName,\n          apiToken: response.data.secret,\n          link: response.data.link,\n          userName: name,\n        });\n        this.error = '';\n      } else {\n        this.parameters.updateIsLoadingModalVisible(false);\n        this.error = `Unable to connect to room. ${\n          response.data ? ('error' in response.data ? response.data.error : '') : ''\n        }`;\n      }\n    } catch (error) {\n      this.parameters.updateIsLoadingModalVisible(false);\n      this.error = `Unable to connect. ${(error as any).message}`;\n    }\n  }\n\n  async checkLimitsAndMakeRequest({\n    apiUserName,\n    apiToken,\n    link,\n    apiKey = '',\n    userName,\n  }: {\n    apiUserName: string;\n    apiToken: string;\n    link: string;\n    apiKey?: string;\n    userName: string;\n  }) {\n    let unsuccessfulAttempts = parseInt(this.cookieService.get('unsuccessfulAttempts')) || 0;\n    let lastRequestTimestamp = parseInt(this.cookieService.get('lastRequestTimestamp')) || 0;\n\n    if (unsuccessfulAttempts >= MAX_ATTEMPTS) {\n      if (Date.now() - lastRequestTimestamp < RATE_LIMIT_DURATION) {\n        this.parameters.showAlert?.({\n          message: 'Too many unsuccessful attempts. Please try again later.',\n          type: 'danger',\n          duration: 3000,\n        });\n        this.cookieService.set('lastRequestTimestamp', Date.now().toString());\n        return;\n      } else {\n        unsuccessfulAttempts = 0;\n        this.cookieService.set('unsuccessfulAttempts', unsuccessfulAttempts.toString());\n        this.cookieService.set('lastRequestTimestamp', Date.now().toString());\n      }\n    }\n\n    try {\n      this.parameters.updateIsLoadingModalVisible(true);\n\n      const socketPromise = await this.parameters.connectSocket({\n        apiUserName,\n        apiKey,\n        apiToken,\n        link,\n      });\n\n      const timeoutPromise = new Promise((_, reject) =>\n        setTimeout(() => reject(new Error('Request timed out')), TIMEOUT_DURATION),\n      );\n\n      const socket = await Promise.race([socketPromise, timeoutPromise]);\n\n      if (socket && socket instanceof Socket && socket.id) {\n        unsuccessfulAttempts = 0;\n        this.cookieService.set('unsuccessfulAttempts', unsuccessfulAttempts.toString());\n        this.cookieService.set('lastRequestTimestamp', Date.now().toString());\n        this.parameters.updateSocket(socket);\n        this.parameters.updateApiUserName(apiUserName);\n        this.parameters.updateApiToken(apiToken);\n        this.parameters.updateLink(link);\n        this.parameters.updateRoomName(apiUserName);\n        this.parameters.updateMember(userName);\n        this.parameters.updateValidated(true);\n      } else {\n        unsuccessfulAttempts += 1;\n        this.cookieService.set('unsuccessfulAttempts', unsuccessfulAttempts.toString());\n        this.cookieService.set('lastRequestTimestamp', Date.now().toString());\n        this.parameters.updateIsLoadingModalVisible(false);\n\n        if (unsuccessfulAttempts >= MAX_ATTEMPTS) {\n          this.parameters.showAlert?.({\n            message: 'Too many unsuccessful attempts. Please try again later.',\n            type: 'danger',\n            duration: 3000,\n          });\n        } else {\n          this.parameters.showAlert?.({\n            message: 'Invalid credentials.',\n            type: 'danger',\n            duration: 3000,\n          });\n        }\n      }\n    } catch (error) {\n      this.parameters.showAlert?.({\n        message: 'Unable to connect. Check your credentials and try again.',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      unsuccessfulAttempts += 1;\n      this.cookieService.set('unsuccessfulAttempts', unsuccessfulAttempts.toString());\n      this.cookieService.set('lastRequestTimestamp', Date.now().toString());\n      this.parameters.updateIsLoadingModalVisible(false);\n    }\n  }\n\n  async createRoomOnMediaSFU({\n    payload,\n    apiUserName,\n    apiKey,\n  }: {\n    payload: any;\n    apiUserName: string;\n    apiKey: string;\n  }): Promise<{ data: CreateJoinRoomResponse | CreateJoinRoomError | null; success: boolean }> {\n    try {\n      if (\n        !apiUserName ||\n        !apiKey ||\n        apiUserName === 'yourAPIUSERNAME' ||\n        apiKey === 'yourAPIKEY' ||\n        apiKey.length !== 64 ||\n        apiUserName.length < 6\n      ) {\n        return { data: { error: 'Invalid credentials' }, success: false };\n      }\n\n      const response = await this.http\n        .post<any>('https://mediasfu.com/v1/rooms/', payload, {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${apiUserName}:${apiKey}`,\n          }),\n        })\n        .toPromise();\n\n      return { data: response, success: true };\n    } catch (error) {\n      const errorMessage = (error as any).reason ? (error as any).reason : 'unknown error';\n      return {\n        data: { error: `Unable to create room; something went wrong ${errorMessage}` },\n        success: false,\n      };\n    }\n  }\n\n  async joinRoomOnMediaSFU({\n    payload,\n    apiUserName,\n    apiKey,\n  }: {\n    payload: any;\n    apiUserName: string;\n    apiKey: string;\n  }): Promise<{ data: CreateJoinRoomResponse | CreateJoinRoomError | null; success: boolean }> {\n    try {\n      if (\n        !apiUserName ||\n        !apiKey ||\n        apiUserName === 'yourAPIUSERNAME' ||\n        apiKey === 'yourAPIKEY' ||\n        apiKey.length !== 64 ||\n        apiUserName.length < 6\n      ) {\n        return { data: { error: 'Invalid credentials' }, success: false };\n      }\n\n      const response = await this.http\n        .post<any>('https://mediasfu.com/v1/rooms/', payload, {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${apiUserName}:${apiKey}`,\n          }),\n        })\n        .toPromise();\n\n      return { data: response, success: true };\n    } catch (error) {\n      const errorMessage = (error as any).reason ? (error as any).reason : 'unknown error';\n      return {\n        data: { error: `Unable to join room; something went wrong ${errorMessage}` },\n        success: false,\n      };\n    }\n  }\n}\n","<div class=\"container-fluid\">\r\n  <div class=\"logo-container\">\r\n    <img [src]=\"imgSrc || 'https://mediasfu.com/images/logo192.png'\" class=\"logo-image\" alt=\"Logo\" />\r\n  </div>\r\n  <div class=\"input-container\">\r\n    <form [formGroup]=\"preJoinForm\">\r\n      <input type=\"text\" placeholder=\"Display Name\" formControlName=\"name\" class=\"input-field\" />\r\n      <div *ngIf=\"isCreateMode\">\r\n        <input type=\"text\" placeholder=\"Duration (minutes)\" formControlName=\"duration\" class=\"input-field\" />\r\n        <select formControlName=\"eventType\" class=\"select-field\">\r\n          <option value=\"\">Select Event Type</option>\r\n          <option value=\"chat\">Chat</option>\r\n          <option value=\"broadcast\">Broadcast</option>\r\n          <option value=\"webinar\">Webinar</option>\r\n          <option value=\"conference\">Conference</option>\r\n        </select>\r\n        <input type=\"text\" placeholder=\"Room Capacity\" formControlName=\"capacity\" class=\"input-field\" />\r\n        <button type=\"button\" (click)=\"handleCreateRoom()\" class=\"action-button\">Create Room</button>\r\n      </div>\r\n      <div *ngIf=\"!isCreateMode\">\r\n        <input type=\"text\" placeholder=\"Event ID\" formControlName=\"eventID\" class=\"input-field\" />\r\n        <button type=\"button\" (click)=\"handleJoinRoom()\" class=\"action-button\">Join Room</button>\r\n      </div>\r\n      <p *ngIf=\"error\" class=\"error\">{{ error }}</p>\r\n    </form>\r\n  </div>\r\n  <div class=\"or-container\">\r\n    <span class=\"or-text\">OR</span>\r\n  </div>\r\n  <div class=\"toggle-container\">\r\n    <button type=\"button\" (click)=\"toggleMode()\" class=\"toggle-button\">\r\n      {{ isCreateMode ? 'Switch to Join Mode' : 'Switch to Create Mode' }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FormsModule } from '@angular/forms';\nimport { Socket } from 'socket.io-client';\nimport {\n  Poll,\n  ShowAlert,\n  HandleCreatePollType,\n  HandleEndPollType,\n  HandleVotePollType,\n} from '../../../@types/types';\n\nexport interface PollModalOptions {\n  isPollModalVisible: boolean;\n  onClose: () => void;\n  position?: string;\n  backgroundColor?: string;\n  member: string;\n  islevel: string;\n  polls: Poll[];\n  poll: Poll | null;\n  socket: Socket;\n  roomName: string;\n  showAlert?: ShowAlert;\n  updateIsPollModalVisible: (isVisible: boolean) => void;\n\n  handleCreatePoll: HandleCreatePollType;\n  handleEndPoll: HandleEndPollType;\n  handleVotePoll: HandleVotePollType;\n}\n\nexport type PollModalType = (options: PollModalOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-poll-modal',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, FormsModule],\n  templateUrl: './poll-modal.component.html',\n  styleUrls: ['./poll-modal.component.css'],\n})\nexport class PollModal implements OnInit, OnChanges {\n  @Input() isPollModalVisible = false;\n  @Input() onClose!: () => void;\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#f5f5f5';\n  @Input() member = '';\n  @Input() islevel = '';\n  @Input() polls: Poll[] = [];\n  @Input() poll: Poll | null = null;\n  @Input() socket: Socket = {} as Socket;\n  @Input() roomName = '';\n  @Input() showAlert: ShowAlert = () => {};\n  @Input() updateIsPollModalVisible: (isVisible: boolean) => void = () => {};\n  @Input() handleCreatePoll!: HandleCreatePollType;\n  @Input() handleEndPoll!: HandleEndPollType;\n  @Input() handleVotePoll!: HandleVotePollType;\n\n  faTimes = faTimes;\n  newPoll: any = { question: '', type: '', options: [] };\n\n  screenWidth: number = window.innerWidth;\n  modalWidth: number = this.screenWidth > 500 ? 350 : 0.7 * this.screenWidth;\n\n  ngOnInit() {\n    this.renderPolls();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['isPollModalVisible']) {\n      this.renderPolls();\n    }\n  }\n\n  renderPolls = () => {\n    let activePollCount = 0;\n\n    this.polls &&\n      this.polls.forEach((polled: any) => {\n        if (polled.status === 'active' && this.poll && polled.id === this.poll.id) {\n          activePollCount++;\n        }\n      });\n\n    if (this.islevel == '2' && activePollCount === 0) {\n      if (this.poll && this.poll.status === 'active') {\n        this.poll.status = 'inactive';\n      }\n    }\n  };\n\n  calculatePercentage(votes: number[], optionIndex: number): number {\n    const totalVotes = votes.reduce((a, b) => a + b, 0);\n    return totalVotes > 0 ? parseFloat(((votes[optionIndex] / totalVotes) * 100).toFixed(2)) : 0;\n  }\n\n  handlePollTypeChange(event: any) {\n    const type = event.target.value;\n    let options: string[] = [];\n\n    switch (type) {\n      case 'trueFalse':\n        options = ['True', 'False'];\n        break;\n      case 'yesNo':\n        options = ['Yes', 'No'];\n        break;\n      case 'custom':\n        options = ['', '', '', '', '']; // Preload 5 empty options\n        break;\n      default:\n        options = [];\n        break;\n    }\n\n    this.newPoll = { ...this.newPoll, type, options };\n  }\n\n  async validateAndCreatePoll() {\n    // Remove empty options before creating the poll\n    this.newPoll.options = this.newPoll.options.filter((option: string) => option.trim() !== '');\n\n    // Ensure there's at least one valid option\n    if (this.newPoll.options.length > 0) {\n      await this.handleCreatePoll({\n        poll: this.newPoll,\n        socket: this.socket,\n        roomName: this.roomName,\n        showAlert: this.showAlert,\n        updateIsPollModalVisible: this.updateIsPollModalVisible,\n      });\n    }\n  }\n\n  handledVotePoll(pollId: string, optionIndex: number) {\n    this.handleVotePoll({\n      pollId,\n      optionIndex,\n      socket: this.socket,\n      member: this.member,\n      roomName: this.roomName,\n      showAlert: this.showAlert,\n      updateIsPollModalVisible: this.updateIsPollModalVisible,\n    });\n  }\n\n  handledEndPoll(pollId: string) {\n    this.handleEndPoll({\n      pollId,\n      socket: this.socket,\n      roomName: this.roomName,\n      showAlert: this.showAlert,\n      updateIsPollModalVisible: this.updateIsPollModalVisible,\n    });\n  }\n\n  get modalContainerStyle() {\n    return {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: this.isPollModalVisible ? 'block' : 'none',\n      zIndex: 999,\n    };\n  }\n\n  get modalContentStyle() {\n    return {\n      position: 'fixed',\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      width: `${this.modalWidth}px`,\n      maxHeight: '75%',\n      overflowY: 'auto',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n}\n","<div [ngStyle]=\"modalContainerStyle\">\r\n  <div [ngStyle]=\"modalContentStyle\">\r\n    <div class=\"modal-header\">\r\n      <h2>Polls</h2>\r\n      <button (click)=\"onClose()\" class=\"close-button\">\r\n        <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n      </button>\r\n    </div>\r\n    <hr />\r\n    <div class=\"modal-body\">\r\n      <!-- Previous Polls Section -->\r\n      <div *ngIf=\"islevel === '2'\">\r\n        <div class=\"previous-polls\">\r\n          <h5>Previous Polls</h5>\r\n          <div *ngIf=\"polls.length === 0\">No polls available</div>\r\n\r\n          <!-- Using ng-container to avoid multiple structural directives on the same element -->\r\n          <ng-container *ngFor=\"let polled of polls\">\r\n            <div\r\n              *ngIf=\"!poll || polled.id !== poll.id || poll.status !== 'active'\"\r\n              class=\"poll\"\r\n            >\r\n              <h6>Question:</h6>\r\n              <textarea\r\n                class=\"form-control\"\r\n                rows=\"3\"\r\n                [disabled]=\"true\"\r\n                [value]=\"polled.question\"\r\n              ></textarea>\r\n              <br />\r\n              <h6>Options:</h6>\r\n              <div *ngFor=\"let option of polled.options; let i = index\">\r\n                {{ option }}: {{ polled.votes[i] }} votes ({{\r\n                  calculatePercentage(polled.votes, i)\r\n                }}%)\r\n              </div>\r\n              <!-- End Poll Button (if poll is active) -->\r\n              <button\r\n                *ngIf=\"polled.status === 'active'\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"handledEndPoll(polled.id)\"\r\n              >\r\n                End Poll\r\n              </button>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n        <hr />\r\n\r\n        <!-- Create Poll Section -->\r\n        <div class=\"create-poll\">\r\n          <h5>Create a New Poll</h5>\r\n          <form (ngSubmit)=\"validateAndCreatePoll()\">\r\n            <div class=\"form-group\">\r\n              <label for=\"pollQuestion\">Poll Question</label>\r\n              <textarea\r\n                class=\"form-control\"\r\n                id=\"pollQuestion\"\r\n                rows=\"3\"\r\n                maxLength=\"300\"\r\n                required\r\n                [(ngModel)]=\"newPoll.question\"\r\n                name=\"question\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"pollType\">Select Poll Answer Type</label>\r\n              <select\r\n                class=\"form-control\"\r\n                id=\"pollType\"\r\n                required\r\n                (change)=\"handlePollTypeChange($event)\"\r\n                [(ngModel)]=\"newPoll.type\"\r\n                name=\"type\"\r\n              >\r\n                <option value=\"\">Choose...</option>\r\n                <option value=\"trueFalse\">True/False</option>\r\n                <option value=\"yesNo\">Yes/No</option>\r\n                <option value=\"custom\">Custom</option>\r\n              </select>\r\n            </div>\r\n\r\n            <!-- Render Poll Options -->\r\n            <div\r\n              *ngIf=\"newPoll.type === 'trueFalse' || newPoll.type === 'yesNo'\"\r\n            >\r\n              <div\r\n                *ngFor=\"let option of newPoll.options; let i = index\"\r\n                class=\"form-check\"\r\n              >\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"pollOption\"\r\n                  [value]=\"option.toLowerCase()\"\r\n                  [id]=\"'option' + option\"\r\n                />\r\n                <label class=\"form-check-label\" [for]=\"'option' + option\">{{\r\n                  option\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"newPoll.type === 'custom'\">\r\n              <div\r\n                *ngFor=\"let option of newPoll.options; let i = index\"\r\n                class=\"form-group\"\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Option {{ i + 1 }}\"\r\n                  maxLength=\"50\"\r\n                  [(ngModel)]=\"newPoll.options[i]\"\r\n                  name=\"option{{ i }}\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Create Poll</button>\r\n          </form>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n\r\n      <!-- Current Poll Section -->\r\n      <div class=\"current-poll\">\r\n        <h5>Current Poll</h5>\r\n        <div *ngIf=\"poll && poll.status === 'active'\">\r\n          <h6>Question:</h6>\r\n          <textarea\r\n            class=\"form-control\"\r\n            rows=\"3\"\r\n            [disabled]=\"true\"\r\n            [value]=\"poll.question\"\r\n          ></textarea>\r\n          <h6>Options:</h6>\r\n          <div\r\n            *ngFor=\"let option of poll.options; let i = index\"\r\n            class=\"form-check\"\r\n          >\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"pollOption\"\r\n              [value]=\"i\"\r\n              id=\"pollOption{{ i }}\"\r\n              [checked]=\"poll.voters?.[member] === i\"\r\n              (change)=\"handledVotePoll(poll.id, i)\"\r\n            />\r\n            <label class=\"form-check-label\" [for]=\"'pollOption' + i\">{{\r\n              option\r\n            }}</label>\r\n          </div>\r\n          <button\r\n            *ngIf=\"poll.status === 'active' && islevel === '2'\"\r\n            class=\"btn btn-danger\"\r\n            (click)=\"handledEndPoll(poll.id)\"\r\n          >\r\n            End Poll\r\n          </button>\r\n        </div>\r\n        <div *ngIf=\"!poll || poll.status !== 'active'\">\r\n          <hr />\r\n          No active poll\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n  ElementRef,\n  OnInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { SelfieSegmentation } from '@mediapipe/selfie_segmentation';\nimport {\n  ConnectSendTransportVideoParameters,\n  ConnectSendTransportVideoType,\n  CreateSendTransportParameters,\n  CreateSendTransportType,\n  DisconnectSendTransportVideoParameters,\n  DisconnectSendTransportVideoType,\n  OnScreenChangesParameters,\n  OnScreenChangesType,\n  ShowAlert,\n  SleepType,\n  VidCons,\n} from '../../../@types/types';\nimport { Producer, ProducerOptions } from 'mediasoup-client/lib/types';\n\nexport interface BackgroundModalParameters\n  extends CreateSendTransportParameters,\n    ConnectSendTransportVideoParameters,\n    DisconnectSendTransportVideoParameters,\n    OnScreenChangesParameters {\n  customImage: string;\n  selectedImage: string;\n  segmentVideo: MediaStream | null;\n  selfieSegmentation: SelfieSegmentation | null;\n  pauseSegmentation: boolean;\n  processedStream: MediaStream | null;\n  keepBackground: boolean;\n  backgroundHasChanged: boolean;\n  virtualStream: MediaStream | null;\n  mainCanvas: HTMLCanvasElement | null;\n  prevKeepBackground: boolean;\n  appliedBackground: boolean;\n  videoAlreadyOn: boolean;\n  audioOnlyRoom: boolean;\n  islevel: string;\n  recordStarted: boolean;\n  recordResumed: boolean;\n  recordPaused: boolean;\n  recordStopped: boolean;\n  recordingMediaOptions: string;\n  showAlert?: ShowAlert;\n  localStreamVideo: MediaStream | null;\n  vidCons: VidCons;\n  frameRate: number;\n  targetResolution: string;\n  updateCustomImage: (image: string) => void;\n  updateSelectedImage: (image: string) => void;\n  updateSegmentVideo: (stream: MediaStream | null) => void;\n  updateSelfieSegmentation: (segmentation: SelfieSegmentation | null) => void;\n  updatePauseSegmentation: (pause: boolean) => void;\n  updateProcessedStream: (stream: MediaStream | null) => void;\n  updateKeepBackground: (keep: boolean) => void;\n  updateBackgroundHasChanged: (changed: boolean) => void;\n  updateVirtualStream: (stream: MediaStream | null) => void;\n  updatePrevKeepBackground: (prev: boolean) => void;\n  updateAppliedBackground: (applied: boolean) => void;\n  videoProducer: Producer | null;\n  transportCreated: boolean;\n  videoParams: ProducerOptions;\n  updateVideoParams: (params: ProducerOptions) => void;\n  autoClickBackground: boolean;\n  updateAutoClickBackground: (autoClick: boolean) => void;\n  updateMainCanvas: (canvas: HTMLCanvasElement) => void;\n\n  // mediasfu functions\n  createSendTransport: CreateSendTransportType;\n  connectSendTransportVideo: ConnectSendTransportVideoType;\n  disconnectSendTransportVideo: DisconnectSendTransportVideoType;\n  onScreenChanges: OnScreenChangesType;\n  sleep: SleepType;\n\n  getUpdatedAllParams: () => BackgroundModalParameters;\n  [key: string]: any;\n}\n\nexport interface BackgroundModalOptions {\n  isVisible: boolean;\n  parameters: BackgroundModalParameters;\n  position: string;\n  backgroundColor: string;\n  onClose: () => void;\n}\n\n// export the type definition for the component\nexport type BackgroundModalType = (options: BackgroundModalOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-background-modal',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: './background-modal.component.html',\n  styleUrls: ['./background-modal.component.css'],\n})\nexport class BackgroundModal implements OnChanges, OnInit {\n  @Input() isVisible = false;\n  @Input() parameters: BackgroundModalParameters = {} as BackgroundModalParameters;\n  @Input() position = 'topLeft';\n  @Input() backgroundColor = '#f5f5f5';\n  @Input() onClose: () => void = () => {\n    console.log('onClose');\n  };\n\n  @ViewChild('defaultImagesContainer') defaultImagesContainerRef!: ElementRef;\n  @ViewChild('uploadImageInput') uploadImageInputRef!: ElementRef;\n  @ViewChild('backgroundCanvas') backgroundCanvasRef!: ElementRef;\n  @ViewChild('videoPreview') videoPreviewRef!: ElementRef;\n  @ViewChild('captureVideo') captureVideoRef!: ElementRef;\n  @ViewChild('loadingOverlay') loadingOverlayRef!: ElementRef;\n  @ViewChild('applyBackgroundButton') applyBackgroundButtonRef!: ElementRef;\n  @ViewChild('saveBackgroundButton') saveBackgroundButtonRef!: ElementRef;\n\n  faTimes = faTimes;\n\n  customImage = '';\n  selectedImage = '';\n  segmentVideo: MediaStream | null = null;\n  selfieSegmentation: SelfieSegmentation | null = null;\n  pauseSegmentation = false;\n  processedStream: MediaStream | null = null;\n  keepBackground = false;\n  backgroundHasChanged = false;\n  virtualStream: MediaStream | null = null;\n  mainCanvas!: HTMLCanvasElement;\n  prevKeepBackground = false;\n  appliedBackground = false;\n  videoAlreadyOn = false;\n  audioOnlyRoom = false;\n  islevel = '0';\n  recordStarted = false;\n  recordResumed = false;\n  recordPaused = false;\n  recordStopped = false;\n  recordingMediaOptions = '';\n  vidCons: any = {};\n  frameRate = 5;\n  targetResolution = '1280x720';\n  videoParams: ProducerOptions = {};\n  autoClickBackground = false;\n  localStreamVideo: MediaStream | null = null;\n\n  clonedStream: MediaStream | null = null;\n  clonedTrack: MediaStreamTrack | null = null;\n\n  updateCustomImage!: (value: string) => void;\n  updateSelectedImage!: (value: string) => void;\n  updateSegmentVideo!: (value: MediaStream | null) => void;\n  updateSelfieSegmentation!: (value: SelfieSegmentation | null) => void;\n  updatePauseSegmentation!: (value: boolean) => void;\n  updateProcessedStream!: (value: MediaStream | null) => void;\n  updateKeepBackground!: (value: boolean) => void;\n  updateBackgroundHasChanged!: (value: boolean) => void;\n  updateVirtualStream!: (value: MediaStream | null) => void;\n  updateMainCanvas!: (value: HTMLCanvasElement) => void;\n  updatePrevKeepBackground!: (value: boolean) => void;\n  updateAppliedBackground!: (value: boolean) => void;\n  updateVideoParams!: (value: ProducerOptions) => void;\n  updateAutoClickBackground!: (value: boolean) => void;\n\n  // Media functions\n  createSendTransport!: CreateSendTransportType;\n  connectSendTransportVideo!: ConnectSendTransportVideoType;\n  disconnectSendTransportVideo!: DisconnectSendTransportVideoType;\n  onScreenChanges!: OnScreenChangesType;\n  sleep!: SleepType;\n\n  ngOnInit() {\n    // Initialize local properties from the parameters\n    if (this.parameters) {\n      try {\n        this.updateVariables();\n      } catch {\n        /* handle error */\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['isVisible']) {\n      this.onVisibilityChange();\n    }\n\n    if (changes['autoClickBackground']) {\n      console.log(\n        'Auto click background changed:',\n        this.autoClickBackground,\n        changes['autoClickBackground'],\n      );\n    }\n  }\n\n  updateVariables() {\n    this.customImage = this.parameters.customImage || '';\n    this.selectedImage = this.parameters.selectedImage || '';\n    this.segmentVideo = this.parameters.segmentVideo || null;\n    this.selfieSegmentation = this.parameters.selfieSegmentation || null;\n    this.pauseSegmentation = this.parameters.pauseSegmentation || false;\n    this.processedStream = this.parameters.processedStream || null;\n    this.keepBackground = this.parameters.keepBackground || false;\n    this.backgroundHasChanged = this.parameters.backgroundHasChanged || false;\n    this.virtualStream = this.parameters.virtualStream || null;\n    this.mainCanvas = this.parameters.mainCanvas || this.backgroundCanvasRef?.nativeElement || null;\n    this.prevKeepBackground = this.parameters.prevKeepBackground || false;\n    this.appliedBackground = this.parameters.appliedBackground || false;\n    this.videoAlreadyOn = this.parameters.videoAlreadyOn || false;\n    this.audioOnlyRoom = this.parameters.audioOnlyRoom || false;\n    this.islevel = this.parameters.islevel || '0';\n    this.recordStarted = this.parameters.recordStarted || false;\n    this.recordResumed = this.parameters.recordResumed || false;\n    this.recordPaused = this.parameters.recordPaused || false;\n    this.recordStopped = this.parameters.recordStopped || false;\n    this.recordingMediaOptions = this.parameters.recordingMediaOptions || '';\n    this.vidCons = this.parameters.vidCons || {};\n    this.frameRate = this.parameters.frameRate || 5;\n    this.videoParams = this.parameters.videoParams || null;\n    this.autoClickBackground = this.parameters.autoClickBackground || false;\n    this.localStreamVideo = this.parameters.localStreamVideo || null;\n\n    // Assign method references\n    this.updateCustomImage = this.parameters.updateCustomImage;\n    this.updateSelectedImage = this.parameters.updateSelectedImage;\n    this.updateSegmentVideo = this.parameters.updateSegmentVideo;\n    this.updateSelfieSegmentation = this.parameters.updateSelfieSegmentation;\n    this.updatePauseSegmentation = this.parameters.updatePauseSegmentation;\n    this.updateProcessedStream = this.parameters.updateProcessedStream;\n    this.updateKeepBackground = this.parameters.updateKeepBackground;\n    this.updateBackgroundHasChanged = this.parameters.updateBackgroundHasChanged;\n    this.updateVirtualStream = this.parameters.updateVirtualStream;\n    this.updateMainCanvas = this.parameters.updateMainCanvas;\n    this.updatePrevKeepBackground = this.parameters.updatePrevKeepBackground;\n    this.updateAppliedBackground = this.parameters.updateAppliedBackground;\n    this.updateVideoParams = this.parameters.updateVideoParams;\n    this.updateAutoClickBackground = this.parameters.updateAutoClickBackground;\n\n    this.createSendTransport = this.parameters.createSendTransport;\n    this.connectSendTransportVideo = this.parameters.connectSendTransportVideo;\n    this.disconnectSendTransportVideo = this.parameters.disconnectSendTransportVideo;\n    this.onScreenChanges = this.parameters.onScreenChanges;\n    this.sleep = this.parameters.sleep;\n  }\n\n  onVisibilityChange = async () => {\n    if (this.parameters) {\n      this.parameters = this.parameters.getUpdatedAllParams();\n      this.updateVariables();\n    }\n\n    if (this.isVisible) {\n      if (!this.selfieSegmentation) {\n        await this.preloadModel().catch(() => console.log('Error preloading model:'));\n      }\n      this.renderDefaultImages();\n\n      if (this.selectedImage) {\n        await this.loadImageToCanvas(this.selectedImage, this.selectedImage);\n      } else {\n        this.clearCanvas();\n        this.backgroundCanvasRef.nativeElement.classList.remove('d-none');\n      }\n\n      this.saveBackgroundButtonRef.nativeElement.classList.add('d-none');\n      this.saveBackgroundButtonRef.nativeElement.disabled = true;\n      this.applyBackgroundButtonRef.nativeElement.classList.remove('d-none');\n      this.applyBackgroundButtonRef.nativeElement.disabled = false;\n\n      if (\n        this.processedStream &&\n        this.prevKeepBackground == this.keepBackground &&\n        this.keepBackground &&\n        this.appliedBackground\n      ) {\n        this.applyBackgroundButtonRef.nativeElement.innerText = 'Apply Background';\n      } else {\n        this.applyBackgroundButtonRef.nativeElement.innerText = 'Preview Background';\n      }\n\n      if (this.autoClickBackground) {\n        await this.applyBackground();\n        await this.saveBackground();\n        this.autoClickBackground = false;\n        this.updateAutoClickBackground(this.autoClickBackground);\n      }\n    } else {\n      try {\n        // If no background is applied or the applied background should not be kept\n        if (\n          !this.appliedBackground ||\n          (this.appliedBackground && !this.keepBackground) ||\n          (this.appliedBackground && !this.videoAlreadyOn)\n        ) {\n          const refVideo = this.captureVideoRef.nativeElement;\n          this.pauseSegmentation = true;\n          this.updatePauseSegmentation(this.pauseSegmentation);\n\n          if (!this.videoAlreadyOn) {\n            // Stop video tracks and clear the video element's srcObject\n            if (refVideo && refVideo.srcObject) {\n              refVideo.srcObject.getTracks().forEach((track: any) => track.stop());\n              refVideo.srcObject = null;\n            }\n\n            // Stop segmentVideo tracks\n            if (this.segmentVideo) {\n              this.segmentVideo.getTracks().forEach((track: any) => track.stop());\n              this.segmentVideo = null;\n              this.updateSegmentVideo(this.segmentVideo);\n            }\n\n            // Stop virtualStream tracks\n            if (this.virtualStream) {\n              this.virtualStream.getTracks().forEach((track: any) => track.stop());\n              this.virtualStream = null;\n              this.updateVirtualStream(this.virtualStream);\n            }\n          }\n        }\n\n        // Hide the video preview and show the canvas\n        this.videoPreviewRef.nativeElement.classList.add('d-none');\n        this.backgroundCanvasRef.nativeElement.classList.remove('d-none');\n      } catch {\n        /* handle error */\n      }\n    }\n  };\n\n  async preloadModel() {\n    this.selfieSegmentation = new SelfieSegmentation({\n      locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`,\n    });\n    this.selfieSegmentation.setOptions({\n      modelSelection: 1,\n      selfieMode: false,\n    });\n    await this.selfieSegmentation.initialize();\n    this.updateSelfieSegmentation(this.selfieSegmentation);\n  }\n\n  renderDefaultImages() {\n    const defaultImages = ['wall', 'wall2', 'shelf', 'clock', 'desert', 'flower'];\n    const defaultImagesContainer = this.defaultImagesContainerRef.nativeElement;\n    defaultImagesContainer.innerHTML = '';\n\n    defaultImages.forEach((baseName) => {\n      const thumb = `https://mediasfu.com/images/backgrounds/${baseName}_thumbnail.jpg`;\n      const small = `https://mediasfu.com/images/backgrounds/${baseName}_small.jpg`;\n      const large = `https://mediasfu.com/images/backgrounds/${baseName}_large.jpg`;\n      const full = `https://mediasfu.com/images/backgrounds/${baseName}.jpg`;\n      const img = document.createElement('img');\n      img.src = thumb;\n      img.classList.add('img-thumbnail', 'm-1');\n      img.style.width = '80px';\n      img.style.cursor = 'pointer';\n      img.addEventListener('click', async () => {\n        if (this.targetResolution == 'fhd' || this.targetResolution == 'qhd') {\n          await this.loadImageToCanvas(small, large);\n        } else {\n          await this.loadImageToCanvas(small, full);\n        }\n      });\n      defaultImagesContainer.appendChild(img);\n    });\n\n    const noBackgroundImg = document.createElement('div');\n    noBackgroundImg.classList.add(\n      'img-thumbnail',\n      'm-1',\n      'd-flex',\n      'align-items-center',\n      'justify-content-center',\n    );\n    noBackgroundImg.style.width = '76px';\n    noBackgroundImg.style.minHeight = '60px';\n    noBackgroundImg.style.cursor = 'pointer';\n    noBackgroundImg.style.backgroundColor = '#f8f9fa';\n    noBackgroundImg.style.border = '1px solid #dee2e6';\n    noBackgroundImg.style.position = 'relative';\n    noBackgroundImg.innerHTML =\n      '<span style=\"position:absolute; top:50%; left:50%; transform:translate(-50%, -50%); color:#000;\">None</span>';\n    noBackgroundImg.addEventListener('click', async () => {\n      this.selectedImage = '';\n      this.updateSelectedImage(this.selectedImage);\n      this.updateCustomImage('');\n      this.showLoading();\n      this.videoPreviewRef.nativeElement.classList.add('d-none');\n      this.backgroundCanvasRef.nativeElement.classList.remove('d-none');\n      this.clearCanvas();\n      this.hideLoading();\n    });\n    defaultImagesContainer.appendChild(noBackgroundImg);\n\n    if (this.customImage) {\n      const img = document.createElement('img');\n      img.src = this.customImage;\n      img.classList.add('img-thumbnail', 'm-1');\n      img.style.width = '80px';\n      img.style.cursor = 'pointer';\n      img.addEventListener('click', async () => {\n        await this.loadImageToCanvas(this.customImage, this.customImage);\n      });\n      defaultImagesContainer.appendChild(img);\n    }\n  }\n\n  async handleImageUpload(event: Event) {\n    let minWidth = 1280;\n    let minHeight = 1280;\n    let maxWidth = 2560;\n    let maxHeight = 2560;\n\n    if (this.targetResolution == 'fhd') {\n      minWidth = 1920;\n      minHeight = 1920;\n    } else if (this.targetResolution == 'qhd') {\n      minWidth = 2560;\n      minHeight = 2560;\n    } // For other resolutions, stick to the default 1280x1280\n\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = async () => {\n        if (\n          img.width < minWidth ||\n          img.height < minHeight ||\n          img.width > maxWidth ||\n          img.height > maxHeight\n        ) {\n          this.customImage = img.src;\n          this.updateCustomImage(this.customImage);\n          await this.loadImageToCanvas(img.src, img.src);\n        }\n      };\n      const reader = new FileReader();\n      reader.onload = (e: ProgressEvent<FileReader>) => {\n        if (e.target) {\n          img.src = e.target.result as string;\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  clearCanvas() {\n    const ctx = this.backgroundCanvasRef.nativeElement.getContext('2d');\n    ctx.clearRect(\n      0,\n      0,\n      this.backgroundCanvasRef.nativeElement.width,\n      this.backgroundCanvasRef.nativeElement.height,\n    );\n    ctx.font = '30px Arial';\n    ctx.fillStyle = '#000';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(\n      'No Background',\n      this.backgroundCanvasRef.nativeElement.width / 2,\n      this.backgroundCanvasRef.nativeElement.height / 2,\n    );\n\n    this.applyBackgroundButtonRef.nativeElement.classList.remove('d-none');\n    this.applyBackgroundButtonRef.nativeElement.disabled = false;\n\n    if (\n      this.processedStream &&\n      this.prevKeepBackground == this.keepBackground &&\n      this.keepBackground &&\n      this.appliedBackground\n    ) {\n      this.applyBackgroundButtonRef.nativeElement.innerText = 'Apply Background';\n    } else {\n      this.applyBackgroundButtonRef.nativeElement.innerText = 'Preview Background';\n    }\n  }\n\n  async loadImageToCanvas(src: string, fullSrc: string) {\n    this.showLoading();\n    await this.backgroundCanvasRef.nativeElement.classList.remove('d-none');\n    await this.videoPreviewRef.nativeElement.classList.add('d-none');\n\n    const img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.onload = async () => {\n      const ctx = await this.backgroundCanvasRef.nativeElement.getContext('2d');\n      this.backgroundCanvasRef.nativeElement.width = img.width;\n      this.backgroundCanvasRef.nativeElement.height = img.height;\n      await ctx.drawImage(img, 0, 0);\n      this.removeBackground(img);\n      this.hideLoading();\n    };\n    img.src = src;\n    this.selectedImage = fullSrc;\n    this.updateSelectedImage(this.selectedImage);\n\n    this.saveBackgroundButtonRef.nativeElement.classList.add('d-none');\n    this.saveBackgroundButtonRef.nativeElement.disabled = true;\n    this.applyBackgroundButtonRef.nativeElement.classList.remove('d-none');\n    this.applyBackgroundButtonRef.nativeElement.disabled = false;\n\n    if (\n      this.processedStream &&\n      this.prevKeepBackground == this.keepBackground &&\n      this.keepBackground &&\n      this.appliedBackground\n    ) {\n      this.applyBackgroundButtonRef.nativeElement.innerText = 'Apply Background';\n    } else {\n      this.applyBackgroundButtonRef.nativeElement.innerText = 'Preview Background';\n    }\n  }\n\n  removeBackground(img: HTMLImageElement) {\n    const ctx = this.backgroundCanvasRef.nativeElement.getContext('2d');\n    ctx.clearRect(\n      0,\n      0,\n      this.backgroundCanvasRef.nativeElement.width,\n      this.backgroundCanvasRef.nativeElement.height,\n    );\n    ctx.drawImage(img, 0, 0);\n  }\n\n  async applyBackground() {\n    try {\n      if (this.audioOnlyRoom) {\n        this.parameters.showAlert?.({\n          message: 'You cannot use a background in an audio only event.',\n          type: 'danger',\n        });\n        return;\n      }\n\n      this.showLoading();\n\n      this.videoPreviewRef.nativeElement.classList.remove('d-none');\n      this.backgroundCanvasRef.nativeElement.classList.add('d-none');\n\n      const doSegmentation = this.selectedImage ? true : false;\n      this.pauseSegmentation = false;\n      this.updatePauseSegmentation(this.pauseSegmentation);\n      await this.selfieSegmentationPreview(doSegmentation);\n\n      this.hideLoading();\n\n      this.applyBackgroundButtonRef.nativeElement.classList.add('d-none');\n      this.applyBackgroundButtonRef.nativeElement.disabled = true;\n\n      if (\n        this.processedStream &&\n        this.prevKeepBackground == this.keepBackground &&\n        this.keepBackground &&\n        this.appliedBackground\n      ) {\n        this.saveBackgroundButtonRef.nativeElement.classList.add('d-none');\n        this.saveBackgroundButtonRef.nativeElement.disabled = true;\n      } else {\n        this.saveBackgroundButtonRef.nativeElement.classList.remove('d-none');\n        this.saveBackgroundButtonRef.nativeElement.disabled = false;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async selfieSegmentationPreview(doSegmentation: boolean) {\n    const refVideo = this.captureVideoRef.nativeElement;\n    const previewVideo = this.videoPreviewRef.nativeElement;\n    const virtualImage = new Image();\n    virtualImage.crossOrigin = 'anonymous';\n    virtualImage.src = this.selectedImage;\n\n    if (!this.mainCanvas) {\n      this.mainCanvas = await this.backgroundCanvasRef.nativeElement;\n    }\n\n    let mediaCanvas = this.mainCanvas;\n    mediaCanvas.width = refVideo.videoWidth;\n    mediaCanvas.height = refVideo.videoHeight;\n    let ctx = mediaCanvas.getContext('2d');\n\n    this.backgroundHasChanged = true;\n    this.updateBackgroundHasChanged(this.backgroundHasChanged);\n    this.prevKeepBackground = this.keepBackground;\n    this.updatePrevKeepBackground(this.keepBackground);\n\n    if (!doSegmentation) {\n      const tracks = this.processedStream?.getVideoTracks();\n      if (tracks) {\n        tracks.forEach((track: MediaStreamTrack) => track.stop());\n      }\n      this.processedStream = null;\n      this.keepBackground = false;\n      this.updateProcessedStream(null);\n      this.updateKeepBackground(false);\n      previewVideo.classList.remove('d-none');\n    }\n\n    const segmentImage = async (videoElement: HTMLVideoElement) => {\n      const processFrame = () => {\n        if (\n          !this.selfieSegmentation ||\n          this.pauseSegmentation ||\n          !videoElement ||\n          videoElement.videoWidth == 0 ||\n          videoElement.videoHeight == 0\n        ) {\n          return;\n        }\n        this.selfieSegmentation.send({ image: videoElement });\n        requestAnimationFrame(processFrame);\n      };\n\n      videoElement.onloadeddata = () => {\n        processFrame();\n      };\n\n      setTimeout(async () => {\n        console.log('Capturing stream:', this.frameRate || 5);\n        this.processedStream = mediaCanvas.captureStream(this.frameRate || 5);\n        this.updateProcessedStream(this.processedStream);\n        previewVideo.srcObject = this.processedStream;\n        previewVideo.classList.remove('d-none');\n        this.keepBackground = true;\n        this.updateKeepBackground(this.keepBackground);\n\n        if (previewVideo.paused) {\n          try {\n            // play the video\n            previewVideo.play().then(() => {\n              /* handle success */\n            });\n          } catch {\n            /* handle error */\n          }\n        }\n      }, 100);\n    };\n\n    if (this.videoAlreadyOn) {\n      if (\n        this.clonedTrack &&\n        this.clonedTrack.readyState == 'live' &&\n        this.localStreamVideo?.getVideoTracks()[0].label == this.clonedTrack.label\n      ) {\n        // Use existing clonedTrack\n      } else {\n        const localTracks = this.localStreamVideo?.getVideoTracks()[0];\n        this.clonedTrack = localTracks!.clone();\n        this.clonedStream = new MediaStream([this.clonedTrack!]);\n        this.segmentVideo = this.clonedStream;\n      }\n      this.updateSegmentVideo(this.segmentVideo);\n      refVideo.srcObject = this.segmentVideo;\n      if (refVideo.paused) {\n        refVideo.play();\n      }\n\n      refVideo.width = this.segmentVideo!.getVideoTracks()[0].getSettings().width!;\n      refVideo.height = this.segmentVideo!.getVideoTracks()[0].getSettings().height!;\n      mediaCanvas.width = refVideo.width;\n      mediaCanvas.height = refVideo.height;\n      ctx = mediaCanvas.getContext('2d');\n\n      try {\n        doSegmentation\n          ? await segmentImage(refVideo)\n          : (previewVideo.srcObject = this.clonedStream\n              ? this.clonedStream\n              : this.localStreamVideo!);\n      } catch (error) {\n        console.log('Error segmenting image:', error);\n      }\n    } else {\n      if (this.segmentVideo && this.segmentVideo.getVideoTracks()[0].readyState == 'live') {\n        // Use existing segmentVideo\n      } else {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            video: { ...this.vidCons, frameRate: { ideal: this.frameRate || 5 } },\n            audio: false,\n          });\n          this.segmentVideo = stream;\n          this.updateSegmentVideo(this.segmentVideo);\n          refVideo.srcObject = this.segmentVideo;\n          if (refVideo.paused) {\n            refVideo.play();\n          }\n        } catch (error) {\n          console.log('Error getting user media:', error);\n        }\n\n        refVideo.width = this.segmentVideo!.getVideoTracks()[0].getSettings().width!;\n        refVideo.height = this.segmentVideo!.getVideoTracks()[0].getSettings().height!;\n        mediaCanvas.width = refVideo.width;\n        mediaCanvas.height = refVideo.height;\n        ctx = mediaCanvas.getContext('2d');\n      }\n\n      try {\n        doSegmentation\n          ? await segmentImage(refVideo)\n          : (previewVideo.srcObject = refVideo.srcObject);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    let repeatPattern = 'no-repeat';\n    try {\n      if (virtualImage.width < mediaCanvas.width || virtualImage.height < mediaCanvas.height) {\n        repeatPattern = 'repeat';\n      }\n    } catch {\n      /* handle error */\n    }\n\n    const onResults = (results: any) => {\n      try {\n        if (\n          !this.pauseSegmentation &&\n          mediaCanvas &&\n          mediaCanvas.width > 0 &&\n          mediaCanvas.height > 0 &&\n          virtualImage.width > 0 &&\n          virtualImage.height > 0\n        ) {\n          ctx!.clearRect(0, 0, mediaCanvas.width, mediaCanvas.height);\n          ctx!.drawImage(results.segmentationMask, 0, 0, mediaCanvas.width, mediaCanvas.height);\n\n          ctx!.globalCompositeOperation = 'source-out';\n          const pat = ctx!.createPattern(virtualImage, repeatPattern);\n          ctx!.fillStyle = pat!;\n          ctx!.fillRect(0, 0, mediaCanvas.width, mediaCanvas.height);\n\n          ctx!.globalCompositeOperation = 'destination-atop';\n          ctx!.drawImage(results.image, 0, 0, mediaCanvas.width, mediaCanvas.height);\n        }\n      } catch (error) {\n        console.log('Error processing results:', error);\n      }\n    };\n\n    if (!this.selfieSegmentation) {\n      await this.preloadModel().catch(() => console.log('Error preloading model:'));\n    }\n\n    try {\n      this.selfieSegmentation!.onResults(onResults);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  saveBackground = async () => {\n    if (this.audioOnlyRoom) {\n      this.parameters.showAlert?.({\n        message: 'You cannot use a background in an audio-only event.',\n        type: 'danger',\n      });\n      return;\n    }\n\n    if (this.backgroundHasChanged) {\n      if (this.videoAlreadyOn) {\n        if (this.islevel == '2' && (this.recordStarted || this.recordResumed)) {\n          if (!(this.recordPaused || this.recordStopped)) {\n            if (this.recordingMediaOptions == 'video') {\n              this.parameters.showAlert?.({\n                message: 'Please pause the recording before changing the background.',\n                type: 'danger',\n              });\n              return;\n            }\n          }\n        }\n\n        if (this.keepBackground && this.selectedImage && this.processedStream) {\n          this.virtualStream = this.processedStream;\n          this.updateVirtualStream(this.virtualStream);\n          this.videoParams = { track: this.virtualStream.getVideoTracks()[0] };\n          this.updateVideoParams(this.videoParams);\n        } else {\n          if (this.localStreamVideo?.getVideoTracks()[0].readyState == 'live') {\n            this.videoParams = { track: this.localStreamVideo.getVideoTracks()[0] };\n            this.updateVideoParams(this.videoParams);\n          } else {\n            try {\n              if (this.localStreamVideo?.getVideoTracks()[0].readyState !== 'live') {\n                this.localStreamVideo?.removeTrack(this.localStreamVideo.getVideoTracks()[0]);\n                this.localStreamVideo?.addTrack(this.segmentVideo!.getVideoTracks()[0].clone());\n              }\n            } catch (error) {\n              console.log('Error handling local stream video:', error);\n            }\n\n            this.videoParams = { track: this.segmentVideo!.getVideoTracks()[0] };\n            this.updateVideoParams(this.videoParams);\n          }\n        }\n\n        if (this.keepBackground) {\n          this.appliedBackground = true;\n          this.updateAppliedBackground(this.appliedBackground);\n        } else {\n          this.appliedBackground = false;\n          this.updateAppliedBackground(this.appliedBackground);\n        }\n\n        if (!this.parameters.transportCreated) {\n          await this.createSendTransport({\n            option: 'video',\n            parameters: { ...this.parameters, videoParams: this.videoParams },\n          });\n        } else {\n          try {\n            if (\n              this.parameters.videoProducer?.id &&\n              this.parameters.videoProducer.track?.id !== this.videoParams?.track?.id\n            ) {\n              await this.disconnectSendTransportVideo({ parameters: this.parameters });\n              await this.sleep({ ms: 500 });\n            }\n            await this.connectSendTransportVideo({\n              videoParams: this.videoParams,\n              parameters: this.parameters,\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n        await this.onScreenChanges({ changed: true, parameters: this.parameters });\n      }\n    }\n\n    if (this.keepBackground) {\n      this.appliedBackground = true;\n      this.updateAppliedBackground(this.appliedBackground);\n    } else {\n      this.appliedBackground = false;\n      this.updateAppliedBackground(this.appliedBackground);\n    }\n\n    this.saveBackgroundButtonRef.nativeElement.classList.add('d-none');\n    this.saveBackgroundButtonRef.nativeElement.disabled = true;\n  };\n\n  handleModalClose = () => {\n    try {\n      // If no background is applied or the applied background should not be kept\n      if (\n        !this.appliedBackground ||\n        (this.appliedBackground && !this.keepBackground) ||\n        (this.appliedBackground && !this.videoAlreadyOn)\n      ) {\n        console.log('No background applied or applied background should not be kept');\n        const refVideo = this.captureVideoRef.nativeElement;\n        this.pauseSegmentation = true;\n        this.updatePauseSegmentation(this.pauseSegmentation);\n\n        if (!this.videoAlreadyOn) {\n          // Stop video tracks and clear the video element's srcObject\n          if (refVideo && refVideo.srcObject) {\n            refVideo.srcObject.getTracks().forEach((track: any) => track.stop());\n            refVideo.srcObject = null;\n          }\n\n          // Stop segmentVideo tracks\n          if (this.segmentVideo) {\n            this.segmentVideo.getTracks().forEach((track: any) => track.stop());\n            this.segmentVideo = null;\n            this.updateSegmentVideo(this.segmentVideo);\n          }\n\n          // Stop virtualStream tracks\n          if (this.virtualStream) {\n            this.virtualStream.getTracks().forEach((track: any) => track.stop());\n            this.virtualStream = null;\n            this.updateVirtualStream(this.virtualStream);\n          }\n        }\n      }\n\n      // Hide the video preview and show the canvas\n      this.videoPreviewRef.nativeElement.classList.add('d-none');\n      this.backgroundCanvasRef.nativeElement.classList.remove('d-none');\n\n      // Hide the modal\n      // this.isVisible = false;\n      this.onClose();\n    } catch (error) {\n      console.log('Error during modal close:', error);\n    }\n  };\n\n  showLoading() {\n    this.loadingOverlayRef.nativeElement.classList.remove('d-none');\n  }\n\n  hideLoading() {\n    this.loadingOverlayRef.nativeElement.classList.add('d-none');\n  }\n}\n","<div [ngStyle]=\"{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', backgroundColor: 'rgba(0, 0, 0, 0.5)', display: isVisible ? 'block' : 'none', zIndex: 999 }\">\r\n    <div [ngStyle]=\"{ position: 'fixed', backgroundColor: backgroundColor, borderRadius: '10px', padding: '10px', width: '80%', maxWidth: '500px', maxHeight: '75%', overflowY: 'auto', overflowX: 'hidden', top: position.includes('top') ? '10px' : 'auto', bottom: position.includes('bottom') ? '10px' : 'auto', left: position.includes('Left') ? '10px' : 'auto', right: position.includes('Right') ? '10px' : 'auto' }\">\r\n      <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;\">\r\n        <h2 style=\"font-size: x-large; font-weight: bold; color: black;\">Background Settings</h2>\r\n        <button (click)=\"onClose()\" style=\"border: none; background: none; cursor: pointer;\">\r\n          <fa-icon [icon]=\"faTimes\" size=\"xl\" style=\"font-size: 20px; color: black;\"></fa-icon>\r\n        </button>\r\n      </div>\r\n      <hr style=\"height: 1px; background-color: black; margin-top: 5px; margin-bottom: 5px;\" />\r\n      <div style=\"max-width: 95%; overflow-x: auto;\">\r\n        <div id=\"defaultImages\" #defaultImagesContainer></div>\r\n        <div class=\"form-group\" style=\"max-width: 70%; overflow-x: auto;\">\r\n          <label for=\"uploadImage\">Upload Custom Image</label>\r\n          <input type=\"file\" class=\"form-control\" id=\"uploadImage\" #uploadImageInput (change)=\"handleImageUpload($event)\" />\r\n        </div>\r\n        <canvas id=\"mainCanvas\" #mainCanvas class=\"d-none\"></canvas>\r\n        <canvas id=\"backgroundCanvas\" #backgroundCanvas class=\"d-none\" style=\"width: 100%; max-width: 400px; height: auto; background-color: transparent; border: 1px solid black;\"></canvas>\r\n        <video id=\"captureVideo\" #captureVideo class=\"d-none\" muted autoplay playsinline></video>\r\n        <video id=\"previewVideo\" #videoPreview class=\"d-none\" muted autoplay playsinline style=\"width: 100%; max-width: 400px; height: auto; background-color: transparent; border: 1px solid black;\"></video>\r\n        <div id=\"loadingOverlay\" #loadingOverlay class=\"d-none\" [ngStyle]=\"{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', backgroundColor: 'rgba(0, 0, 0, 0.5)', display: 'flex', 'justify-content': 'center', 'align-items': 'center', zIndex: 1000 }\">\r\n          <div [ngStyle]=\"{ width: '50px', height: '50px', border: '5px solid rgba(255, 255, 255, 0.3)', borderRadius: '50%', borderTop: '5px solid white', animation: 'spin 1s linear infinite' }\"></div>\r\n        </div>\r\n        <br />\r\n        <button id=\"applyBackgroundButton\" #applyBackgroundButton class=\"btn btn-primary\" (click)=\"applyBackground()\">Preview Background</button>\r\n        <button id=\"saveBackgroundButton\" #saveBackgroundButton class=\"btn btn-success d-none\" (click)=\"saveBackground()\">Save Background</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faPen, faTimes, faUsers } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { BreakoutParticipant, Participant } from '../../../@types/types';\n\n@Component({\n  selector: 'app-room-list',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: './room-list.component.html',\n  styleUrls: ['./room-list.component.css'],\n})\nexport class RoomListComponent {\n  @Input()\n  rooms: BreakoutParticipant[][] = [];\n  @Output() editRoom = new EventEmitter<number>();\n  @Output() deleteRoom = new EventEmitter<number>();\n  @Output() removeParticipant = new EventEmitter<{\n    roomIndex: number;\n    participant: BreakoutParticipant | Participant;\n  }>();\n\n  faPen = faPen;\n  faTimes = faTimes;\n  faUsers = faUsers;\n\n  handleEditRoom(roomIndex: number) {\n    this.editRoom.emit(roomIndex);\n  }\n\n  handleDeleteRoom(roomIndex: number) {\n    this.deleteRoom.emit(roomIndex);\n  }\n\n  handleRemoveParticipant(roomIndex: number, participant: BreakoutParticipant | Participant) {\n    this.removeParticipant.emit({ roomIndex, participant });\n  }\n}\n","<div *ngFor=\"let room of rooms; let roomIndex = index\" class=\"card mb-3 text-dark\">\r\n    <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n      <span>Room {{ roomIndex + 1 }} <fa-icon [icon]=\"faUsers\"></fa-icon></span>\r\n      <div>\r\n        <button class=\"btn btn-secondary btn-sm\" (click)=\"handleEditRoom(roomIndex)\">\r\n          <fa-icon [icon]=\"faPen\"></fa-icon>\r\n        </button>\r\n        <button class=\"btn btn-danger btn-sm\" (click)=\"handleDeleteRoom(roomIndex)\">\r\n          <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <ul class=\"list-group\">\r\n        <li *ngFor=\"let participant of room; let index = index\" class=\"list-group-item d-flex justify-content-between align-items-center text-dark\">\r\n          {{ participant.name }}\r\n          <button class=\"btn btn-danger btn-sm\" (click)=\"handleRemoveParticipant(roomIndex, participant)\">\r\n            <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes, faPlus, faUsers, faPen } from '@fortawesome/free-solid-svg-icons';\nimport { BreakoutParticipant, Participant } from '../../../@types/types';\n\n@Component({\n  selector: 'app-edit-room-modal',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: './edit-room-modal.component.html',\n  styleUrls: ['./edit-room-modal.component.css'],\n})\nexport class EditRoomModalComponent implements OnInit {\n  @Input() editRoomModalVisible = false;\n  @Input() currentRoom: BreakoutParticipant[] = [];\n  @Input() participantsRef: Participant[] = [];\n  @Input() currentRoomIndex = -1;\n  @Input() position = 'center';\n  @Input() backgroundColor = '#fff';\n\n  @Output() setEditRoomModalVisible = new EventEmitter<boolean>();\n  @Output() addParticipant = new EventEmitter<{\n    roomIndex: number;\n    participant: Participant | BreakoutParticipant;\n  }>();\n  @Output() removeParticipant = new EventEmitter<{\n    roomIndex: number;\n    participant: Participant | BreakoutParticipant;\n  }>();\n\n  faTimes = faTimes;\n  faPlus = faPlus;\n  faUsers = faUsers;\n  faPen = faPen;\n\n  modalWidth = 400;\n\n  ngOnInit() {\n    this.calculateModalWidth();\n    window.addEventListener('resize', this.calculateModalWidth.bind(this));\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.calculateModalWidth.bind(this));\n  }\n\n  calculateModalWidth() {\n    const screenWidth = window.innerWidth;\n    this.modalWidth = screenWidth > 500 ? 400 : screenWidth * 0.8;\n  }\n\n  modalContainerStyle() {\n    return {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      zIndex: 1000,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    };\n  }\n\n  modalContentStyle() {\n    return {\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '20px',\n      width: `${this.modalWidth}px`,\n      maxHeight: '80%',\n      overflowY: 'auto',\n    };\n  }\n\n  handleAddParticipant(roomIndex: number, participant: BreakoutParticipant) {\n    this.addParticipant.emit({ roomIndex, participant });\n  }\n\n  handleRemoveParticipant(roomIndex: number, participant: BreakoutParticipant) {\n    this.removeParticipant.emit({ roomIndex, participant });\n  }\n\n  closeModal() {\n    this.setEditRoomModalVisible.emit(false);\n  }\n\n  unassignedParticipants(): Participant[] {\n    return this.participantsRef.filter((participant) => participant['breakRoom'] == null);\n  }\n}\n","<div *ngIf=\"editRoomModalVisible\" class=\"modal-container\" [ngStyle]=\"modalContainerStyle()\">\r\n  <div class=\"modal-content text-dark\" [ngStyle]=\"modalContentStyle()\">\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\">Edit Room {{ currentRoomIndex + 1 }} <fa-icon [icon]=\"faPen\"></fa-icon></h5>\r\n      <button type=\"button\" class=\"close\" (click)=\"closeModal()\">\r\n        <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div class=\"list-container\">\r\n        <h5>Assigned Participants <fa-icon [icon]=\"faUsers\"></fa-icon></h5>\r\n        <ul class=\"list-group\">\r\n          <li *ngFor=\"let participant of currentRoom; let i = index\" class=\"list-group-item d-flex justify-content-between align-items-center text-dark\">\r\n            {{ participant.name }}\r\n            <button class=\"btn btn-danger btn-sm\" (click)=\"handleRemoveParticipant(currentRoomIndex, participant)\">\r\n              <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n            </button>\r\n          </li>\r\n          <li *ngIf=\"currentRoom.length === 0\" class=\"list-group-item d-flex justify-content-between align-items-center text-dark\">\r\n            None assigned\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"list-container\">\r\n        <h5>Unassigned Participants <fa-icon [icon]=\"faUsers\"></fa-icon></h5>\r\n        <ul class=\"list-group\">\r\n          <li *ngFor=\"let participant of unassignedParticipants(); let i = index\" class=\"list-group-item d-flex justify-content-between align-items-center text-dark\">\r\n            {{ participant.name }}\r\n            <button class=\"btn btn-primary btn-sm\" (click)=\"handleAddParticipant(currentRoomIndex, participant)\">\r\n              <fa-icon [icon]=\"faPlus\"></fa-icon>\r\n            </button>\r\n          </li>\r\n          <li *ngIf=\"unassignedParticipants().length === 0\" class=\"list-group-item d-flex justify-content-between align-items-center text-dark\">\r\n            None pending\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal()\">Close</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n  ElementRef,\n  OnInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  faDoorOpen,\n  faTimes,\n  faRandom,\n  faHandPointer,\n  faPlus,\n  faSave,\n  faPlay,\n  faSyncAlt,\n  faStop,\n  faUsers,\n} from '@fortawesome/free-solid-svg-icons';\nimport { RoomListComponent } from './room-list/room-list.component';\nimport { EditRoomModalComponent } from './edit-room-modal/edit-room-modal.component';\nimport { Socket } from 'socket.io-client';\nimport { Participant, ShowAlert, BreakoutParticipant } from '../../@types/types';\n\nexport interface BreakoutRoomsModalParameters {\n  participants: Participant[];\n  showAlert?: ShowAlert;\n  socket: Socket;\n  itemPageLimit: number;\n  meetingDisplayType: string;\n  prevMeetingDisplayType: string;\n  roomName: string;\n  shareScreenStarted: boolean;\n  shared: boolean;\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n  isBreakoutRoomsModalVisible: boolean;\n  currentRoomIndex: number | null;\n  canStartBreakout: boolean;\n  breakoutRooms: BreakoutParticipant[][];\n  updateBreakOutRoomStarted: (started: boolean) => void;\n  updateBreakOutRoomEnded: (ended: boolean) => void;\n  updateCurrentRoomIndex: (roomIndex: number) => void;\n  updateCanStartBreakout: (canStart: boolean) => void;\n  updateBreakoutRooms: (breakoutRooms: BreakoutParticipant[][]) => void;\n  updateMeetingDisplayType: (displayType: string) => void;\n\n  getUpdatedAllParams: () => BreakoutRoomsModalParameters;\n  [key: string]: any;\n}\n\n// Export the type definition for the function\nexport type BreakoutRoomsModalType = (options: BreakoutRoomsModalOptions) => HTMLElement;\n\nexport interface BreakoutRoomsModalOptions {\n  isVisible: boolean;\n  parameters: BreakoutRoomsModalParameters;\n  position?: 'topRight' | 'topLeft' | 'bottomRight' | 'bottomLeft';\n  backgroundColor?: string;\n  onBreakoutRoomsClose: () => void;\n}\n\n@Component({\n  selector: 'app-breakout-rooms-modal',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    FontAwesomeModule,\n    RoomListComponent,\n    EditRoomModalComponent,\n  ],\n  templateUrl: './breakout-rooms-modal.component.html',\n  styleUrls: ['./breakout-rooms-modal.component.css'],\n})\nexport class BreakoutRoomsModal implements OnChanges, OnInit {\n  @Input() isVisible = false;\n  @Input() parameters!: BreakoutRoomsModalParameters;\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#83c0e9';\n  @Input() onBreakoutRoomsClose: () => void = () => {\n    console.log('Breakout rooms closed');\n  };\n  @ViewChild('roomsContainer') roomsContainerRef!: ElementRef;\n\n  faDoorOpen = faDoorOpen;\n  faTimes = faTimes;\n  faRandom = faRandom;\n  faHandPointer = faHandPointer;\n  faPlus = faPlus;\n  faSave = faSave;\n  faPlay = faPlay;\n  faSyncAlt = faSyncAlt;\n  faStop = faStop;\n  faUsers = faUsers;\n\n  participantsRef: Participant[] = [];\n  breakoutRoomsRef: BreakoutParticipant[][] = [];\n\n  numRooms = '';\n  newParticipantAction = 'autoAssignNewRoom';\n  currentRoom: BreakoutParticipant[] | null = null;\n  editRoomModalVisible = false;\n\n  startBreakoutButtonVisible = false;\n  stopBreakoutButtonVisible = false;\n\n  modalWidth = 400;\n\n  calculateModalWidth() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.85 * screenWidth;\n    if (modalWidth > 700) {\n      modalWidth = 700;\n    }\n    this.modalWidth = modalWidth;\n  }\n\n  modalContainerStyle() {\n    return {\n      display: this.isVisible ? 'block' : 'none',\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      zIndex: '999',\n    };\n  }\n\n  modalContentStyle() {\n    return {\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      width: `${this.modalWidth}px`,\n      maxHeight: '75%',\n      overflowX: 'hidden',\n      overflowY: 'auto',\n      position: 'fixed',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['isVisible'] && this.isVisible) {\n      this.initializeBreakoutRooms();\n    }\n  }\n\n  ngOnInit() {\n    this.calculateModalWidth();\n  }\n\n  initializeBreakoutRooms = () => {\n    this.parameters = this.parameters.getUpdatedAllParams();\n    const filteredParticipants = this.parameters.participants.filter(\n      (participant: any) => participant.islevel != '2',\n    );\n    this.participantsRef = filteredParticipants;\n    this.breakoutRoomsRef =\n      this.parameters.breakoutRooms && this.parameters.breakoutRooms.length > 0\n        ? [...this.parameters.breakoutRooms]\n        : [];\n    this.checkCanStartBreakout();\n  };\n\n  handleRandomAssign() {\n    const numRoomsInt = parseInt(this.numRooms);\n    if (!numRoomsInt || numRoomsInt <= 0) {\n      this.parameters.showAlert?.({\n        message: 'Please enter a valid number of rooms',\n        type: 'danger',\n      });\n      return;\n    }\n\n    const newBreakoutRooms: BreakoutParticipant[][] = Array.from({ length: numRoomsInt }, () => []);\n\n    const shuffledParticipants = [...this.participantsRef].sort(() => 0.5 - Math.random());\n\n    shuffledParticipants.forEach((participant, index) => {\n      const roomIndex = index % numRoomsInt;\n      if (newBreakoutRooms[roomIndex].length < this.parameters.itemPageLimit) {\n        const participant_: BreakoutParticipant = { name: participant.name, breakRoom: roomIndex };\n        newBreakoutRooms[roomIndex].push(participant_);\n        participant['breakRoom'] = roomIndex;\n      } else {\n        for (let i = 0; i < numRoomsInt; i++) {\n          if (newBreakoutRooms[i].length < this.parameters.itemPageLimit) {\n            newBreakoutRooms[i].push(participant);\n            participant['breakRoom'] = i;\n            break;\n          }\n        }\n      }\n    });\n    this.breakoutRoomsRef = newBreakoutRooms;\n    this.checkCanStartBreakout();\n  }\n\n  handleManualAssign() {\n    const numRoomsInt = parseInt(this.numRooms);\n    if (!numRoomsInt || numRoomsInt <= 0) {\n      this.parameters.showAlert?.({\n        message: 'Please enter a valid number of rooms',\n        type: 'danger',\n      });\n      return;\n    }\n\n    this.breakoutRoomsRef = Array.from({ length: numRoomsInt }, () => []);\n    this.parameters.updateCanStartBreakout(false);\n    this.checkCanStartBreakout();\n  }\n\n  handleAddRoom() {\n    this.breakoutRoomsRef = [...this.breakoutRoomsRef, []];\n    this.parameters.updateCanStartBreakout(false);\n    this.checkCanStartBreakout();\n  }\n\n  handleSaveRooms() {\n    if (this.validateRooms()) {\n      this.parameters.updateBreakoutRooms(this.breakoutRoomsRef);\n      this.parameters.updateCanStartBreakout(true);\n      this.checkCanStartBreakout();\n      this.parameters.showAlert?.({ message: 'Rooms saved successfully', type: 'success' });\n    } else {\n      this.parameters.showAlert?.({ message: 'Rooms validation failed', type: 'danger' });\n    }\n  }\n\n  validateRooms() {\n    if (this.breakoutRoomsRef.length == 0) {\n      this.parameters.showAlert?.({ message: 'There must be at least one room', type: 'danger' });\n      return false;\n    }\n\n    for (let room of this.breakoutRoomsRef) {\n      if (room.length == 0) {\n        this.parameters.showAlert?.({ message: 'Rooms must not be empty', type: 'danger' });\n        return false;\n      }\n\n      const participantNames = room.map((p) => p.name);\n      const uniqueNames = new Set(participantNames);\n      if (participantNames.length != uniqueNames.size) {\n        this.parameters.showAlert?.({\n          message: 'Duplicate participant names in a room',\n          type: 'danger',\n        });\n        return false;\n      }\n\n      if (room.length > this.parameters.itemPageLimit) {\n        this.parameters.showAlert?.({\n          message: 'A room exceeds the participant limit',\n          type: 'danger',\n        });\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  checkCanStartBreakout = () => {\n    this.parameters = this.parameters.getUpdatedAllParams();\n    if (this.parameters.canStartBreakout) {\n      this.startBreakoutButtonVisible = true;\n      this.stopBreakoutButtonVisible =\n        this.parameters.breakOutRoomStarted && !this.parameters.breakOutRoomEnded;\n    } else {\n      this.startBreakoutButtonVisible = false;\n      this.stopBreakoutButtonVisible = false;\n    }\n  };\n\n  handleStartBreakout = () => {\n    this.parameters = this.parameters.getUpdatedAllParams();\n    if (this.parameters.shareScreenStarted || this.parameters.shared) {\n      this.parameters.showAlert?.({\n        message: 'You cannot start breakout rooms while screen sharing is active',\n        type: 'danger',\n      });\n      return;\n    }\n\n    if (this.parameters.canStartBreakout) {\n      const emitName =\n        this.parameters.breakOutRoomStarted && !this.parameters.breakOutRoomEnded\n          ? 'updateBreakout'\n          : 'startBreakout';\n      const filteredBreakoutRooms = this.breakoutRoomsRef.map((room) =>\n        room.map(({ name, breakRoom }) => ({ name, breakRoom })),\n      );\n      this.parameters.socket.emit(\n        emitName,\n        {\n          breakoutRooms: filteredBreakoutRooms,\n          newParticipantAction: this.newParticipantAction,\n          roomName: this.parameters.roomName,\n        },\n        (response: { success: any; reason: any }) => {\n          if (response.success) {\n            this.parameters.showAlert?.({ message: 'Breakout rooms active', type: 'success' });\n            this.parameters.updateBreakOutRoomStarted(true);\n            this.parameters.updateBreakOutRoomEnded(false);\n\n            this.onBreakoutRoomsClose();\n            if (this.parameters.meetingDisplayType != 'all') {\n              this.parameters.updateMeetingDisplayType('all');\n            }\n          } else {\n            this.parameters.showAlert?.({ message: response.reason, type: 'danger' });\n          }\n        },\n      );\n    }\n  };\n\n  handleStopBreakout() {\n    this.parameters.socket.emit(\n      'stopBreakout',\n      { roomName: this.parameters.roomName },\n      (response: { success: any; reason: any }) => {\n        if (response.success) {\n          this.parameters.showAlert?.({ message: 'Breakout rooms stopped', type: 'success' });\n          this.parameters.updateBreakOutRoomStarted(false);\n          this.parameters.updateBreakOutRoomEnded(true);\n\n          this.onBreakoutRoomsClose();\n          if (this.parameters.meetingDisplayType != this.parameters.prevMeetingDisplayType) {\n            this.parameters.updateMeetingDisplayType(this.parameters.prevMeetingDisplayType);\n          }\n        } else {\n          this.parameters.showAlert?.({ message: response.reason, type: 'danger' });\n        }\n      },\n    );\n  }\n\n  handleEditRoom(roomIndex: number) {\n    this.parameters.updateCurrentRoomIndex(roomIndex);\n    this.currentRoom = this.breakoutRoomsRef[roomIndex];\n    this.editRoomModalVisible = true;\n    this.parameters.updateCanStartBreakout(false);\n    this.checkCanStartBreakout();\n  }\n\n  handleDeleteRoom(roomIndex: number) {\n    if (this.breakoutRoomsRef.length > 0) {\n      const room = this.breakoutRoomsRef[roomIndex];\n      room.forEach((participant) => (participant.breakRoom = null));\n      const newBreakoutRooms = [...this.breakoutRoomsRef];\n      newBreakoutRooms.splice(roomIndex, 1);\n\n      newBreakoutRooms.forEach((room, index) => {\n        room.forEach((participant) => (participant.breakRoom = index));\n      });\n\n      this.breakoutRoomsRef = newBreakoutRooms;\n      this.checkCanStartBreakout();\n    }\n  }\n\n  handleAddParticipant(event: { roomIndex: number; participant: BreakoutParticipant }) {\n    const { roomIndex, participant } = event;\n    if (this.breakoutRoomsRef[roomIndex].length < this.parameters.itemPageLimit) {\n      const newBreakoutRooms = [...this.breakoutRoomsRef];\n      newBreakoutRooms[roomIndex].push(participant);\n      this.breakoutRoomsRef = newBreakoutRooms;\n      participant['breakRoom'] = roomIndex;\n      if (this.parameters.currentRoomIndex != null) {\n        this.handleEditRoom(this.parameters.currentRoomIndex);\n      }\n    } else {\n      this.parameters.showAlert?.({ message: 'Room is full', type: 'danger' });\n    }\n  }\n\n  handleRemoveParticipant(event: { roomIndex: number; participant: BreakoutParticipant }) {\n    const { roomIndex, participant } = event;\n    const newBreakoutRooms = [...this.breakoutRoomsRef];\n    newBreakoutRooms[roomIndex] = newBreakoutRooms[roomIndex].filter((p) => p != participant);\n    this.breakoutRoomsRef = newBreakoutRooms;\n    participant['breakRoom'] = null;\n    if (this.parameters.currentRoomIndex != null) {\n      this.handleEditRoom(this.parameters.currentRoomIndex);\n    }\n  }\n}\n","<div *ngIf=\"isVisible\" class=\"modal-container\" [ngStyle]=\"modalContainerStyle()\">\r\n  <div class=\"modal-content\" [ngStyle]=\"modalContentStyle()\">\r\n    <div class=\"modal-header\">\r\n      <h2>Breakout Rooms <fa-icon [icon]=\"faDoorOpen\"></fa-icon></h2>\r\n      <button class=\"close-btn\" (click)=\"onBreakoutRoomsClose()\">\r\n        <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n      </button>\r\n    </div>\r\n    <hr>\r\n    <div class=\"form-group\">\r\n      <label for=\"numRooms\">Number of Rooms <fa-icon [icon]=\"faUsers\"></fa-icon></label>\r\n      <input type=\"number\" class=\"form-control\" id=\"numRooms\" [(ngModel)]=\"numRooms\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <button class=\"btn btn-primary\" (click)=\"handleRandomAssign()\">Random Assign <fa-icon [icon]=\"faRandom\"></fa-icon></button>\r\n      <button class=\"btn btn-secondary\" (click)=\"handleManualAssign()\">Manual Assign <fa-icon [icon]=\"faHandPointer\"></fa-icon></button>\r\n      <button class=\"btn btn-success\" (click)=\"handleAddRoom()\">Add Room <fa-icon [icon]=\"faPlus\"></fa-icon></button>\r\n      <button class=\"btn btn-info\" (click)=\"handleSaveRooms()\">Save Rooms <fa-icon [icon]=\"faSave\"></fa-icon></button>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"newParticipantAction\">New Participant Action <fa-icon [icon]=\"faUsers\"></fa-icon></label>\r\n      <select class=\"form-control\" id=\"newParticipantAction\" [(ngModel)]=\"newParticipantAction\">\r\n        <option value=\"autoAssignNewRoom\">Add to new room</option>\r\n        <option value=\"autoAssignAvailableRoom\">Add to open room</option>\r\n        <option value=\"manualAssign\">No action</option>\r\n      </select>\r\n    </div>\r\n    <div #roomsContainer>\r\n      <app-room-list [rooms]=\"breakoutRoomsRef\" (editRoom)=\"handleEditRoom($event)\" (deleteRoom)=\"handleDeleteRoom($event)\" (removeParticipant)=\"handleRemoveParticipant($event)\"></app-room-list>\r\n    </div>\r\n    <div *ngIf=\"startBreakoutButtonVisible\">\r\n      <button class=\"btn btn-primary mr-2 mb-2\" (click)=\"handleStartBreakout()\">\r\n        {{ parameters.breakOutRoomStarted && !parameters.breakOutRoomEnded ? 'Update Breakout' : 'Start Breakout' }} <fa-icon [icon]=\"parameters.breakOutRoomStarted && !parameters.breakOutRoomEnded ? faSyncAlt : faPlay\"></fa-icon>\r\n      </button>\r\n    </div>\r\n    <div *ngIf=\"stopBreakoutButtonVisible\">\r\n      <button class=\"btn btn-danger mr-2 mb-2\" (click)=\"handleStopBreakout()\">\r\n        Stop Breakout <fa-icon [icon]=\"faStop\"></fa-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <app-edit-room-modal [editRoomModalVisible]=\"editRoomModalVisible\" [currentRoom]=\"currentRoom!\" [participantsRef]=\"participantsRef\" [currentRoomIndex]=\"parameters.currentRoomIndex!\" (setEditRoomModalVisible)=\"editRoomModalVisible = $event\" (addParticipant)=\"handleAddParticipant($event)\" (removeParticipant)=\"handleRemoveParticipant($event)\"></app-edit-room-modal>\r\n</div>\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes, faCheck, faSyncAlt, faPlay, faSave } from '@fortawesome/free-solid-svg-icons';\nimport {\n  CaptureCanvasStreamParameters,\n  CaptureCanvasStreamType,\n  EventType,\n  OnScreenChangesParameters,\n  OnScreenChangesType,\n  Participant,\n  PrepopulateUserMediaParameters,\n  PrepopulateUserMediaType,\n  RePortParameters,\n  RePortType,\n  ShowAlert,\n  WhiteboardUpdatedData,\n  WhiteboardUser,\n} from '../../../@types/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface ConfigureWhiteboardModalParameters\n  extends OnScreenChangesParameters,\n    CaptureCanvasStreamParameters,\n    PrepopulateUserMediaParameters,\n    RePortParameters {\n  participants: Participant[];\n  showAlert?: ShowAlert;\n  socket: Socket;\n  itemPageLimit: number;\n  islevel: string;\n  roomName: string;\n  eventType: EventType;\n  shareScreenStarted: boolean;\n  shared: boolean;\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n  recordStarted: boolean;\n  recordResumed: boolean;\n  recordPaused: boolean;\n  recordStopped: boolean;\n  recordingMediaOptions: string;\n  canStartWhiteboard: boolean;\n  whiteboardStarted: boolean;\n  whiteboardEnded: boolean;\n  hostLabel: string;\n  updateWhiteboardStarted: (started: boolean) => void;\n  updateWhiteboardEnded: (ended: boolean) => void;\n  updateWhiteboardUsers: (users: WhiteboardUser[]) => void;\n  updateCanStartWhiteboard: (canStart: boolean) => void;\n  updateIsConfigureWhiteboardModalVisible: (isVisible: boolean) => void;\n\n  // mediasfu functions\n  onScreenChanges: OnScreenChangesType;\n  captureCanvasStream: CaptureCanvasStreamType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  rePort: RePortType;\n\n  getUpdatedAllParams: () => ConfigureWhiteboardModalParameters;\n  [key: string]: any;\n}\n\nexport interface ConfigureWhiteboardModalOptions {\n  isConfigureWhiteboardModalVisible: boolean;\n  onClose: () => void;\n  position?: string;\n  backgroundColor?: string;\n  parameters: ConfigureWhiteboardModalParameters;\n}\n\nexport type ConfigureWhiteboardModalType = (\n  options: ConfigureWhiteboardModalOptions,\n) => HTMLElement;\n\n@Component({\n  selector: 'app-configure-whiteboard-modal',\n  standalone: true,\n  templateUrl: './configure-whiteboard-modal.component.html',\n  styleUrls: ['./configure-whiteboard-modal.component.css'],\n  imports: [CommonModule, FontAwesomeModule],\n})\nexport class ConfigureWhiteboardModal implements OnInit, OnChanges {\n  @Input() isVisible = false;\n  @Input() parameters: ConfigureWhiteboardModalParameters =\n    {} as ConfigureWhiteboardModalParameters;\n  @Input() backgroundColor = '#83c0e9';\n  @Input() position = 'topRight';\n  @Input() onConfigureWhiteboardClose!: () => void;\n\n  faTimes = faTimes;\n  faCheck = faCheck;\n  faSyncAlt = faSyncAlt;\n  faPlay = faPlay;\n  faSave = faSave;\n\n  participantsCopy: Participant[] = [];\n  whiteboardLimit!: number;\n  isEditing = false;\n  canStartWhiteboard = false;\n  assignedParticipants: any[] = [];\n  unassignedParticipants: any[] = [];\n  whiteboardStarted = false;\n  whiteboardEnded = false;\n\n  private socket: Socket = {} as Socket;\n\n  ngOnInit() {\n    if (this.parameters && this.isVisible) {\n      try {\n        this.parameters = this.parameters.getUpdatedAllParams();\n      } catch {\n        /* handle error */\n      }\n      this.whiteboardLimit = this.parameters.itemPageLimit;\n      this.whiteboardStarted = this.parameters.whiteboardStarted;\n      this.whiteboardEnded = this.parameters.whiteboardEnded;\n      this.checkCanStartWhiteboard();\n    }\n\n    if (this.parameters) {\n      this.socket = this.parameters.socket;\n      if (this.socket) {\n        this.setupSocketListeners();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['parameters'] && this.parameters) {\n      if (this.parameters && this.isVisible) {\n        this.whiteboardLimit = this.parameters.itemPageLimit;\n        this.whiteboardStarted = this.parameters.whiteboardStarted;\n        this.whiteboardEnded = this.parameters.whiteboardEnded;\n        this.checkCanStartWhiteboard();\n      }\n\n      this.socket = this.parameters.socket;\n      if (this.socket) {\n        this.setupSocketListeners();\n      }\n    }\n\n    if (changes['isVisible'] && this.isVisible) {\n      this.parameters = this.parameters.getUpdatedAllParams();\n      if (!this.participantsCopy.length) {\n        const filteredParticipants = this.parameters.participants.filter(\n          (participant: Participant) => participant.islevel != '2',\n        );\n        this.participantsCopy = filteredParticipants;\n        this.updateParticipantsLists();\n      }\n      this.checkCanStartWhiteboard();\n    }\n  }\n\n  setupSocketListeners = () => {\n    if (this.socket && this.socket instanceof Socket) {\n      this.socket.on('whiteboardUpdated', async (data: WhiteboardUpdatedData) => {\n        if (this.parameters.islevel == '2' && data.members) {\n          const filteredParticipants = data.members.filter(\n            (participant: any) => !participant.isBanned,\n          );\n          this.participantsCopy = filteredParticipants;\n          this.updateParticipantsLists();\n        }\n\n        this.parameters.updateWhiteboardUsers(data.whiteboardUsers);\n\n        if (data.status == 'started') {\n          this.whiteboardStarted = true;\n          this.whiteboardEnded = false;\n          this.parameters.updateWhiteboardStarted(true);\n          this.parameters.updateWhiteboardEnded(false);\n\n          if (this.parameters.islevel != '2') {\n            this.parameters.shareScreenStarted = true;\n            await this.parameters.onScreenChanges({ changed: true, parameters: this.parameters });\n          }\n        } else if (data.status == 'ended') {\n          this.whiteboardEnded = true;\n          this.whiteboardStarted = false;\n          this.parameters.updateWhiteboardStarted(false);\n          this.parameters.updateWhiteboardEnded(true);\n\n          this.parameters.shareScreenStarted = false;\n          await this.parameters.onScreenChanges({ changed: true, parameters: this.parameters });\n          await this.parameters.prepopulateUserMedia({\n            name: this.parameters.hostLabel,\n            parameters: this.parameters,\n          });\n          await this.parameters.rePort({ restart: true, parameters: this.parameters });\n        }\n      });\n    }\n  };\n\n  toggleParticipant = (participant: any, add: boolean) => {\n    this.isEditing = true;\n    const selectedParticipants = this.participantsCopy.filter((p) => p.useBoard);\n    if (add && selectedParticipants.length >= this.whiteboardLimit - 1) {\n      this.parameters.showAlert?.({\n        message: `Participant limit exceeded - you can only add ${\n          this.whiteboardLimit - 1\n        } other participants`,\n        type: 'danger',\n      });\n      return;\n    }\n\n    this.participantsCopy = this.participantsCopy.map((p) =>\n      p.name === participant.name ? { ...p, useBoard: add } : p,\n    );\n    this.updateParticipantsLists();\n  };\n\n  validateWhiteboard() {\n    const selectedParticipants = this.participantsCopy.filter(\n      (participant) => participant.useBoard,\n    );\n    if (selectedParticipants.length > this.whiteboardLimit) {\n      this.parameters.showAlert?.({ message: 'Participant limit exceeded', type: 'danger' });\n      return false;\n    }\n    return true;\n  }\n\n  checkCanStartWhiteboard() {\n    const isValid = this.validateWhiteboard();\n    this.canStartWhiteboard = isValid;\n    this.parameters.updateCanStartWhiteboard(isValid);\n  }\n\n  handleSaveWhiteboard() {\n    if (this.validateWhiteboard()) {\n      this.isEditing = false;\n      this.canStartWhiteboard = true;\n      this.parameters.updateCanStartWhiteboard(true);\n      this.checkCanStartWhiteboard();\n      this.parameters.showAlert?.({ message: 'Whiteboard saved successfully', type: 'success' });\n    } else {\n      this.parameters.showAlert?.({ message: 'Whiteboard validation failed', type: 'danger' });\n    }\n  }\n\n  async handleStartWhiteboard() {\n    const {\n      shareScreenStarted,\n      shared,\n      breakOutRoomStarted,\n      breakOutRoomEnded,\n      roomName,\n      socket,\n      recordStarted,\n      recordResumed,\n      recordPaused,\n      recordStopped,\n      recordingMediaOptions,\n      onScreenChanges,\n      captureCanvasStream,\n      showAlert,\n    } = this.parameters;\n\n    if ((shareScreenStarted || shared) && !this.whiteboardStarted) {\n      showAlert?.({\n        message: 'You cannot start whiteboard while screen sharing is active',\n        type: 'danger',\n      });\n      return;\n    }\n\n    if (breakOutRoomStarted && !breakOutRoomEnded) {\n      showAlert?.({\n        message: 'You cannot start whiteboard while breakout rooms are active',\n        type: 'danger',\n      });\n      return;\n    }\n\n    if (this.canStartWhiteboard) {\n      const emitName =\n        this.whiteboardStarted && !this.whiteboardEnded ? 'updateWhiteboard' : 'startWhiteboard';\n      const filteredWhiteboardUsers = this.participantsCopy\n        .filter((participant) => participant.useBoard)\n        .map(({ name, useBoard }) => ({ name, useBoard }));\n      socket.emit(\n        emitName,\n        { whiteboardUsers: filteredWhiteboardUsers, roomName },\n        async (response: any) => {\n          if (response.success) {\n            showAlert?.({ message: 'Whiteboard active', type: 'success' });\n            this.parameters.whiteboardStarted = true;\n            this.parameters.whiteboardEnded = false;\n            this.parameters.updateWhiteboardStarted(true);\n            this.parameters.updateWhiteboardEnded(false);\n            this.parameters.updateIsConfigureWhiteboardModalVisible(false);\n\n            if (this.parameters.islevel != '2') {\n              this.parameters.shareScreenStarted = true;\n              await onScreenChanges({ changed: true, parameters: this.parameters });\n            }\n\n            if (this.parameters.islevel == '2' && (recordStarted || recordResumed)) {\n              if (!(recordPaused || recordStopped) && recordingMediaOptions == 'video') {\n                await captureCanvasStream({ parameters: this.parameters });\n              }\n            }\n          } else {\n            showAlert?.({ message: response.reason, type: 'danger' });\n          }\n        },\n      );\n    }\n  }\n\n  async handleStopWhiteboard() {\n    const {\n      roomName,\n      socket,\n      showAlert,\n      updateWhiteboardStarted,\n      updateWhiteboardEnded,\n      updateIsConfigureWhiteboardModalVisible,\n      onScreenChanges,\n      prepopulateUserMedia,\n      rePort,\n      hostLabel,\n    } = this.parameters;\n    socket.emit('stopWhiteboard', { roomName }, async (response: any) => {\n      if (response.success) {\n        showAlert?.({ message: 'Whiteboard stopped', type: 'success' });\n        this.parameters.whiteboardEnded = true;\n        this.parameters.whiteboardStarted = false;\n        updateWhiteboardStarted(false);\n        updateWhiteboardEnded(true);\n        updateIsConfigureWhiteboardModalVisible(false);\n\n        this.parameters.shareScreenStarted = false;\n        await onScreenChanges({ changed: true, parameters: this.parameters });\n        await prepopulateUserMedia({ name: hostLabel, parameters: this.parameters });\n        await rePort({ restart: true, parameters: this.parameters });\n      } else {\n        showAlert?.({ message: response.reason, type: 'danger' });\n      }\n    });\n  }\n\n  modalContainerStyle() {\n    return {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: this.isVisible ? 'block' : 'none',\n      zIndex: 999,\n    };\n  }\n\n  modalContentStyle() {\n    const screenWidth = window.innerWidth;\n    let modalWidth = 0.7 * screenWidth;\n    if (modalWidth > 400) {\n      modalWidth = 400;\n    }\n    return {\n      position: 'fixed',\n      backgroundColor: this.backgroundColor,\n      borderRadius: '10px',\n      padding: '10px',\n      width: modalWidth + 'px',\n      maxWidth: modalWidth + 'px',\n      maxHeight: '75%',\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      top: this.position.includes('top') ? '10px' : 'auto',\n      bottom: this.position.includes('bottom') ? '10px' : 'auto',\n      left: this.position.includes('Left') ? '10px' : 'auto',\n      right: this.position.includes('Right') ? '10px' : 'auto',\n    };\n  }\n\n  updateParticipantsLists = () => {\n    this.assignedParticipants = this.participantsCopy.filter((p) => p.useBoard);\n    this.unassignedParticipants = this.participantsCopy.filter((p) => !p.useBoard);\n  };\n}\n","<div [ngStyle]=\"modalContainerStyle()\">\r\n  <div [ngStyle]=\"modalContentStyle()\">\r\n    <div style=\"display: flex; flex-direction: column;\">\r\n      <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;\">\r\n        <h2 style=\"font-size: x-large; font-weight: bold; color: black;\">\r\n          Configure Whiteboard\r\n        </h2>\r\n        <button (click)=\"onConfigureWhiteboardClose()\" style=\"border: none; background: none; cursor: pointer;\">\r\n          <fa-icon [icon]=\"faTimes\" size=\"xl\" style=\"font-size: 20px; color: black;\"></fa-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 mb-3\">\r\n            <h6>Assigned</h6>\r\n            <ul class=\"list-group\" style=\"max-height: 200px; overflow-y: auto; border: 1px solid #ccc;\">\r\n              <ng-container *ngIf=\"assignedParticipants.length > 0; else noAssignedParticipants\">\r\n                <li *ngFor=\"let participant of assignedParticipants\" class=\"list-group-item d-flex justify-content-between align-items-center text-dark mb-2 mr-2\">\r\n                  {{ participant.name }}\r\n                  <button class=\"btn btn-danger btn-sm mr-2 ml-2\" (click)=\"toggleParticipant(participant, false)\">\r\n                    <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n                  </button>\r\n                </li>\r\n              </ng-container>\r\n              <ng-template #noAssignedParticipants>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center text-dark\">\r\n                  None\r\n                </li>\r\n              </ng-template>\r\n            </ul>\r\n          </div>\r\n          <div class=\"col-md-6 mt-xs-3 mb-3\">\r\n            <h6>Pending</h6>\r\n            <ul class=\"list-group\" style=\"max-height: 200px; overflow-y: auto; border: 1px solid #ccc;\">\r\n              <ng-container *ngIf=\"unassignedParticipants.length > 0; else noPendingParticipants\">\r\n                <li *ngFor=\"let participant of unassignedParticipants\" class=\"list-group-item d-flex justify-content-between align-items-center text-dark mb-2 mr-2\">\r\n                  {{ participant.name }}\r\n                  <button class=\"btn btn-primary btn-sm mr-2 ml-2\" (click)=\"toggleParticipant(participant, true)\">\r\n                    <fa-icon [icon]=\"faCheck\"></fa-icon>\r\n                  </button>\r\n                </li>\r\n              </ng-container>\r\n              <ng-template #noPendingParticipants>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center text-dark\">\r\n                  None\r\n                </li>\r\n              </ng-template>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-info\" (click)=\"handleSaveWhiteboard()\">\r\n          Save <fa-icon [icon]=\"faSave\"></fa-icon>\r\n        </button>\r\n      </div>\r\n      <hr />\r\n      <div *ngIf=\"!isEditing\">\r\n        <button *ngIf=\"canStartWhiteboard && whiteboardStarted && !whiteboardEnded\" class=\"btn btn-warning mb-2 mr-2\" (click)=\"handleStartWhiteboard()\">\r\n          Update <fa-icon [icon]=\"faSyncAlt\"></fa-icon>\r\n        </button>\r\n        <button *ngIf=\"canStartWhiteboard && !whiteboardStarted\" class=\"btn btn-success mb-2 mr-2\" (click)=\"handleStartWhiteboard()\">\r\n          Start <fa-icon [icon]=\"faPlay\"></fa-icon>\r\n        </button>\r\n        <button *ngIf=\"whiteboardStarted && !whiteboardEnded\" class=\"btn btn-danger mb-2 ml-2\" (click)=\"handleStopWhiteboard()\">\r\n          Stop <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/**\n * Whiteboard component for drawing and manipulating shapes, text, and images on a canvas.\n *\n * @component\n * @selector app-whiteboard\n * @templateUrl ./whiteboard.component.html\n * @styleUrls ./whiteboard.component.css\n * @encapsulation ViewEncapsulation.None\n * @imports [CommonModule, FormsModule, FontAwesomeModule]\n *\n * @class Whiteboard\n * @implements OnInit, OnDestroy, OnChanges\n *\n * @property {number} customWidth - Custom width for the whiteboard.\n * @property {number} customHeight - Custom height for the whiteboard.\n * @property {WhiteboardParameters} parameters - Parameters for the whiteboard.\n * @property {boolean} showAspect - Flag to show aspect ratio.\n *\n * @property {ElementRef<HTMLCanvasElement>} canvasRef - Reference to the canvas element.\n * @property {ElementRef<HTMLTextAreaElement>} textInputRef - Reference to the text input element.\n * @property {ElementRef<HTMLButtonElement>} toggleBackgroundRef - Reference to the toggle background button element.\n * @property {ElementRef<HTMLAnchorElement>} downloadLinkRef - Reference to the download link element.\n * @property {ElementRef<HTMLCanvasElement>} tempCanvasRef - Reference to the temporary canvas element.\n *\n * @property {IconDefinition} faTimes - FontAwesome icon for times.\n * @property {IconDefinition} faUndo - FontAwesome icon for undo.\n * @property {IconDefinition} faRedo - FontAwesome icon for redo.\n * @property {IconDefinition} faEraser - FontAwesome icon for eraser.\n * @property {IconDefinition} faShapes - FontAwesome icon for shapes.\n * @property {IconDefinition} faMousePointer - FontAwesome icon for mouse pointer.\n * @property {IconDefinition} faHandPaper - FontAwesome icon for hand paper.\n * @property {IconDefinition} faTextHeight - FontAwesome icon for text height.\n * @property {IconDefinition} faFont - FontAwesome icon for font.\n * @property {IconDefinition} faPencilAlt - FontAwesome icon for pencil alt.\n * @property {IconDefinition} faPaintBrush - FontAwesome icon for paint brush.\n * @property {IconDefinition} faTrash - FontAwesome icon for trash.\n * @property {IconDefinition} faSave - FontAwesome icon for save.\n * @property {IconDefinition} faSearch - FontAwesome icon for search.\n * @property {IconDefinition} faSearchMinus - FontAwesome icon for search minus.\n * @property {IconDefinition} faSearchPlus - FontAwesome icon for search plus.\n * @property {IconDefinition} faChevronLeft - FontAwesome icon for chevron left.\n * @property {IconDefinition} faUpload - FontAwesome icon for upload.\n * @property {IconDefinition} faChevronRight - FontAwesome icon for chevron right.\n *\n * @property {string} mode - Current mode of the whiteboard (e.g., 'pan', 'draw', 'erase').\n * @property {boolean} isDrawing - Flag indicating if drawing is in progress.\n * @property {boolean} isPanning - Flag indicating if panning is in progress.\n * @property {boolean} isDragging - Flag indicating if dragging is in progress.\n * @property {number} startX - Starting X coordinate for drawing.\n * @property {number} startY - Starting Y coordinate for drawing.\n * @property {number} currentX - Current X coordinate for drawing.\n * @property {number} currentY - Current Y coordinate for drawing.\n * @property {any[]} freehandDrawing - Array of points for freehand drawing.\n * @property {any} selectedShape - Currently selected shape.\n * @property {any} selectedHandle - Currently selected handle for resizing shapes.\n * @property {boolean} movingShape - Flag indicating if a shape is being moved.\n * @property {number} panX - X coordinate for panning.\n * @property {number} panY - Y coordinate for panning.\n * @property {number} scale - Current scale of the canvas.\n * @property {number} minScale - Minimum scale of the canvas.\n * @property {number} maxScale - Maximum scale of the canvas.\n * @property {number} eraserThickness - Thickness of the eraser.\n * @property {number} brushThickness - Thickness of the brush.\n * @property {number} lineThickness - Thickness of the line.\n * @property {string} lineType - Type of the line (e.g., 'solid', 'dashed').\n * @property {string} color - Current color for drawing.\n * @property {string} font - Current font for text.\n * @property {number} fontSize - Current font size for text.\n * @property {any} shape - Current shape being drawn.\n * @property {HTMLImageElement} backgroundImage - Background image for the canvas.\n * @property {boolean} toolbarVisible - Flag indicating if the toolbar is visible.\n * @property {string | null} dropdownOpen - Currently open dropdown menu.\n * @property {{ clientX: number, clientY: number, offsetX: number, offsetY: number } | null} currentClickPosition - Current click position on the canvas.\n * @property {number} maxWidth - Maximum width of the canvas.\n * @property {number} maxHeight - Maximum height of the canvas.\n * @property {boolean} dimensionsFixed - Flag indicating if the canvas dimensions are fixed.\n *\n * @method updateLineThickness - Updates the thickness of the line.\n * @param {number} thickness - New thickness for the line.\n *\n * @method updateBrushThickness - Updates the thickness of the brush.\n * @param {number} thickness - New thickness for the brush.\n *\n * @method updateEraserThickness - Updates the thickness of the eraser.\n * @param {number} thickness - New thickness for the eraser.\n *\n * @method updateColor - Updates the color for drawing.\n * @param {string} color - New color for drawing.\n *\n * @method updateFont - Updates the font for text.\n * @param {string} font - New font for text.\n *\n * @method updateFontSize - Updates the font size for text.\n * @param {number} fontSize - New font size for text.\n *\n * @method updateShape - Updates the shape being drawn.\n * @param {string} shape - New shape to be drawn.\n *\n * @constructor\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n *\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property of a directive changes.\n * @param {SimpleChanges} changes - Object of changes.\n *\n * @method ngOnDestroy - Lifecycle hook that is called when a directive, pipe, or service is destroyed.\n *\n * @method ngAfterViewInit - Lifecycle hook that is called after a component's view has been fully initialized.\n *\n * @method handleTextInput - Handles the text input event.\n * @param {KeyboardEvent} event - Keyboard event.\n *\n * @method addListeners - Adds event listeners to the canvas and document.\n *\n * @method handleTouchStart - Handles the touch start event.\n * @param {TouchEvent} e - Touch event.\n *\n * @method handleTouchMove - Handles the touch move event.\n * @param {TouchEvent} e - Touch event.\n *\n * @method handleTouchEnd - Handles the touch end event.\n * @param {TouchEvent} e - Touch event.\n *\n * @method handleClickOutside - Handles the click outside event.\n * @param {MouseEvent} event - Mouse event.\n *\n * @method handleCanvasClick - Handles the canvas click event.\n * @param {MouseEvent} e - Mouse event.\n *\n * @method startDrawing - Starts the drawing process.\n * @param {MouseEvent} e - Mouse event.\n *\n * @method draw - Draws on the canvas.\n * @param {MouseEvent} e - Mouse event.\n *\n * @method stopDrawing - Stops the drawing process.\n * @param {MouseEvent} e - Mouse event.\n *\n * @method erase - Erases a part of the canvas.\n * @param {number} x - X coordinate.\n * @param {number} y - Y coordinate.\n *\n * @method isPointNearLine - Checks if a point is near a line.\n * @param {number} px - X coordinate of the point.\n * @param {number} py - Y coordinate of the point.\n * @param {number} x1 - X coordinate of the line start.\n * @param {number} y1 - Y coordinate of the line start.\n * @param {number} x2 - X coordinate of the line end.\n * @param {number} y2 - Y coordinate of the line end.\n * @param {number} threshold - Distance threshold.\n * @returns {boolean} - True if the point is near the line, false otherwise.\n *\n * @method zoomCanvas - Zooms the canvas.\n * @param {number} scaleFactor - Scale factor for zooming.\n * @param {MouseEvent} [event] - Mouse event.\n *\n * @method handleZoom - Handles the zoom event.\n * @param {WheelEvent} e - Wheel event.\n *\n * @method drawEdgeMarkers - Draws edge markers on the canvas.\n *\n * @method drawShapes - Draws all shapes on the canvas.\n *\n * @method drawLine - Draws a line on the canvas.\n * @param {number} x1 - X coordinate of the line start.\n * @param {number} y1 - Y coordinate of the line start.\n * @param {number} x2 - X coordinate of the line end.\n * @param {number} y2 - Y coordinate of the line end.\n * @param {string} color - Color of the line.\n * @param {number} thickness - Thickness of the line.\n * @param {string} lineType - Type of the line (e.g., 'solid', 'dashed').\n *\n * @method drawText - Draws text on the canvas.\n * @param {string} text - Text to be drawn.\n * @param {number} x - X coordinate of the text.\n * @param {number} y - Y coordinate of the text.\n * @param {string} color - Color of the text.\n * @param {string} font - Font of the text.\n *\n * @method drawFreehand - Draws freehand lines on the canvas.\n * @param {{ x: number, y: number }[]} points - Array of points for freehand drawing.\n * @param {string} color - Color of the freehand drawing.\n * @param {number} thickness - Thickness of the freehand drawing.\n *\n * @method drawShape - Draws a shape on the canvas.\n * @param {string} type - Type of the shape.\n * @param {number} x1 - X coordinate of the shape start.\n * @param {number} y1 - Y coordinate of the shape start.\n * @param {number} x2 - X coordinate of the shape end.\n * @param {number} y2 - Y coordinate of the shape end.\n * @param {string} color - Color of the shape.\n * @param {number} thickness - Thickness of the shape.\n * @param {string} lineType - Type of the line (e.g., 'solid', 'dashed').\n * @param {CanvasRenderingContext2D} [ctx] - Canvas rendering context.\n *\n * @method drawPolygon - Draws a polygon on the canvas.\n * @param {CanvasRenderingContext2D} ctx - Canvas rendering context.\n * @param {number} sides - Number of sides of the polygon.\n * @param {number} x1 - X coordinate of the polygon start.\n * @param {number} y1 - Y coordinate of the polygon start.\n * @param {number} x2 - X coordinate of the polygon end.\n * @param {number} y2 - Y coordinate of the polygon end.\n */\nimport {\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  faTimes,\n  faUndo,\n  faRedo,\n  faEraser,\n  faShapes,\n  faMousePointer,\n  faHandPaper,\n  faTextHeight,\n  faFont,\n  faPencilAlt,\n  faPaintBrush,\n  faTrash,\n  faSave,\n  faSearch,\n  faSearchMinus,\n  faSearchPlus,\n  faChevronLeft,\n  faUpload,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Socket } from 'socket.io-client';\nimport {\n  OnScreenChangesParameters,\n  OnScreenChangesType,\n} from '../../../consumers/on-screen-changes.service';\nimport {\n  CaptureCanvasStreamParameters,\n  ShowAlert,\n  WhiteboardUser,\n  Participant,\n  CaptureCanvasStreamType,\n} from '../../../@types/types';\n\nexport interface Shape {\n  type: string;\n  x?: number;\n  y?: number;\n  x1?: number;\n  y1?: number;\n  x2?: number;\n  y2?: number;\n  text?: string;\n  color?: string;\n  font?: string;\n  fontSize?: number;\n  thickness?: number;\n  lineType?: string;\n  points?: Array<{ x: number; y: number }>;\n  img?: HTMLImageElement;\n  src?: string;\n}\n\nexport interface WhiteboardParameters\n  extends OnScreenChangesParameters,\n    CaptureCanvasStreamParameters {\n  socket: Socket;\n  showAlert?: ShowAlert;\n  islevel: string;\n  roomName: string;\n  shapes: Shape[];\n  useImageBackground: boolean;\n  redoStack: Shape[];\n  undoStack: string[];\n  whiteboardStarted: boolean;\n  whiteboardEnded: boolean;\n  whiteboardUsers: WhiteboardUser[];\n  participants: Participant[];\n  participantsAll: Participant[];\n  screenId: string;\n  recordStarted: boolean;\n  recordStopped: boolean;\n  recordPaused: boolean;\n  recordResumed: boolean;\n  recordingMediaOptions: string;\n  member: string;\n  shareScreenStarted: boolean;\n  canvasWhiteboard: HTMLCanvasElement | null;\n  targetResolution?: string;\n  targetResolutionHost?: string;\n\n  updateShapes: (shapes: Shape[]) => void;\n  updateUseImageBackground: (useImageBackground: boolean) => void;\n  updateRedoStack: (redoStack: Shape[]) => void;\n  updateUndoStack: (undoStack: string[]) => void;\n  updateWhiteboardStarted: (whiteboardStarted: boolean) => void;\n  updateWhiteboardEnded: (whiteboardEnded: boolean) => void;\n  updateWhiteboardUsers: (whiteboardUsers: WhiteboardUser[]) => void;\n  updateParticipants: (participants: Participant[]) => void;\n  updateScreenId: (screenId: string) => void;\n  updateShareScreenStarted: (shareScreenStarted: boolean) => void;\n  updateCanvasWhiteboard: (canvasWhiteboard: HTMLCanvasElement | null) => void;\n\n  // mediasfu functions\n  onScreenChanges: OnScreenChangesType;\n  captureCanvasStream: CaptureCanvasStreamType;\n\n  getUpdatedAllParams: () => WhiteboardParameters;\n  [key: string]: any;\n}\n\nexport interface WhiteboardOptions {\n  customWidth: number;\n  customHeight: number;\n  parameters: WhiteboardParameters;\n  showAspect: boolean;\n}\n\nexport type WhiteboardType = (options: WhiteboardOptions) => void;\n\n@Component({\n  selector: 'app-whiteboard',\n  standalone: true,\n  templateUrl: './whiteboard.component.html',\n  styleUrls: ['./whiteboard.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  imports: [CommonModule, FormsModule, FontAwesomeModule],\n})\nexport class Whiteboard implements OnInit, OnDestroy, OnChanges {\n  @Input() customWidth!: number;\n  @Input() customHeight!: number;\n  @Input() parameters: WhiteboardParameters = {} as WhiteboardParameters;\n  @Input() showAspect!: boolean;\n\n  @ViewChild('canvasRef', { static: false }) canvasRef!: ElementRef<HTMLCanvasElement>;\n  @ViewChild('textInputRef', { static: false }) textInputRef!: ElementRef<HTMLTextAreaElement>;\n  @ViewChild('toggleBackgroundRef', { static: false })\n  toggleBackgroundRef!: ElementRef<HTMLButtonElement>;\n  @ViewChild('downloadLinkRef', { static: false }) downloadLinkRef!: ElementRef<HTMLAnchorElement>;\n  @ViewChild('tempCanvasRef', { static: false }) tempCanvasRef!: ElementRef<HTMLCanvasElement>;\n\n  faTimes = faTimes;\n  faUndo = faUndo;\n  faRedo = faRedo;\n  faEraser = faEraser;\n  faShapes = faShapes;\n  faMousePointer = faMousePointer;\n  faHandPaper = faHandPaper;\n  faTextHeight = faTextHeight;\n  faFont = faFont;\n  faPencilAlt = faPencilAlt;\n  faPaintBrush = faPaintBrush;\n  faTrash = faTrash;\n  faSave = faSave;\n  faSearch = faSearch;\n  faSearchMinus = faSearchMinus;\n  faSearchPlus = faSearchPlus;\n  faChevronLeft = faChevronLeft;\n  faUpload = faUpload;\n  faChevronRight = faChevronRight;\n\n  private mode = 'pan';\n  private isDrawing = false;\n  private isPanning = false;\n  private isDragging = false;\n  private startX = 0;\n  private startY = 0;\n  private currentX = 0;\n  private currentY = 0;\n  private freehandDrawing: any[] = [];\n  private selectedShape: any = null;\n  private selectedHandle: any = null;\n  private movingShape = false;\n  private panX = 0;\n  private panY = 0;\n  private scale = 1;\n  private minScale = 0.25;\n  private maxScale = 1.75;\n  private eraserThickness = 10;\n  private brushThickness = 6;\n  private lineThickness = 6;\n  lineType = 'solid';\n  color = '#000000';\n  private font = 'Arial';\n  private fontSize = 20;\n  private shape: any = null;\n  private backgroundImage = new Image();\n  toolbarVisible = true;\n  dropdownOpen: string | null = null;\n  private currentClickPosition: {\n    clientX: number;\n    clientY: number;\n    offsetX: number;\n    offsetY: number;\n  } | null = null;\n\n  private maxWidth = 1280;\n  private maxHeight = 720;\n  private dimensionsFixed = false;\n  private isValidShape = false;\n\n  updateLineThickness = (thickness: number) => {\n    this.lineThickness = thickness;\n  };\n\n  updateBrushThickness = (thickness: number) => {\n    this.brushThickness = thickness;\n  };\n\n  updateEraserThickness = (thickness: number) => {\n    this.eraserThickness = thickness;\n  };\n\n  updateColor = (color: string) => {\n    this.color = color;\n  };\n\n  updateFont = (font: string) => {\n    this.font = font;\n  };\n\n  updateFontSize = (fontSize: number) => {\n    this.fontSize = fontSize;\n  };\n\n  updateShape = (shape: string) => {\n    this.shape = shape;\n  };\n\n  ngOnInit(): void {\n    if (this.showAspect) {\n      this.addListeners();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['parameters'] && changes['parameters'].currentValue) {\n      this.parameters = changes['parameters'].currentValue;\n\n      if (this.parameters.socket) {\n        this.parameters.socket.on('whiteboardUpdated', async (data: any) => {\n          this.WhiteboardUpdated(data);\n        });\n\n        this.parameters.socket.on('whiteboardAction', (data: any) => {\n          this.WhiteboardAction(data);\n        });\n      }\n    }\n\n    if (changes['showAspect']) {\n      if (changes['showAspect'].currentValue) {\n        this.addListeners();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    const canvas = this.canvasRef.nativeElement;\n    canvas.removeEventListener('mousedown', this.startDrawing.bind(this));\n    canvas.removeEventListener('mousemove', this.draw.bind(this));\n    canvas.removeEventListener('mouseup', this.stopDrawing.bind(this));\n    canvas.removeEventListener('wheel', this.handleZoom.bind(this));\n    canvas.removeEventListener('click', this.handleCanvasClick.bind(this));\n\n    // touch events\n    canvas.removeEventListener('touchstart', this.handleTouchStart.bind(this));\n    canvas.removeEventListener('touchmove', this.handleTouchMove.bind(this));\n    canvas.removeEventListener('touchend', this.handleTouchEnd.bind(this));\n\n    document.removeEventListener('mousedown', this.handleClickOutside.bind(this));\n  }\n\n  ngAfterViewInit() {\n    // Attach the event listener once after the view has been initialized\n    const textInput = this.textInputRef.nativeElement;\n    textInput.addEventListener('keypress', (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        this.handleTextInput(event);\n      }\n    });\n  }\n\n  handleTextInput(event: KeyboardEvent) {\n    const textInput = this.textInputRef.nativeElement;\n    if (event.key === 'Enter' && this.currentClickPosition) {\n      const { offsetX, offsetY } = this.currentClickPosition;\n      const text = textInput.value;\n      textInput.style.display = 'none';\n      textInput.value = '';\n\n      const x = (offsetX - this.panX) / this.scale;\n      const y = (offsetY - this.panY) / this.scale;\n\n      this.parameters.shapes.push({\n        type: 'text',\n        text,\n        x,\n        y,\n        color: this.color,\n        font: this.font,\n        fontSize: this.fontSize,\n      });\n\n      this.drawShapes();\n      this.parameters.updateShapes(this.parameters.shapes);\n      this.parameters.socket.emit(\n        'updateBoardAction',\n        {\n          action: 'text',\n          payload: {\n            type: 'text',\n            text,\n            x,\n            y,\n            color: this.color,\n            font: this.font,\n            fontSize: this.fontSize,\n          },\n        },\n        this.handleServerResponse,\n      );\n    }\n  }\n\n  addListeners = () => {\n    if (this.parameters) {\n      this.parameters = this.parameters.getUpdatedAllParams();\n    }\n\n    this.backgroundImage.src = 'https://mediasfu.com/images/svg/graph_paper.jpg';\n    this.backgroundImage.crossOrigin = 'anonymous';\n    this.backgroundImage.onload = () => {\n      this.drawShapes();\n    };\n\n    const canvas = this.canvasRef.nativeElement;\n\n    if (this.canvasRef.nativeElement) {\n      try {\n        if (\n          this.parameters.targetResolution == 'qhd' ||\n          this.parameters.targetResolutionHost == 'qhd'\n        ) {\n          this.maxWidth = 1920;\n          this.maxHeight = 1080;\n        } else if (\n          this.parameters.targetResolution == 'fhd' ||\n          this.parameters.targetResolutionHost == 'fhd'\n        ) {\n          this.maxWidth = 1920;\n          this.maxHeight = 1080;\n        }\n        canvas.width = this.maxWidth;\n        canvas.height = this.maxHeight;\n        this.dimensionsFixed = true;\n      } catch {\n        /* handle error */\n      }\n      this.parameters.updateCanvasWhiteboard(this.canvasRef.nativeElement);\n    }\n\n    canvas.addEventListener('mousedown', this.startDrawing.bind(this));\n    canvas.addEventListener('mousemove', this.draw.bind(this));\n    canvas.addEventListener('mouseup', this.stopDrawing.bind(this));\n    canvas.addEventListener('wheel', this.handleZoom.bind(this));\n    canvas.addEventListener('click', this.handleCanvasClick.bind(this));\n\n    // touch events\n    canvas.addEventListener('touchstart', this.handleTouchStart.bind(this));\n    canvas.addEventListener('touchmove', this.handleTouchMove.bind(this));\n    canvas.addEventListener('touchend', this.handleTouchEnd.bind(this));\n\n    document.addEventListener('mousedown', this.handleClickOutside.bind(this));\n  };\n\n  handleTouchStart(e: TouchEvent) {\n    e.preventDefault();\n    const touch = e.touches[0];\n    const mouseEvent = new MouseEvent('mousedown', {\n      clientX: touch.clientX,\n      clientY: touch.clientY,\n    });\n    this.canvasRef.nativeElement.dispatchEvent(mouseEvent);\n  }\n\n  handleTouchMove(e: TouchEvent) {\n    e.preventDefault();\n    const touch = e.touches[0];\n    const mouseEvent = new MouseEvent('mousemove', {\n      clientX: touch.clientX,\n      clientY: touch.clientY,\n    });\n    this.canvasRef.nativeElement.dispatchEvent(mouseEvent);\n  }\n\n  handleTouchEnd(e: TouchEvent) {\n    e.preventDefault();\n    const mouseEvent = new MouseEvent('mouseup', {});\n    this.canvasRef.nativeElement.dispatchEvent(mouseEvent);\n  }\n\n  handleClickOutside(event: MouseEvent) {\n    const target = event.target as Element;\n    if (this.dropdownOpen && !target.closest('.btn-group')) {\n      this.dropdownOpen = null;\n    }\n  }\n\n  handleCanvasClick(e: MouseEvent) {\n    if (this.mode === 'text') {\n      const textInput = this.textInputRef.nativeElement;\n      textInput.style.left = e.clientX + 'px';\n      textInput.style.top = e.clientY + 'px';\n      textInput.style.display = 'block';\n      textInput.focus();\n      this.currentClickPosition = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n        offsetX: e.offsetX,\n        offsetY: e.offsetY,\n      };\n    }\n  }\n\n  startDrawing(e: MouseEvent) {\n    this.isDrawing = true;\n    this.startX = (e.offsetX - this.panX) / this.scale;\n    this.startY = (e.offsetY - this.panY) / this.scale;\n\n    if (this.mode === 'erase') {\n      this.erase(this.startX, this.startY);\n    } else if (this.mode === 'draw' || this.mode === 'freehand') {\n      const ctx = this.canvasRef.nativeElement.getContext('2d');\n      ctx!.beginPath();\n      ctx!.moveTo(this.startX, this.startY);\n      if (this.mode === 'freehand') {\n        this.freehandDrawing = [{ x: this.startX, y: this.startY }];\n      }\n    } else if (this.mode === 'pan') {\n      this.isPanning = true;\n      this.isDragging = false;\n    } else if (this.mode === 'select') {\n      this.selectedHandle = this.getHandleAtPosition(this.startX, this.startY);\n      if (this.selectedHandle) {\n        this.isDragging = true;\n        this.movingShape = this.selectedHandle.isCenter;\n      } else {\n        this.selectedShape = this.findShape(this.startX, this.startY);\n        if (this.selectedShape) {\n          this.drawShapes();\n          this.drawSelection(this.selectedShape);\n        }\n      }\n    }\n  }\n\n  draw = (e: MouseEvent) => {\n    if (!this.dimensionsFixed) {\n      try {\n        if (\n          this.parameters.targetResolution == 'qhd' ||\n          this.parameters.targetResolutionHost == 'qhd'\n        ) {\n          this.maxWidth = 1920;\n          this.maxHeight = 1080;\n        } else if (\n          this.parameters.targetResolution == 'fhd' ||\n          this.parameters.targetResolutionHost == 'fhd'\n        ) {\n          this.maxWidth = 1920;\n          this.maxHeight = 1080;\n        }\n        this.canvasRef.nativeElement.width = this.maxWidth;\n        this.canvasRef.nativeElement.height = this.maxHeight;\n        this.dimensionsFixed = true;\n        this.parameters.updateCanvasWhiteboard(this.canvasRef.nativeElement);\n      } catch {\n        /* handle error */\n      }\n    }\n    if (!this.isDrawing) return;\n    this.currentX = (e.offsetX - this.panX) / this.scale;\n    this.currentY = (e.offsetY - this.panY) / this.scale;\n\n    if (this.mode == 'draw' || this.mode == 'freehand' || this.mode == 'shape') {\n      //if more than max width or height or less than 0, return\n      if (\n        this.currentX > this.maxWidth ||\n        this.currentY > this.maxHeight ||\n        this.currentX < 0 ||\n        this.currentY < 0\n      ) {\n        this.isValidShape = false;\n        return;\n      } else {\n        this.isValidShape = true;\n      }\n    }\n\n    const ctx = this.canvasRef.nativeElement.getContext('2d');\n    if (this.mode === 'erase') {\n      this.erase(this.currentX, this.currentY);\n    } else if (this.mode === 'draw') {\n      ctx!.clearRect(0, 0, this.canvasRef.nativeElement.width, this.canvasRef.nativeElement.height);\n      this.drawShapes();\n      this.drawLine(\n        this.startX,\n        this.startY,\n        this.currentX,\n        this.currentY,\n        this.color,\n        this.lineThickness,\n        this.lineType,\n      );\n    } else if (this.mode === 'freehand') {\n      ctx!.lineTo(this.currentX, this.currentY);\n      ctx!.strokeStyle = this.color;\n      ctx!.lineWidth = this.brushThickness;\n      ctx!.stroke();\n      this.freehandDrawing.push({ x: this.currentX, y: this.currentY });\n    } else if (this.mode === 'shape') {\n      ctx!.clearRect(0, 0, this.canvasRef.nativeElement.width, this.canvasRef.nativeElement.height);\n      this.drawShapes();\n      this.drawShape(\n        this.shape,\n        this.startX,\n        this.startY,\n        this.currentX,\n        this.currentY,\n        this.color,\n        this.lineThickness,\n        this.lineType,\n      );\n    } else if (this.mode === 'pan' && this.isPanning) {\n      this.isDragging = true;\n      const dx = e.clientX - this.startX;\n      const dy = e.clientY - this.startY;\n      this.panX += dx;\n      this.panY += dy;\n      this.startX = e.clientX;\n      this.startY = e.clientY;\n\n      ctx!.setTransform(this.scale, 0, 0, this.scale, this.panX, this.panY);\n      this.drawShapes();\n    } else if (this.mode === 'select' && this.selectedShape) {\n      ctx!.clearRect(0, 0, this.canvasRef.nativeElement.width, this.canvasRef.nativeElement.height);\n      if (this.movingShape) {\n        const dx = this.currentX - this.startX;\n        const dy = this.currentY - this.startY;\n        this.moveShape(this.selectedShape, dx, dy);\n        this.startX = this.currentX;\n        this.startY = this.currentY;\n      } else if (this.isDragging) {\n        this.resizeShape(this.selectedShape, this.selectedHandle, this.currentX, this.currentY);\n      }\n      this.drawShapes();\n      this.drawSelection(this.selectedShape);\n    }\n  };\n\n  stopDrawing() {\n    this.isDrawing = false;\n    this.isPanning = false;\n    this.isDragging = false;\n\n    const ctx = this.canvasRef.nativeElement.getContext('2d');\n    ctx!.closePath();\n\n    if (this.mode === 'draw' && this.isValidShape) {\n      this.parameters.shapes.push({\n        type: 'line',\n        x1: this.startX,\n        y1: this.startY,\n        x2: this.currentX,\n        y2: this.currentY,\n        color: this.color,\n        thickness: this.lineThickness,\n        lineType: this.lineType,\n      });\n      this.parameters.updateShapes(this.parameters.shapes);\n      this.saveState();\n      this.parameters.socket.emit(\n        'updateBoardAction',\n        {\n          action: 'draw',\n          payload: {\n            type: 'line',\n            x1: this.startX,\n            y1: this.startY,\n            x2: this.currentX,\n            y2: this.currentY,\n            color: this.color,\n            thickness: this.lineThickness,\n            lineType: this.lineType,\n          },\n        },\n        this.handleServerResponse,\n      );\n    } else if (this.mode === 'freehand' && this.isValidShape) {\n      this.parameters.shapes.push({\n        type: 'freehand',\n        points: this.freehandDrawing,\n        color: this.color,\n        thickness: this.brushThickness,\n      });\n      this.parameters.updateShapes(this.parameters.shapes);\n      this.parameters.socket.emit(\n        'updateBoardAction',\n        {\n          action: 'draw',\n          payload: {\n            type: 'freehand',\n            points: this.freehandDrawing,\n            color: this.color,\n            thickness: this.brushThickness,\n          },\n        },\n        this.handleServerResponse,\n      );\n      this.freehandDrawing = [];\n      this.saveState();\n    } else if (this.mode === 'shape' && this.isValidShape) {\n      this.parameters.shapes.push({\n        type: this.shape,\n        x1: this.startX,\n        y1: this.startY,\n        x2: this.currentX,\n        y2: this.currentY,\n        color: this.color,\n        thickness: this.lineThickness,\n        lineType: this.lineType,\n      });\n      this.parameters.updateShapes(this.parameters.shapes);\n      this.saveState();\n      this.parameters.socket.emit(\n        'updateBoardAction',\n        {\n          action: 'shape',\n          payload: {\n            type: this.shape,\n            x1: this.startX,\n            y1: this.startY,\n            x2: this.currentX,\n            y2: this.currentY,\n            color: this.color,\n            thickness: this.lineThickness,\n            lineType: this.lineType,\n          },\n        },\n        this.handleServerResponse,\n      );\n    } else if (this.mode === 'select') {\n      if (this.selectedShape && !this.movingShape && !this.isDragging) {\n        const shapeFound = this.findShape(this.currentX, this.currentY);\n        if (shapeFound) {\n          this.selectedShape = shapeFound;\n          this.drawShapes();\n          this.drawSelection(shapeFound);\n        }\n      }\n      if (this.selectedShape) {\n        this.parameters.socket.emit(\n          'updateBoardAction',\n          { action: 'shapes', payload: { shapes: this.parameters.shapes } },\n          this.handleServerResponse,\n        );\n      }\n      this.saveState();\n    }\n  }\n\n  erase(x: number, y: number) {\n    const ctx = this.canvasRef.nativeElement.getContext('2d');\n    ctx!.save();\n    ctx!.globalCompositeOperation = 'destination-out';\n    ctx!.beginPath();\n    ctx!.arc(x, y, this.eraserThickness / 2, 0, Math.PI * 2, false);\n    ctx!.fill();\n    ctx!.restore();\n\n    let changeOccurred = false;\n    this.parameters.shapes = this.parameters.shapes\n      .map((shape: any) => {\n        if (shape.type === 'freehand') {\n          return {\n            ...shape,\n            points: shape.points.filter((point: any) => {\n              const distance = Math.sqrt(Math.pow(point.x - x, 2) + Math.pow(point.y - y, 2));\n              if (distance <= this.eraserThickness / 2) {\n                changeOccurred = true;\n                return false;\n              }\n              return distance > this.eraserThickness / 2;\n            }),\n          };\n        } else if (shape.type === 'line') {\n          if (\n            this.isPointNearLine(\n              x,\n              y,\n              shape.x1,\n              shape.y1,\n              shape.x2,\n              shape.y2,\n              this.eraserThickness / 2,\n            )\n          ) {\n            changeOccurred = true;\n            return null;\n          }\n        } else if (shape.type === 'text') {\n          const textWidth = ctx!.measureText(shape.text).width;\n          if (\n            x > shape.x &&\n            x < shape.x + textWidth &&\n            y > shape.y - shape.fontSize &&\n            y < shape.y\n          ) {\n            changeOccurred = true;\n            return null;\n          }\n        } else if (shape.type === 'image') {\n          if (x > shape.x1 && x < shape.x2 && y > shape.y1 && y < shape.y2) {\n            changeOccurred = true;\n            return null;\n          }\n        } else {\n          if (x > shape.x1 && x < shape.x2 && y > shape.y1 && y < shape.y2) {\n            changeOccurred = true;\n            return null;\n          }\n        }\n        return shape;\n      })\n      .filter((shape: any) => shape && (shape.type !== 'freehand' || shape.points.length > 0));\n    this.parameters.updateShapes(this.parameters.shapes);\n\n    this.drawShapes();\n    if (changeOccurred) {\n      this.parameters.socket.emit(\n        'updateBoardAction',\n        { action: 'shapes', payload: { shapes: this.parameters.shapes } },\n        this.handleServerResponse,\n      );\n    }\n  }\n\n  isPointNearLine(\n    px: number,\n    py: number,\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    threshold: number,\n  ): boolean {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const dot = ((px - x1) * dx + (py - y1) * dy) / (length * length);\n    const closestX = x1 + dot * dx;\n    const closestY = y1 + dot * dy;\n    const distance = Math.sqrt(Math.pow(px - closestX, 2) + Math.pow(py - closestY, 2));\n    return distance <= threshold;\n  }\n\n  zoomCanvas(\n    scaleFactor: number,\n    event: MouseEvent = {\n      clientX: this.canvasRef.nativeElement.width / 2,\n      clientY: this.canvasRef.nativeElement.height / 2,\n    } as MouseEvent,\n  ) {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (scaleFactor === 10) {\n      this.scale = 1;\n      this.panX = 0;\n      this.panY = 0;\n    } else {\n      let newScale = this.scale * scaleFactor;\n      if (newScale < this.minScale) {\n        newScale = this.minScale;\n      } else if (newScale > this.maxScale) {\n        newScale = this.maxScale;\n      }\n\n      const rect = canvas.getBoundingClientRect();\n      const offsetX = (event.clientX - rect.left) / rect.width;\n      const offsetY = (event.clientY - rect.top) / rect.height;\n\n      const dx = offsetX * canvas.width * (1 - scaleFactor);\n      const dy = offsetY * canvas.height * (1 - scaleFactor);\n\n      this.scale = newScale;\n      this.panX = this.panX * scaleFactor + dx;\n      this.panY = this.panY * scaleFactor + dy;\n\n      const maxPanX = (canvas.width * (this.scale - 1)) / this.scale;\n      const maxPanY = (canvas.height * (this.scale - 1)) / this.scale;\n      this.panX = Math.min(Math.max(this.panX, -maxPanX), 0);\n      this.panY = Math.min(Math.max(this.panY, -maxPanY), 0);\n    }\n\n    ctx!.setTransform(this.scale, 0, 0, this.scale, this.panX, this.panY);\n    this.drawShapes();\n  }\n\n  handleZoom(e: WheelEvent) {\n    e.preventDefault();\n    if (e.deltaY < 0) {\n      this.zoomCanvas(1.2, e as any);\n    } else {\n      this.zoomCanvas(0.8, e as any);\n    }\n  }\n\n  drawEdgeMarkers() {\n    const ctx = this.canvasRef.nativeElement.getContext('2d');\n    ctx!.save();\n    ctx!.setTransform(1, 0, 0, 1, 0, 0);\n    ctx!.strokeStyle = 'red';\n    ctx!.lineWidth = 5;\n    ctx!.setLineDash([]); // reset line dash\n\n    const markerLength = 20;\n    const topLeftX = this.panX;\n    const topLeftY = this.panY;\n    const bottomRightX = this.panX + 1280 * this.scale;\n    const bottomRightY = this.panY + 720 * this.scale;\n\n    ctx!.beginPath();\n    ctx!.moveTo(topLeftX, topLeftY + markerLength);\n    ctx!.lineTo(topLeftX, topLeftY);\n    ctx!.lineTo(topLeftX + markerLength, topLeftY);\n    ctx!.stroke();\n\n    ctx!.beginPath();\n    ctx!.moveTo(bottomRightX - markerLength, topLeftY);\n    ctx!.lineTo(bottomRightX, topLeftY);\n    ctx!.lineTo(bottomRightX, topLeftY + markerLength);\n    ctx!.stroke();\n\n    ctx!.beginPath();\n    ctx!.moveTo(bottomRightX, bottomRightY - markerLength);\n    ctx!.lineTo(bottomRightX, bottomRightY);\n    ctx!.lineTo(bottomRightX - markerLength, bottomRightY);\n    ctx!.stroke();\n\n    ctx!.beginPath();\n    ctx!.moveTo(topLeftX + markerLength, bottomRightY);\n    ctx!.lineTo(topLeftX, bottomRightY);\n    ctx!.lineTo(topLeftX, bottomRightY - markerLength);\n    ctx!.stroke();\n\n    ctx!.restore();\n  }\n\n  drawShapes() {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    ctx!.clearRect(0, 0, canvas.width, canvas.height);\n    ctx!.save();\n    ctx!.setTransform(this.scale, 0, 0, this.scale, this.panX, this.panY);\n    if (this.parameters.useImageBackground) {\n      ctx!.drawImage(\n        this.backgroundImage,\n        -this.panX / this.scale,\n        -this.panY / this.scale,\n        canvas.width / this.scale,\n        canvas.height / this.scale,\n      );\n    } else {\n      ctx!.fillStyle = '#fff';\n      ctx!.fillRect(\n        -this.panX / this.scale,\n        -this.panY / this.scale,\n        canvas.width / this.scale,\n        canvas.height / this.scale,\n      );\n    }\n    this.parameters.shapes.forEach((shape: any) => {\n      if (shape.type === 'line') {\n        this.drawLine(\n          shape.x1,\n          shape.y1,\n          shape.x2,\n          shape.y2,\n          shape.color,\n          shape.thickness,\n          shape.lineType,\n        );\n      } else if (shape.type === 'freehand') {\n        this.drawFreehand(shape.points, shape.color, shape.thickness);\n      } else if (shape.type === 'text') {\n        ctx!.font = `${shape.fontSize}px ${shape.font}`;\n        ctx!.fillStyle = shape.color;\n        ctx!.fillText(shape.text, shape.x, shape.y);\n      } else if (shape.type === 'image') {\n        ctx!.drawImage(shape.img, shape.x1, shape.y1, shape.x2 - shape.x1, shape.y2 - shape.y1);\n      } else {\n        this.drawShape(\n          shape.type,\n          shape.x1,\n          shape.y1,\n          shape.x2,\n          shape.y2,\n          shape.color,\n          shape.thickness,\n          shape.lineType,\n        );\n      }\n    });\n    ctx!.restore();\n    this.drawEdgeMarkers();\n  }\n\n  drawLine(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    color: string,\n    thickness: number,\n    lineType: string,\n  ) {\n    const ctx = this.canvasRef.nativeElement.getContext('2d');\n    ctx!.beginPath();\n    ctx!.strokeStyle = color;\n    ctx!.lineWidth = thickness;\n    if (lineType === 'dashed') {\n      ctx!.setLineDash([10, 10]);\n    } else if (lineType === 'dotted') {\n      ctx!.setLineDash([2, 10]);\n    } else if (lineType === 'dashDot') {\n      ctx!.setLineDash([10, 5, 2, 5]);\n    } else {\n      ctx!.setLineDash([]);\n    }\n    ctx!.moveTo(x1, y1);\n    ctx!.lineTo(x2, y2);\n    ctx!.stroke();\n    ctx!.setLineDash([]);\n  }\n\n  drawText(text: string, x: number, y: number, color: string, font: string) {\n    const ctx = this.canvasRef.nativeElement.getContext('2d');\n    ctx!.font = `20px ${font}`;\n    ctx!.fillStyle = color;\n    ctx!.fillText(text, x, y);\n  }\n\n  drawFreehand(points: { x: number; y: number }[], color: string, thickness: number) {\n    const ctx = this.canvasRef.nativeElement.getContext('2d');\n    if (points.length < 2) return;\n    ctx!.strokeStyle = color;\n    ctx!.lineWidth = thickness;\n    ctx!.beginPath();\n    ctx!.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctx!.lineTo(points[i].x, points[i].y);\n    }\n    ctx!.stroke();\n  }\n\n  drawShape(\n    type: string,\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    color: string,\n    thickness: number,\n    lineType: string,\n    ctx: CanvasRenderingContext2D = this.canvasRef.nativeElement.getContext('2d')!,\n  ) {\n    ctx.beginPath();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    if (lineType === 'dashed') {\n      ctx.setLineDash([10, 10]);\n    } else if (lineType === 'dotted') {\n      ctx.setLineDash([2, 10]);\n    } else if (lineType === 'dashDot') {\n      ctx.setLineDash([10, 5, 2, 5]);\n    } else {\n      ctx.setLineDash([]);\n    }\n    if (type === 'rectangle') {\n      ctx.strokeRect(x1, y1, x2 - x1, y2 - y1);\n    } else if (type === 'circle') {\n      const radius = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n      ctx.arc(x1, y1, radius, 0, 2 * Math.PI);\n      ctx.stroke();\n    } else if (type === 'rhombus') {\n      const centerX = (x1 + x2) / 2;\n      const centerY = (y1 + y2) / 2;\n      ctx.moveTo(centerX, y1);\n      ctx.lineTo(x2, centerY);\n      ctx.lineTo(centerX, y2);\n      ctx.lineTo(x1, centerY);\n      ctx.closePath();\n      ctx.stroke();\n    } else if (type === 'pentagon') {\n      this.drawPolygon(ctx, 5, x1, y1, x2, y2);\n    } else if (type === 'hexagon') {\n      this.drawPolygon(ctx, 6, x1, y1, x2, y2);\n    } else if (type === 'triangle') {\n      const centerX = (x1 + x2) / 2;\n      ctx.moveTo(centerX, y1);\n      ctx.lineTo(x2, y2);\n      ctx.lineTo(x1, y2);\n      ctx.closePath();\n      ctx.stroke();\n    } else if (type === 'square') {\n      ctx.strokeRect(x1, y1, x2 - x1, x2 - x1);\n    } else if (type === 'octagon') {\n      this.drawPolygon(ctx, 8, x1, y1, x2, y2);\n    } else if (type === 'oval') {\n      const radiusX = Math.abs(x2 - x1) / 2;\n      const radiusY = Math.abs(y2 - y1) / 2;\n      const centerX = (x1 + x2) / 2;\n      const centerY = (y1 + y2) / 2;\n      ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, 0, 2 * Math.PI);\n      ctx.stroke();\n    } else if (type === 'parallelogram') {\n      const centerX = (x1 + x2) / 2;\n      ctx.moveTo(centerX, y1);\n      ctx.lineTo(x2, y2);\n      ctx.lineTo(centerX, y2);\n      ctx.lineTo(x1, y1);\n      ctx.closePath();\n      ctx.stroke();\n    } else if (type === 'image') {\n      ctx.drawImage(this.shape.img, x1, y1, x2 - x1, y2 - y1);\n    }\n  }\n\n  drawPolygon(\n    ctx: CanvasRenderingContext2D,\n    sides: number,\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n  ) {\n    const centerX = (x1 + x2) / 2;\n    const centerY = (y1 + y2) / 2;\n    const radius = Math.min(Math.abs(x2 - x1), Math.abs(y2 - y1)) / 2;\n    const angle = (2 * Math.PI) / sides;\n    ctx.beginPath();\n    for (let i = 0; i < sides; i++) {\n      const x = centerX + radius * Math.cos(i * angle - Math.PI / 2);\n      const y = centerY + radius * Math.sin(i * angle - Math.PI / 2);\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.closePath();\n    ctx.stroke();\n  }\n\n  undo() {\n    if (this.parameters.shapes.length > 0) {\n      this.parameters.redoStack.push(this.parameters.shapes.pop()!);\n      this.parameters.updateRedoStack(this.parameters.redoStack);\n      this.drawShapes();\n      this.parameters.socket.emit(\n        'updateBoardAction',\n        { action: 'undo' },\n        this.handleServerResponse,\n      );\n    }\n  }\n\n  redo() {\n    if (this.parameters.redoStack.length > 0) {\n      this.parameters.shapes.push(this.parameters.redoStack.pop()!);\n      this.parameters.updateShapes(this.parameters.shapes);\n      this.drawShapes();\n      this.parameters.socket.emit(\n        'updateBoardAction',\n        { action: 'redo' },\n        this.handleServerResponse,\n      );\n    }\n  }\n\n  saveState() {\n    this.parameters.undoStack.push(JSON.stringify(this.parameters.shapes));\n    this.parameters.updateUndoStack(this.parameters.undoStack);\n  }\n\n  findShape(x: number, y: number) {\n    return this.parameters.shapes.find((shape: any) => {\n      if (shape.type === 'freehand') {\n        return shape.points.some((point: any) => {\n          const distance = Math.sqrt(Math.pow(point.x - x, 2) + Math.pow(point.y - y, 2));\n          return distance < shape.thickness;\n        });\n      } else if (shape.type === 'text') {\n        const ctx = this.canvasRef.nativeElement.getContext('2d');\n        ctx!.font = `${shape.fontSize}px ${shape.font}`;\n        const textMetrics = ctx!.measureText(shape.text);\n        return (\n          x > shape.x &&\n          x < shape.x + textMetrics.width &&\n          y > shape.y - shape.fontSize &&\n          y < shape.y\n        );\n      } else if (shape.type === 'image') {\n        return x > shape.x1 && x < shape.x2 && y > shape.y1 && y < shape.y2;\n      } else {\n        return x > shape.x1 && x < shape.x2 && y > shape.y1 && y < shape.y2;\n      }\n    });\n  }\n\n  drawSelection(shape: any) {\n    const ctx = this.canvasRef.nativeElement.getContext('2d');\n    if (!shape) return;\n\n    const handles = this.getResizeHandles(shape);\n    ctx!.strokeStyle = 'red';\n    ctx!.lineWidth = 2;\n    ctx!.setLineDash([6, 3]);\n    if (shape.type === 'line') {\n      ctx!.beginPath();\n      ctx!.moveTo(shape.x1, shape.y1);\n      ctx!.lineTo(shape.x2, shape.y2);\n      ctx!.stroke();\n    } else if (shape.type === 'circle') {\n      const radius = Math.sqrt(Math.pow(shape.x2 - shape.x1, 2) + Math.pow(shape.y2 - shape.y1, 2));\n      ctx!.beginPath();\n      ctx!.arc(shape.x1, shape.y1, radius, 0, 2 * Math.PI);\n      ctx!.stroke();\n    } else {\n      ctx!.strokeRect(shape.x1, shape.y1, shape.x2 - shape.x1, shape.y2 - shape.y1);\n    }\n\n    ctx!.setLineDash([]);\n\n    handles.forEach((handle) => {\n      ctx!.fillStyle = handle.isCenter ? 'blue' : 'red';\n      ctx!.fillRect(handle.x - 6, handle.y - 6, 12, 12);\n    });\n  }\n\n  getResizeHandles(shape: any) {\n    const handles = [];\n    if (shape.type === 'line') {\n      handles.push({ x: shape.x1, y: shape.y1 });\n      handles.push({ x: shape.x2, y: shape.y2 });\n    } else if (shape.type === 'circle') {\n      const radius = Math.sqrt(Math.pow(shape.x2 - shape.x1, 2) + Math.pow(shape.y2 - shape.y1, 2));\n      handles.push({ x: shape.x1 + radius, y: shape.y1 });\n      handles.push({ x: shape.x1 - radius, y: shape.y1 });\n      handles.push({ x: shape.x1, y: shape.y1 + radius });\n      handles.push({ x: shape.x1, y: shape.y1 - radius });\n      handles.push({ x: shape.x1, y: shape.y1, isCenter: true });\n    } else if (shape.type === 'text') {\n      const ctx = this.canvasRef.nativeElement.getContext('2d');\n      const textMetrics = ctx!.measureText(shape.text);\n      handles.push({ x: shape.x, y: shape.y - shape.fontSize, isCenter: true });\n      handles.push({ x: shape.x + textMetrics.width, y: shape.y, isCenter: false });\n    } else if (shape.type === 'image') {\n      handles.push({ x: shape.x1, y: shape.y1 });\n      handles.push({ x: shape.x2, y: shape.y1 });\n      handles.push({ x: shape.x2, y: shape.y2 });\n      handles.push({ x: shape.x1, y: shape.y2 });\n      handles.push({ x: (shape.x1 + shape.x2) / 2, y: (shape.y1 + shape.y2) / 2, isCenter: true });\n    } else {\n      handles.push({ x: shape.x1, y: shape.y1 });\n      handles.push({ x: shape.x2, y: shape.y1 });\n      handles.push({ x: shape.x2, y: shape.y2 });\n      handles.push({ x: shape.x1, y: shape.y2 });\n      handles.push({ x: (shape.x1 + shape.x2) / 2, y: (shape.y1 + shape.y2) / 2, isCenter: true });\n    }\n    return handles.map((handle) => ({\n      ...handle,\n      isCenter: handle.isCenter || false,\n    }));\n  }\n\n  getHandleAtPosition(x: number, y: number) {\n    if (!this.selectedShape) return null;\n    return this.getResizeHandles(this.selectedShape).find((handle) => {\n      return Math.abs(handle.x - x) < 6 && Math.abs(handle.y - y) < 6;\n    });\n  }\n\n  resizeShape(shape: any, handle: any, x: number, y: number) {\n    if (shape.type === 'line') {\n      if (handle.x === shape.x1 && handle.y === shape.y1) {\n        shape.x1 = x;\n        shape.y1 = y;\n      } else {\n        shape.x2 = x;\n        shape.y2 = y;\n      }\n    } else if (shape.type === 'circle') {\n      const dx = x - shape.x1;\n      const dy = y - shape.y1;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      shape.x2 = shape.x1 + radius;\n      shape.y2 = shape.y1;\n    } else if (shape.type === 'text') {\n      if (handle.isCenter) {\n        shape.x = x;\n        shape.y = y;\n      } else {\n        const textMetrics = this.canvasRef.nativeElement.getContext('2d')!.measureText(shape.text);\n        shape.x = x - textMetrics.width;\n        shape.y = y;\n      }\n    } else if (shape.type === 'image') {\n      if (handle.isCenter) {\n        const dx = x - (shape.x1 + shape.x2) / 2;\n        const dy = y - (shape.y1 + shape.y2) / 2;\n        this.moveShape(shape, dx, dy);\n      } else {\n        if (handle.x === shape.x1 && handle.y === shape.y1) {\n          shape.x1 = x;\n          shape.y1 = y;\n        } else if (handle.x === shape.x2 && handle.y === shape.y1) {\n          shape.x2 = x;\n          shape.y1 = y;\n        } else if (handle.x === shape.x2 && handle.y === shape.y2) {\n          shape.x2 = x;\n          shape.y2 = y;\n        } else {\n          shape.x1 = x;\n          shape.y2 = y;\n        }\n      }\n    } else {\n      if (handle.isCenter) {\n        const dx = x - (shape.x1 + shape.x2) / 2;\n        const dy = y - (shape.y1 + shape.y2) / 2;\n        this.moveShape(shape, dx, dy);\n      } else {\n        if (handle.x === shape.x1 && handle.y === shape.y1) {\n          shape.x1 = x;\n          shape.y1 = y;\n        } else if (handle.x === shape.x2 && handle.y === shape.y1) {\n          shape.x2 = x;\n          shape.y1 = y;\n        } else if (handle.x === shape.x2 && handle.y === shape.y2) {\n          shape.x2 = x;\n          shape.y2 = y;\n        } else {\n          shape.x1 = x;\n          shape.y2 = y;\n        }\n      }\n    }\n    this.drawShapes();\n  }\n\n  moveShape(shape: any, dx: number, dy: number) {\n    if (shape.type === 'line' || shape.type === 'circle') {\n      shape.x1 += dx;\n      shape.y1 += dy;\n      shape.x2 += dx;\n      shape.y2 += dy;\n    } else if (shape.type === 'freehand') {\n      shape.points.forEach((point: any) => {\n        point.x += dx;\n        point.y += dy;\n      });\n    } else if (shape.type === 'text') {\n      shape.x += dx;\n      shape.y += dy;\n    } else if (shape.type === 'image') {\n      shape.x1 += dx;\n      shape.y1 += dy;\n      shape.x2 += dx;\n      shape.y2 += dy;\n    } else {\n      shape.x1 += dx;\n      shape.y1 += dy;\n      shape.x2 += dx;\n      shape.y2 += dy;\n    }\n  }\n\n  downloadCanvas(tempCanvas: HTMLCanvasElement) {\n    const link = this.downloadLinkRef.nativeElement;\n    link.href = tempCanvas.toDataURL();\n    link.download = 'whiteboard.png';\n    link.click();\n  }\n\n  saveCanvas() {\n    const tempCanvas = this.tempCanvasRef.nativeElement;\n    const tempCtx = tempCanvas.getContext('2d');\n    tempCanvas.width = this.canvasRef.nativeElement.width;\n    tempCanvas.height = this.canvasRef.nativeElement.height;\n    const notShapes = ['freehand', 'text', 'image', 'line'];\n\n    if (this.parameters.useImageBackground) {\n      const backgroundImage = new Image();\n      backgroundImage.crossOrigin = 'anonymous';\n      backgroundImage.onload = () => {\n        tempCtx!.drawImage(backgroundImage, 0, 0, tempCanvas.width, tempCanvas.height);\n        this.parameters.shapes.forEach((shape: any) => {\n          !notShapes.includes(shape.type)\n            ? this.drawShape(\n                shape.type,\n                shape.x1,\n                shape.y1,\n                shape.x2,\n                shape.y2,\n                shape.color,\n                shape.thickness,\n                shape.lineType,\n                tempCtx!,\n              )\n            : this.drawShapeOnCanvas(shape, tempCtx!);\n        });\n        this.downloadCanvas(tempCanvas);\n      };\n      backgroundImage.src = 'https://mediasfu.com/images/svg/graph_paper.jpg';\n    } else {\n      tempCtx!.fillStyle = 'white';\n      tempCtx!.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\n\n      this.parameters.shapes.forEach((shape: any) => {\n        !notShapes.includes(shape.type)\n          ? this.drawShape(\n              shape.type,\n              shape.x1,\n              shape.y1,\n              shape.x2,\n              shape.y2,\n              shape.color,\n              shape.thickness,\n              shape.lineType,\n              tempCtx!,\n            )\n          : this.drawShapeOnCanvas(shape, tempCtx!);\n      });\n      this.downloadCanvas(tempCanvas);\n    }\n  }\n\n  drawShapeOnCanvas(\n    shape: any,\n    ctx: CanvasRenderingContext2D = this.canvasRef.nativeElement.getContext('2d')!,\n  ) {\n    ctx.beginPath();\n    ctx.strokeStyle = shape.color;\n    ctx.lineWidth = shape.thickness || 2;\n    ctx.fillStyle = shape.color;\n    ctx.font = `${shape.fontSize}px ${shape.fontFamily}`;\n\n    const lineType = shape.lineType ? shape.lineType : 'solid';\n\n    if (lineType === 'dashed') {\n      ctx.setLineDash([10, 10]);\n    } else if (lineType === 'dotted') {\n      ctx.setLineDash([2, 10]);\n    } else if (lineType === 'dashDot') {\n      ctx.setLineDash([10, 5, 2, 5]);\n    } else {\n      ctx.setLineDash([]);\n    }\n    switch (shape.type) {\n      case 'line':\n        ctx.moveTo(shape.x1, shape.y1);\n        ctx.lineTo(shape.x2, shape.y2);\n        break;\n      case 'freehand':\n        try {\n          ctx.moveTo(shape.points[0].x, shape.points[0].y);\n          shape.points.forEach((point: any) => ctx.lineTo(point.x, point.y));\n        } catch {\n          //console.log('Error drawing freehand shape');\n        }\n        break;\n      case 'text':\n        ctx.fillText(shape.text, shape.x, shape.y);\n        break;\n      case 'image':\n        ctx.drawImage(shape.img, shape.x1, shape.y1, shape.x2 - shape.x1, shape.y2 - shape.y1);\n        break;\n      default:\n        break;\n    }\n    ctx.stroke();\n  }\n\n  deleteShape(doEmits = true) {\n    if (!this.checkBoardAccess()) return;\n\n    if (!this.selectedShape) return;\n    if (this.selectedShape) {\n      this.parameters.shapes = this.parameters.shapes.filter(\n        (shape: any) => shape !== this.selectedShape,\n      );\n      this.parameters.updateShapes(this.parameters.shapes);\n      this.selectedShape = null;\n      if (doEmits) {\n        this.parameters.socket.emit(\n          'updateBoardAction',\n          { action: 'shapes', payload: { shapes: this.parameters.shapes } },\n          this.handleServerResponse,\n        );\n      }\n      this.drawShapes();\n    }\n  }\n\n  toggleBackground = (doEmits = true) => {\n    if (doEmits && !this.checkBoardAccess()) return;\n    this.parameters.useImageBackground = !this.parameters.useImageBackground;\n    this.parameters.updateUseImageBackground(this.parameters.useImageBackground);\n    const toggleButton = this.toggleBackgroundRef.nativeElement;\n    if (this.parameters.useImageBackground) {\n      this.canvasRef.nativeElement.style.backgroundImage = `url('https://mediasfu.com/images/svg/graph_paper.jpg')`;\n      toggleButton.classList.remove('active');\n    } else {\n      this.canvasRef.nativeElement.style.backgroundImage = 'none';\n      this.canvasRef.nativeElement.style.backgroundColor = 'white';\n      toggleButton.classList.add('active');\n    }\n    this.drawShapes();\n    if (doEmits) {\n      this.parameters.socket.emit(\n        'updateBoardAction',\n        { action: 'toggleBackground', payload: this.parameters.useImageBackground },\n        this.handleServerResponse,\n      );\n    }\n  };\n\n  clearCanvas = (doEmits = true) => {\n    if (this.parameters.islevel != '2' && doEmits) {\n      this.parameters.showAlert?.({\n        message: 'You do not have permission to clear the board',\n        type: 'danger',\n      });\n      return;\n    }\n    if (this.parameters.shapes.length === 0) return;\n    this.parameters.shapes = [];\n    this.parameters.updateShapes([]);\n    this.drawShapes();\n    if (doEmits) {\n      this.parameters.socket.emit(\n        'updateBoardAction',\n        { action: 'clear' },\n        this.handleServerResponse,\n      );\n    }\n  };\n\n  uploadImage = (event: any, doEmits = true) => {\n    try {\n      if (!this.checkBoardAccess()) return;\n      const file = event.target.files[0];\n      if (file.size > 1024 * 1024) {\n        this.parameters.showAlert?.({ message: 'File size must be less than 1MB', type: 'danger' });\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onload = () => {\n          if (img.height > 600 && img.height > img.width && !file.type.includes('jpeg')) {\n            this.parameters.showAlert?.({\n              message: 'For better performance, please upload the image in JPG format.',\n              type: 'danger',\n            });\n            return;\n          }\n\n          let imageWidth = 350;\n          const aspectRatio = img.height / img.width;\n          let imageHeight = imageWidth * aspectRatio;\n          const maxHeight = 600;\n          if (imageHeight > maxHeight) {\n            imageHeight = maxHeight;\n            imageWidth = imageHeight / aspectRatio;\n            if (imageWidth > 600) {\n              imageWidth = 600;\n            }\n          }\n          const imageShape = {\n            type: 'image',\n            img: img,\n            src: event.target.result,\n            x1: 50,\n            y1: 50,\n            x2: 50 + imageWidth,\n            y2: 50 + imageHeight,\n          };\n          this.parameters.shapes.push(imageShape);\n          this.parameters.updateShapes(this.parameters.shapes);\n          this.drawShapes();\n          if (doEmits) {\n            this.parameters.socket.emit(\n              'updateBoardAction',\n              { action: 'uploadImage', payload: imageShape },\n              this.handleServerResponse,\n            );\n          }\n        };\n        img.onerror = () => {\n          this.parameters.showAlert?.({ message: 'Error loading image', type: 'danger' });\n        };\n        img.src = event.target.result;\n      };\n      reader.onerror = () => {\n        this.parameters.showAlert?.({ message: 'Error reading file', type: 'danger' });\n      };\n      reader.readAsDataURL(file);\n    } catch (error) {\n      //console.log(error);\n    }\n  };\n\n  handleServerResponse = (response: any) => {\n    if (!response.success) {\n      this.parameters.showAlert?.({\n        message: `Whiteboard action failed: ${response.reason}`,\n        type: 'danger',\n      });\n    }\n  };\n\n  WhiteboardAction = (data: any) => {\n    const { action, payload } = data;\n\n    const ctx = this.canvasRef.nativeElement.getContext('2d');\n    if (!ctx) return;\n    this.parameters.updateCanvasWhiteboard(this.canvasRef.nativeElement);\n\n    switch (action) {\n      case 'draw':\n        if (payload.type === 'freehand') {\n          this.drawFreehand(payload.points, payload.color, payload.thickness);\n          this.parameters.shapes.push({\n            type: 'freehand',\n            points: payload.points,\n            color: payload.color,\n            thickness: payload.thickness,\n          });\n          this.parameters.updateShapes(this.parameters.shapes);\n        } else {\n          this.drawLine(\n            payload.x1,\n            payload.y1,\n            payload.x2,\n            payload.y2,\n            payload.color,\n            payload.thickness,\n            payload.lineType,\n          );\n          this.parameters.shapes.push({\n            type: 'line',\n            x1: payload.x1,\n            y1: payload.y1,\n            x2: payload.x2,\n            y2: payload.y2,\n            color: payload.color,\n            thickness: payload.thickness,\n            lineType: payload.lineType,\n          });\n          this.parameters.updateShapes(this.parameters.shapes);\n        }\n        break;\n      case 'shape':\n        this.drawShape(\n          payload.type,\n          payload.x1,\n          payload.y1,\n          payload.x2,\n          payload.y2,\n          payload.color,\n          payload.thickness,\n          payload.lineType,\n        );\n        this.parameters.shapes.push({\n          type: payload.type,\n          x1: payload.x1,\n          y1: payload.y1,\n          x2: payload.x2,\n          y2: payload.y2,\n          color: payload.color,\n          thickness: payload.thickness,\n          lineType: payload.lineType,\n        });\n        this.parameters.updateShapes(this.parameters.shapes);\n        break;\n      case 'erase':\n        this.erase(payload.x, payload.y);\n        break;\n      case 'clear':\n        this.clearCanvas(false);\n        break;\n      case 'uploadImage': {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onload = () => {\n          const imageShape = {\n            type: 'image',\n            img,\n            src: payload.src,\n            x1: payload.x1,\n            y1: payload.y1,\n            x2: payload.x2,\n            y2: payload.y2,\n          };\n          this.parameters.shapes.push(imageShape);\n          this.parameters.updateShapes(this.parameters.shapes);\n          this.drawShapes();\n        };\n        img.src = payload.src;\n        break;\n      }\n      case 'toggleBackground':\n        this.toggleBackground(false);\n        this.drawShapes();\n        break;\n      case 'undo':\n        if (this.parameters.shapes.length > 0) {\n          this.parameters.redoStack.push(this.parameters.shapes.pop()!);\n          this.parameters.updateRedoStack(this.parameters.redoStack);\n          this.drawShapes();\n        }\n        break;\n      case 'redo':\n        if (this.parameters.redoStack.length > 0) {\n          this.parameters.shapes.push(this.parameters.redoStack.pop()!);\n          this.parameters.updateShapes(this.parameters.shapes);\n          this.drawShapes();\n        }\n        break;\n      case 'text':\n        this.parameters.shapes.push({\n          type: 'text',\n          text: payload.text,\n          x: payload.x,\n          y: payload.y,\n          color: payload.color,\n          font: payload.font,\n          fontSize: payload.fontSize,\n        });\n        this.parameters.updateShapes(this.parameters.shapes);\n        this.drawShapes();\n        break;\n      case 'deleteShape':\n        this.parameters.shapes = this.parameters.shapes.filter((shape: any) => shape !== payload);\n        this.parameters.updateShapes(this.parameters.shapes);\n        this.drawShapes();\n        break;\n      case 'shapes': {\n        const oldShapes = this.parameters.shapes.filter((shape: any) => shape.type === 'image');\n        this.parameters.shapes = payload.shapes.map((shape: any) => {\n          if (shape.type === 'image') {\n            const oldShape = oldShapes.find((oldShape: any) => oldShape.src === shape.src);\n            if (oldShape) {\n              return { ...shape, img: oldShape.img };\n            } else {\n              const img = new Image();\n              img.crossOrigin = 'anonymous';\n              img.src = shape.src;\n              return { ...shape, img };\n            }\n          } else {\n            return shape;\n          }\n        });\n        this.parameters.updateShapes(this.parameters.shapes);\n        this.drawShapes();\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  WhiteboardUpdated = (data: any) => {\n    // data = { whiteboardUsers, status}\n    // status = 'started', 'ended', 'updated'\n    // whiteboardUsers array\n    // members (participants) array only sent to the host\n    //whiteboardData = {shapes=[], useImageBackground=Boolean, redoStack=[], undoStack=[]} or {} or null\n    const ctx = this.canvasRef.nativeElement.getContext('2d');\n    if (!ctx) return;\n\n    if (this.parameters.islevel == '2' && data.members) {\n      this.parameters.participantsAll = data.members.map((participant: any) => ({\n        isBanned: participant.isBanned,\n        name: participant.name,\n      }));\n      this.parameters.participants = data.members.filter(\n        (participant: any) => participant.isBanned == false,\n      );\n      this.parameters.updateParticipants(this.parameters.participants);\n    }\n\n    this.parameters.whiteboardUsers = data.whiteboardUsers;\n    this.parameters.updateWhiteboardUsers(this.parameters.whiteboardUsers);\n\n    const useBoard = this.parameters.whiteboardUsers.find(\n      (user: any) => user.name == this.parameters.member && user.useBoard,\n    )\n      ? true\n      : false;\n    if (this.parameters.islevel != '2' && !useBoard && !this.parameters.whiteboardEnded) {\n      this.changeMode('pan');\n    }\n\n    if (data.whiteboardData && Object.keys(data.whiteboardData).length > 0) {\n      if (data.whiteboardData.shapes) {\n        const oldShapes = this.parameters.shapes.filter((shape: any) => shape.type === 'image');\n        this.parameters.shapes = data.whiteboardData.shapes.map((shape: any) => {\n          if (shape.type === 'image') {\n            const oldShape = oldShapes.find((oldShape: any) => oldShape.src === shape.src);\n            if (oldShape) {\n              return { ...shape, img: oldShape.img };\n            } else {\n              const img = new Image();\n              img.crossOrigin = 'anonymous';\n              img.src = shape.src;\n              return { ...shape, img };\n            }\n          } else {\n            return shape;\n          }\n        });\n        this.parameters.updateShapes(this.parameters.shapes);\n      }\n      if (data.whiteboardData.useImageBackground != null) {\n        this.parameters.useImageBackground = data.whiteboardData.useImageBackground;\n        this.parameters.updateUseImageBackground(this.parameters.useImageBackground);\n      } else {\n        this.parameters.useImageBackground = true;\n        this.parameters.updateUseImageBackground(true);\n      }\n      if (data.whiteboardData.redoStack) {\n        this.parameters.redoStack = data.whiteboardData.redoStack;\n        this.parameters.updateRedoStack(this.parameters.redoStack);\n      }\n      if (data.whiteboardData.undoStack) {\n        this.parameters.undoStack = data.whiteboardData.undoStack;\n        this.parameters.updateUndoStack(this.parameters.undoStack);\n      }\n    }\n\n    if (data.status == 'started' && !this.parameters.whiteboardStarted) {\n      this.parameters.whiteboardStarted = true;\n      this.parameters.whiteboardEnded = false;\n      this.parameters.screenId = `whiteboard-${this.parameters.roomName}`;\n\n      this.parameters.updateWhiteboardStarted(true);\n      this.parameters.updateWhiteboardEnded(false);\n      this.parameters.updateScreenId(this.parameters.screenId);\n\n      if (this.parameters.islevel != '2') {\n        this.parameters.shareScreenStarted = true;\n        this.parameters.updateShareScreenStarted(true);\n        this.parameters.onScreenChanges({ changed: true, parameters: this.parameters });\n      }\n    } else if (data.status == 'ended') {\n      const prevWhiteboardEnded = this.parameters.whiteboardEnded;\n      const prevWhiteboardStarted = this.parameters.whiteboardStarted;\n      this.parameters.whiteboardEnded = true;\n      this.parameters.whiteboardStarted = false;\n      this.parameters.updateWhiteboardStarted(false);\n      this.parameters.updateWhiteboardEnded(true);\n      if (this.parameters.islevel == '2' && prevWhiteboardEnded) {\n        // No operation needed\n      } else {\n        this.parameters.shareScreenStarted = false;\n        this.parameters.screenId = '';\n\n        this.parameters.updateShareScreenStarted(false);\n        this.parameters.updateScreenId('');\n        this.parameters.onScreenChanges({ changed: true, parameters: this.parameters });\n      }\n\n      try {\n        if (\n          prevWhiteboardStarted &&\n          this.parameters.islevel == '2' &&\n          (this.parameters.recordStarted || this.parameters.recordResumed)\n        ) {\n          if (!(this.parameters.recordPaused || this.parameters.recordStopped)) {\n            if (this.parameters.recordingMediaOptions == 'video') {\n              this.parameters.captureCanvasStream({ parameters: this.parameters, start: false });\n            }\n          }\n        }\n      } catch (error) {\n        // Handle error\n      }\n    } else if (data.status == 'started' && this.parameters.whiteboardStarted) {\n      this.parameters.whiteboardStarted = true;\n      this.parameters.whiteboardEnded = false;\n\n      this.parameters.updateWhiteboardStarted(true);\n      this.parameters.updateWhiteboardEnded(false);\n\n      this.parameters.shareScreenStarted = true;\n      this.parameters.screenId = `whiteboard-${this.parameters.roomName}`;\n\n      this.parameters.updateShareScreenStarted(true);\n      this.parameters.updateScreenId(this.parameters.screenId);\n      this.parameters.onScreenChanges({ changed: true, parameters: this.parameters });\n    }\n  };\n\n  handleDropdownClick(id: string) {\n    this.dropdownOpen = this.dropdownOpen === id ? null : id;\n  }\n\n  handleItemClick(callback: any, name: string, value: any) {\n    callback(value);\n    this.dropdownOpen = null;\n    if (['draw', 'freehand', 'shape', 'text', 'erase'].includes(name)) {\n      this.changeMode(name);\n    }\n  }\n\n  dropdownItems(items: any[], name: string, callback: any) {\n    return items.map(\n      (item, index) =>\n        `<button key=\"${index}\" class=\"dropdown-item\" (click)=\"handleItemClick(${callback}, '${name}', ${item.value})\" style=\"padding: 5px;\">\n        ${item.label}\n      </button>`,\n    );\n  }\n\n  toggleToolbar() {\n    this.toolbarVisible = !this.toolbarVisible;\n  }\n\n  checkBoardAccess() {\n    this.parameters = this.parameters.getUpdatedAllParams();\n    if (this.parameters.whiteboardStarted && !this.parameters.whiteboardEnded) {\n      const user = this.parameters.whiteboardUsers.find(\n        (user: any) => user.name === this.parameters.member,\n      );\n      if ((!user || !user.useBoard) && this.parameters.islevel != '2') {\n        this.parameters.showAlert?.({\n          message: 'You are not allowed to use the whiteboard. Please ask the host to assign you.',\n          type: 'danger',\n        });\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  changeMode(newMode: string) {\n    if (newMode !== 'pan' && !this.checkBoardAccess()) return;\n    this.mode = newMode;\n    const canvas = this.canvasRef.nativeElement;\n    if (newMode === 'pan') {\n      canvas.style.cursor = 'grab';\n    } else if (newMode === 'select') {\n      canvas.style.cursor = 'pointer';\n    } else if (newMode === 'erase') {\n      canvas.style.cursor = 'crosshair';\n    } else {\n      canvas.style.cursor = 'crosshair';\n    }\n    if (newMode !== 'freehand' && this.freehandDrawing.length > 0) {\n      this.parameters.shapes.push({\n        type: 'freehand',\n        points: this.freehandDrawing,\n        color: this.color,\n        thickness: this.brushThickness,\n      });\n      this.parameters.updateShapes(this.parameters.shapes);\n      this.freehandDrawing = [];\n      this.saveState();\n    }\n  }\n}\n","<div id=\"whiteboard-interface\" [style.width.px]=\"customWidth\" [style.height.px]=\"customHeight\" [style.display]=\"showAspect ? 'block' : 'none'\" style=\"position: relative; display: flex; justify-content: center; align-items: center; border: 2px solid #000; background-color: #f0f0f0;\">\r\n  <div id=\"whiteboardContent\" style=\"position: relative; display: flex; justify-content: center; align-items: center; width: 100%; height: 100%; max-width: 100%; max-height: 100%; overflow: auto;\">\r\n    <button id=\"toolbarToggle\" class=\"btn btnBoard btn-primary\" style=\"position: absolute; top: 5px; left: 55px; z-index: 10;\" (click)=\"toggleToolbar()\">\r\n      <fa-icon [icon]=\"toolbarVisible ? faChevronLeft : faChevronRight\"></fa-icon>\r\n    </button>\r\n    <div *ngIf=\"toolbarVisible\" class=\"toolbar mb-3\" id=\"toolbar\" style=\"position: absolute; top: 5px; left: 100px; z-index: 10; background-color: transparent;\">\r\n      <div class=\"btn-group\" role=\"group\">\r\n        <button class=\"btn btnBoard btn-secondary dropdown-toggle\" id=\"drawMode\" (click)=\"handleDropdownClick('drawMode')\">\r\n          <fa-icon [icon]=\"faPencilAlt\"></fa-icon>\r\n        </button>\r\n        <div *ngIf=\"dropdownOpen === 'drawMode'\" class=\"dropdown-menu show\">\r\n          <button *ngFor=\"let item of [{ label: 'XX-Small (3px)', value: 3 }, { label: 'X-Small (6px)', value: 6 }, { label: 'Small (12px)', value: 12 }, { label: 'Medium (18px)', value: 18 }, { label: 'Large (24px)', value: 24 }, { label: 'X-Large (36px)', value: 36 }]\" class=\"dropdown-item\" (click)=\"handleItemClick(updateLineThickness, 'draw', item.value)\" style=\"padding: 5px;\">\r\n            {{ item.label }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"btn-group\" role=\"group\">\r\n        <button class=\"btn btnBoard btn-secondary dropdown-toggle\" id=\"freehandMode\" (click)=\"handleDropdownClick('freehandMode')\">\r\n          <fa-icon [icon]=\"faPaintBrush\"></fa-icon>\r\n        </button>\r\n        <div *ngIf=\"dropdownOpen === 'freehandMode'\" class=\"dropdown-menu show\">\r\n          <button *ngFor=\"let item of [{ label: 'X-Small (5px)', value: 5 }, { label: 'Small (10px)', value: 10 }, { label: 'Medium (20px)', value: 20 }, { label: 'Large (40px)', value: 40 }, { label: 'X-Large (60px)', value: 60 }]\" class=\"dropdown-item\" (click)=\"handleItemClick(updateBrushThickness, 'freehand', item.value)\" style=\"padding: 5px;\">\r\n            {{ item.label }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"btn-group\" role=\"group\">\r\n        <button class=\"btn btnBoard btn-secondary dropdown-toggle\" id=\"shapeMode\" (click)=\"handleDropdownClick('shapeMode')\">\r\n          <fa-icon [icon]=\"faShapes\"></fa-icon>\r\n        </button>\r\n        <div *ngIf=\"dropdownOpen === 'shapeMode'\" class=\"dropdown-menu show\">\r\n          <button *ngFor=\"let item of [\r\n            { label: '<img src=\\'https://mediasfu.com/images/svg/square.svg\\' alt=\\'Square\\' class=\\'shape-icon\\' />', value: 'square' },\r\n            { label: '<img src=\\'https://mediasfu.com/images/svg/rectangle.svg\\' alt=\\'Rectangle\\' class=\\'shape-icon\\' />', value: 'rectangle' },\r\n            { label: '<img src=\\'https://mediasfu.com/images/svg/circle.svg\\' alt=\\'Circle\\' class=\\'shape-icon\\' />', value: 'circle' },\r\n            { label: '<img src=\\'https://mediasfu.com/images/svg/triangle.svg\\' alt=\\'Triangle\\' class=\\'shape-icon\\' />', value: 'triangle' },\r\n            { label: '<img src=\\'https://mediasfu.com/images/svg/hexagon.svg\\' alt=\\'Hexagon\\' class=\\'shape-icon\\' />', value: 'hexagon' },\r\n            { label: '<img src=\\'https://mediasfu.com/images/svg/pentagon.svg\\' alt=\\'Pentagon\\' class=\\'shape-icon\\' />', value: 'pentagon' },\r\n            { label: '<img src=\\'https://mediasfu.com/images/svg/rhombus.svg\\' alt=\\'Rhombus\\' class=\\'shape-icon\\' />', value: 'rhombus' },\r\n            { label: '<img src=\\'https://mediasfu.com/images/svg/octagon.svg\\' alt=\\'Octagon\\' class=\\'shape-icon\\' />', value: 'octagon' },\r\n            { label: '<img src=\\'https://mediasfu.com/images/svg/parallelogram.svg\\' alt=\\'Parallelogram\\' class=\\'shape-icon\\' />', value: 'parallelogram' },\r\n            { label: '<img src=\\'https://mediasfu.com/images/svg/oval.svg\\' alt=\\'Oval\\' class=\\'shape-icon\\' />', value: 'oval' }\r\n          ]\" class=\"dropdown-item\" (click)=\"handleItemClick(updateShape, 'shape', item.value)\" style=\"padding: 5px;\" [innerHTML]=\"item.label\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <button class=\"btn btnBoard btn-secondary\" id=\"selectMode\" (click)=\"changeMode('select')\">\r\n        <fa-icon [icon]=\"faMousePointer\"></fa-icon>\r\n      </button>\r\n      <div class=\"btn-group\" role=\"group\">\r\n        <button class=\"btn btnBoard btn-danger dropdown-toggle\" id=\"eraseMode\" (click)=\"handleDropdownClick('eraseMode')\">\r\n          <fa-icon [icon]=\"faEraser\"></fa-icon>\r\n        </button>\r\n        <div *ngIf=\"dropdownOpen === 'eraseMode'\" class=\"dropdown-menu show\">\r\n          <button *ngFor=\"let item of [{ label: 'X-Small (5px)', value: 5 }, { label: 'Small (10px)', value: 10 }, { label: 'Medium (20px)', value: 20 }, { label: 'Large (30px)', value: 30 }, { label: 'X-Large (60px)', value: 60 }]\" class=\"dropdown-item\" (click)=\"handleItemClick(updateEraserThickness, 'erase', item.value)\" style=\"padding: 5px;\">\r\n            {{ item.label }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <button class=\"btn btnBoard btn-info\" id=\"panMode\" (click)=\"changeMode('pan')\">\r\n        <fa-icon [icon]=\"faHandPaper\"></fa-icon>\r\n      </button>\r\n      <button class=\"btn btnBoard btn-success\" id=\"zoomIn\" (click)=\"zoomCanvas(1.2, $event)\">\r\n        <fa-icon [icon]=\"faSearchPlus\"></fa-icon>\r\n      </button>\r\n      <button class=\"btn btnBoard btn-success\" id=\"zoomReset\" (click)=\"zoomCanvas(10, $event)\">\r\n        <fa-icon [icon]=\"faSearch\"></fa-icon>\r\n      </button>\r\n      <button class=\"btn btnBoard btn-success\" id=\"zoomOut\" (click)=\"zoomCanvas(0.8, $event)\">\r\n        <fa-icon [icon]=\"faSearchMinus\"></fa-icon>\r\n      </button>\r\n      <div class=\"btn-group\" role=\"group\">\r\n        <button class=\"btn btnBoard btn-secondary dropdown-toggle\" id=\"addText\" (click)=\"handleDropdownClick('addText')\">\r\n          <fa-icon [icon]=\"faFont\"></fa-icon>\r\n        </button>\r\n        <div *ngIf=\"dropdownOpen === 'addText'\" class=\"dropdown-menu show\">\r\n          <button *ngFor=\"let item of [{ label: 'Arial', value: 'Arial' }, { label: 'Times New Roman', value: 'Times New Roman' }, { label: 'Courier New', value: 'Courier New' }, { label: 'Verdana', value: 'Verdana' }]\" class=\"dropdown-item\" (click)=\"handleItemClick(updateFont, 'text', item.value)\" style=\"padding: 5px;\">\r\n            {{ item.label }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"btn-group\" role=\"group\">\r\n        <button class=\"btn btnBoard btn-secondary dropdown-toggle\" id=\"fontSize\" (click)=\"handleDropdownClick('fontSize')\">\r\n          <fa-icon [icon]=\"faTextHeight\"></fa-icon>\r\n        </button>\r\n        <div *ngIf=\"dropdownOpen === 'fontSize'\" class=\"dropdown-menu show\">\r\n          <button *ngFor=\"let item of [{ label: 'X-Small (5px)', value: 5 }, { label: 'Small (10px)', value: 10 }, { label: 'Medium (20px)', value: 20 }, { label: 'Large (40px)', value: 40 }, { label: 'X-Large (60px)', value: 60 }]\" class=\"dropdown-item\" (click)=\"handleItemClick(updateFontSize, '', item.value)\" style=\"padding: 5px;\">\r\n            {{ item.label }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <button class=\"btn btnBoard btn-secondary\" id=\"undo\" (click)=\"undo()\">\r\n        <fa-icon [icon]=\"faUndo\"></fa-icon>\r\n      </button>\r\n      <button class=\"btn btnBoard btn-secondary\" id=\"redo\" (click)=\"redo()\">\r\n        <fa-icon [icon]=\"faRedo\"></fa-icon>\r\n      </button>\r\n      <button class=\"btn btnBoard btn-secondary\" id=\"save\" (click)=\"saveCanvas()\">\r\n        <fa-icon [icon]=\"faSave\"></fa-icon>\r\n      </button>\r\n      <button class=\"btn btnBoard btn-danger\" id=\"delete\" (click)=\"deleteShape()\">\r\n        <fa-icon [icon]=\"faTrash\"></fa-icon>\r\n      </button>\r\n      <button class=\"btn btnBoard btn-secondary\" id=\"clearCanvas\" (click)=\"clearCanvas()\">\r\n        <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n      </button>\r\n      <button id=\"toggleBackgroundRef\" #toggleBackgroundRef class=\"btn btnBoard btn-secondary\" (click)=\"toggleBackground()\">\r\n        <img src=\"https://mediasfu.com/images/svg/graph.jpg\" alt=\"Background\" class=\"toggle-icon\" id=\"backgroundIcon\" />\r\n      </button>\r\n      <input type=\"file\" id=\"uploadBoardImage\" accept=\"image/*\" style=\"display: none;\" (change)=\"uploadImage($event)\" />\r\n      <label for=\"uploadBoardImage\" class=\"btn btnBoard btn-primary\">\r\n        <fa-icon [icon]=\"faUpload\"></fa-icon>\r\n      </label>\r\n      <input type=\"color\" id=\"colorPicker\" class=\"btn\" [(ngModel)]=\"color\" />\r\n      <select id=\"lineTypePicker\" class=\"custom-select\" style=\"width: auto;\" [(ngModel)]=\"lineType\">\r\n        <option value=\"solid\">Solid</option>\r\n        <option value=\"dashed\">Dashed</option>\r\n        <option value=\"dotted\">Dotted</option>\r\n        <option value=\"dashDot\">Dash-Dot</option>\r\n      </select>\r\n    </div>\r\n    <canvas id=\"canvasRef\" width=\"1280\" height=\"720\" style=\"border: 2px solid red;\" #canvasRef></canvas>\r\n    <textarea id=\"textInputRef\" class=\"form-control\" #textInputRef style=\"display: none; position: absolute;\"></textarea>\r\n    <a href=\"#\" id=\"downloadLinkRef\" #downloadLinkRef style=\"display: none;\">Download</a>\r\n    <canvas id=\"tempCanvasRef\" #tempCanvasRef style=\"display: none;\"></canvas>\r\n  </div>\r\n</div>\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {\n  faChevronRight,\n  faChevronLeft,\n  faPencilAlt,\n  faPaintBrush,\n  faShapes,\n  faEraser,\n  faSearch,\n  faSearchPlus,\n  faSearchMinus,\n  faFont,\n  faTextHeight,\n  faUndo,\n  faRedo,\n  faSave,\n  faTrash,\n  faTimes,\n  faMousePointer,\n} from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { SleepType, ShowAlert } from '../../../@types/types';\n\nexport interface ScreenboardParameters {\n  updateCanvasScreenboard: (canvas: HTMLCanvasElement) => void;\n  annotateScreenStream: boolean;\n  updateAnnotateScreenStream: (annotateScreenStream: boolean) => void;\n  updateIsScreenboardModalVisible: (isVisible: boolean) => void;\n  sleep: SleepType;\n  showAlert?: ShowAlert;\n\n  getUpdatedAllParams: () => ScreenboardParameters;\n  [key: string]: any;\n}\n\nexport interface ScreenboardOptions {\n  customWidth: number;\n  customHeight: number;\n  parameters: ScreenboardParameters;\n  showAspect: boolean;\n}\n\nexport type ScreenboardType = (options: ScreenboardOptions) => void;\n\n/**\n * @fileoverview Screenboard component for MediaSFU-Angular application.\n *\n * This component provides a screenboard with drawing, freehand, shape, and erase modes.\n * It supports mouse and touch events for drawing on a canvas.\n *\n * @component\n * @selector app-screenboard\n * @templateUrl ./screenboard.component.html\n * @styleUrls ./screenboard.component.css\n * @imports CommonModule, FontAwesomeModule, FormsModule\n *\n * @class Screenboard\n * @implements OnInit, AfterViewInit, OnDestroy, OnChanges\n *\n * @property {number} customWidth - Custom width for the screenboard.\n * @property {number} customHeight - Custom height for the screenboard.\n * @property {any} parameters - Parameters for the screenboard.\n * @property {boolean} showAspect - Flag to show aspect ratio.\n *\n * @property {ElementRef<HTMLCanvasElement>} canvasRef - Reference to the canvas element.\n * @property {ElementRef<HTMLDivElement>} screenboardRef - Reference to the screenboard div element.\n * @property {ElementRef<HTMLDivElement>} screenboardContentRef - Reference to the screenboard content div element.\n *\n * @property {IconDefinition} faChevronRight - FontAwesome icon for chevron right.\n * @property {IconDefinition} faChevronLeft - FontAwesome icon for chevron left.\n * @property {IconDefinition} faPencilAlt - FontAwesome icon for pencil.\n * @property {IconDefinition} faPaintBrush - FontAwesome icon for paint brush.\n * @property {IconDefinition} faShapes - FontAwesome icon for shapes.\n * @property {IconDefinition} faEraser - FontAwesome icon for eraser.\n * @property {IconDefinition} faSearch - FontAwesome icon for search.\n * @property {IconDefinition} faSearchPlus - FontAwesome icon for search plus.\n * @property {IconDefinition} faSearchMinus - FontAwesome icon for search minus.\n * @property {IconDefinition} faFont - FontAwesome icon for font.\n * @property {IconDefinition} faTextHeight - FontAwesome icon for text height.\n * @property {IconDefinition} faUndo - FontAwesome icon for undo.\n * @property {IconDefinition} faRedo - FontAwesome icon for redo.\n * @property {IconDefinition} faSave - FontAwesome icon for save.\n * @property {IconDefinition} faTrash - FontAwesome icon for trash.\n * @property {IconDefinition} faTimes - FontAwesome icon for times.\n * @property {IconDefinition} faMousePointer - FontAwesome icon for mouse pointer.\n *\n * @property {'draw' | 'freehand' | 'shape' | 'erase'} mode - Current drawing mode.\n * @property {boolean} isDrawing - Flag to indicate if drawing is in progress.\n * @property {number} startX - Starting X coordinate for drawing.\n * @property {number} startY - Starting Y coordinate for drawing.\n * @property {number} currentX - Current X coordinate for drawing.\n * @property {number} currentY - Current Y coordinate for drawing.\n * @property {Array<{ x: number; y: number; color: string; thickness: number }>} freehandDrawing - Array of points for freehand drawing.\n * @property {any[]} shapes - Array of shapes drawn on the canvas.\n * @property {number} eraserThickness - Thickness of the eraser.\n * @property {number} brushThickness - Thickness of the brush.\n * @property {number} lineThickness - Thickness of the line.\n * @property {string} lineType - Type of the line (solid, dashed, dotted, dashDot).\n * @property {string} color - Color for drawing.\n * @property {string} font - Font for text.\n * @property {number} fontSize - Font size for text.\n * @property {string | null} shape - Current shape being drawn.\n * @property {boolean} toolbarVisible - Flag to indicate if the toolbar is visible.\n * @property {string | null} dropdownOpen - ID of the currently open dropdown.\n * @property {HTMLCanvasElement} canvas - Canvas element.\n * @property {CanvasRenderingContext2D} ctx - Canvas rendering context.\n *\n * @constructor\n * @param {number} [injectedCustomWidth] - Injected custom width.\n * @param {number} [injectedCustomHeight] - Injected custom height.\n * @param {any} [injectedParameters] - Injected parameters.\n * @param {boolean} [injectedShowAspect] - Injected show aspect flag.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes.\n * @method ngAfterViewInit - Lifecycle hook that is called after the component's view has been fully initialized.\n * @method ngOnDestroy - Lifecycle hook that is called just before the component is destroyed.\n *\n * @method addListeners - Adds event listeners to the canvas.\n * @method handleMouseDown - Handles mouse down events.\n * @method handleMouseMove - Handles mouse move events.\n * @method handleMouseUp - Handles mouse up events.\n * @method handleTouchStart - Handles touch start events.\n * @method handleTouchMove - Handles touch move events.\n * @method handleTouchEnd - Handles touch end events.\n * @method handleClickOutside - Handles click events outside the component.\n * @method handleDropdownClick - Handles dropdown click events.\n * @method setDrawMode - Sets the drawing mode.\n * @method setFreehandMode - Sets the freehand mode.\n * @method setShapeMode - Sets the shape mode.\n * @method setEraseMode - Sets the erase mode.\n * @method startDrawing - Starts the drawing process.\n * @method draw - Draws on the canvas.\n * @method stopDrawing - Stops the drawing process.\n * @method drawLine - Draws a line on the canvas.\n * @method drawShapes - Draws all shapes on the canvas.\n * @method drawFreehand - Draws freehand on the canvas.\n * @method drawShape - Draws a shape on the canvas.\n * @method drawPolygon - Draws a polygon on the canvas.\n * @method removeShape - Removes the first shape from the shapes array.\n * @method erase - Erases part of the drawing.\n * @method isPointNearLine - Checks if a point is near a line.\n * @method toggleToolbar - Toggles the visibility of the toolbar.\n * @method toggleAnnotate - Toggles the annotation mode.\n */\n@Component({\n  selector: 'app-screenboard',\n  standalone: true,\n  templateUrl: './screenboard.component.html',\n  styleUrls: ['./screenboard.component.css'],\n  imports: [CommonModule, FontAwesomeModule, FormsModule],\n})\nexport class Screenboard implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n  @Input() customWidth!: number;\n  @Input() customHeight!: number;\n  @Input() parameters: ScreenboardParameters = {} as ScreenboardParameters;\n  @Input() showAspect!: boolean;\n\n  @ViewChild('canvasRef')\n  canvasRef!: ElementRef<HTMLCanvasElement>;\n  @ViewChild('screenboardRef')\n  screenboardRef!: ElementRef<HTMLDivElement>;\n  @ViewChild('screenboardContentRef')\n  screenboardContentRef!: ElementRef<HTMLDivElement>;\n\n  faChevronRight = faChevronRight;\n  faChevronLeft = faChevronLeft;\n  faPencilAlt = faPencilAlt;\n  faPaintBrush = faPaintBrush;\n  faShapes = faShapes;\n  faEraser = faEraser;\n  faSearch = faSearch;\n  faSearchPlus = faSearchPlus;\n  faSearchMinus = faSearchMinus;\n  faFont = faFont;\n  faTextHeight = faTextHeight;\n  faUndo = faUndo;\n  faRedo = faRedo;\n  faSave = faSave;\n  faTrash = faTrash;\n  faTimes = faTimes;\n  faMousePointer = faMousePointer;\n\n  mode: 'draw' | 'freehand' | 'shape' | 'erase' = 'draw';\n  isDrawing = false;\n  startX = 0;\n  startY = 0;\n  currentX = 0;\n  currentY = 0;\n  freehandDrawing: { x: number; y: number; color: string; thickness: number }[] = [];\n  shapes: any[] = [];\n  eraserThickness = 10;\n  brushThickness = 6;\n  lineThickness = 6;\n  lineType = 'solid';\n  color = '#000000';\n  font = 'Arial';\n  fontSize = 20;\n  shape: string | null = null;\n  toolbarVisible = false;\n  dropdownOpen: string | null = null;\n  canvas!: HTMLCanvasElement;\n  ctx!: CanvasRenderingContext2D;\n\n  constructor(\n    @Optional() @Inject('customWidth') injectedCustomWidth: number,\n    @Optional() @Inject('customHeight') injectedCustomHeight: number,\n    @Optional() @Inject('parameters') injectedParameters: any,\n    @Optional() @Inject('showAspect') injectedShowAspect: boolean,\n  ) {\n    this.customWidth = injectedCustomWidth || this.customWidth || 0;\n    this.customHeight = injectedCustomHeight || this.customHeight || 0;\n    this.parameters = injectedParameters || this.parameters || {};\n    this.showAspect = injectedShowAspect || this.showAspect || false;\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      if (this.parameters) {\n        this.parameters = this.parameters.getUpdatedAllParams();\n      }\n    }, 100);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['showAspect']) {\n      if (!this.canvas && this.canvasRef) {\n        this.canvas = this.canvasRef!.nativeElement;\n        this.addListeners();\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.canvasRef && !this.canvas) {\n      this.canvas = this.canvasRef!.nativeElement;\n      this.addListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.canvas) {\n      this.canvas.removeEventListener('mousedown', this.handleMouseDown.bind(this));\n      this.canvas.removeEventListener('mousemove', this.handleMouseMove.bind(this));\n      this.canvas.removeEventListener('mouseup', this.handleMouseUp.bind(this));\n      this.canvas.removeEventListener('mouseout', this.handleMouseUp.bind(this));\n\n      this.canvas.removeEventListener('touchstart', this.handleTouchStart.bind(this));\n      this.canvas.removeEventListener('touchmove', this.handleTouchMove.bind(this));\n      this.canvas.removeEventListener('touchend', this.handleTouchEnd.bind(this));\n\n      document.removeEventListener('mousedown', this.handleClickOutside.bind(this));\n    }\n  }\n\n  addListeners = () => {\n    if (this.canvas) {\n      this.ctx = this.canvas.getContext('2d')!;\n      this.parameters.updateCanvasScreenboard(this.canvas);\n\n      this.canvas.addEventListener('mousedown', this.handleMouseDown.bind(this));\n      this.canvas.addEventListener('mousemove', this.handleMouseMove.bind(this));\n      this.canvas.addEventListener('mouseup', this.handleMouseUp.bind(this));\n      this.canvas.addEventListener('mouseout', this.handleMouseUp.bind(this));\n\n      this.canvas.addEventListener('touchstart', this.handleTouchStart.bind(this));\n      this.canvas.addEventListener('touchmove', this.handleTouchMove.bind(this));\n      this.canvas.addEventListener('touchend', this.handleTouchEnd.bind(this));\n\n      document.addEventListener('mousedown', this.handleClickOutside.bind(this));\n    }\n  };\n\n  handleMouseDown(event: MouseEvent) {\n    this.startDrawing(event);\n  }\n\n  handleMouseMove(event: MouseEvent) {\n    this.draw(event);\n  }\n\n  handleMouseUp() {\n    this.stopDrawing();\n  }\n\n  handleTouchStart(e: TouchEvent) {\n    e.preventDefault();\n    const touch = e.touches[0];\n    const mouseEvent = new MouseEvent('mousedown', {\n      clientX: touch.clientX,\n      clientY: touch.clientY,\n    });\n    this.canvas.dispatchEvent(mouseEvent);\n  }\n\n  handleTouchMove(e: TouchEvent) {\n    e.preventDefault();\n    const touch = e.touches[0];\n    const mouseEvent = new MouseEvent('mousemove', {\n      clientX: touch.clientX,\n      clientY: touch.clientY,\n    });\n    this.canvas.dispatchEvent(mouseEvent);\n  }\n\n  handleTouchEnd(e: TouchEvent) {\n    e.preventDefault();\n    const mouseEvent = new MouseEvent('mouseup', {});\n    this.canvas.dispatchEvent(mouseEvent);\n  }\n\n  handleClickOutside(event: MouseEvent) {\n    if (this.dropdownOpen && !(event.target as HTMLElement).closest('.btn-group')) {\n      this.dropdownOpen = null;\n    }\n  }\n\n  handleDropdownClick(id: string) {\n    this.dropdownOpen = this.dropdownOpen === id ? null : id;\n  }\n\n  setDrawMode(thickness: number) {\n    this.lineThickness = thickness;\n    this.mode = 'draw';\n    this.dropdownOpen = null;\n  }\n\n  setFreehandMode(thickness: number) {\n    this.brushThickness = thickness;\n    this.mode = 'freehand';\n    this.dropdownOpen = null;\n  }\n\n  setShapeMode(shape: string) {\n    this.shape = shape;\n    this.mode = 'shape';\n    this.dropdownOpen = null;\n  }\n\n  setEraseMode(thickness: number) {\n    this.eraserThickness = thickness;\n    this.mode = 'erase';\n    this.dropdownOpen = null;\n  }\n\n  startDrawing(event: MouseEvent) {\n    this.isDrawing = true;\n    this.startX = event.offsetX;\n    this.startY = event.offsetY;\n\n    if (this.mode === 'erase') {\n      this.erase(event.offsetX, event.offsetY);\n    } else if (this.mode === 'draw' || this.mode === 'freehand') {\n      this.ctx.beginPath();\n      this.ctx.moveTo(event.offsetX, event.offsetY);\n      if (this.mode === 'freehand') {\n        this.freehandDrawing = [\n          { x: event.offsetX, y: event.offsetY, color: this.color, thickness: this.brushThickness },\n        ];\n      }\n    }\n  }\n\n  draw(event: MouseEvent) {\n    if (!this.isDrawing) return;\n\n    this.currentX = event.offsetX;\n    this.currentY = event.offsetY;\n\n    if (this.mode === 'erase') {\n      this.erase(event.offsetX, event.offsetY);\n    } else if (this.mode === 'draw') {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.drawShapes();\n      this.drawLine(this.startX, this.startY, event.offsetX, event.offsetY);\n    } else if (this.mode === 'freehand') {\n      this.ctx.lineTo(event.offsetX, event.offsetY);\n      this.ctx.strokeStyle = this.color;\n      this.ctx.lineWidth = this.brushThickness;\n      this.ctx.stroke();\n      this.freehandDrawing.push({\n        x: event.offsetX,\n        y: event.offsetY,\n        color: this.color,\n        thickness: this.brushThickness,\n      });\n    } else if (this.mode === 'shape') {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.drawShapes();\n      this.drawShape(this.shape!, this.startX, this.startY, event.offsetX, event.offsetY);\n    }\n  }\n\n  stopDrawing() {\n    this.isDrawing = false;\n\n    if (this.mode === 'draw') {\n      this.shapes.push({\n        type: 'line',\n        x1: this.startX,\n        y1: this.startY,\n        x2: this.currentX,\n        y2: this.currentY,\n        color: this.color,\n        thickness: this.lineThickness,\n        lineType: this.lineType,\n      });\n    } else if (this.mode === 'freehand') {\n      this.shapes.push({\n        type: 'freehand',\n        points: this.freehandDrawing,\n        color: this.color,\n        thickness: this.brushThickness,\n      });\n      this.freehandDrawing = [];\n    } else if (this.mode === 'shape') {\n      this.shapes.push({\n        type: this.shape!,\n        x1: this.startX,\n        y1: this.startY,\n        x2: this.currentX,\n        y2: this.currentY,\n        color: this.color,\n        thickness: this.lineThickness,\n        lineType: this.lineType,\n      });\n    }\n\n    setTimeout(() => this.removeShape(), 15000);\n  }\n\n  drawLine = (x1: number, y1: number, x2: number, y2: number) => {\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = this.color;\n    this.ctx.lineWidth = this.lineThickness;\n    if (this.lineType === 'dashed') {\n      this.ctx.setLineDash([10, 10]);\n    } else if (this.lineType === 'dotted') {\n      this.ctx.setLineDash([2, 10]);\n    } else if (this.lineType === 'dashDot') {\n      this.ctx.setLineDash([10, 5, 2, 5]);\n    } else {\n      this.ctx.setLineDash([]);\n    }\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n    this.ctx.stroke();\n    this.ctx.setLineDash([]);\n  };\n\n  drawShapes = () => {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.shapes.forEach((shape) => {\n      if (shape.type === 'line') {\n        this.drawLine(shape.x1, shape.y1, shape.x2, shape.y2);\n      } else if (shape.type === 'freehand') {\n        this.drawFreehand(shape.points);\n      } else {\n        this.drawShape(shape.type, shape.x1, shape.y1, shape.x2, shape.y2);\n      }\n    });\n  };\n\n  drawFreehand = (points: { x: number; y: number; color: string; thickness: number }[]) => {\n    if (points.length < 2) return;\n    this.ctx.strokeStyle = this.color;\n    this.ctx.lineWidth = this.brushThickness;\n    this.ctx.beginPath();\n    this.ctx.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      this.ctx.lineTo(points[i].x, points[i].y);\n    }\n    this.ctx.stroke();\n  };\n\n  drawShape = (type: string, x1: number, y1: number, x2: number, y2: number) => {\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = this.color;\n    this.ctx.lineWidth = this.lineThickness;\n    if (this.lineType === 'dashed') {\n      this.ctx.setLineDash([10, 10]);\n    } else if (this.lineType === 'dotted') {\n      this.ctx.setLineDash([2, 10]);\n    } else if (this.lineType === 'dashDot') {\n      this.ctx.setLineDash([10, 5, 2, 5]);\n    } else {\n      this.ctx.setLineDash([]);\n    }\n    if (type === 'rectangle') {\n      this.ctx.strokeRect(x1, y1, x2 - x1, y2 - y1);\n    } else if (type === 'circle') {\n      const radius = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n      this.ctx.arc(x1, y1, radius, 0, 2 * Math.PI);\n      this.ctx.stroke();\n    } else if (type === 'rhombus') {\n      const centerX = (x1 + x2) / 2;\n      const centerY = (y1 + y2) / 2;\n      this.ctx.moveTo(centerX, y1);\n      this.ctx.lineTo(x2, centerY);\n      this.ctx.lineTo(centerX, y2);\n      this.ctx.lineTo(x1, centerY);\n      this.ctx.closePath();\n      this.ctx.stroke();\n    } else if (type === 'pentagon') {\n      this.drawPolygon(5, x1, y1, x2, y2);\n    } else if (type === 'hexagon') {\n      this.drawPolygon(6, x1, y1, x2, y2);\n    } else if (type === 'triangle') {\n      const centerXTriangle = (x1 + x2) / 2;\n      this.ctx.moveTo(centerXTriangle, y1);\n      this.ctx.lineTo(x2, y2);\n      this.ctx.lineTo(x1, y2);\n      this.ctx.closePath();\n      this.ctx.stroke();\n    } else if (type === 'square') {\n      this.ctx.strokeRect(x1, y1, x2 - x1, x2 - x1);\n    } else if (type === 'octagon') {\n      this.drawPolygon(8, x1, y1, x2, y2);\n    } else if (type === 'oval') {\n      const radiusX = Math.abs(x2 - x1) / 2;\n      const radiusY = Math.abs(y2 - y1) / 2;\n      const centerX = (x1 + x2) / 2;\n      const centerY = (y1 + y2) / 2;\n      this.ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, 0, 2 * Math.PI);\n      this.ctx.stroke();\n    } else if (type === 'parallelogram') {\n      const centerX = (x1 + x2) / 2;\n      this.ctx.moveTo(centerX, y1);\n      this.ctx.lineTo(x2, y2);\n      this.ctx.lineTo(centerX, y2);\n      this.ctx.lineTo(x1, y1);\n      this.ctx.closePath();\n      this.ctx.stroke();\n    }\n    this.ctx.setLineDash([]);\n  };\n\n  drawPolygon = (sides: number, x1: number, y1: number, x2: number, y2: number) => {\n    const centerX = (x1 + x2) / 2;\n    const centerY = (y1 + y2) / 2;\n    const radius = Math.min(Math.abs(x2 - x1), Math.abs(y2 - y1)) / 2;\n    const angle = (2 * Math.PI) / sides;\n    this.ctx.beginPath();\n    for (let i = 0; i < sides; i++) {\n      const x = centerX + radius * Math.cos(i * angle - Math.PI / 2);\n      const y = centerY + radius * Math.sin(i * angle - Math.PI / 2);\n      if (i === 0) {\n        this.ctx.moveTo(x, y);\n      } else {\n        this.ctx.lineTo(x, y);\n      }\n    }\n    this.ctx.closePath();\n    this.ctx.stroke();\n  };\n\n  removeShape = () => {\n    this.shapes.shift();\n    this.drawShapes();\n  };\n\n  erase = (x: number, y: number) => {\n    this.ctx.save();\n    this.ctx.globalCompositeOperation = 'destination-out';\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, this.eraserThickness / 2, 0, Math.PI * 2, false);\n    this.ctx.fill();\n    this.ctx.restore();\n\n    this.shapes = this.shapes\n      .map((shape) => {\n        if (shape.type === 'freehand') {\n          return {\n            ...shape,\n            points: shape.points.filter((point: any) => {\n              const distance = Math.sqrt(Math.pow(point.x - x, 2) + Math.pow(point.y - y, 2));\n              return distance > this.eraserThickness / 2;\n            }),\n          };\n        } else if (shape.type === 'line') {\n          if (\n            this.isPointNearLine(\n              x,\n              y,\n              shape.x1,\n              shape.y1,\n              shape.x2,\n              shape.y2,\n              this.eraserThickness / 2,\n            )\n          ) {\n            return null;\n          }\n        } else if (shape.type === 'text') {\n          const textWidth = this.ctx.measureText(shape.text).width;\n          if (\n            x > shape.x &&\n            x < shape.x + textWidth &&\n            y > shape.y - shape.fontSize &&\n            y < shape.y\n          ) {\n            return null;\n          }\n        } else {\n          if (x > shape.x1 && x < shape.x2 && y > shape.y1 && y < shape.y2) {\n            return null;\n          }\n        }\n        return shape;\n      })\n      .filter((shape) => shape && (shape.type !== 'freehand' || shape.points.length > 0));\n  };\n\n  isPointNearLine(\n    px: number,\n    py: number,\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    threshold: number,\n  ): boolean {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const dot = ((px - x1) * dx + (py - y1) * dy) / (length * length);\n    const closestX = x1 + dot * dx;\n    const closestY = y1 + dot * dy;\n    const distance = Math.sqrt(Math.pow(px - closestX, 2) + Math.pow(py - closestY, 2));\n    return distance <= threshold;\n  }\n\n  toggleToolbar = () => {\n    this.toolbarVisible = !this.toolbarVisible;\n  };\n\n  toggleAnnotate = async () => {\n    const annotateScreenStream = this.parameters.annotateScreenStream;\n    this.parameters.annotateScreenStream = !annotateScreenStream;\n\n    setTimeout(() => {\n      this.parameters.updateAnnotateScreenStream(!annotateScreenStream);\n    });\n    if (this.parameters.annotateScreenStream) {\n      this.toolbarVisible = true;\n      this.parameters.showAlert?.({\n        message: `You can now annotate the screen. If you cannot see your annotation controls (on top), try minimizing your screen by using 'Cmd' + '-' (on Mac) or 'Ctrl' + '-' (on Windows).`,\n        type: 'success',\n        duration: 9000,\n      });\n    } else {\n      this.toolbarVisible = false;\n    }\n\n    this.parameters.updateIsScreenboardModalVisible(true);\n    await this.parameters.sleep({ ms: 500 });\n    this.parameters.updateIsScreenboardModalVisible(false);\n  };\n}\n","<div id=\"screenboard-interface\" *ngIf=\"showAspect\" style=\"position: relative; display: block; justify-content: center; align-items: center; background-color: transparent; z-index: 1000; width: 100%; height: 100%; max-width: 100%; max-height: 100%; overflow: auto;\" #screenboardRef>\r\n  <div id=\"screenboardContent\" style=\"position: relative; display: flex; justify-content: center; align-items: center; width: 100%; height: 100%; overflow: hidden; top: 0; left: 0;\" #screenboardContentRef>\r\n    <button id=\"annotateScreen\" class=\"btn btn-primary btnBoardScreen annotateScreenBtn\" style=\"position: absolute; top: 5px; right: 10px; z-index: 1000;\" (click)=\"toggleAnnotate()\">\r\n      <fa-icon [icon]=\"faPencilAlt\" [ngStyle]=\"{'color': parameters.annotateScreenStream ? 'red' : 'green'}\"></fa-icon>\r\n    </button>\r\n\r\n    <button id=\"toolbarToggleScreen\" *ngIf=\"parameters.annotateScreenStream\" class=\"btn btnBoardScreen btn-primary\" style=\"position: absolute; top: 5px; right: 55px; z-index: 1000;\" (click)=\"toggleToolbar()\">\r\n      <fa-icon [icon]=\"toolbarVisible ? faChevronRight : faChevronLeft\"></fa-icon>\r\n    </button>\r\n\r\n    <div class=\"toolbarScreen mb-3\" id=\"toolbarScreen\" style=\"position: absolute; top: 5px; right: 105px; z-index: 1000; background-color: transparent;\" [style.display]=\"toolbarVisible ? 'block' : 'none'\">\r\n      <!-- Draw Mode Dropdown -->\r\n      <div class=\"btn-group\" role=\"group\">\r\n        <button class=\"btn btnBoardScreen btn-secondary dropdown-toggle\" id=\"drawModeScreen\" (click)=\"handleDropdownClick('drawModeScreen')\">\r\n          <fa-icon [icon]=\"faPencilAlt\"></fa-icon>\r\n        </button>\r\n        <div *ngIf=\"dropdownOpen === 'drawModeScreen'\" class=\"dropdown-menu show\">\r\n          <button class=\"dropdown-item\" (click)=\"setDrawMode(3)\">XX-Small (3px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setDrawMode(6)\">X-Small (6px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setDrawMode(12)\">Small (12px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setDrawMode(18)\">Medium (18px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setDrawMode(24)\">Large (24px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setDrawMode(36)\">X-Large (36px)</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Freehand Mode Dropdown -->\r\n      <div class=\"btn-group\" role=\"group\">\r\n        <button class=\"btn btnBoardScreen btn-dark dropdown-toggle\" id=\"freehandModeScreen\" (click)=\"handleDropdownClick('freehandModeScreen')\">\r\n          <fa-icon [icon]=\"faPaintBrush\"></fa-icon>\r\n        </button>\r\n        <div *ngIf=\"dropdownOpen === 'freehandModeScreen'\" class=\"dropdown-menu show\">\r\n          <button class=\"dropdown-item\" (click)=\"setFreehandMode(5)\">X-Small (5px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setFreehandMode(10)\">Small (10px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setFreehandMode(20)\">Medium (20px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setFreehandMode(40)\">Large (40px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setFreehandMode(60)\">X-Large (60px)</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Shape Mode Dropdown with Images -->\r\n      <div class=\"btn-group\" role=\"group\">\r\n        <button class=\"btn btnBoardScreen btn-dark dropdown-toggle\" id=\"shapeModeScreen\" (click)=\"handleDropdownClick('shapeModeScreen')\">\r\n          <fa-icon [icon]=\"faShapes\"></fa-icon>\r\n        </button>\r\n        <div *ngIf=\"dropdownOpen === 'shapeModeScreen'\" class=\"dropdown-menu show\">\r\n          <button class=\"dropdown-item\" (click)=\"setShapeMode('square')\">\r\n            <img src=\"https://mediasfu.com/images/svg/square.svg\" alt=\"Square\" class=\"shape-icon\" /> Square\r\n          </button>\r\n          <button class=\"dropdown-item\" (click)=\"setShapeMode('rectangle')\">\r\n            <img src=\"https://mediasfu.com/images/svg/rectangle.svg\" alt=\"Rectangle\" class=\"shape-icon\" /> Rectangle\r\n          </button>\r\n          <button class=\"dropdown-item\" (click)=\"setShapeMode('circle')\">\r\n            <img src=\"https://mediasfu.com/images/svg/circle.svg\" alt=\"Circle\" class=\"shape-icon\" /> Circle\r\n          </button>\r\n          <button class=\"dropdown-item\" (click)=\"setShapeMode('triangle')\">\r\n            <img src=\"https://mediasfu.com/images/svg/triangle.svg\" alt=\"Triangle\" class=\"shape-icon\" /> Triangle\r\n          </button>\r\n          <button class=\"dropdown-item\" (click)=\"setShapeMode('hexagon')\">\r\n            <img src=\"https://mediasfu.com/images/svg/hexagon.svg\" alt=\"Hexagon\" class=\"shape-icon\" /> Hexagon\r\n          </button>\r\n          <button class=\"dropdown-item\" (click)=\"setShapeMode('pentagon')\">\r\n            <img src=\"https://mediasfu.com/images/svg/pentagon.svg\" alt=\"Pentagon\" class=\"shape-icon\" /> Pentagon\r\n          </button>\r\n          <button class=\"dropdown-item\" (click)=\"setShapeMode('rhombus')\">\r\n            <img src=\"https://mediasfu.com/images/svg/rhombus.svg\" alt=\"Rhombus\" class=\"shape-icon\" /> Rhombus\r\n          </button>\r\n          <button class=\"dropdown-item\" (click)=\"setShapeMode('octagon')\">\r\n            <img src=\"https://mediasfu.com/images/svg/octagon.svg\" alt=\"Octagon\" class=\"shape-icon\" /> Octagon\r\n          </button>\r\n          <button class=\"dropdown-item\" (click)=\"setShapeMode('oval')\">\r\n            <img src=\"https://mediasfu.com/images/svg/oval.svg\" alt=\"Oval\" class=\"shape-icon\" /> Oval\r\n          </button>\r\n          <button class=\"dropdown-item\" (click)=\"setShapeMode('parallelogram')\">\r\n            <img src=\"https://mediasfu.com/images/svg/parallelogram.svg\" alt=\"Parallelogram\" class=\"shape-icon\" /> Parallelogram\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Erase Mode Dropdown -->\r\n      <div class=\"btn-group\" role=\"group\">\r\n        <button class=\"btn btnBoardScreen btn-danger dropdown-toggle\" id=\"eraseModeScreen\" (click)=\"handleDropdownClick('eraseModeScreen')\">\r\n          <fa-icon [icon]=\"faEraser\"></fa-icon>\r\n        </button>\r\n        <div *ngIf=\"dropdownOpen === 'eraseModeScreen'\" class=\"dropdown-menu show\">\r\n          <button class=\"dropdown-item\" (click)=\"setEraseMode(5)\">X-Small (5px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setEraseMode(10)\">Small (10px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setEraseMode(20)\">Medium (20px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setEraseMode(30)\">Large (30px)</button>\r\n          <button class=\"dropdown-item\" (click)=\"setEraseMode(60)\">X-Large (60px)</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Additional Toolbar Controls -->\r\n      <button class=\"btn btnBoard btn-success\" id=\"zoomResetScreen\" style=\"display: none;\">\r\n        <fa-icon [icon]=\"faSearch\"></fa-icon>\r\n      </button>\r\n\r\n      <input type=\"color\" class=\"btn\" id=\"colorPickerScreen\" [(ngModel)]=\"color\">\r\n      <select id=\"lineTypePickerScreen\" class=\"custom-select\" style=\"width: auto;\" [(ngModel)]=\"lineType\">\r\n        <option value=\"solid\">Solid</option>\r\n        <option value=\"dashed\">Dashed</option>\r\n        <option value=\"dotted\">Dotted</option>\r\n        <option value=\"dashDot\">Dash-Dot</option>\r\n      </select>\r\n    </div>\r\n\r\n    <canvas id=\"canvasRef\" width=\"1280\" height=\"720\" [ngStyle]=\"{'display': parameters.annotateScreenStream ? 'block' : 'none'}\" style=\"padding: 0; margin: 0;\" #canvasRef></canvas>\r\n  </div>\r\n</div>\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Producer } from 'mediasoup-client/lib/types';\nimport {\n  ConnectSendTransportScreenType,\n  CreateSendTransportType,\n  DisconnectSendTransportScreenType,\n  PrepopulateUserMediaType,\n  StopShareScreenType,\n  SleepType,\n  ConnectSendTransportScreenParameters,\n  CreateSendTransportParameters,\n  DisconnectSendTransportScreenParameters,\n  PrepopulateUserMediaParameters,\n  StopShareScreenParameters,\n} from '../../../@types/types';\n\nexport interface ScreenboardModalParameters\n  extends ConnectSendTransportScreenParameters,\n    CreateSendTransportParameters,\n    DisconnectSendTransportScreenParameters,\n    PrepopulateUserMediaParameters,\n    StopShareScreenParameters {\n  localStreamScreen: MediaStream | null;\n  shared: boolean;\n  hostLabel: string;\n  annotateScreenStream: boolean;\n  processedScreenStream: MediaStream | null;\n  mainScreenCanvas: HTMLCanvasElement | null;\n  canvasScreenboard: HTMLCanvasElement | null;\n  transportCreated: boolean;\n  screenProducer: Producer | null;\n\n  updateLocalStreamScreen: (stream: MediaStream | null) => void;\n  updateProcessedScreenStream: (stream: MediaStream | null) => void;\n  updateMainScreenCanvas: (canvas: HTMLCanvasElement | null) => void;\n\n  // mediasfu functions\n  sleep: SleepType;\n  createSendTransport: CreateSendTransportType;\n  disconnectSendTransportScreen: DisconnectSendTransportScreenType;\n  connectSendTransportScreen: ConnectSendTransportScreenType;\n  stopShareScreen: StopShareScreenType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n\n  getUpdatedAllParams: () => ScreenboardModalParameters;\n  // [key: string]: any;\n}\n\nexport interface ScreenboardModalOptions {\n  parameters: ScreenboardModalParameters;\n  isVisible: boolean;\n  onClose: () => void;\n  position: string;\n  backgroundColor: string;\n}\n\nexport type ScreenboardModalType = (options: ScreenboardModalOptions) => HTMLElement;\n\n/**\n * @fileoverview ScreenboardModal component for handling screen annotation and modal visibility.\n *\n * @component\n * @selector app-screenboard-modal\n * @standalone true\n * @templateUrl ./screenboard-modal.component.html\n * @styleUrls ./screenboard-modal.component.css\n * @imports CommonModule, FormsModule, FontAwesomeModule\n *\n * @class ScreenboardModal\n * @implements OnInit, OnDestroy, OnChanges, AfterViewInit\n *\n * @description\n * This component is responsible for managing the screen annotation modal, including showing and hiding the modal,\n * handling screen annotations, and managing media streams.\n *\n * @property {ScreenboardModalParameters} parameters - Input parameter for screen annotation modal.\n * @property {boolean} isVisible - Input flag to control the visibility of the modal.\n * @property {() => void} onClose - Input callback function to be called when the modal is closed.\n * @property {string} position - Input string to set the position of the modal.\n * @property {string} backgroundColor - Input string to set the background color of the modal.\n *\n * @property {ElementRef<HTMLVideoElement>} screenVideoRef - ViewChild reference to the screen video element.\n * @property {ElementRef<HTMLCanvasElement>} screenCanvasRef - ViewChild reference to the screen canvas element.\n *\n * @property {IconDefinition} faTimes - FontAwesome icon for the close button.\n *\n * @property {any} annotationInterval - Interval for annotation updates.\n * @property {any} annotationCheckInterval - Interval for checking annotation updates.\n * @property {MediaStream | null} clonedStreamScreen - Cloned media stream for screen sharing.\n * @property {CanvasRenderingContext2D | null} ctx - Canvas rendering context.\n *\n * @method ngOnInit - Initialization logic that does not depend on the view.\n * @method ngOnDestroy - Cleanup logic when the component is destroyed.\n * @method ngOnChanges - Logic to handle changes in input properties.\n * @method ngAfterViewInit - Logic that requires view access.\n * @method showModal - Method to show the modal and handle screen annotation setup.\n * @method hideModal - Method to hide the modal and cleanup screen annotation.\n * @method annotatationPreview - Method to handle the preview of screen annotations.\n * @method handleScreenTransport - Method to handle screen transport logic.\n * @method stopAnnotation - Method to stop the screen annotation.\n * @method stopAllTracks - Method to stop all media tracks.\n */\n@Component({\n  selector: 'app-screenboard-modal',\n  standalone: true,\n  templateUrl: './screenboard-modal.component.html',\n  styleUrls: ['./screenboard-modal.component.css'],\n  imports: [CommonModule, FormsModule, FontAwesomeModule],\n})\nexport class ScreenboardModal implements OnInit, OnDestroy, OnChanges, AfterViewInit {\n  @Input() parameters: ScreenboardModalParameters = {} as ScreenboardModalParameters;\n  @Input() isVisible = false;\n  @Input() onClose!: () => void;\n  @Input() position = 'topRight';\n  @Input() backgroundColor = '#83c0e9';\n\n  @ViewChild('screenVideo') screenVideoRef!: ElementRef<HTMLVideoElement>;\n  @ViewChild('screenCanvas') screenCanvasRef!: ElementRef<HTMLCanvasElement>;\n\n  faTimes = faTimes;\n\n  private annotationInterval: any;\n  private annotationCheckInterval: any;\n  private clonedStreamScreen: MediaStream | null = null;\n  private ctx: CanvasRenderingContext2D | null = null;\n\n  ngOnInit() {\n    // Initialization logic that does not depend on the view\n  }\n\n  ngOnDestroy() {\n    this.stopAnnotation();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['isVisible']) {\n      this.isVisible = changes['isVisible'].currentValue;\n      if (this.isVisible) {\n        // In case isVisible changes after view init\n        if (this.screenCanvasRef && this.screenVideoRef) {\n          this.showModal();\n        } else {\n          setTimeout(() => {\n            if (this.screenCanvasRef && this.screenVideoRef) {\n              this.showModal();\n            }\n          }, 100);\n        }\n      } else {\n        if (this.screenCanvasRef && this.screenVideoRef) {\n          this.hideModal();\n        }\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    // Move logic that requires view access here\n  }\n\n  showModal = async () => {\n    try {\n      this.parameters = this.parameters.getUpdatedAllParams();\n      const { annotateScreenStream, shared, createSendTransport, prepopulateUserMedia, hostLabel } =\n        this.parameters;\n      const annotate = annotateScreenStream;\n      const screenVideo = this.screenVideoRef!.nativeElement;\n\n      if (annotate && shared) {\n        screenVideo.classList.remove('d-none');\n        await this.annotatationPreview();\n        setTimeout(async () => {\n          if (!this.parameters.transportCreated) {\n            await createSendTransport({ option: 'screen', parameters: this.parameters });\n          } else {\n            try {\n              await this.handleScreenTransport();\n              await this.parameters.sleep({ ms: 250 });\n            } catch {\n              /* handle error */\n            }\n          }\n          await this.parameters.connectSendTransportScreen({\n            stream: this.parameters.processedScreenStream,\n            parameters: this.parameters,\n          });\n          await prepopulateUserMedia!({ name: hostLabel, parameters: this.parameters });\n        }, 100);\n      } else {\n        screenVideo.classList.add('d-none');\n      }\n    } catch {\n      /* handle error */\n    }\n  };\n\n  hideModal = async () => {\n    this.parameters = this.parameters.getUpdatedAllParams();\n    const {\n      annotateScreenStream,\n      shared,\n      createSendTransport,\n      disconnectSendTransportScreen,\n      stopShareScreen,\n      prepopulateUserMedia,\n      hostLabel,\n    } = this.parameters;\n    const annotate = annotateScreenStream;\n    const screenVideo = this.screenVideoRef && this.screenVideoRef!.nativeElement;\n\n    try {\n      if (!annotate) {\n        try {\n          await this.stopAnnotation();\n        } catch {\n          /* handle error */\n        }\n        if (shared) {\n          if (!this.parameters.transportCreated) {\n            await createSendTransport({ option: 'screen', parameters: this.parameters });\n          } else {\n            try {\n              await disconnectSendTransportScreen({ parameters: this.parameters });\n              await this.parameters.sleep({ ms: 500 });\n            } catch {\n              /* handle error */\n            }\n            if (\n              this.parameters.localStreamScreen &&\n              this.parameters.localStreamScreen.getVideoTracks().length > 0 &&\n              this.parameters.localStreamScreen.getVideoTracks()[0].readyState === 'ended'\n            ) {\n              this.parameters.localStreamScreen.removeTrack(\n                this.parameters.localStreamScreen.getVideoTracks()[0],\n              );\n              if (this.clonedStreamScreen) {\n                this.parameters.localStreamScreen.addTrack(\n                  this.clonedStreamScreen.getVideoTracks()[0].clone(),\n                );\n              }\n              this.parameters.updateLocalStreamScreen(this.parameters.localStreamScreen);\n            }\n            if (this.clonedStreamScreen) {\n              this.clonedStreamScreen.getVideoTracks()[0].onended = async () => {\n                await disconnectSendTransportScreen({ parameters: this.parameters });\n                await stopShareScreen({ parameters: this.parameters });\n              };\n            }\n            await this.parameters.connectSendTransportScreen({\n              stream: this.parameters.localStreamScreen,\n              parameters: this.parameters,\n            });\n          }\n        } else {\n          await this.stopAllTracks();\n        }\n\n        await prepopulateUserMedia!({ name: hostLabel, parameters: this.parameters });\n      }\n      screenVideo && screenVideo.classList.add('d-none');\n      if (this.parameters.mainScreenCanvas && this.screenCanvasRef) {\n        this.screenCanvasRef.nativeElement.classList.add('d-none');\n      }\n      this.onClose();\n    } catch {\n      /* handle error */\n    }\n  };\n\n  annotatationPreview = async () => {\n    const screenVideo = this.screenVideoRef!.nativeElement;\n    if (!this.parameters.mainScreenCanvas) {\n      this.parameters.mainScreenCanvas = this.screenCanvasRef.nativeElement;\n      this.parameters.updateMainScreenCanvas(this.parameters.mainScreenCanvas);\n    }\n    const annotate = this.parameters.annotateScreenStream;\n\n    if (\n      annotate &&\n      (!this.clonedStreamScreen ||\n        (this.clonedStreamScreen &&\n          this.clonedStreamScreen.getVideoTracks().length > 0 &&\n          this.clonedStreamScreen.getVideoTracks()[0].readyState === 'ended'))\n    ) {\n      const originalTrack = this.parameters.localStreamScreen!.getVideoTracks()[0];\n      const originalSettings = originalTrack.getSettings();\n      const cloned = originalTrack.clone();\n      await cloned.applyConstraints({\n        width: originalSettings.width,\n        height: originalSettings.height,\n        frameRate: originalSettings.frameRate,\n        aspectRatio: originalSettings.aspectRatio,\n      });\n      this.clonedStreamScreen = new MediaStream([cloned]);\n    }\n\n    if (\n      this.clonedStreamScreen &&\n      this.parameters.localStreamScreen &&\n      this.parameters.localStreamScreen.getVideoTracks().length > 0 &&\n      this.parameters.localStreamScreen.getVideoTracks()[0].readyState === 'ended'\n    ) {\n      this.parameters.localStreamScreen.removeTrack(\n        this.parameters.localStreamScreen.getVideoTracks()[0],\n      );\n      this.parameters.localStreamScreen.addTrack(\n        this.clonedStreamScreen.getVideoTracks()[0].clone(),\n      );\n    }\n\n    if (this.clonedStreamScreen) {\n      this.clonedStreamScreen.getVideoTracks()[0].onended = async () => {\n        await this.parameters.disconnectSendTransportScreen({ parameters: this.parameters });\n        await this.parameters.stopShareScreen({ parameters: this.parameters });\n      };\n    }\n\n    const mediaCanvas = this.parameters.mainScreenCanvas;\n    const ctx = mediaCanvas.getContext('2d');\n    mediaCanvas.width = this.parameters.localStreamScreen!.getVideoTracks()[0].getSettings().width!;\n    mediaCanvas.height = this.parameters\n      .localStreamScreen!.getVideoTracks()[0]\n      .getSettings().height!;\n\n    if (!annotate) {\n      this.parameters.processedScreenStream = null;\n      this.parameters.updateProcessedScreenStream(null);\n    }\n\n    const captureStream = () => {\n      const stream = mediaCanvas.captureStream(30);\n      this.annotationCheckInterval = setInterval(() => {\n        const params = this.parameters.getUpdatedAllParams();\n        canvasElement = params.canvasScreenboard;\n        const height = canvasElement!.height;\n        const width = canvasElement!.width;\n        const refHeight = params.localStreamScreen!.getVideoTracks()[0].getSettings().height!;\n        const refWidth = params.localStreamScreen!.getVideoTracks()[0].getSettings().width!;\n        if (height !== refHeight || width !== refWidth) {\n          canvasElement!.width = refWidth;\n          canvasElement!.height = refHeight;\n          mediaCanvas.width = refWidth;\n          mediaCanvas.height = refHeight;\n        }\n      }, 1000);\n      this.annotationInterval = setInterval(() => {\n        drawCombined();\n      }, 30);\n      return stream;\n    };\n\n    const annotateImage = async () => {\n      this.parameters.processedScreenStream = await captureStream();\n      this.parameters.updateProcessedScreenStream(this.parameters.processedScreenStream);\n    };\n\n    const annotateVideo = this.clonedStreamScreen;\n    if (annotateVideo && annotate) {\n      screenVideo.style.width = `${annotateVideo.getVideoTracks()[0].getSettings().width}px`;\n      screenVideo.style.height = `${annotateVideo.getVideoTracks()[0].getSettings().height}px`;\n      screenVideo.srcObject = annotateVideo;\n      await annotateImage();\n    }\n\n    let canvasElement = this.parameters.getUpdatedAllParams().canvasScreenboard;\n    canvasElement!.width = mediaCanvas.width;\n    canvasElement!.height = mediaCanvas.height;\n\n    const drawCombined = () => {\n      ctx!.clearRect(0, 0, canvasElement!.width, canvasElement!.height);\n      ctx!.drawImage(screenVideo, 0, 0, canvasElement!.width, canvasElement!.height);\n      ctx!.drawImage(canvasElement!, 0, 0, canvasElement!.width, canvasElement!.height);\n      ctx!.restore();\n    };\n  };\n\n  handleScreenTransport = async () => {\n    if (\n      this.parameters.localStreamScreen!.getVideoTracks().length > 0 &&\n      this.parameters.localStreamScreen!.getVideoTracks()[0].id ===\n        this.parameters.screenProducer?.track!.id\n    ) {\n      if (\n        this.clonedStreamScreen &&\n        this.clonedStreamScreen.getVideoTracks().length > 0 &&\n        this.clonedStreamScreen.getVideoTracks()[0].readyState === 'ended'\n      ) {\n        this.clonedStreamScreen.removeTrack(this.clonedStreamScreen.getVideoTracks()[0]);\n        this.clonedStreamScreen.addTrack(\n          this.parameters.localStreamScreen!.getVideoTracks()[0].clone(),\n        );\n      }\n      this.parameters.localStreamScreen!.removeTrack(\n        this.parameters.localStreamScreen!.getVideoTracks()[0],\n      );\n      this.parameters.localStreamScreen!.addTrack(\n        this.clonedStreamScreen!.getVideoTracks()[0].clone(),\n      );\n    }\n    await this.parameters.disconnectSendTransportScreen({ parameters: this.parameters });\n  };\n\n  stopAnnotation = async () => {\n    if (this.annotationInterval) {\n      clearInterval(this.annotationInterval);\n      clearInterval(this.annotationCheckInterval);\n      this.annotationInterval = null;\n      this.annotationCheckInterval = null;\n    }\n\n    if (this.parameters.processedScreenStream) {\n      this.parameters.processedScreenStream\n        .getTracks()\n        .forEach((track: MediaStreamTrack) => track.stop());\n      this.parameters.processedScreenStream = null;\n      this.parameters.updateProcessedScreenStream(null);\n    }\n\n    if (this.parameters.mainScreenCanvas) {\n      this.parameters.mainScreenCanvas\n        ?.getContext('2d')!\n        .clearRect(\n          0,\n          0,\n          this.parameters.mainScreenCanvas.width,\n          this.parameters.mainScreenCanvas.height,\n        );\n    }\n  };\n\n  stopAllTracks = async () => {\n    try {\n      if (\n        this.parameters.localStreamScreen &&\n        this.parameters.localStreamScreen.getVideoTracks().length > 0\n      ) {\n        this.parameters.localStreamScreen\n          .getVideoTracks()\n          .forEach((track: MediaStreamTrack) => track.stop());\n        this.parameters.updateLocalStreamScreen(null);\n      } else {\n        this.parameters.updateLocalStreamScreen(null);\n      }\n    } catch {\n      /* handle error */\n    }\n\n    try {\n      if (this.clonedStreamScreen && this.clonedStreamScreen.getVideoTracks().length > 0) {\n        this.clonedStreamScreen.getVideoTracks().forEach((track) => track.stop());\n      }\n    } catch {\n      /* handle error */\n    }\n\n    try {\n      if (this.parameters.processedScreenStream) {\n        this.parameters.processedScreenStream\n          .getTracks()\n          .forEach((track: MediaStreamTrack) => track.stop());\n        this.parameters.updateProcessedScreenStream(null);\n      }\n    } catch {\n      /* handle error */\n    }\n\n    this.clonedStreamScreen = null;\n  };\n}\n","<div *ngIf=\"isVisible\" class=\"modal-container\">\r\n  <div class=\"modal-content\">\r\n    <div class=\"modal-header\">\r\n      <div class=\"modal-title\">Screen Annotation</div>\r\n      <div class=\"modal-close\" (click)=\"hideModal()\">\r\n        <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <hr />\r\n    <div class=\"modal-body\">\r\n      <video #screenVideo id=\"screenVideo\" class=\"d-none\" autoplay></video>\r\n      <canvas #screenCanvas id=\"screenCanvas\"></canvas>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Participant, Stream, DispStreamsType, DispStreamsParameters } from '../@types/types';\nexport interface GeneratePageContentParameters extends DispStreamsParameters {\n  paginatedStreams: (Participant | Stream)[][];\n  currentUserPage: number;\n  updateMainWindow: boolean;\n  updateCurrentUserPage: (page: number) => void;\n  updateUpdateMainWindow: (flag: boolean) => void;\n\n  // mediasfu functions\n  dispStreams: DispStreamsType;\n  getUpdatedAllParams: () => GeneratePageContentParameters;\n  [key: string]: any;\n}\n\nexport interface GeneratePageContentOptions {\n  page: number | string;\n  parameters: GeneratePageContentParameters;\n  breakRoom?: number;\n  inBreakRoom?: boolean;\n}\n\n// Export the type definition for the function\nexport type GeneratePageContentType = (options: GeneratePageContentOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GeneratePageContent {\n  /**\n   * Generates the content for a specific page.\n   *\n   * @param {Object} options - The options for generating page content.\n   * @param {number | string} options.page - The page number to generate content for.\n   * @param {Object} options.parameters - The parameters required for generating content.\n   * @param {Array} options.parameters.paginatedStreams - The streams to be paginated.\n   * @param {number} options.parameters.currentUserPage - The current page of the user.\n   * @param {Function} options.parameters.updateMainWindow - Function to update the main window flag.\n   * @param {Function} options.parameters.updateCurrentUserPage - Function to update the current user page.\n   * @param {Function} options.parameters.updateUpdateMainWindow - Function to update the main window update flag.\n   * @param {Function} options.parameters.dispStreams - Function to display streams for the specified page.\n   * @param {number} [options.breakRoom=-1] - The break room identifier.\n   * @param {boolean} [options.inBreakRoom=false] - Flag indicating if the user is in a break room.\n   * @returns {Promise<void>} A promise that resolves when the content generation is complete.\n   * @throws {Error} Throws an error if content generation fails.\n   */\n  async generatePageContent({\n    page,\n    parameters,\n    breakRoom = -1,\n    inBreakRoom = false,\n  }: GeneratePageContentOptions): Promise<void> {\n    try {\n      // Destructure parameters\n      parameters = parameters.getUpdatedAllParams();\n\n      let {\n        paginatedStreams,\n        currentUserPage,\n        updateMainWindow,\n        updateCurrentUserPage,\n        updateUpdateMainWindow,\n        // mediasfu functions\n        dispStreams,\n      } = parameters;\n\n      // Convert page to an integer\n      page = parseInt(page.toString(), 10);\n\n      // Update current user page\n      currentUserPage = page;\n      updateCurrentUserPage(currentUserPage);\n\n      // Update main window flag\n      updateMainWindow = true;\n      updateUpdateMainWindow(updateMainWindow);\n\n      // Display streams for the specified page\n      await dispStreams({\n        lStreams: paginatedStreams[page],\n        ind: page,\n        parameters,\n        breakRoom,\n        inBreakRoom,\n      });\n    } catch (error: any) {\n      // Handle errors during content generation\n      console.log('Error generating page content:', error.message);\n    }\n  }\n}\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faStar, faLock } from '@fortawesome/free-solid-svg-icons';\nimport {\n  GeneratePageContent,\n  GeneratePageContentParameters,\n} from '../../../consumers/generate-page-content.service';\nimport { Socket } from 'socket.io-client';\nimport { BreakoutParticipant, ComponentSizes, ShowAlert } from '../../../@types/types';\n\nexport interface PaginationParameters extends GeneratePageContentParameters {\n  mainRoomsLength: number;\n  memberRoom: number;\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n  member: string;\n  breakoutRooms: BreakoutParticipant[][];\n  hostNewRoom: number;\n  roomName: string;\n  islevel: string;\n  showAlert?: ShowAlert;\n  socket: Socket;\n\n  // mediasfu functions\n  getUpdatedAllParams: () => PaginationParameters;\n  [key: string]: any;\n}\n\nexport interface PaginationOptions {\n  totalPages: number;\n  currentUserPage: number;\n  handlePageChange: (options: any) => Promise<void>;\n  position: 'left' | 'middle' | 'right' | string;\n  location: 'top' | 'middle' | 'bottom' | string;\n  direction: 'horizontal' | 'vertical';\n  buttonsContainerStyle: any;\n  activePageStyle: any;\n  inactivePageStyle: any;\n  backgroundColor: string;\n  paginationHeight: number;\n  showAspect?: boolean;\n  parameters: PaginationParameters;\n}\n\nexport type PaginationType = (options: PaginationOptions) => HTMLElement;\n\n/**\n * Pagination component for displaying and handling pagination controls.\n *\n * @component\n * @selector app-pagination\n * @standalone true\n * @imports [CommonModule, FontAwesomeModule]\n *\n * @description\n * This component renders pagination controls with customizable styles and behavior.\n * It supports horizontal and vertical layouts, different positions, and dynamic data.\n *\n * @example\n * <app-pagination\n *   [totalPages]=\"10\"\n *   [currentUserPage]=\"1\"\n *   [handlePageChange]=\"handlePageChange\"\n *   [position]=\"'middle'\"\n *   [location]=\"'bottom'\"\n *   [direction]=\"'horizontal'\"\n *   [backgroundColor]=\"'#ffffff'\"\n *   [paginationHeight]=\"40\"\n *   [showAspect]=\"true\"\n *   [parameters]=\"paginationParameters\">\n * </app-pagination>\n *\n * @input {number} totalPages - Total number of pages.\n * @input {number} currentUserPage - Current active page.\n * @input {Function} handlePageChange - Function to handle page change.\n * @input {'left' | 'middle' | 'right' | string} position - Position of the pagination controls.\n * @input {'top' | 'middle' | 'bottom' | string} location - Location of the pagination controls.\n * @input {'horizontal' | 'vertical' | string} direction - Direction of the pagination controls.\n * @input {any} buttonsContainerStyle - Custom styles for the buttons container.\n * @input {any} activePageStyle - Custom styles for the active page button.\n * @input {any} inactivePageStyle - Custom styles for the inactive page buttons.\n * @input {string} backgroundColor - Background color of the pagination controls.\n * @input {number} paginationHeight - Height of the pagination controls.\n * @input {boolean} showAspect - Flag to show or hide the pagination controls.\n * @input {PaginationParameters} parameters - Additional parameters for pagination.\n *\n * @method ngOnInit - Initializes the component and sets up initial data.\n * @method ngOnChanges - Handles changes to input properties and updates data accordingly.\n * @method handleClick - Handles click events on pagination buttons and performs necessary actions.\n * @method getPageStyle - Returns the style for a given page button based on its state.\n * @method isBreakoutRoom - Determines if a given item represents a breakout room.\n * @method getDisplayItem - Returns the display text for a given item.\n */\n@Component({\n  selector: 'app-pagination',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  template: `\n    <div\n      [ngStyle]=\"{\n        'background-color': backgroundColor,\n        'justify-content': position == 'middle' ? 'space-evenly' : position == 'left' ? 'flex-start' : 'flex-end',\n        'align-items': location == 'middle' ? 'center' : location == 'top' ? 'flex-start' : 'flex-end',\n        'padding': '0',\n        'margin': '0',\n        'min-height': direction == 'horizontal' ? paginationHeight + 'px' : componentSizes.otherHeight + 'px',\n        'min-width': direction == 'horizontal' ? componentSizes.otherWidth + 'px' : paginationHeight + 'px',\n        'width': direction == 'horizontal' ? '100%' : paginationHeight + 'px',\n        'height': direction == 'horizontal' ? paginationHeight + 'px' : '100%',\n        'display': showAspect ? 'flex' : 'none',\n        'max-height': direction == 'horizontal' ? paginationHeight + 'px' : '100%',\n        'max-width': direction == 'horizontal' ? '100%' : paginationHeight + 'px',\n        'flex-direction': direction == 'vertical' ? 'column' : 'row',\n        'overflow-x': 'auto',\n      }\"\n    >\n      <ng-container *ngFor=\"let item of data; let index = index\">\n        <button\n          *ngIf=\"item == 0\"\n          [ngClass]=\"{ active: item == currentUserPage }\"\n          [ngStyle]=\"getPageStyle(item)\"\n          (click)=\"handleClick(item)\"\n        >\n          <fa-icon\n            [icon]=\"faStar\"\n            size=\"lg\"\n            [style.color]=\"item == currentUserPage ? 'yellow' : 'gray'\"\n          ></fa-icon>\n        </button>\n        <button\n          *ngIf=\"item !== 0\"\n          [ngClass]=\"{ active: item == currentUserPage }\"\n          [ngStyle]=\"getPageStyle(item)\"\n          (click)=\"handleClick(item)\"\n        >\n          <span\n            *ngIf=\"!isBreakoutRoom(item)\"\n            class=\"pageText\"\n            [ngStyle]=\"{ color: item == currentUserPage ? '#ffffff' : '#000000' }\"\n            >{{ item }}</span\n          >\n          <span\n            *ngIf=\"isBreakoutRoom(item)\"\n            class=\"pageText\"\n            [ngStyle]=\"{ color: item == currentUserPage ? '#ffffff' : '#000000' }\"\n            >{{ getDisplayItem(item) }}\n            <fa-icon\n              *ngIf=\"\n                parameters.memberRoom + 1 !== item - (parameters.mainRoomsLength - 1) &&\n                parameters.islevel !== '2'\n              \"\n              [icon]=\"faLock\"\n            ></fa-icon\n          ></span>\n        </button>\n      </ng-container>\n    </div>\n  `,\n  styles: [\n    `\n      .pageButton.active {\n        background-color: #2c678f;\n      }\n    `,\n  ],\n})\nexport class Pagination implements OnInit, OnChanges {\n  @Input() totalPages = 0;\n  @Input() currentUserPage = 0;\n  @Input() handlePageChange!: (options: any) => Promise<void>;\n  @Input() position: 'left' | 'middle' | 'right' | string = 'middle';\n  @Input() location: 'top' | 'middle' | 'bottom' | string = 'middle';\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\n  @Input() buttonsContainerStyle: any = {};\n  @Input() activePageStyle: any = { backgroundColor: '#2c678f' };\n  @Input() inactivePageStyle: any = {};\n  @Input() backgroundColor = '#ffffff';\n  @Input() paginationHeight = 40;\n  @Input() showAspect = true;\n  @Input() parameters: PaginationParameters = {} as PaginationParameters;\n\n  constructor(private generatePageContentService: GeneratePageContent) {}\n\n  faStar = faStar;\n  faLock = faLock;\n\n  data: number[] = [];\n\n  ngOnInit() {\n    this.data = Array.from({ length: this.totalPages + 1 }, (_, index) => index);\n    this.componentSizes = this.parameters.componentSizes;\n    if (!this.handlePageChange) {\n      this.handlePageChange = this.generatePageContentService.generatePageContent.bind(\n        this.generatePageContentService,\n      );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['totalPages'] || changes['currentUserPage']) {\n      this.data = Array.from({ length: this.totalPages + 1 }, (_, index) => index);\n    }\n  }\n\n  handleClick = async (page: number): Promise<void> => {\n    if (page == this.currentUserPage) {\n      return;\n    }\n\n    this.parameters = this.parameters.getUpdatedAllParams();\n    const params = { ...this.parameters };\n    this.componentSizes = params.componentSizes;\n\n    if (this.parameters.breakOutRoomStarted && !this.parameters.breakOutRoomEnded && page !== 0) {\n      const roomMember = this.parameters.breakoutRooms.find((r: any[]) =>\n        r.find((p) => p.name == this.parameters.member),\n      );\n      const pageInt = page - this.parameters.mainRoomsLength;\n      let memberBreakRoom = -1;\n      if (roomMember) {\n        memberBreakRoom = this.parameters.breakoutRooms.indexOf(roomMember);\n      }\n\n      if ((memberBreakRoom == -1 || memberBreakRoom !== pageInt) && pageInt >= 0) {\n        if (this.parameters.islevel !== '2') {\n          if (this.parameters.showAlert) {\n            this.parameters.showAlert({\n              message: `You are not part of the breakout room ${pageInt + 1}.`,\n              type: 'danger',\n            });\n          }\n          return;\n        }\n\n        await this.handlePageChange({\n          page,\n          parameters: params,\n          breakRoom: pageInt,\n          inBreakRoom: true,\n        });\n        if (this.parameters.hostNewRoom !== pageInt) {\n          this.parameters.socket.emit('updateHostBreakout', {\n            newRoom: pageInt,\n            roomName: this.parameters.roomName,\n          });\n        }\n      } else {\n        await this.handlePageChange({\n          page,\n          parameters: params,\n          breakRoom: pageInt,\n          inBreakRoom: pageInt >= 0,\n        });\n        if (this.parameters.islevel == '2' && this.parameters.hostNewRoom !== -1) {\n          this.parameters.socket.emit('updateHostBreakout', {\n            prevRoom: this.parameters.hostNewRoom,\n            newRoom: -1,\n            roomName: this.parameters.roomName,\n          });\n        }\n      }\n    } else {\n      await this.handlePageChange({ page, parameters: params, breakRoom: 0, inBreakRoom: false });\n      if (this.parameters.islevel == '2' && this.parameters.hostNewRoom !== -1) {\n        this.parameters.socket.emit('updateHostBreakout', {\n          prevRoom: this.parameters.hostNewRoom,\n          newRoom: -1,\n          roomName: this.parameters.roomName,\n        });\n      }\n    }\n  };\n\n  componentSizes: ComponentSizes = {} as ComponentSizes;\n\n  getPageStyle(item: number) {\n    return item == this.currentUserPage ? this.activePageStyle : this.inactivePageStyle;\n  }\n\n  isBreakoutRoom = (item: number): boolean => {\n    this.parameters = this.parameters.getUpdatedAllParams();\n    return (\n      this.parameters.breakOutRoomStarted &&\n      !this.parameters.breakOutRoomEnded &&\n      item >= this.parameters.mainRoomsLength\n    );\n  };\n\n  getDisplayItem(item: number) {\n    const roomNumber = item - (this.parameters.mainRoomsLength - 1);\n\n    if (this.isBreakoutRoom(item)) {\n      if (this.parameters.memberRoom + 1 !== roomNumber) {\n        return `Room ${roomNumber}`;\n      } else {\n        return `Room ${roomNumber}`;\n      }\n    }\n\n    return item.toString();\n  }\n}\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface FlexibleGridOptions {\n  customWidth: number;\n  customHeight: number;\n  rows: number;\n  columns: number;\n  componentsToRender: { component: any; inputs?: any }[];\n  backgroundColor?: string;\n}\n\nexport type FlexibleGridType = (options: FlexibleGridOptions) => HTMLElement;\n\n/**\n * @component FlexibleGrid\n *\n * A flexible grid component that dynamically renders a grid of components based on the provided inputs.\n *\n * @selector app-flexible-grid\n *\n * @inputs\n * - `customWidth` (number): The custom width for each grid item in pixels. Default is 0.\n * - `customHeight` (number): The custom height for each grid item in pixels. Default is 0.\n * - `rows` (number): The number of rows in the grid. Default is 0.\n * - `columns` (number): The number of columns in the grid. Default is 0.\n * - `componentsToRender` ({ component: any, inputs?: any }[]): An array of components to render in the grid, each with optional inputs.\n * - `backgroundColor` (string): The background color for each grid item. Default is 'transparent'.\n *\n * @methods\n * - `ngOnInit()`: Lifecycle hook that is called after the component is initialized. It generates the grid.\n * - `ngOnChanges(changes: SimpleChanges)`: Lifecycle hook that is called when any data-bound property of the component changes. It regenerates the grid if `columns`, `componentsToRender`, or `rows` change.\n * - `generateGrid()`: Generates the grid based on the number of rows and columns, and the components to render.\n * - `getGridItemStyle()`: Returns the style object for each grid item, including custom width, height, background color, margin, padding, and border radius.\n * - `createInjector(inputs: any)`: Creates and caches an injector for the given inputs to be used with `ngComponentOutlet`.\n *\n * @dependencies\n * - `CommonModule`: Angular's common module is imported for common directives.\n * - `Injector`: Angular's dependency injection system is used to create injectors for dynamic components.\n */\n@Component({\n  selector: 'app-flexible-grid',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div style=\"padding: 0;\">\n      <div\n        *ngFor=\"let rowComponents of grid; let rowIndex = index\"\n        style=\"display: flex; flex-direction: row;\"\n      >\n        <div\n          *ngFor=\"let component of rowComponents; let colIndex = index\"\n          [ngStyle]=\"getGridItemStyle()\"\n        >\n          <ng-container\n            *ngComponentOutlet=\"component.component; injector: createInjector(component.inputs)\"\n          ></ng-container>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class FlexibleGrid implements OnInit, OnChanges {\n  @Input() customWidth = 0;\n  @Input() customHeight = 0;\n  @Input() rows = 0;\n  @Input() columns = 0;\n  @Input() componentsToRender: { component: any; inputs?: any }[] = [];\n  @Input() backgroundColor = 'transparent';\n\n  grid: any[][] = [];\n\n  private injectorCache = new WeakMap<any, Injector>();\n\n  constructor(private injector: Injector) {}\n\n  ngOnInit() {\n    this.generateGrid();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['columns'] || changes['componentsToRender'] || changes['rows']) {\n      this.generateGrid();\n    }\n  }\n\n  generateGrid() {\n    this.grid = [];\n    for (let row = 0; row < this.rows; row++) {\n      const rowComponents = [];\n      for (let col = 0; col < this.columns; col++) {\n        const index = row * this.columns + col;\n        const component = this.componentsToRender[index];\n        rowComponents.push(component);\n      }\n      this.grid.push(rowComponents);\n    }\n  }\n\n  getGridItemStyle() {\n    return {\n      flex: 1,\n      width: this.customWidth + 'px',\n      height: this.customHeight + 'px',\n      backgroundColor: this.backgroundColor,\n      margin: '1px',\n      padding: 0,\n      borderRadius: '8px',\n    };\n  }\n\n  createInjector(inputs: any) {\n    if (!this.injectorCache.has(inputs)) {\n      const injector = Injector.create({\n        providers: Object.keys(inputs).map((key) => ({ provide: key, useValue: inputs[key] })),\n        parent: this.injector,\n      });\n      this.injectorCache.set(inputs, injector);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.injectorCache.get(inputs)!;\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CustomMediaComponent } from '../../../@types/types';\nexport interface FlexibleVideoOptions {\n  customWidth: number;\n  customHeight: number;\n  rows: number;\n  columns: number;\n  componentsToRender: CustomMediaComponent[];\n  showAspect?: boolean;\n  backgroundColor?: string;\n  Screenboard?: CustomMediaComponent;\n  annotateScreenStream?: boolean;\n  localStreamScreen: MediaStream | null;\n}\n\nexport type FlexibleVideoType = (options: FlexibleVideoOptions) => HTMLElement;\n\n/**\n * Component for displaying a flexible video grid.\n *\n * @component\n * @selector app-flexible-video\n * @standalone true\n * @imports CommonModule\n *\n * @template\n * <div>\n *   <!-- Dynamic styles and layout for video grid -->\n *   <div *ngFor=\"let rowComponents of grid; let rowIndex = index\">\n *     <div *ngFor=\"let component of rowComponents; let colIndex = index\">\n *       <ng-container *ngComponentOutlet=\"component.component; injector: createInjector(component.inputs)\"></ng-container>\n *     </div>\n *   </div>\n *   <div *ngIf=\"Screenboard && Screenboard.component\">\n *     <ng-container *ngComponentOutlet=\"Screenboard.component; injector: createInjector(Screenboard.inputs)\"></ng-container>\n *   </div>\n * </div>\n *\n * @class FlexibleVideo\n * @implements OnInit, OnChanges\n *\n * @property {number} customWidth - Custom width for the video grid.\n * @property {number} customHeight - Custom height for the video grid.\n * @property {number} rows - Number of rows in the video grid.\n * @property {number} columns - Number of columns in the video grid.\n * @property {Array<{ component: ComponentType<any>, inputs: any }>} componentsToRender - Components to render in the grid.\n * @property {boolean} showAspect - Flag to show or hide the aspect ratio.\n * @property {string} [backgroundColor='transparent'] - Background color for the video grid.\n * @property {{ component: ComponentType<any>, inputs: any }} [Screenboard] - Screenboard component to overlay on the grid.\n * @property {boolean} [annotateScreenStream=false] - Flag to annotate the screen stream.\n * @property {MediaStream} [localStreamScreen] - Local media stream for the screen.\n *\n * @property {number} key - Key for tracking changes.\n * @property {number} cardWidth - Width of each card in the grid.\n * @property {number} cardHeight - Height of each card in the grid.\n * @property {number} cardTop - Top position of each card in the grid.\n * @property {number} cardLeft - Left position of each card in the grid.\n * @property {number} canvasLeft - Left position of the canvas.\n * @property {any[][]} grid - Grid structure for the components.\n *\n * @constructor\n * @param {Injector} injector - Angular injector for dependency injection.\n *\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnChanges - Lifecycle hook that is called when any data-bound property changes.\n * @method generateGrid - Generates the grid structure based on rows and columns.\n * @method createInjector - Creates an injector for the given inputs.\n * @param {any} inputs - Inputs for the component.\n * @returns {Injector} - The created injector.\n */\n@Component({\n  selector: 'app-flexible-video',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div\n      style=\"padding: 0; flex: 1; margin: 0; position: relative; display: {{\n        showAspect ? 'flex' : 'none'\n      }};\n             max-width: {{ customWidth }}px; overflow-x: hidden; overflow-y: auto; left: {{\n        cardLeft > 0 ? cardLeft : 0\n      }}px;\"\n    >\n      <div\n        *ngFor=\"let rowComponents of grid; let rowIndex = index\"\n        style=\"display: flex; flex-direction: row;\"\n      >\n        <div\n          *ngFor=\"let component of rowComponents; let colIndex = index\"\n          [ngStyle]=\"{\n            flex: 1,\n            width: cardWidth + 'px',\n            height: cardHeight + 'px',\n            backgroundColor: backgroundColor,\n            margin: '1px',\n            padding: 0,\n            borderRadius: '0px',\n            left: cardLeft + 'px'\n          }\"\n        >\n          <ng-container\n            *ngComponentOutlet=\"component.component; injector: createInjector(component.inputs)\"\n          ></ng-container>\n        </div>\n      </div>\n      <div\n        *ngIf=\"Screenboard && Screenboard.component\"\n        [ngStyle]=\"{\n          position: 'absolute',\n          top: '0',\n          left: canvasLeft + 'px',\n          width: cardWidth + 'px',\n          height: cardHeight + 'px',\n          backgroundColor: 'rgba(0, 0, 0, 0.005)',\n          zIndex: '2'\n        }\"\n      >\n        <ng-container\n          *ngComponentOutlet=\"Screenboard.component; injector: createInjector(Screenboard.inputs)\"\n        ></ng-container>\n      </div>\n    </div>\n  `,\n})\nexport class FlexibleVideo implements OnInit, OnChanges {\n  @Input() customWidth = 0;\n  @Input() customHeight = 0;\n  @Input() rows = 0;\n  @Input() columns = 0;\n  @Input() componentsToRender: CustomMediaComponent[] = [];\n  @Input() showAspect = false;\n  @Input() backgroundColor?: string = 'transparent';\n  @Input() Screenboard?: CustomMediaComponent;\n  @Input() annotateScreenStream?: boolean = false;\n  @Input() localStreamScreen?: MediaStream;\n\n  key = 0;\n  cardWidth = 0;\n  cardHeight = 0;\n  cardTop = 0;\n  cardLeft = 0;\n  canvasLeft = 0;\n  grid: any[][] = [];\n\n  private injectorCache = new WeakMap<any, Injector>();\n\n  constructor(private injector: Injector) {}\n\n  ngOnInit() {\n    if (this.showAspect) {\n      this.generateGrid();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes['columns'] ||\n      changes['rows'] ||\n      changes['componentsToRender'] ||\n      changes['customWidth'] ||\n      changes['customHeight']\n    ) {\n      if (this.showAspect) {\n        this.key++;\n        this.generateGrid();\n      }\n    }\n\n    if (this.annotateScreenStream && this.localStreamScreen) {\n      const videoHeight = this.localStreamScreen.getVideoTracks()[0].getSettings().height || 0;\n      const videoWidth = this.localStreamScreen.getVideoTracks()[0].getSettings().width || 0;\n      this.cardWidth = videoWidth;\n      this.cardHeight = videoHeight;\n      this.cardTop = Math.floor((this.customHeight - videoHeight) / 2);\n      this.cardLeft = Math.floor((this.customWidth - videoWidth) / 2);\n      this.canvasLeft = this.cardLeft < 0 ? this.cardLeft : 0;\n    } else {\n      this.cardWidth = this.customWidth;\n      this.cardHeight = this.customHeight;\n      this.cardTop = 0;\n      this.cardLeft = 0;\n      this.canvasLeft = 0;\n    }\n  }\n\n  generateGrid() {\n    this.grid = [];\n    for (let row = 0; row < this.rows; row++) {\n      const rowComponents = [];\n      for (let col = 0; col < this.columns; col++) {\n        const index = row * this.columns + col;\n        const component = this.componentsToRender[index];\n        rowComponents.push(component);\n      }\n      this.grid.push(rowComponents);\n    }\n  }\n\n  createInjector(inputs: any) {\n    if (!this.injectorCache.has(inputs)) {\n      const injector = Injector.create({\n        providers: Object.keys(inputs).map((key) => ({ provide: key, useValue: inputs[key] })),\n        parent: this.injector,\n      });\n      this.injectorCache.set(inputs, injector);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.injectorCache.get(inputs)!;\n  }\n}\n","import { Component, Input, Injector, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface AudioGridOptions {\n  componentsToRender: { component: any; inputs?: any }[];\n}\n\nexport type AudioGridType = (options: AudioGridOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-audio-grid',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div style=\"z-index: 9\">\n      <ng-container *ngFor=\"let item of componentsToRender; let i = index\">\n        <div style=\"z-index: 9\" [attr.key]=\"i\">\n          <ng-container\n            *ngComponentOutlet=\"item.component; injector: createInjector(item.inputs)\"\n          ></ng-container>\n        </div>\n      </ng-container>\n    </div>\n  `,\n  styleUrls: ['./audio-grid.component.css'],\n})\nexport class AudioGrid implements OnChanges {\n  @Input() componentsToRender: { component: any; inputs?: any }[] = [];\n\n  private injectorCache = new WeakMap<any, Injector>();\n\n  constructor(private injector: Injector) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['componentsToRender']) {\n      this.clearInjectorCache();\n    }\n  }\n\n  createInjector(inputs: any) {\n    if (!this.injectorCache.has(inputs)) {\n      const injector = Injector.create({\n        providers: Object.keys(inputs).map((key) => ({ provide: key, useValue: inputs[key] })),\n        parent: this.injector,\n      });\n      this.injectorCache.set(inputs, injector);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.injectorCache.get(inputs)!;\n  }\n\n  private clearInjectorCache() {\n    this.injectorCache = new WeakMap<any, Injector>();\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface LaunchMenuModalOptions {\n  updateIsMenuModalVisible: (isVisible: boolean) => void;\n  isMenuModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchMenuModalType = (options: LaunchMenuModalOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchMenuModal {\n  /**\n   * Toggles the visibility of the menu modal.\n   *\n   * @param updateIsMenuModalVisible - Function to update the visibility state of the menu modal.\n   * @param isMenuModalVisible - Current visibility state of the menu modal.\n   */\n\n  launchMenuModal({ updateIsMenuModalVisible, isMenuModalVisible }: LaunchMenuModalOptions): void {\n    updateIsMenuModalVisible(!isMenuModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert } from '../../@types/types';\n\nexport interface LaunchRecordingOptions {\n  updateIsRecordingModalVisible: (visible: boolean) => void;\n  isRecordingModalVisible: boolean;\n  showAlert?: ShowAlert;\n  stopLaunchRecord: boolean;\n  canLaunchRecord: boolean;\n  recordingAudioSupport: boolean;\n  recordingVideoSupport: boolean;\n  updateCanRecord: (canRecord: boolean) => void;\n  updateClearedToRecord: (cleared: boolean) => void;\n  recordStarted: boolean;\n  recordPaused: boolean;\n  localUIMode: boolean;\n\n  [key: string]: any;\n}\n\n// Export the type definition for the function\nexport type LaunchRecordingType = (options: LaunchRecordingOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchRecording {\n  /**\n   * Launches the recording process based on various conditions and updates the UI accordingly.\n   *\n   * @param {Object} options - The options for launching the recording.\n   * @param {Function} options.updateIsRecordingModalVisible - Function to update the visibility of the recording modal.\n   * @param {boolean} options.isRecordingModalVisible - Indicates if the recording modal is currently visible.\n   * @param {Function} options.showAlert - Function to show an alert message.\n   * @param {boolean} options.stopLaunchRecord - Indicates if the recording launch should be stopped.\n   * @param {boolean} options.canLaunchRecord - Indicates if the recording can be launched.\n   * @param {boolean} options.recordingAudioSupport - Indicates if audio recording is supported.\n   * @param {boolean} options.recordingVideoSupport - Indicates if video recording is supported.\n   * @param {Function} options.updateCanRecord - Function to update the recording capability.\n   * @param {Function} options.updateClearedToRecord - Function to update the cleared-to-record status.\n   * @param {boolean} options.recordStarted - Indicates if the recording has started.\n   * @param {boolean} options.recordPaused - Indicates if the recording is paused.\n   * @param {boolean} options.localUIMode - Indicates if the local UI mode is active.\n   *\n   * @returns {void}\n   */\n\n  launchRecording({\n    updateIsRecordingModalVisible,\n    isRecordingModalVisible,\n    showAlert,\n    stopLaunchRecord,\n    canLaunchRecord,\n    recordingAudioSupport,\n    recordingVideoSupport,\n    updateCanRecord,\n    updateClearedToRecord,\n    recordStarted,\n    recordPaused,\n    localUIMode,\n  }: LaunchRecordingOptions): void {\n    // Check if recording is already launched\n    if (!isRecordingModalVisible && stopLaunchRecord && !localUIMode) {\n      showAlert?.({\n        message: 'Recording has already ended or you are not allowed to record',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n\n    // Check if recording initiation is allowed\n    if (!isRecordingModalVisible && canLaunchRecord && !localUIMode) {\n      // Check if both audio and video recording are not allowed\n      if (!recordingAudioSupport && !recordingVideoSupport) {\n        showAlert?.({\n          message: 'You are not allowed to record',\n          type: 'danger',\n          duration: 3000,\n        });\n\n        return;\n      }\n\n      // update clearedToRecord to false\n      updateClearedToRecord(false);\n      // update canRecord to false\n      updateCanRecord(false);\n    }\n\n    if (!isRecordingModalVisible && recordStarted) {\n      if (!recordPaused) {\n        showAlert?.({\n          message: 'You can only re-configure recording after pausing it',\n          type: 'danger',\n          duration: 3000,\n        });\n\n        return;\n      }\n    }\n\n    if (\n      !isRecordingModalVisible &&\n      !recordingAudioSupport &&\n      !recordingVideoSupport &&\n      !localUIMode\n    ) {\n      showAlert?.({\n        message: 'You are not allowed to record',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n\n    // Update the visibility of the recording modal\n    updateIsRecordingModalVisible(!isRecordingModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface RecordUpdateTimerOptions {\n  recordElapsedTime: number;\n  recordStartTime: number;\n  updateRecordElapsedTime: (elapsedTime: number) => void;\n  updateRecordingProgressTime: (formattedTime: string) => void;\n}\n\n// Export the type definition for the function\nexport type RecordUpdateTimerType = (options: RecordUpdateTimerOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecordUpdateTimer {\n  /**\n   * Updates the recording timer and progress time.\n   * @function\n   * @param {RecordUpdateTimerOptions} options - The options object containing necessary variables and functions.\n   */\n  /**\n   * Updates the recording timer by calculating the elapsed time since the recording started\n   * and formatting it in HH:MM:SS format.\n   *\n   * @param {Object} options - The options object.\n   * @param {number} options.recordElapsedTime - The elapsed recording time in seconds.\n   * @param {number} options.recordStartTime - The timestamp when the recording started.\n   * @param {Function} options.updateRecordElapsedTime - Callback to update the elapsed recording time.\n   * @param {Function} options.updateRecordingProgressTime - Callback to update the formatted recording time.\n   * @returns {void}\n   */\n\n  recordUpdateTimer({\n    recordElapsedTime,\n    recordStartTime,\n    updateRecordElapsedTime,\n    updateRecordingProgressTime,\n  }: RecordUpdateTimerOptions): void {\n    /**\n     * Utility function to pad single-digit numbers with leading zeros.\n     * @param {number} number - The number to pad.\n     * @returns {string} The padded number as a string.\n     */\n    function padNumber(number: number) {\n      return number.toString().padStart(2, '0');\n    }\n\n    const currentTime = new Date().getTime(); // Get the current timestamp\n    recordElapsedTime = Math.floor((currentTime - recordStartTime) / 1000); // Calculate the elapsed time in seconds\n    updateRecordElapsedTime(recordElapsedTime);\n\n    // Format the time in HH:MM:SS format\n    const hours = Math.floor(recordElapsedTime / 3600);\n    const minutes = Math.floor((recordElapsedTime % 3600) / 60);\n    const seconds = recordElapsedTime % 60;\n    const formattedTime = padNumber(hours) + ':' + padNumber(minutes) + ':' + padNumber(seconds);\n\n    updateRecordingProgressTime(formattedTime);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RecordUpdateTimer } from './record-update-timer.service';\n\nexport interface RecordStartTimerParameters {\n  recordStartTime: number;\n  recordTimerInterval?: NodeJS.Timeout | null;\n  isTimerRunning: boolean;\n  canPauseResume: boolean;\n  recordChangeSeconds: number;\n  recordPaused: boolean;\n  recordStopped: boolean;\n  roomName: string | null;\n  updateRecordStartTime: (time: number) => void;\n  updateRecordTimerInterval: (interval: NodeJS.Timeout | null) => void;\n  updateIsTimerRunning: (isRunning: boolean) => void;\n  updateCanPauseResume: (canPause: boolean) => void;\n\n  // Mediasfu functions\n  getUpdatedAllParams: () => RecordStartTimerParameters;\n  [key: string]: any;\n}\n\nexport interface RecordStartTimerOptions {\n  parameters: RecordStartTimerParameters;\n}\n\n// Export the type definition for the function\nexport type RecordStartTimerType = (options: RecordStartTimerOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecordStartTimer {\n  constructor(private RecordUpdateTimerService: RecordUpdateTimer) {}\n\n  /**\n   * Starts the recording timer.\n   * @function\n   * @param {RecordStartTimerOptions} options - The options object containing necessary variables and functions.\n   */\n  /**\n   * Starts a recording timer and manages its state.\n   *\n   * @param {RecordStartTimerOptions} options - The options for starting the recording timer.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {number} options.parameters.recordStartTime - The start time of the recording.\n   * @param {number | null} options.parameters.recordTimerInterval - The interval ID for the recording timer.\n   * @param {boolean} options.parameters.isTimerRunning - Flag indicating if the timer is running.\n   * @param {boolean} options.parameters.canPauseResume - Flag indicating if pause/resume actions are enabled.\n   * @param {number} options.parameters.recordChangeSeconds - The time after which pause/resume actions are enabled.\n   * @param {Function} options.parameters.updateRecordStartTime - Function to update the recording start time.\n   * @param {Function} options.parameters.updateRecordTimerInterval - Function to update the recording timer interval.\n   * @param {Function} options.parameters.updateIsTimerRunning - Function to update the timer running state.\n   * @param {Function} options.parameters.updateCanPauseResume - Function to update the pause/resume state.\n   *\n   * @returns {Promise<void>} A promise that resolves when the timer is started.\n   *\n   * @remarks\n   * This function initializes the recording start time and sets up an interval to update the timer every second.\n   * It also manages the state of the timer, including enabling and disabling pause/resume actions.\n   * The timer is stopped if the recording is paused, stopped, or if the room name is invalid.\n   */\n\n  recordStartTimer = async ({ parameters }: { parameters: any }): Promise<void> => {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      recordStartTime,\n      recordTimerInterval,\n      isTimerRunning,\n      canPauseResume,\n      recordChangeSeconds,\n\n      updateRecordStartTime,\n      updateRecordTimerInterval,\n      updateIsTimerRunning,\n      updateCanPauseResume,\n    } = parameters;\n\n    /**\n     * Utility function to enable pause/resume actions after a specified time.\n     */\n    function enablePauseResume() {\n      canPauseResume = true;\n      updateCanPauseResume(canPauseResume);\n    }\n\n    if (!isTimerRunning) {\n      recordStartTime = new Date().getTime(); // Get the current timestamp\n      updateRecordStartTime(recordStartTime);\n      recordTimerInterval = setInterval(() => {\n        // Update the timer every second (1000 milliseconds)\n        this.RecordUpdateTimerService.recordUpdateTimer({\n          recordElapsedTime: parameters.recordElapsedTime,\n          recordStartTime: recordStartTime,\n          updateRecordElapsedTime: parameters.updateRecordElapsedTime,\n          updateRecordingProgressTime: parameters.updateRecordingProgressTime,\n        });\n\n        parameters = getUpdatedAllParams();\n\n        // Check if recording is paused or stopped, and close the interval if needed\n        if (\n          parameters.recordPaused ||\n          parameters.recordStopped ||\n          parameters.roomName == '' ||\n          parameters.roomName == null\n        ) {\n          clearInterval(recordTimerInterval);\n          updateRecordTimerInterval(null);\n          isTimerRunning = false;\n          updateIsTimerRunning(isTimerRunning);\n          canPauseResume = false;\n          updateCanPauseResume(canPauseResume);\n        }\n      }, 1000);\n      updateRecordTimerInterval(recordTimerInterval);\n      isTimerRunning = true;\n      updateIsTimerRunning(isTimerRunning);\n      canPauseResume = false; // Disable pause/resume actions initially\n      updateCanPauseResume(canPauseResume);\n      setTimeout(enablePauseResume, recordChangeSeconds); // Enable pause/resume actions after specified time\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert } from '../../@types/types';\nimport { RecordUpdateTimer } from './record-update-timer.service';\nexport interface RecordResumeTimerParameters {\n  isTimerRunning: boolean;\n  canPauseResume: boolean;\n  recordElapsedTime: number;\n  recordStartTime: number;\n  recordTimerInterval?: NodeJS.Timeout | null;\n  showAlert?: ShowAlert;\n  updateRecordStartTime: (time: number) => void;\n  updateRecordTimerInterval: (interval: NodeJS.Timeout | null) => void;\n  updateIsTimerRunning: (isRunning: boolean) => void;\n  updateCanPauseResume: (canPause: boolean) => void;\n\n  getUpdatedAllParams: () => RecordResumeTimerParameters;\n  [key: string]: any;\n}\n\nexport interface RecordResumeTimerOptions {\n  parameters: RecordResumeTimerParameters;\n}\n\n// Export the type definition for the function\nexport type RecordResumeTimerType = (options: RecordResumeTimerOptions) => Promise<boolean>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecordResumeTimer {\n  constructor(private RecordUpdateTimerService: RecordUpdateTimer) {}\n\n  /**\n   * Resumes the recording timer if it is not already running and can be paused/resumed.\n   *\n   * @param {RecordResumeTimerOptions} options - The options for resuming the recording timer.\n   * @param {Object} options.parameters - The parameters for the recording timer.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {boolean} options.parameters.isTimerRunning - Indicates if the timer is currently running.\n   * @param {boolean} options.parameters.canPauseResume - Indicates if the timer can be paused/resumed.\n   * @param {number} options.parameters.recordElapsedTime - The elapsed recording time in seconds.\n   * @param {number} options.parameters.recordStartTime - The start time of the recording.\n   * @param {number | null} options.parameters.recordTimerInterval - The interval ID for the recording timer.\n   * @param {Function} options.parameters.showAlert - Function to show an alert message.\n   * @param {Function} options.parameters.updateRecordStartTime - Function to update the recording start time.\n   * @param {Function} options.parameters.updateRecordTimerInterval - Function to update the recording timer interval.\n   * @param {Function} options.parameters.updateIsTimerRunning - Function to update the timer running status.\n   * @param {Function} options.parameters.updateCanPauseResume - Function to update the pause/resume status.\n   *\n   * @returns {Promise<boolean>} - Returns a promise that resolves to true if the timer was successfully resumed, otherwise false.\n   */\n\n  recordResumeTimer = async ({ parameters }: RecordResumeTimerOptions): Promise<boolean> => {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      isTimerRunning,\n      canPauseResume,\n      recordElapsedTime,\n      recordStartTime,\n      recordTimerInterval,\n      showAlert,\n      updateRecordStartTime,\n      updateRecordTimerInterval,\n      updateIsTimerRunning,\n      updateCanPauseResume,\n\n      //mediasfu Functions\n      // recordUpdateTimer,\n    } = parameters;\n\n    if (!isTimerRunning && canPauseResume) {\n      recordStartTime = new Date().getTime() - recordElapsedTime * 1000; // Calculate the starting time based on elapsed time\n      updateRecordStartTime(recordStartTime);\n      recordTimerInterval = setInterval(() => {\n        // Update the timer every second (1000 milliseconds)\n        this.RecordUpdateTimerService.recordUpdateTimer({\n          recordElapsedTime: recordElapsedTime,\n          recordStartTime: recordStartTime,\n          updateRecordElapsedTime: parameters['updateRecordElapsedTime'],\n          updateRecordingProgressTime: parameters['updateRecordingProgressTime'],\n        });\n\n        parameters = getUpdatedAllParams();\n\n        // Check if recording is paused or stopped, and close the interval if needed\n        if (\n          parameters['recordPaused'] ||\n          parameters['recordStopped'] ||\n          parameters['roomName'] == '' ||\n          parameters['roomName'] == null\n        ) {\n          if (recordTimerInterval != null) {\n            clearInterval(recordTimerInterval);\n          }\n          updateRecordTimerInterval(null);\n          isTimerRunning = false;\n          updateIsTimerRunning(isTimerRunning);\n          canPauseResume = false;\n          updateCanPauseResume(canPauseResume);\n        }\n      }, 1000);\n      updateRecordTimerInterval(recordTimerInterval);\n      isTimerRunning = true;\n      updateIsTimerRunning(isTimerRunning);\n      canPauseResume = false; // Disable pause/resume actions until paused again\n      updateCanPauseResume(canPauseResume);\n      return true;\n    } else {\n      showAlert?.({\n        type: 'danger',\n        message:\n          'Can only pause or resume after 15 seconds of starting or pausing or resuming recording',\n      });\n      return false;\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { RecordStartTimer } from './record-start-timer.service';\nimport { RecordResumeTimer, RecordResumeTimerParameters } from './record-resume-timer.service';\n\nimport { Socket } from 'socket.io-client';\nimport {\n  RePortType,\n  UserRecordingParams,\n  CaptureCanvasStreamType,\n  CaptureCanvasStreamParameters,\n  RePortParameters,\n  ShowAlert,\n} from '../../@types/types';\n\nexport interface StartRecordingParameters\n  extends CaptureCanvasStreamParameters,\n    RePortParameters,\n    RecordResumeTimerParameters {\n  roomName: string;\n  userRecordingParams: UserRecordingParams;\n  socket: Socket;\n  updateIsRecordingModalVisible: (visible: boolean) => void;\n  confirmedToRecord: boolean;\n  showAlert?: ShowAlert;\n  recordingMediaOptions: string;\n  videoAlreadyOn: boolean;\n  audioAlreadyOn: boolean;\n  recordStarted: boolean;\n  recordPaused: boolean;\n  recordResumed: boolean;\n  recordStopped: boolean;\n  startReport: boolean;\n  endReport: boolean;\n  canRecord: boolean;\n  updateClearedToRecord: (cleared: boolean) => void;\n  updateRecordStarted: (started: boolean) => void;\n  updateRecordPaused: (paused: boolean) => void;\n  updateRecordResumed: (resumed: boolean) => void;\n  updateStartReport: (started: boolean) => void;\n  updateEndReport: (ended: boolean) => void;\n  updateCanRecord: (canRecord: boolean) => void;\n  whiteboardStarted: boolean;\n  whiteboardEnded: boolean;\n\n  // Mediasfu functions\n  rePort: RePortType;\n  captureCanvasStream: CaptureCanvasStreamType;\n\n  getUpdatedAllParams: () => StartRecordingParameters;\n  [key: string]: any;\n}\n\nexport interface StartRecordingOptions {\n  parameters: StartRecordingParameters;\n}\n\n// Export the type definition for the function\nexport type StartRecordingType = (options: StartRecordingOptions) => Promise<boolean | undefined>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StartRecording {\n  constructor(\n    private RecordStartTimerService: RecordStartTimer,\n    private RecordResumeTimerService: RecordResumeTimer,\n  ) {}\n\n  /**\n   * Starts the recording process based on the provided parameters.\n   *\n   * @param {StartRecordingOptions} options - The options for starting the recording.\n   * @param {object} options.parameters - The parameters required for starting the recording.\n   * @param {string} options.parameters.roomName - The name of the room where recording is to be started.\n   * @param {object} options.parameters.userRecordingParams - User-specific recording parameters.\n   * @param {object} options.parameters.socket - The socket instance for communication.\n   * @param {function} options.parameters.updateIsRecordingModalVisible - Function to update the visibility of the recording modal.\n   * @param {boolean} options.parameters.confirmedToRecord - Flag indicating if the user has confirmed to record.\n   * @param {function} options.parameters.showAlert - Function to show alerts.\n   * @param {string} options.parameters.recordingMediaOptions - The media options for recording (e.g., \"video\", \"audio\").\n   * @param {boolean} options.parameters.videoAlreadyOn - Flag indicating if the video is already on.\n   * @param {boolean} options.parameters.audioAlreadyOn - Flag indicating if the audio is already on.\n   * @param {boolean} options.parameters.recordStarted - Flag indicating if the recording has started.\n   * @param {boolean} options.parameters.recordPaused - Flag indicating if the recording is paused.\n   * @param {boolean} options.parameters.recordResumed - Flag indicating if the recording is resumed.\n   * @param {boolean} options.parameters.recordStopped - Flag indicating if the recording is stopped.\n   * @param {boolean} options.parameters.startReport - Flag indicating if the start report is active.\n   * @param {boolean} options.parameters.endReport - Flag indicating if the end report is active.\n   * @param {boolean} options.parameters.canRecord - Flag indicating if recording is allowed.\n   * @param {function} options.parameters.updateClearedToRecord - Function to update the cleared to record status.\n   * @param {function} options.parameters.updateRecordStarted - Function to update the record started status.\n   * @param {function} options.parameters.updateRecordPaused - Function to update the record paused status.\n   * @param {function} options.parameters.updateRecordResumed - Function to update the record resumed status.\n   * @param {function} options.parameters.updateStartReport - Function to update the start report status.\n   * @param {function} options.parameters.updateEndReport - Function to update the end report status.\n   * @param {function} options.parameters.updateCanRecord - Function to update the can record status.\n   * @param {boolean} options.parameters.whiteboardStarted - Flag indicating if the whiteboard has started.\n   * @param {boolean} options.parameters.whiteboardEnded - Flag indicating if the whiteboard has ended.\n   * @param {function} options.parameters.rePort - Function to report the recording status.\n   * @param {function} options.parameters.captureCanvasStream - Function to capture the canvas stream.\n   *\n   * @returns {Promise<boolean | undefined>} - A promise that resolves to a boolean indicating if the recording attempt was successful, or undefined if not applicable.\n   */\n\n  startRecording = async ({ parameters }: StartRecordingOptions): Promise<boolean | undefined> => {\n    parameters = parameters.getUpdatedAllParams();\n\n    let {\n      roomName,\n      userRecordingParams,\n      socket,\n      updateIsRecordingModalVisible,\n      confirmedToRecord,\n      showAlert,\n      recordingMediaOptions,\n      videoAlreadyOn,\n      audioAlreadyOn,\n      recordStarted,\n      recordPaused,\n      recordResumed,\n      recordStopped,\n      startReport,\n      endReport,\n      canRecord,\n      updateClearedToRecord,\n      updateRecordStarted,\n      updateRecordPaused,\n      updateRecordResumed,\n      updateStartReport,\n      updateEndReport,\n      updateCanRecord,\n\n      whiteboardStarted,\n      whiteboardEnded,\n\n      //mediasfu functions\n      rePort,\n      captureCanvasStream,\n    } = parameters;\n\n    // Check if recording is confirmed before starting\n    if (!confirmedToRecord) {\n      showAlert?.({\n        message: 'You must click confirm before you can start recording',\n        type: 'danger',\n      });\n      return false;\n    }\n\n    // Check for recordingMediaOptions for video\n    if (recordingMediaOptions === 'video' && !videoAlreadyOn) {\n      showAlert?.({\n        message: 'You must turn on your video before you can start recording',\n        type: 'danger',\n      });\n      return false;\n    }\n\n    // Check for recordingMediaOptions for audio\n    if (recordingMediaOptions === 'audio' && !audioAlreadyOn) {\n      showAlert?.({\n        message: 'You must turn on your audio before you can start recording',\n        type: 'danger',\n      });\n      return false;\n    }\n\n    // Set clearedToRecord to true\n    updateClearedToRecord(true);\n\n    let action = 'startRecord';\n    if (recordStarted && recordPaused && !recordResumed && !recordStopped) {\n      action = 'resumeRecord';\n    } else {\n      action = 'startRecord';\n    }\n\n    let recAttempt = false;\n\n    await new Promise<void>((resolve) => {\n      socket.emit(\n        action,\n        { roomName, userRecordingParams },\n        async ({ success, reason }: { success: boolean; reason: string; recordState: any }) => {\n          if (success) {\n            recordStarted = true;\n            startReport = true;\n            endReport = false;\n            recordPaused = false;\n            recAttempt = true;\n\n            updateRecordStarted(recordStarted);\n            updateStartReport(startReport);\n            updateEndReport(endReport);\n            updateRecordPaused(recordPaused);\n\n            if (action === 'startRecord') {\n              await rePort({ parameters });\n              await this.RecordStartTimerService.recordStartTimer({ parameters });\n            } else {\n              recordResumed = true;\n              updateRecordResumed(recordResumed);\n              await rePort({ restart: true, parameters });\n              await this.RecordResumeTimerService.recordResumeTimer({ parameters });\n            }\n          } else {\n            showAlert?.({ message: `Recording could not start - ${reason}`, type: 'danger' });\n            canRecord = true;\n            startReport = false;\n            endReport = true;\n            recAttempt = false;\n\n            updateCanRecord(canRecord);\n            updateStartReport(startReport);\n            updateEndReport(endReport);\n          }\n\n          resolve();\n        },\n      );\n    });\n\n    // Capture canvas stream if recording is successful and whiteboard is active\n    try {\n      if (\n        recAttempt &&\n        whiteboardStarted &&\n        !whiteboardEnded &&\n        recordingMediaOptions === 'video'\n      ) {\n        captureCanvasStream({ parameters });\n      }\n    } catch (error) {\n      console.log('Error capturing canvas stream:', error);\n    }\n\n    // Set isRecordingModalVisible to false\n    updateIsRecordingModalVisible(false);\n\n    return recAttempt;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ShowAlert,\n  MainSpecs,\n  DispSpecs,\n  TextSpecs,\n  EventType,\n  UserRecordingParams,\n} from '../../@types/types';\n\nexport interface ConfirmRecordingParameters {\n  showAlert?: ShowAlert;\n  recordingMediaOptions: string;\n  recordingAudioOptions: string;\n  recordingVideoOptions: string;\n  recordingVideoType: string;\n  recordingDisplayType: 'video' | 'media' | 'all';\n  recordingNameTags: boolean;\n  recordingBackgroundColor: string;\n  recordingNameTagsColor: string;\n  recordingOrientationVideo: string;\n  recordingAddHLS: boolean;\n  recordingAddText: boolean;\n  recordingCustomText: string;\n  recordingCustomTextPosition: string;\n  recordingCustomTextColor: string;\n  meetingDisplayType: string;\n  recordingVideoParticipantsFullRoomSupport: boolean;\n  recordingAllParticipantsSupport: boolean;\n  recordingVideoParticipantsSupport: boolean;\n  recordingSupportForOtherOrientation: boolean;\n  recordingPreferredOrientation: string;\n  recordingMultiFormatsSupport: boolean;\n  recordingVideoOptimized: boolean;\n  recordingAllParticipantsFullRoomSupport: boolean;\n  meetingVideoOptimized: boolean;\n  eventType: EventType;\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n  updateRecordingDisplayType: (value: 'video' | 'media' | 'all') => void;\n  updateRecordingVideoOptimized: (value: boolean) => void;\n  updateUserRecordingParams: (params: UserRecordingParams) => void;\n  updateConfirmedToRecord: (value: boolean) => void;\n\n  // Mediasfu functions\n  getUpdatedAllParams: () => ConfirmRecordingParameters;\n  [key: string]: any;\n}\n\nexport interface ConfirmRecordingOptions {\n  parameters: ConfirmRecordingParameters;\n}\n\n// Export the type definition for the function\nexport type ConfirmRecordingType = (options: ConfirmRecordingOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmRecording {\n  /**\n   * Confirms the recording settings based on the provided parameters and updates the recording state.\n   *\n   * @param {ConfirmRecordingOptions} options - The options for confirming the recording.\n   * @param {Parameters} options.parameters - The parameters for the recording.\n   *\n   * @returns {Promise<void>} A promise that resolves when the recording settings have been confirmed.\n   *\n   * @remarks\n   * This function performs several checks to ensure that the recording settings are valid based on the provided parameters.\n   * If any of the checks fail, an alert is shown and the function returns early without updating the recording state.\n   *\n   * The function checks for the following conditions:\n   * - Whether recording videos of all participants is allowed.\n   * - Whether recording all participants is allowed.\n   * - Whether recording other video participants is allowed.\n   * - Whether recording all orientations is allowed.\n   * - Whether recording the preferred orientation is allowed.\n   * - Whether recording all formats is allowed.\n   * - Whether the recording display type is valid based on the meeting display type.\n   * - Whether recording all participants with media is allowed.\n   *\n   * If all checks pass, the function constructs the `mainSpecs`, `dispSpecs`, and `textSpecs` objects based on the state variables,\n   * updates the user recording parameters, and confirms the recording.\n   *\n   * @example\n   * ```typescript\n   * const options: ConfirmRecordingOptions = { parameters: someParameters };\n   * await confirmRecording(options);\n   * ```\n   */\n\n  confirmRecording = async ({ parameters }: ConfirmRecordingOptions): Promise<void> => {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      showAlert,\n      recordingMediaOptions,\n      recordingAudioOptions,\n      recordingVideoOptions,\n      recordingVideoType,\n      recordingDisplayType,\n      recordingNameTags,\n      recordingBackgroundColor,\n      recordingNameTagsColor,\n      recordingOrientationVideo,\n      recordingAddHLS,\n      recordingAddText,\n      recordingCustomText,\n      recordingCustomTextPosition,\n      recordingCustomTextColor,\n      meetingDisplayType,\n      recordingVideoParticipantsFullRoomSupport,\n      recordingAllParticipantsSupport,\n      recordingVideoParticipantsSupport,\n      recordingSupportForOtherOrientation,\n      recordingPreferredOrientation,\n      recordingMultiFormatsSupport,\n      recordingVideoOptimized,\n      recordingAllParticipantsFullRoomSupport,\n      meetingVideoOptimized,\n      eventType,\n      breakOutRoomStarted,\n      breakOutRoomEnded,\n\n      updateRecordingDisplayType,\n      updateRecordingVideoOptimized,\n      updateRecordingVideoParticipantsFullRoomSupport,\n      updateRecordingAllParticipantsSupport,\n      updateRecordingVideoParticipantsSupport,\n      updateRecordingSupportForOtherOrientation,\n      updateRecordingPreferredOrientation,\n      updateRecordingMultiFormatsSupport,\n      updateUserRecordingParams,\n      updateConfirmedToRecord,\n    } = parameters;\n\n    // Retrieve the values from the state\n\n    const mediaOptions = recordingMediaOptions;\n\n    // Other variables not provided in the guide\n    const selectedRecordOption = recordingDisplayType;\n\n    // Additional logic similar to the provided guide\n    // recordingVideoParticipantsFullRoomSupport = minigrid and main video\n    if (eventType !== 'broadcast') {\n      if (\n        !recordingVideoParticipantsFullRoomSupport &&\n        recordingVideoOptions === 'all' &&\n        mediaOptions === 'video'\n      ) {\n        if (meetingDisplayType == 'all') {\n          if (breakOutRoomStarted && !breakOutRoomEnded) {\n            // breakout rooms are started\n          } else {\n            showAlert?.({\n              message:\n                'You are not allowed to record videos of all participants; change the meeting display type to video or video optimized.',\n              type: 'danger',\n              duration: 3000,\n            });\n\n            return;\n          }\n        }\n      }\n\n      // recordingAllParticipantsSupport  = others other than host screen (video + audio)\n      if (!recordingAllParticipantsSupport && recordingVideoOptions === 'all') {\n        showAlert?.({\n          message: 'You are only allowed to record yourself.',\n          type: 'danger',\n          duration: 3000,\n        });\n\n        return;\n      }\n\n      // recordingVideoParticipantsSupport (maingrid + non-host screenshare person)\n      if (!recordingVideoParticipantsSupport && recordingDisplayType === 'video') {\n        showAlert?.({\n          message: 'You are not allowed to record other video participants.',\n          type: 'danger',\n          duration: 3000,\n        });\n\n        return;\n      }\n    }\n\n    if (!recordingSupportForOtherOrientation && recordingOrientationVideo === 'all') {\n      showAlert?.({\n        message: 'You are not allowed to record all orientations.',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n\n    if (\n      recordingPreferredOrientation === 'landscape' &&\n      recordingOrientationVideo === 'portrait' &&\n      !recordingSupportForOtherOrientation\n    ) {\n      showAlert?.({\n        message: 'You are not allowed to record portrait orientation.',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    } else if (\n      recordingPreferredOrientation === 'portrait' &&\n      recordingOrientationVideo === 'landscape' &&\n      !recordingSupportForOtherOrientation\n    ) {\n      showAlert?.({\n        message: 'You are not allowed to record landscape orientation.',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n\n    if (!recordingMultiFormatsSupport && recordingVideoType === 'all') {\n      showAlert?.({\n        message: 'You are not allowed to record all formats.',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n\n    if (eventType !== 'broadcast') {\n      if (recordingMediaOptions === 'video') {\n        if (meetingDisplayType === 'media') {\n          if (recordingDisplayType === 'all') {\n            showAlert?.({\n              message:\n                'Recording display type can be either video, video optimized, or media when meeting display type is media.',\n              type: 'danger',\n              duration: 3000,\n            });\n\n            recordingDisplayType = meetingDisplayType;\n            return;\n          }\n        } else if (meetingDisplayType === 'video') {\n          if (recordingDisplayType === 'all' || recordingDisplayType === 'media') {\n            showAlert?.({\n              message:\n                'Recording display type can be either video or video optimized when meeting display type is video.',\n              type: 'danger',\n              duration: 3000,\n            });\n\n            recordingDisplayType = meetingDisplayType;\n            return;\n          }\n\n          if (meetingVideoOptimized && !recordingVideoOptimized) {\n            showAlert?.({\n              message:\n                'Recording display type can be only video optimized when meeting display type is video optimized.',\n              type: 'danger',\n              duration: 3000,\n            });\n\n            recordingVideoOptimized = meetingVideoOptimized;\n            return;\n          }\n        }\n      } else {\n        if (recordingDisplayType === 'all' || recordingDisplayType === 'media') {\n          // do nothing\n        } else {\n          recordingDisplayType = 'media';\n        }\n        recordingVideoOptimized = false;\n      }\n    }\n\n    if (recordingDisplayType === 'all' && !recordingAllParticipantsFullRoomSupport) {\n      showAlert?.({\n        message: 'You can only record all participants with media.',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n    // Construct mainSpecs and dispSpecs objects based on the state variables\n    const mainSpecs: MainSpecs = {\n      mediaOptions: recordingMediaOptions,\n      audioOptions: recordingAudioOptions,\n      videoOptions: recordingVideoOptions,\n      videoType: recordingVideoType,\n      videoOptimized: recordingVideoOptimized,\n      recordingDisplayType: recordingDisplayType,\n      addHLS: recordingAddHLS,\n    };\n\n    const dispSpecs: DispSpecs = {\n      nameTags: recordingNameTags,\n      backgroundColor: recordingBackgroundColor,\n      nameTagsColor: recordingNameTagsColor,\n      orientationVideo: recordingOrientationVideo,\n    };\n\n    const textSpecs: TextSpecs = {\n      addText: recordingAddText,\n      customText: recordingCustomText,\n      customTextPosition: recordingCustomTextPosition,\n      customTextColor: recordingCustomTextColor,\n    };\n\n    // Construct userRecordingParams object\n    const userRecordingParams = { mainSpecs, dispSpecs, textSpecs };\n    // Update state variables based on the logic\n    updateUserRecordingParams(userRecordingParams);\n    updateConfirmedToRecord(true);\n    updateRecordingDisplayType(selectedRecordOption);\n    updateRecordingVideoOptimized(recordingVideoOptimized);\n    updateRecordingVideoParticipantsFullRoomSupport(recordingVideoParticipantsFullRoomSupport);\n    updateRecordingAllParticipantsSupport(recordingAllParticipantsSupport);\n    updateRecordingVideoParticipantsSupport(recordingVideoParticipantsSupport);\n    updateRecordingSupportForOtherOrientation(recordingSupportForOtherOrientation);\n    updateRecordingPreferredOrientation(recordingPreferredOrientation);\n    updateRecordingMultiFormatsSupport(recordingMultiFormatsSupport);\n  };\n}\n","import { Injectable } from '@angular/core';\nexport interface LaunchWaitingOptions {\n  updateIsWaitingModalVisible: (visible: boolean) => void;\n  isWaitingModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchWaitingType = (options: LaunchWaitingOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchWaiting {\n  /**\n   * Toggles the visibility of the waiting modal.\n   *\n   * @param updateIsWaitingModalVisible - Function to update the visibility state of the waiting modal.\n   * @param isWaitingModalVisible - Current visibility state of the waiting modal.\n   */\n\n  launchWaiting({\n    updateIsWaitingModalVisible,\n    isWaitingModalVisible,\n  }: LaunchWaitingOptions): void {\n    // Open or close the menu modal\n    updateIsWaitingModalVisible(!isWaitingModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface LaunchCoHostOptions {\n  updateIsCoHostModalVisible: (isVisible: boolean) => void;\n  isCoHostModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchCoHostType = (options: LaunchCoHostOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class launchCoHost {\n  /**\n   * Toggles the visibility of the co-host modal.\n   *\n   * @param updateIsCoHostModalVisible - Function to update the visibility state of the co-host modal.\n   * @param isCoHostModalVisible - Current visibility state of the co-host modal.\n   */\n\n  launchCoHost({ updateIsCoHostModalVisible, isCoHostModalVisible }: LaunchCoHostOptions): void {\n    updateIsCoHostModalVisible(!isCoHostModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface LaunchMediaSettingsOptions {\n  updateIsMediaSettingsModalVisible: (isVisible: boolean) => void;\n  isMediaSettingsModalVisible: boolean;\n  audioInputs: MediaDeviceInfo[];\n  videoInputs: MediaDeviceInfo[];\n  updateAudioInputs: (inputs: MediaDeviceInfo[]) => void;\n  updateVideoInputs: (inputs: MediaDeviceInfo[]) => void;\n}\n\n// Export the type definition for the function\nexport type LaunchMediaSettingsType = (options: LaunchMediaSettingsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchMediaSettings {\n  /**\n   * Launches the media settings modal and updates the available audio and video input devices.\n   *\n   * @param {Object} options - The options for launching media settings.\n   * @param {Function} options.updateIsMediaSettingsModalVisible - Function to update the visibility state of the media settings modal.\n   * @param {boolean} options.isMediaSettingsModalVisible - Current visibility state of the media settings modal.\n   * @param {MediaDeviceInfo[]} options.audioInputs - Array to store available audio input devices.\n   * @param {MediaDeviceInfo[]} options.videoInputs - Array to store available video input devices.\n   * @param {Function} options.updateAudioInputs - Function to update the available audio input devices.\n   * @param {Function} options.updateVideoInputs - Function to update the available video input devices.\n   * @returns {Promise<void>} A promise that resolves when the media settings have been updated.\n   */\n\n  async launchMediaSettings({\n    updateIsMediaSettingsModalVisible,\n    isMediaSettingsModalVisible,\n    audioInputs,\n    videoInputs,\n    updateAudioInputs,\n    updateVideoInputs,\n  }: LaunchMediaSettingsOptions): Promise<void> {\n    // Check if media settings modal is not visible and update available audio and video input devices\n    if (!isMediaSettingsModalVisible) {\n      try {\n        // Get the list of all available media devices\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        // Filter the devices to get only audio and video input devices\n        videoInputs = devices.filter((device: MediaDeviceInfo) => device.kind === 'videoinput');\n        audioInputs = devices.filter((device: MediaDeviceInfo) => device.kind === 'audioinput');\n\n        // Update the available audio and video input devices\n        updateVideoInputs(videoInputs);\n        updateAudioInputs(audioInputs);\n\n        // Open the media settings modal\n        updateIsMediaSettingsModalVisible(true);\n      } catch (error) {\n        // Open the media settings modal\n        updateIsMediaSettingsModalVisible(true);\n      }\n    } else {\n      // Close the media settings modal\n      updateIsMediaSettingsModalVisible(false);\n    }\n  }\n}\n","// display-settings.service.ts\nimport { Injectable } from '@angular/core';\n\nexport interface LaunchDisplaySettingsOptions {\n  updateIsDisplaySettingsModalVisible: (isVisible: boolean) => void;\n  isDisplaySettingsModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchDisplaySettingsType = (options: LaunchDisplaySettingsOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchDisplaySettings {\n  /**\n   * Toggles the visibility of the display settings modal.\n   *\n   * @param updateIsDisplaySettingsModalVisible - Function to update the visibility state of the display settings modal.\n   * @param isDisplaySettingsModalVisible - Current visibility state of the display settings modal.\n   */\n\n  launchDisplaySettings({\n    updateIsDisplaySettingsModalVisible,\n    isDisplaySettingsModalVisible,\n  }: LaunchDisplaySettingsOptions): void {\n    // Toggle the visibility of the display settings modal.\n    updateIsDisplaySettingsModalVisible(!isDisplaySettingsModalVisible);\n  }\n}\n","// settings.service.ts\n\nimport { Injectable } from '@angular/core';\nexport interface LaunchSettingsOptions {\n  updateIsSettingsModalVisible: (isVisible: boolean) => void;\n  isSettingsModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchSettingsType = (options: LaunchSettingsOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchSettings {\n  /**\n   * Toggles the visibility state of the settings modal.\n   *\n   * @param {LaunchSettingsOptions} options - The options for launching settings.\n   * @param {Function} options.updateIsSettingsModalVisible - Function to update the visibility state of the settings modal.\n   * @param {boolean} options.isSettingsModalVisible - Current visibility state of the settings modal.\n   * @returns {void}\n   */\n\n  launchSettings({\n    updateIsSettingsModalVisible,\n    isSettingsModalVisible,\n  }: LaunchSettingsOptions): void {\n    // Toggle the visibility of the display settings modal.\n    updateIsSettingsModalVisible(!isSettingsModalVisible);\n  }\n}\n","// requests.service.ts\nimport { Injectable } from '@angular/core';\nexport interface LaunchRequestsOptions {\n  updateIsRequestsModalVisible: (isVisible: boolean) => void;\n  isRequestsModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchRequestsType = (options: LaunchRequestsOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchRequests {\n  /**\n   * Toggles the visibility state of the requests modal.\n   *\n   * @param {LaunchRequestsOptions} options - The options for launching requests.\n   * @param {Function} options.updateIsRequestsModalVisible - Function to update the visibility state of the requests modal.\n   * @param {boolean} options.isRequestsModalVisible - Current visibility state of the requests modal.\n   * @returns {void}\n   */\n\n  launchRequests({\n    updateIsRequestsModalVisible,\n    isRequestsModalVisible,\n  }: LaunchRequestsOptions): void {\n    // Toggle the visibility of the display settings modal.\n    updateIsRequestsModalVisible(!isRequestsModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface LaunchParticipantsOptions {\n  updateIsParticipantsModalVisible: (isVisible: boolean) => void;\n  isParticipantsModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchParticipantsType = (options: LaunchParticipantsOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchParticipants {\n  /**\n   * Toggles the visibility of the participants modal.\n   * @function\n   * @param {Object} options - The options object containing necessary variables and functions.\n   * @param {Function} options.updateIsParticipantsModalVisible - Function to update the visibility state of the participants modal.\n   * @param {boolean} options.isParticipantsModalVisible - Current visibility state of the participants modal.\n   */\n\n  launchParticipants({\n    updateIsParticipantsModalVisible,\n    isParticipantsModalVisible,\n  }: LaunchParticipantsOptions): void {\n    updateIsParticipantsModalVisible(!isParticipantsModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface LaunchMessagesOptions {\n  updateIsMessagesModalVisible: (visible: boolean) => void;\n  isMessagesModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchMessagesType = (options: LaunchMessagesOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchMessages {\n  /**\n   * Toggles the visibility state of the messages modal.\n   * If the modal is currently visible, it will be closed. If it's hidden, it will be opened.\n   *\n   * @param updateIsMessagesModalVisible - Function to update the visibility state of the messages modal.\n   * @param isMessagesModalVisible - Current visibility state of the messages modal.\n   */\n  launchMessages({\n    updateIsMessagesModalVisible,\n    isMessagesModalVisible,\n  }: LaunchMessagesOptions): void {\n    updateIsMessagesModalVisible(!isMessagesModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface LaunchConfirmExitOptions {\n  updateIsConfirmExitModalVisible: (isVisible: boolean) => void;\n  isConfirmExitModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchConfirmExitType = (options: LaunchConfirmExitOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchConfirmExit {\n  /**\n   * Toggles the visibility of the confirmation exit modal.\n   *\n   * @param updateIsConfirmExitModalVisible - Function to update the visibility state of the confirmation exit modal.\n   * @param isConfirmExitModalVisible - Current visibility state of the confirmation exit modal.\n   */\n\n  launchConfirmExit({\n    updateIsConfirmExitModalVisible,\n    isConfirmExitModalVisible,\n  }: LaunchConfirmExitOptions): void {\n    updateIsConfirmExitModalVisible(!isConfirmExitModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface LaunchPollOptions {\n  updateIsPollModalVisible: (isVisible: boolean) => void;\n  isPollModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchPollType = (options: LaunchPollOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchPoll {\n  /**\n   * Toggles the visibility of the poll modal.\n   * @function\n   * @param {Object} options - The options object containing necessary variables and functions.\n   * @param {Function} options.updateIsPollModalVisible - Function to update the visibility state of the poll modal.\n   * @param {boolean} options.isPollModalVisible - Current visibility state of the poll modal.\n   */\n\n  launchPoll({ updateIsPollModalVisible, isPollModalVisible }: LaunchPollOptions): void {\n    updateIsPollModalVisible(!isPollModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface LaunchBackgroundOptions {\n  updateIsBackgroundModalVisible: (isVisible: boolean) => void;\n  isBackgroundModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchBackgroundType = (options: LaunchBackgroundOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchBackground {\n  /**\n   * Toggles the visibility of the background modal.\n   * @function\n   * @param {Object} options - The options object containing necessary variables and functions.\n   * @param {Function} options.updateIsBackgroundModalVisible - Function to update the visibility state of the background modal.\n   * @param {boolean} options.isBackgroundModalVisible - Current visibility state of the background modal.\n   */\n\n  launchBackground({\n    updateIsBackgroundModalVisible,\n    isBackgroundModalVisible,\n  }: LaunchBackgroundOptions): void {\n    updateIsBackgroundModalVisible(!isBackgroundModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface LaunchBreakoutRoomsOptions {\n  updateIsBreakoutRoomsModalVisible: (isVisible: boolean) => void;\n  isBreakoutRoomsModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchBreakoutRoomsType = (options: LaunchBreakoutRoomsOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchBreakoutRooms {\n  /**\n   * Launches the breakout rooms by toggling the visibility of the breakout rooms modal.\n   *\n   * @param updateIsBreakoutRoomsModalVisible - Function to update the visibility state of the breakout rooms modal.\n   * @param isBreakoutRoomsModalVisible - Current visibility state of the breakout rooms modal.\n   */\n\n  launchBreakoutRooms({\n    updateIsBreakoutRoomsModalVisible,\n    isBreakoutRoomsModalVisible,\n  }: LaunchBreakoutRoomsOptions): void {\n    updateIsBreakoutRoomsModalVisible(!isBreakoutRoomsModalVisible);\n  }\n}\n","// whiteboard.service.ts\nimport { Injectable } from '@angular/core';\nexport interface LaunchConfigureWhiteboardOptions {\n  updateIsConfigureWhiteboardModalVisible: (visible: boolean) => void;\n  isConfigureWhiteboardModalVisible: boolean;\n}\n\n// Export the type definition for the function\nexport type LaunchConfigureWhiteboardType = (options: LaunchConfigureWhiteboardOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchConfigureWhiteboard {\n  /**\n   * Toggles the visibility of the configure whiteboard modal.\n   *\n   * @param updateIsConfigureWhiteboardModalVisible - Function to update the visibility state of the configure whiteboard modal.\n   * @param isConfigureWhiteboardModalVisible - Current visibility state of the configure whiteboard modal.\n   */\n\n  launchConfigureWhiteboard({\n    updateIsConfigureWhiteboardModalVisible,\n    isConfigureWhiteboardModalVisible,\n  }: LaunchConfigureWhiteboardOptions): void {\n    // Open or close the menu modal\n    updateIsConfigureWhiteboardModalVisible(!isConfigureWhiteboardModalVisible);\n  }\n}\n","import { Injectable } from '@angular/core';\n// Socket manager for media socket.\nimport io, { Socket } from 'socket.io-client'; // Importing socket type\n\n/**\n * Validates the provided API key or token.\n * @param {string} value - The API key or token to validate.\n * @returns {Promise<Boolean>} - True if the API key or token is valid, false otherwise.\n */\n\nexport interface ConnectSocketOptions {\n  apiUserName: string;\n  apiKey?: string;\n  apiToken?: string;\n  link: string;\n}\n\nexport interface DisconnectSocketOptions {\n  socket: Socket;\n}\n\n// Export the type definition for the function\nexport type ConnectSocketType = (options: ConnectSocketOptions) => Promise<Socket>;\nexport type DisconnectSocketType = (options: DisconnectSocketOptions) => Promise<boolean>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocketManager {\n  private socket!: Socket;\n\n  async validateApiKeyToken(value: string): Promise<boolean> {\n    if (!/^[a-z0-9]{64}$/i.test(value)) {\n      throw new Error('Invalid API key or token.');\n    }\n    return true;\n  }\n\n  connectSocket = async ({\n    apiUserName,\n    apiKey,\n    apiToken,\n    link,\n  }: ConnectSocketOptions): Promise<Socket> => {\n    if (!apiUserName) {\n      throw new Error('API username required.');\n    }\n    if (!(apiKey || apiToken)) {\n      throw new Error('API key or token required.');\n    }\n    if (!link) {\n      throw new Error('Socket link required.');\n    }\n\n    let useKey = false;\n    try {\n      if (apiKey && apiKey.length === 64) {\n        await this.validateApiKeyToken(apiKey);\n        useKey = true;\n      } else {\n        if (apiToken) {\n          await this.validateApiKeyToken(apiToken);\n        } else {\n          throw new Error('API token is required.');\n        }\n        useKey = false;\n      }\n    } catch (error) {\n      throw new Error('Invalid API key or token.');\n    }\n\n    return new Promise((resolve, reject) => {\n      const query = useKey ? { apiUserName, apiKey } : { apiUserName, apiToken };\n\n      this.socket = io(`${link}/media`, {\n        transports: ['websocket'],\n        query,\n      });\n\n      this.socket.on('connect', () => {\n        console.log('Connected to media socket.', this.socket.id);\n        resolve(this.socket);\n      });\n\n      this.socket.on('connect_error', () => {\n        reject(new Error('Error connecting to media socket.'));\n      });\n    });\n  };\n\n  disconnectSocket = async ({ socket }: DisconnectSocketOptions): Promise<boolean> => {\n    if (socket) {\n      socket.disconnect();\n      return true;\n    }\n    return false;\n  };\n}\n","import { Injectable } from '@angular/core';\nexport interface ValidateAlphanumericOptions {\n  str: string;\n}\n\n// Export the type definition for the function\nexport type ValidateAlphanumericType = (options: ValidateAlphanumericOptions) => Promise<boolean>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidateAlphanumeric {\n  /**\n   * Validates if the given string contains only alphanumeric characters.\n   *\n   * @param {ValidateAlphanumericOptions} options - The options containing the string to validate.\n   * @param {string} options.str - The string to be validated.\n   * @returns {Promise<boolean>} - A promise that resolves to `true` if the string is alphanumeric, otherwise `false`.\n   */\n  async validateAlphanumeric({ str }: ValidateAlphanumericOptions): Promise<boolean> {\n    let code, i, len;\n\n    for (i = 0, len = str.length; i < len; i++) {\n      code = str.charCodeAt(i);\n      if (\n        !(code > 47 && code < 58) && // numeric (0-9)\n        !(code > 64 && code < 91) && // upper alpha (A-Z)\n        !(code > 96 && code < 123)\n      ) {\n        // lower alpha (a-z)\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { ValidateAlphanumeric } from '../../methods/utils/validate-alphanumeric.service';\n\nexport interface JoinRoomOptions {\n  socket: Socket;\n  roomName: string;\n  islevel: string;\n  member: string;\n  sec: string;\n  apiUserName: string;\n}\n\n// Export the type definition for the function\nexport type JoinRoomType = (\n  socket: Socket,\n  roomName: string,\n  islevel: string,\n  member: string,\n  sec: string,\n  apiUserName: string,\n) => Promise<object>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JoinRoom {\n  constructor(private validateAlphanumeric: ValidateAlphanumeric) {}\n\n  /**\n   * Joins a user to a specified room via a socket connection.\n   *\n   * @param {Object} options - The options for joining the room.\n   * @param {Socket} options.socket - The socket instance to use for communication.\n   * @param {string} options.roomName - The name of the room to join.\n   * @param {string} options.islevel - The level of the user.\n   * @param {string} options.member - The member identifier.\n   * @param {string} options.sec - The security token.\n   * @param {string} options.apiUserName - The API username of the user.\n   *\n   * @returns {Promise<object>} A promise that resolves with the data received from the 'joinRoom' event or rejects with a validation error.\n   *\n   * @throws {Error} Throws an error if the user is banned, suspended, or if the host has not joined the room yet.\n   */\n  async joinRoom({\n    socket,\n    roomName,\n    islevel,\n    member,\n    sec,\n    apiUserName,\n  }: JoinRoomOptions): Promise<object> {\n    return new Promise((resolve, reject) => {\n      // Validate inputs\n      if (!(sec && roomName && islevel && apiUserName && member)) {\n        const validationError = {\n          success: false,\n          rtpCapabilities: null,\n          reason: 'Missing required parameters',\n        };\n        reject(validationError);\n        return;\n      }\n\n      // Validate alphanumeric for roomName, apiUserName, and member\n      try {\n        this.validateAlphanumeric.validateAlphanumeric({ str: roomName });\n        this.validateAlphanumeric.validateAlphanumeric({ str: apiUserName });\n        this.validateAlphanumeric.validateAlphanumeric({ str: member });\n      } catch (error) {\n        const validationError = {\n          success: false,\n          rtpCapabilities: null,\n          reason: 'Invalid roomName or apiUserName or member',\n        };\n        reject(validationError);\n        return;\n      }\n\n      // Validate roomName starts with 's' or 'p'\n      if (!(roomName.startsWith('s') || roomName.startsWith('p'))) {\n        const validationError = {\n          success: false,\n          rtpCapabilities: null,\n          reason: 'Invalid roomName, must start with s or p',\n        };\n        reject(validationError);\n        return;\n      }\n\n      // Validate other conditions for sec, roomName, islevel, apiUserName\n      if (\n        !(\n          sec.length === 64 &&\n          roomName.length >= 8 &&\n          islevel.length === 1 &&\n          apiUserName.length >= 6 &&\n          (islevel === '0' || islevel === '1' || islevel === '2')\n        )\n      ) {\n        const validationError = {\n          success: false,\n          rtpCapabilities: null,\n          reason: 'Invalid roomName or islevel or apiUserName or secret',\n        };\n        reject(validationError);\n        return;\n      }\n\n      socket.emit(\n        'joinRoom',\n        { roomName, islevel, member, sec, apiUserName },\n        async (data: any) => {\n          try {\n            // Check if rtpCapabilities is null\n            if (data.rtpCapabilities === null) {\n              // Check if banned, suspended, or noAdmin\n              if (data.banned) {\n                throw new Error('User is banned.');\n              }\n              if (data.suspended) {\n                throw new Error('User is suspended.');\n              }\n              if (data.noAdmin) {\n                throw new Error('Host has not joined the room yet.');\n              }\n\n              // Resolve with the data received from the 'joinRoom' event\n              resolve(data);\n            } else {\n              // Resolve with the data received from the 'joinRoom' event\n              resolve(data);\n            }\n          } catch (error) {\n            // Handle errors during the joinRoom process\n            console.log('Error joining room:', error);\n            reject(error);\n          }\n        },\n      );\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { ValidateAlphanumeric } from '../../methods/utils/validate-alphanumeric.service';\nimport { RtpCapabilities } from 'mediasoup-client/lib/types';\n\nexport interface JoinConRoomOptions {\n  socket: Socket;\n  roomName: string;\n  islevel: string;\n  member: string;\n  sec: string;\n  apiUserName: string;\n}\n\nexport interface JoinConRoomResponse {\n  success: boolean;\n  rtpCapabilities: RtpCapabilities | null;\n  reason?: string;\n  banned?: boolean;\n  suspended?: boolean;\n  noAdmin?: boolean;\n  [key: string]: any;\n}\n\n// Export the type definition for the function\nexport type JoinConRoomType = (options: JoinConRoomOptions) => Promise<JoinConRoomResponse>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JoinConRoom {\n  constructor(private validateAlphanumeric: ValidateAlphanumeric) {}\n\n  /**\n   * Joins a conference room using the provided options.\n   *\n   * @param {JoinConRoomOptions} options - The options for joining the conference room.\n   * @param {Socket} options.socket - The socket instance to use for communication.\n   * @param {string} options.roomName - The name of the room to join.\n   * @param {string} options.islevel - The level of the user.\n   * @param {string} options.member - The member identifier.\n   * @param {string} options.sec - The security token.\n   * @param {string} options.apiUserName - The API username.\n   * @returns {Promise<JoinConRoomResponse>} A promise that resolves with the response of the join operation.\n   *\n   * @throws {Error} If any of the required parameters are missing or invalid.\n   * @throws {Error} If the user is banned, suspended, or if the host has not joined the room yet.\n   */\n  async joinConRoom({\n    socket,\n    roomName,\n    islevel,\n    member,\n    sec,\n    apiUserName,\n  }: JoinConRoomOptions): Promise<object> {\n    return new Promise((resolve, reject) => {\n      // Validate inputs\n      if (!(sec && roomName && islevel && apiUserName && member)) {\n        const validationError = {\n          success: false,\n          rtpCapabilities: null,\n          reason: 'Missing required parameters',\n        };\n        reject(validationError);\n        return;\n      }\n\n      // Validate alphanumeric for roomName, apiUserName, and member\n      try {\n        this.validateAlphanumeric.validateAlphanumeric({ str: roomName });\n        this.validateAlphanumeric.validateAlphanumeric({ str: apiUserName });\n        this.validateAlphanumeric.validateAlphanumeric({ str: member });\n      } catch (error) {\n        const validationError = {\n          success: false,\n          rtpCapabilities: null,\n          reason: 'Invalid roomName or apiUserName or member',\n        };\n        reject(validationError);\n        return;\n      }\n\n      // Validate roomName starts with 's' or 'p'\n      if (!(roomName.startsWith('s') || roomName.startsWith('p'))) {\n        const validationError = {\n          success: false,\n          rtpCapabilities: null,\n          reason: 'Invalid roomName, must start with s or p',\n        };\n        reject(validationError);\n        return;\n      }\n\n      // Validate other conditions for sec, roomName, islevel, apiUserName\n      if (\n        !(\n          sec.length === 64 &&\n          roomName.length >= 8 &&\n          islevel.length === 1 &&\n          apiUserName.length >= 6 &&\n          (islevel === '0' || islevel === '1' || islevel === '2')\n        )\n      ) {\n        const validationError = {\n          success: false,\n          rtpCapabilities: null,\n          reason: 'Invalid roomName or islevel or apiUserName or secret',\n        };\n        reject(validationError);\n        return;\n      }\n\n      socket.emit(\n        'joinConRoom',\n        { roomName, islevel, member, sec, apiUserName },\n        async (data: any) => {\n          try {\n            // Check if rtpCapabilities is null\n            if (data.rtpCapabilities === null) {\n              // Check if banned, suspended, or noAdmin\n              if (data.banned) {\n                throw new Error('User is banned.');\n              }\n              if (data.suspended) {\n                throw new Error('User is suspended.');\n              }\n              if (data.noAdmin) {\n                throw new Error('Host has not joined the room yet.');\n              }\n\n              // Resolve with the data received from the 'joinConRoom' event\n              resolve(data);\n            } else {\n              // Resolve with the data received from the 'joinConRoom' event\n              resolve(data);\n            }\n          } catch (error) {\n            // Handle errors during the joinConRoom process\n            console.log('Error joining room:', error);\n            reject(error);\n          }\n        },\n      );\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JoinRoom } from '../../producers/producer-emits/join-room.service';\nimport { JoinConRoom } from '../../producers/producer-emits/join-con-room.service';\nimport { Socket } from 'socket.io-client';\nimport { ResponseJoinRoom } from '../../@types/types';\n\nexport interface JoinRoomClientOptions {\n  socket: Socket;\n  roomName: string;\n  islevel: string;\n  member: string;\n  sec: string;\n  apiUserName: string;\n  consume?: boolean;\n}\n\n// Export the type definition for the function\nexport type JoinRoomClientType = (params: JoinRoomClientOptions) => Promise<any>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class JoinRoomClient {\n  constructor(private JoinRoomService: JoinRoom, private JoinConRoomService: JoinConRoom) {}\n\n  /**\n   * Joins a room by emitting the `joinRoom` event to the server using the provided socket.\n   *\n   * @param {Object} options - The options for joining the room.\n   * @param {Socket} options.socket - The socket instance to use for communication.\n   * @param {string} options.roomName - The name of the room to join.\n   * @param {boolean} options.islevel - The level indicator for the room.\n   * @param {string} options.member - The member identifier.\n   * @param {string} options.sec - The security token or identifier.\n   * @param {string} options.apiUserName - The API username for authentication.\n   * @param {boolean} [options.consume=false] - Flag to determine which join function to use.\n   * @returns {Promise<any>} A promise that resolves with the data returned from the server.\n   * @throws {Error} Throws an error if the room joining process fails.\n   */\n  async joinRoomClient({\n    socket,\n    roomName,\n    islevel,\n    member,\n    sec,\n    apiUserName,\n    consume = false,\n  }: JoinRoomClientOptions): Promise<any> {\n    try {\n      let data: Partial<ResponseJoinRoom>;\n\n      if (consume) {\n        data = await this.JoinConRoomService.joinConRoom({\n          socket,\n          roomName,\n          islevel,\n          member,\n          sec,\n          apiUserName,\n        });\n      } else {\n        data = await this.JoinRoomService.joinRoom({\n          socket,\n          roomName,\n          islevel,\n          member,\n          sec,\n          apiUserName,\n        });\n      }\n\n      return data;\n    } catch (error) {\n      console.error(error);\n      throw new Error('Failed to join the room. Please check your connection and try again.');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VideoCaptureConstraints {\n  // Landscape display sizes\n  QnHDCons = { width: { ideal: 320 }, height: { ideal: 180 } };\n  sdCons = { width: { ideal: 640 }, height: { ideal: 360 } };\n  hdCons = { width: { ideal: 1280 }, height: { ideal: 720 } };\n  fhdCons = { width: { ideal: 1920 }, height: { ideal: 1080 } };\n  qhdCons = { width: { ideal: 2560 }, height: { ideal: 1440 } };\n\n  // Portrait display sizes\n  QnHDConsPort = { width: { ideal: 180 }, height: { ideal: 320 } };\n  sdConsPort = { width: { ideal: 360 }, height: { ideal: 640 } };\n  hdConsPort = { width: { ideal: 720 }, height: { ideal: 1280 } };\n  fhdConsPort = { width: { ideal: 1080 }, height: { ideal: 1920 } };\n  qhdConsPort = { width: { ideal: 1440 }, height: { ideal: 2560 } };\n\n  // Neutral (Square) display sizes\n  QnHDConsNeu = { width: { ideal: 240 }, height: { ideal: 240 } };\n  sdConsNeu = { width: { ideal: 480 }, height: { ideal: 480 } };\n  hdConsNeu = { width: { ideal: 960 }, height: { ideal: 960 } };\n  fhdConsNeu = { width: { ideal: 1440 }, height: { ideal: 1440 } };\n  qhdConsNeu = { width: { ideal: 1920 }, height: { ideal: 1920 } };\n\n  // Frame rates for video capture\n  QnHDFrameRate = 5;\n  sdFrameRate = 10;\n  hdFrameRate = 15;\n  fhdFrameRate = 20;\n  qhdFrameRate = 30;\n  screenFrameRate = 30;\n}\n","import { Injectable } from '@angular/core';\nimport { ProducerCodecOptions, RtpEncodingParameters } from 'mediasoup-client/lib/types';\nexport type HParamsType = {\n  encodings: RtpEncodingParameters[];\n  codecOptions?: ProducerCodecOptions;\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HParams {\n  hParams: HParamsType = {\n    encodings: [\n      {\n        rid: 'r8',\n        maxBitrate: 240000,\n        scalabilityMode: 'L1T3',\n        scaleResolutionDownBy: 4.0,\n      },\n      {\n        rid: 'r9',\n        maxBitrate: 480000,\n        scalabilityMode: 'L1T3',\n        scaleResolutionDownBy: 2.0,\n      },\n      {\n        rid: 'r10',\n        maxBitrate: 960000,\n        scalabilityMode: 'L1T3',\n      },\n    ],\n    codecOptions: {\n      videoGoogleStartBitrate: 320,\n    },\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ProducerCodecOptions, RtpEncodingParameters } from 'mediasoup-client/lib/types';\nexport type VParamsType = {\n  encodings: RtpEncodingParameters[];\n  codecOptions?: ProducerCodecOptions;\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VParams {\n  vParams: VParamsType = {\n    encodings: [\n      {\n        rid: 'r3',\n        maxBitrate: 200000,\n        scalabilityMode: 'L1T3',\n        scaleResolutionDownBy: 4.0,\n      },\n      {\n        rid: 'r4',\n        maxBitrate: 400000,\n        scalabilityMode: 'L1T3',\n        scaleResolutionDownBy: 2.0,\n      },\n      {\n        rid: 'r5',\n        maxBitrate: 800000,\n        scalabilityMode: 'L1T3',\n      },\n    ],\n    codecOptions: {\n      videoGoogleStartBitrate: 320,\n    },\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ProducerCodecOptions, RtpEncodingParameters } from 'mediasoup-client/lib/types';\nexport type ScreenParamsType = {\n  encodings: RtpEncodingParameters[];\n  codecOptions?: ProducerCodecOptions;\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScreenParams {\n  screenParams: ScreenParamsType = {\n    encodings: [\n      {\n        rid: 'r7',\n        maxBitrate: 3000000,\n      },\n    ],\n    codecOptions: {\n      videoGoogleStartBitrate: 1000,\n    },\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ProducerCodecOptions, RtpEncodingParameters } from 'mediasoup-client/lib/types';\n// Export the type definition for the function\nexport type AParamsType = {\n  encodings: RtpEncodingParameters[];\n  codecOptions?: ProducerCodecOptions;\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AParams {\n  aParams: AParamsType = {\n    encodings: [\n      {\n        rid: 'r0',\n        maxBitrate: 64000,\n      },\n    ],\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n// room.service.ts\nimport { Injectable } from '@angular/core';\nimport { VideoCaptureConstraints } from '../../methods/utils/producer/video-capture-constraints.service';\nimport { HParams, HParamsType } from '../../methods/utils/producer/h-params.service';\nimport { VParams, VParamsType } from '../../methods/utils/producer/v-params.service';\nimport { ScreenParams } from '../../methods/utils/producer/screen-params.service';\nimport { AParams } from '../../methods/utils/producer/a-params.service';\nimport { RtpCapabilities } from 'mediasoup-client/lib/types';\nimport {\n  EventType,\n  ShowAlert,\n  VidCons,\n  ResponseJoinRoom,\n  ScreenParamsType,\n  AParamsType,\n  MeetingRoomParams,\n} from '../../@types/types';\n\nexport interface UpdateRoomParametersClientParameters {\n  rtpCapabilities: RtpCapabilities | null;\n  roomRecvIPs: string[];\n  meetingRoomParams: MeetingRoomParams | null;\n  itemPageLimit: number;\n  audioOnlyRoom: boolean;\n  addForBasic: boolean;\n  screenPageLimit: number;\n  shareScreenStarted: boolean;\n  shared: boolean;\n  targetOrientation: string;\n  vidCons: any;\n  recordingVideoSupport: boolean;\n  frameRate: number;\n  adminPasscode: string;\n  eventType: EventType;\n  youAreCoHost: boolean;\n  autoWave: boolean;\n  forceFullDisplay: boolean;\n  chatSetting: string;\n  meetingDisplayType: string;\n  audioSetting: string;\n  videoSetting: string;\n  screenshareSetting: string;\n  hParams: HParamsType;\n  vParams: VParamsType;\n  screenParams: ScreenParamsType;\n  aParams: AParamsType;\n  islevel: string;\n  showAlert?: ShowAlert;\n  data: ResponseJoinRoom;\n\n  // update functions\n  updateRtpCapabilities: (rtpCapabilities: RtpCapabilities | null) => void;\n  updateRoomRecvIPs: (roomRecvIPs: string[]) => void;\n  updateMeetingRoomParams: (params: MeetingRoomParams | null) => void;\n  updateItemPageLimit: (limit: number) => void;\n  updateAudioOnlyRoom: (isAudioOnly: boolean) => void;\n  updateAddForBasic: (addForBasic: boolean) => void;\n  updateScreenPageLimit: (limit: number) => void;\n  updateVidCons: (cons: any) => void;\n  updateFrameRate: (frameRate: number) => void;\n  updateAdminPasscode: (passcode: string) => void;\n  updateEventType: (eventType: EventType) => void;\n  updateYouAreCoHost: (coHost: boolean) => void;\n  updateAutoWave: (autoWave: boolean) => void;\n  updateForceFullDisplay: (forceFull: boolean) => void;\n  updateChatSetting: (setting: string) => void;\n  updateMeetingDisplayType: (type: string) => void;\n  updateAudioSetting: (setting: string) => void;\n  updateVideoSetting: (setting: string) => void;\n  updateScreenshareSetting: (setting: string) => void;\n  updateHParams: (params: HParamsType) => void;\n  updateVParams: (params: VParamsType) => void;\n  updateScreenParams: (params: ScreenParamsType) => void;\n  updateAParams: (params: AParamsType) => void;\n  updateMainHeightWidth: (heightWidth: number) => void;\n  updateTargetResolution: (resolution: string) => void;\n  updateTargetResolutionHost: (resolution: string) => void;\n\n  // Recording-related update functions\n  updateRecordingAudioPausesLimit: (limit: number) => void;\n  updateRecordingAudioPausesCount: (count: number) => void;\n  updateRecordingAudioSupport: (support: boolean) => void;\n  updateRecordingAudioPeopleLimit: (limit: number) => void;\n  updateRecordingAudioParticipantsTimeLimit: (limit: number) => void;\n  updateRecordingVideoPausesCount: (count: number) => void;\n  updateRecordingVideoPausesLimit: (limit: number) => void;\n  updateRecordingVideoSupport: (support: boolean) => void;\n  updateRecordingVideoPeopleLimit: (limit: number) => void;\n  updateRecordingVideoParticipantsTimeLimit: (limit: number) => void;\n  updateRecordingAllParticipantsSupport: (support: boolean) => void;\n  updateRecordingVideoParticipantsSupport: (support: boolean) => void;\n  updateRecordingAllParticipantsFullRoomSupport: (support: boolean) => void;\n  updateRecordingVideoParticipantsFullRoomSupport: (support: boolean) => void;\n  updateRecordingPreferredOrientation: (orientation: string) => void;\n  updateRecordingSupportForOtherOrientation: (support: boolean) => void;\n  updateRecordingMultiFormatsSupport: (support: boolean) => void;\n  updateRecordingVideoOptions: (options: string) => void;\n  updateRecordingAudioOptions: (options: string) => void;\n}\n\nexport type UpdateRoomParametersClientOptions = {\n  parameters: UpdateRoomParametersClientParameters;\n};\n\n// Export the type definition for the function\nexport type UpdateRoomParametersClientType = (options: UpdateRoomParametersClientOptions) => void;\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateRoomParametersClient {\n  constructor(\n    private videoCaptureConstraints: VideoCaptureConstraints,\n    private hParams: HParams,\n    private vParams: VParams,\n    private screenParams: ScreenParams,\n    private aParams: AParams,\n  ) {}\n\n  /**\n   * Update Room Parameters Client after the user has joined the room and the room parameters have been received from the server.\n   * @param {Object} parameters - An object containing various parameters and update functions.\n   */\n  updateRoomParametersClient = ({ parameters }: UpdateRoomParametersClientOptions): void => {\n    try {\n      const {\n        screenPageLimit,\n        shareScreenStarted,\n        shared,\n\n        hParams,\n        vParams,\n        frameRate,\n\n        islevel,\n        showAlert,\n        data,\n\n        //updates\n        updateRtpCapabilities,\n        updateRoomRecvIPs,\n        updateMeetingRoomParams,\n        updateItemPageLimit,\n        updateAudioOnlyRoom,\n        updateScreenPageLimit,\n        updateVidCons,\n        updateFrameRate,\n        updateAdminPasscode,\n        updateEventType,\n        updateYouAreCoHost,\n        updateAutoWave,\n        updateForceFullDisplay,\n        updateChatSetting,\n        updateMeetingDisplayType,\n        updateAudioSetting,\n        updateVideoSetting,\n        updateScreenshareSetting,\n        updateHParams,\n        updateVParams,\n        updateScreenParams,\n        updateAParams,\n        updateTargetResolution,\n        updateTargetResolutionHost,\n\n        // Recording updates\n        updateRecordingAudioPausesLimit,\n        updateRecordingAudioPausesCount,\n        updateRecordingAudioSupport,\n        updateRecordingAudioPeopleLimit,\n        updateRecordingAudioParticipantsTimeLimit,\n        updateRecordingVideoPausesCount,\n        updateRecordingVideoPausesLimit,\n        updateRecordingVideoSupport,\n        updateRecordingVideoPeopleLimit,\n        updateRecordingVideoParticipantsTimeLimit,\n        updateRecordingAllParticipantsSupport,\n        updateRecordingVideoParticipantsSupport,\n        updateRecordingAllParticipantsFullRoomSupport,\n        updateRecordingVideoParticipantsFullRoomSupport,\n        updateRecordingPreferredOrientation,\n        updateRecordingSupportForOtherOrientation,\n        updateRecordingMultiFormatsSupport,\n        updateRecordingVideoOptions,\n        updateRecordingAudioOptions,\n        updateMainHeightWidth,\n      } = parameters;\n\n      if (data.rtpCapabilities == null) {\n        let reason = data.reason || '';\n        showAlert?.({\n          message: 'Sorry, you are not allowed to join this room. ' + reason,\n          type: 'danger',\n          duration: 3000,\n        });\n        return;\n      }\n\n      // Update all values\n      updateRtpCapabilities(data.rtpCapabilities);\n      updateAdminPasscode(data.secureCode);\n      updateRoomRecvIPs(data.roomRecvIPs);\n      updateMeetingRoomParams(data.meetingRoomParams);\n\n      // Update recording values\n      updateRecordingAudioPausesLimit(data.recordingParams.recordingAudioPausesLimit);\n      updateRecordingAudioPausesCount(data.recordingParams.recordingAudioPausesCount!);\n      updateRecordingAudioSupport(data.recordingParams.recordingAudioSupport);\n      updateRecordingAudioPeopleLimit(data.recordingParams.recordingAudioPeopleLimit);\n      updateRecordingAudioParticipantsTimeLimit(\n        data.recordingParams.recordingAudioParticipantsTimeLimit,\n      );\n      updateRecordingVideoPausesCount(data.recordingParams.recordingVideoPausesCount!);\n      updateRecordingVideoPausesLimit(data.recordingParams.recordingVideoPausesLimit);\n      updateRecordingVideoSupport(data.recordingParams.recordingVideoSupport);\n      updateRecordingVideoPeopleLimit(data.recordingParams.recordingVideoPeopleLimit);\n      updateRecordingVideoParticipantsTimeLimit(\n        data.recordingParams.recordingVideoParticipantsTimeLimit,\n      );\n      updateRecordingAllParticipantsSupport(data.recordingParams.recordingAllParticipantsSupport);\n      updateRecordingVideoParticipantsSupport(\n        data.recordingParams.recordingVideoParticipantsSupport,\n      );\n      updateRecordingAllParticipantsFullRoomSupport(\n        data.recordingParams.recordingAllParticipantsFullRoomSupport,\n      );\n      updateRecordingVideoParticipantsFullRoomSupport(\n        data.recordingParams.recordingVideoParticipantsFullRoomSupport,\n      );\n      updateRecordingPreferredOrientation(data.recordingParams.recordingPreferredOrientation);\n      updateRecordingSupportForOtherOrientation(\n        data.recordingParams.recordingSupportForOtherOrientation,\n      );\n      updateRecordingMultiFormatsSupport(data.recordingParams.recordingMultiFormatsSupport);\n\n      // Update other meeting room settings\n      updateItemPageLimit(data.meetingRoomParams.itemPageLimit);\n      updateEventType(data.meetingRoomParams.type);\n\n      if (data.meetingRoomParams.type == 'chat' && islevel != '2') {\n        updateYouAreCoHost(true);\n      }\n\n      if (['chat', 'broadcast'].includes(data.meetingRoomParams.type)) {\n        updateAutoWave(false);\n        updateMeetingDisplayType('all');\n        updateForceFullDisplay(true);\n        updateChatSetting('allow');\n      }\n\n      updateAudioSetting(data.meetingRoomParams.audioSetting);\n      updateVideoSetting(data.meetingRoomParams.videoSetting);\n      updateScreenshareSetting(data.meetingRoomParams.screenshareSetting);\n      updateChatSetting(data.meetingRoomParams.chatSetting);\n\n      updateAudioOnlyRoom(data.meetingRoomParams.mediaType != 'video');\n\n      if (data.meetingRoomParams.type == 'chat' || data.meetingRoomParams.type == 'broadcast') {\n        if (data.meetingRoomParams.type == 'broadcast') {\n          updateItemPageLimit(1);\n          updateRecordingVideoOptions('mainScreen');\n          updateRecordingAudioOptions('host');\n        } else {\n          updateItemPageLimit(2);\n        }\n      }\n\n      if (data.meetingRoomParams.type == 'conference' && (shared || shareScreenStarted)) {\n        updateMainHeightWidth(100);\n      } else {\n        updateMainHeightWidth(0);\n      }\n\n      updateScreenPageLimit(Math.min(data.meetingRoomParams.itemPageLimit, screenPageLimit));\n\n      // Assign media capture constraints based on the user's role and room settings\n      let targetOrientation =\n        islevel == '2'\n          ? data.meetingRoomParams.targetOrientationHost\n          : data.meetingRoomParams.targetOrientation;\n      let targetResolution =\n        islevel == '2'\n          ? data.meetingRoomParams.targetResolutionHost\n          : data.meetingRoomParams.targetResolution;\n\n      let vidCons: VidCons;\n      if (targetOrientation == 'landscape') {\n        vidCons =\n          targetResolution == 'hd'\n            ? this.videoCaptureConstraints.hdCons\n            : targetResolution == 'QnHD'\n            ? this.videoCaptureConstraints.QnHDCons\n            : targetResolution == 'fhd'\n            ? this.videoCaptureConstraints.fhdCons\n            : targetResolution == 'qhd'\n            ? this.videoCaptureConstraints.qhdCons\n            : this.videoCaptureConstraints.sdCons;\n      } else if (targetOrientation == 'neutral') {\n        vidCons =\n          targetResolution == 'hd'\n            ? this.videoCaptureConstraints.hdConsNeu\n            : targetResolution == 'QnHD'\n            ? this.videoCaptureConstraints.QnHDConsNeu\n            : targetResolution == 'fhd'\n            ? this.videoCaptureConstraints.fhdConsNeu\n            : targetResolution == 'qhd'\n            ? this.videoCaptureConstraints.qhdConsNeu\n            : this.videoCaptureConstraints.sdConsNeu;\n      } else {\n        vidCons =\n          targetResolution == 'hd'\n            ? this.videoCaptureConstraints.hdConsPort\n            : targetResolution == 'QnHD'\n            ? this.videoCaptureConstraints.QnHDConsPort\n            : targetResolution == 'fhd'\n            ? this.videoCaptureConstraints.fhdConsPort\n            : targetResolution == 'qhd'\n            ? this.videoCaptureConstraints.qhdConsPort\n            : this.videoCaptureConstraints.sdConsPort;\n      }\n\n      let frameRateValue = frameRate ? frameRate : 10;\n\n      let vParamsValue = { ...vParams };\n      let hParamsValue = { ...hParams };\n      if (Object.keys(vParamsValue).length === 0) {\n        vParamsValue = this.vParams.vParams;\n      }\n      if (Object.keys(hParamsValue).length === 0) {\n        hParamsValue = this.hParams.hParams;\n      }\n\n      if (targetResolution == 'hd') {\n        frameRateValue = this.videoCaptureConstraints.hdFrameRate;\n\n        vParamsValue.encodings.forEach((encoding: Partial<VParamsType['encodings'][0]>) => {\n          encoding.maxBitrate && (encoding.maxBitrate *= 4);\n        });\n\n        hParamsValue.encodings.forEach((encoding: Partial<HParamsType['encodings'][0]>) => {\n          encoding.maxBitrate && (encoding.maxBitrate *= 4);\n        });\n      } else if (targetResolution == 'QnHD') {\n        frameRateValue = this.videoCaptureConstraints.QnHDFrameRate;\n        vParamsValue.encodings.forEach((encoding: Partial<VParamsType['encodings'][0]>) => {\n          encoding.maxBitrate && (encoding.maxBitrate *= 0.25);\n        });\n\n        hParamsValue.encodings.forEach((encoding: Partial<HParamsType['encodings'][0]>) => {\n          encoding.maxBitrate && (encoding.maxBitrate *= 0.25);\n        });\n\n        hParamsValue.codecOptions!.videoGoogleStartBitrate! *= 0.25;\n        vParamsValue.codecOptions!.videoGoogleStartBitrate! *= 0.25;\n      } else if (targetResolution == 'fhd') {\n        frameRateValue = this.videoCaptureConstraints.fhdFrameRate;\n        vParamsValue.encodings.forEach((encoding: Partial<VParamsType['encodings'][0]>) => {\n          encoding.maxBitrate && (encoding.maxBitrate *= 8);\n        });\n\n        hParamsValue.encodings.forEach((encoding: Partial<HParamsType['encodings'][0]>) => {\n          encoding.maxBitrate && (encoding.maxBitrate *= 8);\n        });\n\n        hParamsValue.codecOptions!.videoGoogleStartBitrate! *= 8;\n        vParamsValue.codecOptions!.videoGoogleStartBitrate! *= 8;\n      } else if (targetResolution == 'qhd') {\n        frameRateValue = this.videoCaptureConstraints.qhdFrameRate;\n        vParamsValue.encodings.forEach((encoding: Partial<VParamsType['encodings'][0]>) => {\n          encoding.maxBitrate && (encoding.maxBitrate *= 16);\n        });\n\n        hParamsValue.encodings.forEach((encoding: Partial<HParamsType['encodings'][0]>) => {\n          encoding.maxBitrate && (encoding.maxBitrate *= 16);\n        });\n\n        hParamsValue.codecOptions!.videoGoogleStartBitrate! *= 16;\n        vParamsValue.codecOptions!.videoGoogleStartBitrate! *= 16;\n      }\n\n      if (data.recordingParams.recordingVideoSupport) {\n        vParamsValue.encodings.forEach((encoding: Partial<VParamsType['encodings'][0]>) => {\n          encoding.maxBitrate && (encoding.maxBitrate *= 1.2);\n        });\n\n        hParamsValue.encodings.forEach((encoding: Partial<HParamsType['encodings'][0]>) => {\n          encoding.maxBitrate && (encoding.maxBitrate *= 1.2);\n        });\n\n        hParamsValue.codecOptions!.videoGoogleStartBitrate! *= 1.2;\n        vParamsValue.codecOptions!.videoGoogleStartBitrate! *= 1.2;\n      }\n\n      updateVidCons(vidCons);\n      updateFrameRate(frameRateValue);\n      updateHParams(hParamsValue);\n      updateVParams(vParamsValue);\n      updateScreenParams(this.screenParams.screenParams);\n      updateAParams(this.aParams.aParams);\n      updateTargetResolution(data.meetingRoomParams.targetResolution);\n      updateTargetResolutionHost(data.meetingRoomParams.targetResolutionHost);\n    } catch (error) {\n      console.log('updateRoomParametersClient error', error);\n      parameters.showAlert?.({\n        message: (error as Error).message,\n        type: 'danger',\n        duration: 3000,\n      });\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { RtpCapabilities, Device } from 'mediasoup-client/lib/types';\nimport * as mediasoupClient from 'mediasoup-client';\nexport interface CreateDeviceClientOptions {\n  rtpCapabilities: RtpCapabilities | null;\n}\n\n// Export the type definition for the function\nexport type CreateDeviceClientType = (options: CreateDeviceClientOptions) => Promise<Device | null>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateDeviceClient {\n  /**\n   * Creates a mediasoup client device with the provided RTP capabilities.\n   *\n   * @param {CreateDeviceClientOptions} options - The options for creating the device client.\n   * @param {RTPCapabilities} options.rtpCapabilities - The RTP capabilities required for the device.\n   * @returns {Promise<Device | null>} A promise that resolves to the created Device or null if creation fails.\n   * @throws {Error} Throws an error if the required parameters are not provided or if device creation is not supported.\n   *\n   */\n\n  async createDeviceClient({ rtpCapabilities }: CreateDeviceClientOptions): Promise<Device | null> {\n    try {\n      // Validate input parameters\n      if (!rtpCapabilities || !mediasoupClient) {\n        throw new Error('Both rtpCapabilities and mediasoupClient must be provided.');\n      }\n\n      // Create a mediasoup client device\n      const device: Device = new mediasoupClient.Device();\n\n      // Remove orientation capabilities\n      if (rtpCapabilities.headerExtensions) {\n        rtpCapabilities.headerExtensions = rtpCapabilities.headerExtensions.filter(\n          (ext) => ext.uri !== 'urn:3gpp:video-orientation',\n        );\n      }\n\n      // Load the provided RTP capabilities into the device\n      await device.load({\n        routerRtpCapabilities: rtpCapabilities,\n      });\n\n      // Perform additional initialization, e.g., loading spinner and retrieving messages\n\n      return device;\n    } catch (error: any) {\n      // Handle specific errors, e.g., UnsupportedError\n      if (error.name === 'UnsupportedError') {\n        // Handle unsupported device creation\n        console.error('UnsupportedError: Device creation is not supported by the browser.');\n      }\n\n      throw error; // Propagate other errors\n    }\n  }\n}\n","// click-video.service.ts\nimport { Injectable } from '@angular/core';\nimport {\n  CheckPermissionType,\n  DisconnectSendTransportVideoParameters,\n  DisconnectSendTransportVideoType,\n  RequestPermissionCameraType,\n  ShowAlert,\n  StreamSuccessVideoParameters,\n  StreamSuccessVideoType,\n  VidCons,\n} from '../../@types/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface ClickVideoParameters\n  extends DisconnectSendTransportVideoParameters,\n    StreamSuccessVideoParameters {\n  checkMediaPermission: boolean;\n  hasCameraPermission: boolean;\n  videoAlreadyOn: boolean;\n  audioOnlyRoom: boolean;\n  recordStarted: boolean;\n  recordResumed: boolean;\n  recordPaused: boolean;\n  recordStopped: boolean;\n  recordingMediaOptions: string;\n  islevel: string;\n  youAreCoHost: boolean;\n  adminRestrictSetting: boolean;\n  videoRequestState: string | null;\n  videoRequestTime: number;\n  member: string;\n  socket: Socket;\n  roomName: string;\n  userDefaultVideoInputDevice: string;\n  currentFacingMode: string;\n  vidCons: VidCons;\n  frameRate: number;\n  videoAction: boolean;\n  localStream: MediaStream | null;\n  audioSetting: string;\n  videoSetting: string;\n  screenshareSetting: string;\n  chatSetting: string;\n  updateRequestIntervalSeconds: number;\n\n  showAlert?: ShowAlert;\n  updateVideoAlreadyOn: (value: boolean) => void;\n  updateVideoRequestState: (state: string) => void;\n  updateLocalStream: (stream: MediaStream | null) => void;\n\n  streamSuccessVideo: StreamSuccessVideoType;\n  disconnectSendTransportVideo: DisconnectSendTransportVideoType;\n  requestPermissionCamera: RequestPermissionCameraType;\n  checkPermission: CheckPermissionType;\n\n  getUpdatedAllParams: () => ClickVideoParameters;\n  [key: string]: any;\n}\n\nexport interface ClickVideoOptions {\n  parameters: ClickVideoParameters;\n}\n\n// Export the type definition for the function\nexport type ClickVideoType = (options: ClickVideoOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClickVideo {\n  /**\n   * Handles the click event to toggle the participant's video on/off and manages video permission requests.\n   *\n   * @param {ClickVideoParams} options - The function parameters.\n   * @returns {Promise<void>}\n   */\n\n  clickVideo = async ({ parameters }: ClickVideoOptions): Promise<void> => {\n    let {\n      checkMediaPermission,\n      hasCameraPermission,\n      videoAlreadyOn,\n      audioOnlyRoom,\n      recordStarted,\n      recordResumed,\n      recordPaused,\n      recordStopped,\n      recordingMediaOptions,\n      islevel,\n      youAreCoHost,\n      adminRestrictSetting,\n      videoRequestState,\n      videoRequestTime,\n      member,\n      socket,\n      roomName,\n      userDefaultVideoInputDevice,\n      currentFacingMode,\n      vidCons,\n      frameRate,\n      videoAction,\n      localStream,\n      audioSetting,\n      videoSetting,\n      screenshareSetting,\n      chatSetting,\n      updateRequestIntervalSeconds,\n      streamSuccessVideo,\n      showAlert,\n      updateVideoAlreadyOn,\n      updateVideoRequestState,\n      updateLocalStream,\n      disconnectSendTransportVideo,\n      requestPermissionCamera,\n      checkPermission,\n    } = parameters;\n\n    if (audioOnlyRoom) {\n      showAlert?.({\n        message: 'You cannot turn on your camera in an audio only event.',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n\n    if (videoAlreadyOn) {\n      if (islevel === '2' && (recordStarted || recordResumed)) {\n        if (!(recordPaused || recordStopped) && recordingMediaOptions === 'video') {\n          showAlert?.({\n            message:\n              'You cannot turn off your camera while recording video, please pause or stop recording first.',\n            type: 'danger',\n            duration: 3000,\n          });\n\n          return;\n        }\n      }\n\n      videoAlreadyOn = false;\n      updateVideoAlreadyOn(videoAlreadyOn);\n      if (localStream) {\n        localStream.getVideoTracks()[0].enabled = false;\n      }\n      updateLocalStream(localStream);\n      await disconnectSendTransportVideo({ parameters });\n    } else {\n      if (adminRestrictSetting) {\n        showAlert?.({\n          message: 'You cannot turn on your camera. Access denied by host.',\n          type: 'danger',\n          duration: 3000,\n        });\n\n        return;\n      }\n\n      let response = 2;\n\n      if (!videoAction && islevel !== '2' && !youAreCoHost) {\n        response = await checkPermission({\n          permissionType: 'videoSetting',\n          audioSetting,\n          videoSetting,\n          screenshareSetting,\n          chatSetting,\n        });\n      } else {\n        response = 0;\n      }\n\n      if (response === 1) {\n        if (videoRequestState === 'pending') {\n          showAlert?.({\n            message: 'A request is pending. Please wait for the host to respond.',\n            type: 'danger',\n            duration: 3000,\n          });\n\n          return;\n        }\n\n        if (\n          videoRequestState === 'rejected' &&\n          Date.now() - videoRequestTime < updateRequestIntervalSeconds\n        ) {\n          showAlert?.({\n            message: `A request was rejected. Please wait for ${updateRequestIntervalSeconds} seconds before sending another request.`,\n            type: 'danger',\n            duration: 3000,\n          });\n\n          return;\n        }\n\n        showAlert?.({\n          message: 'Request sent to host.',\n          type: 'success',\n          duration: 3000,\n        });\n\n        videoRequestState = 'pending';\n        updateVideoRequestState(videoRequestState);\n\n        let userRequest = { id: socket.id, name: member, icon: 'fa-video' };\n        socket.emit('participantRequest', { userRequest, roomName });\n      } else if (response === 2) {\n        showAlert?.({\n          message: 'You cannot turn on your camera. Access denied by host.',\n          type: 'danger',\n          duration: 3000,\n        });\n      } else {\n        if (!hasCameraPermission) {\n          if (checkMediaPermission) {\n            let statusCamera = await requestPermissionCamera();\n            if (statusCamera !== 'granted') {\n              showAlert?.({\n                message:\n                  'Allow access to your camera or check if your camera is not being used by another application.',\n                type: 'danger',\n                duration: 3000,\n              });\n\n              return;\n            }\n          }\n        }\n\n        let mediaConstraints = {};\n        let altMediaConstraints = {};\n        if (userDefaultVideoInputDevice) {\n          if (vidCons && vidCons.width && vidCons.height) {\n            mediaConstraints = {\n              video: {\n                deviceId: userDefaultVideoInputDevice,\n                facingMode: currentFacingMode,\n                ...vidCons,\n                frameRate: { ideal: frameRate },\n              },\n              audio: false,\n            };\n            altMediaConstraints = {\n              video: { ...vidCons, frameRate: { ideal: frameRate } },\n              audio: false,\n            };\n          } else {\n            mediaConstraints = {\n              video: { ...vidCons, frameRate: { ideal: frameRate } },\n              audio: false,\n            };\n            altMediaConstraints = { video: { frameRate: { ideal: frameRate } }, audio: false };\n          }\n        } else {\n          if (vidCons && vidCons.width && vidCons.height) {\n            mediaConstraints = {\n              video: { ...vidCons, frameRate: { ideal: frameRate } },\n              audio: false,\n            };\n            altMediaConstraints = {\n              video: { ...vidCons, frameRate: { ideal: frameRate } },\n              audio: false,\n            };\n          } else {\n            mediaConstraints = { video: { frameRate: { ideal: frameRate } }, audio: false };\n          }\n        }\n\n        await navigator.mediaDevices\n          .getUserMedia(mediaConstraints)\n          .then(async (stream: MediaStream) => {\n            await streamSuccessVideo({ stream, parameters });\n          })\n          .catch(async () => {\n            await navigator.mediaDevices\n              .getUserMedia(altMediaConstraints)\n              .then(async (stream: MediaStream) => {\n                await streamSuccessVideo({ stream, parameters });\n              })\n              .catch(() => {\n                showAlert?.({\n                  message:\n                    'Allow access to your camera or check if your camera is not being used by another application.',\n                  type: 'danger',\n                  duration: 3000,\n                });\n              });\n          });\n      }\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CheckPermissionType,\n  DisconnectSendTransportAudioParameters,\n  DisconnectSendTransportAudioType,\n  Participant,\n  RequestPermissionAudioType,\n  ResumeSendTransportAudioParameters,\n  ResumeSendTransportAudioType,\n  ShowAlert,\n  StreamSuccessAudioParameters,\n  StreamSuccessAudioType,\n} from '../../@types/types';\nimport { Socket } from 'socket.io-client';\n\n/* eslint-disable eqeqeq */\nexport interface ClickAudioParameters\n  extends DisconnectSendTransportAudioParameters,\n    ResumeSendTransportAudioParameters,\n    StreamSuccessAudioParameters {\n  checkMediaPermission: boolean;\n  hasAudioPermission: boolean;\n  audioPaused: boolean;\n  audioAlreadyOn: boolean;\n  audioOnlyRoom: boolean;\n  recordStarted: boolean;\n  recordResumed: boolean;\n  recordPaused: boolean;\n  recordStopped: boolean;\n  recordingMediaOptions: string;\n  islevel: string;\n  youAreCoHost: boolean;\n  adminRestrictSetting: boolean;\n  audioRequestState: string | null;\n  audioRequestTime: number;\n  member: string;\n  socket: Socket;\n  roomName: string;\n  userDefaultAudioInputDevice: string;\n  micAction: boolean;\n  localStream: MediaStream | null;\n  audioSetting: string;\n  videoSetting: string;\n  screenshareSetting: string;\n  chatSetting: string;\n  updateRequestIntervalSeconds: number;\n  participants: Participant[];\n  transportCreated: boolean;\n  transportCreatedAudio: boolean;\n\n  updateAudioAlreadyOn: (status: boolean) => void;\n  updateAudioRequestState: (state: string | null) => void;\n  updateAudioPaused: (status: boolean) => void;\n  updateLocalStream: (stream: MediaStream | null) => void;\n  updateParticipants: (participants: Participant[]) => void;\n  updateTransportCreated: (status: boolean) => void;\n  updateTransportCreatedAudio: (status: boolean) => void;\n  updateMicAction: (action: boolean) => void;\n  showAlert?: ShowAlert;\n\n  // mediasfu functions\n  checkPermission: CheckPermissionType;\n  streamSuccessAudio: StreamSuccessAudioType;\n  disconnectSendTransportAudio: DisconnectSendTransportAudioType;\n  requestPermissionAudio: RequestPermissionAudioType;\n  resumeSendTransportAudio: ResumeSendTransportAudioType;\n\n  getUpdatedAllParams: () => ClickAudioParameters;\n  [key: string]: any;\n}\n\nexport interface ClickAudioOptions {\n  parameters: ClickAudioParameters;\n}\n\n// Export the type definition for the function\nexport type ClickAudioType = (options: ClickAudioOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClickAudio {\n  /**\n   * Handles the click event for toggling audio in a media session.\n   *\n   * @param {ClickAudioOptions} parameters - The parameters required for handling the audio click event.\n   * @returns {Promise<void>} A promise that resolves when the audio click event has been handled.\n   *\n   * The function performs the following actions:\n   * - If the event is audio-only, it shows an alert and exits.\n   * - If the audio is already on, it handles the logic for turning it off, including checking recording states and permissions.\n   * - If the audio is off, it checks for admin restrictions, user permissions, and handles the logic for turning the audio on.\n   * - It updates various states and emits socket events as necessary.\n   *\n   * The function makes use of several helper functions and state update functions passed in through the parameters.\n   */\n\n  async clickAudio({ parameters }: ClickAudioOptions): Promise<void> {\n    let {\n      checkMediaPermission,\n      hasAudioPermission,\n      audioPaused,\n      audioAlreadyOn,\n      audioOnlyRoom,\n      recordStarted,\n      recordResumed,\n      recordPaused,\n      recordStopped,\n      recordingMediaOptions,\n      islevel,\n      youAreCoHost,\n      adminRestrictSetting,\n      audioRequestState,\n      audioRequestTime,\n      member,\n      socket,\n      roomName,\n      userDefaultAudioInputDevice,\n      micAction,\n      localStream,\n      audioSetting,\n      videoSetting,\n      screenshareSetting,\n      chatSetting,\n      updateRequestIntervalSeconds,\n      participants,\n      showAlert,\n      transportCreated,\n      transportCreatedAudio,\n\n      updateAudioAlreadyOn,\n      updateAudioRequestState,\n      updateAudioPaused,\n      updateLocalStream,\n      updateParticipants,\n      updateTransportCreated,\n      updateTransportCreatedAudio,\n      updateMicAction,\n\n      checkPermission,\n      streamSuccessAudio,\n      requestPermissionAudio,\n      resumeSendTransportAudio,\n      disconnectSendTransportAudio,\n    } = parameters;\n\n    if (audioOnlyRoom) {\n      showAlert?.({\n        message: 'You cannot turn on your camera in an audio-only event.',\n        type: 'danger',\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (audioAlreadyOn) {\n      if (islevel === '2' && (recordStarted || recordResumed)) {\n        if (!(recordPaused || recordStopped)) {\n          if (recordingMediaOptions === 'audio') {\n            showAlert?.({\n              message:\n                'You cannot turn off your audio while recording, please pause or stop recording first.',\n              type: 'danger',\n              duration: 3000,\n            });\n            return;\n          }\n        }\n      }\n\n      audioAlreadyOn = false;\n      updateAudioAlreadyOn(audioAlreadyOn);\n      if (localStream) {\n        localStream.getAudioTracks()[0].enabled = false;\n      }\n      updateLocalStream(localStream);\n      await disconnectSendTransportAudio({ parameters }); //disconnect function here actuall calls audioProducer.pause() instead of close() as in mediasfu\n      audioPaused = true;\n      updateAudioPaused(audioPaused);\n    } else {\n      if (adminRestrictSetting) {\n        showAlert?.({\n          message: 'You cannot turn on your microphone. Access denied by host.',\n          type: 'danger',\n          duration: 3000,\n        });\n        return;\n      }\n\n      let response = 2;\n      if (!micAction && islevel !== '2' && !youAreCoHost) {\n        response = await checkPermission({\n          permissionType: 'audioSetting',\n          audioSetting,\n          videoSetting,\n          screenshareSetting,\n          chatSetting,\n        });\n      } else {\n        response = 0;\n      }\n\n      switch (response) {\n        case 1: {\n          if (audioRequestState === 'pending') {\n            showAlert?.({\n              message: 'A request is pending. Please wait for the host to respond.',\n              type: 'danger',\n              duration: 3000,\n            });\n            return;\n          }\n\n          showAlert?.({\n            message: 'Request sent to host.',\n            type: 'success',\n            duration: 3000,\n          });\n\n          audioRequestState = 'pending';\n          updateAudioRequestState(audioRequestState);\n          //create a request and add to the request list and send to host\n\n          const userRequest = {\n            id: socket.id,\n            name: member,\n            icon: 'fa-microphone',\n          };\n          socket.emit('participantRequest', { userRequest, roomName });\n          break;\n        }\n\n        case 2:\n          if (\n            audioRequestState === 'rejected' &&\n            Date.now() - audioRequestTime < updateRequestIntervalSeconds * 1000\n          ) {\n            showAlert?.({\n              message: `A request was rejected. Please wait for ${updateRequestIntervalSeconds} seconds before sending another request.`,\n              type: 'danger',\n              duration: 3000,\n            });\n            return;\n          }\n          break;\n\n        case 0:\n          //allow\n\n          if (audioPaused) {\n            if (localStream) {\n              localStream.getAudioTracks()[0].enabled = true;\n            }\n            updateAudioAlreadyOn(true);\n            await resumeSendTransportAudio({ parameters });\n            socket.emit('resumeProducerAudio', { mediaTag: 'audio', roomName });\n\n            updateLocalStream(localStream);\n            updateAudioAlreadyOn(audioAlreadyOn);\n\n            if (micAction == true) {\n              micAction = false;\n              updateMicAction(micAction);\n            }\n\n            participants.forEach((participant) => {\n              if (participant['socketId'] === socket.id && participant.name === member) {\n                participant.muted = false;\n              }\n            });\n            updateParticipants(participants);\n\n            transportCreated = true;\n            updateTransportCreated(transportCreated);\n\n            transportCreatedAudio = true;\n            updateTransportCreatedAudio(transportCreatedAudio);\n          } else {\n            if (!hasAudioPermission && checkMediaPermission) {\n              const statusMic = await requestPermissionAudio();\n              if (statusMic !== 'granted') {\n                showAlert?.({\n                  message:\n                    'Allow access to your microphone or check if your microphone is not being used by another application.',\n                  type: 'danger',\n                  duration: 3000,\n                });\n                return;\n              }\n            }\n\n            const mediaConstraints = userDefaultAudioInputDevice\n              ? { audio: { deviceId: userDefaultAudioInputDevice }, video: false }\n              : { audio: true, video: false };\n\n            try {\n              const stream = await navigator.mediaDevices.getUserMedia(mediaConstraints);\n              await streamSuccessAudio({ stream, parameters });\n            } catch (error) {\n              console.error(error);\n              showAlert?.({\n                message:\n                  'Allow access to your microphone or check if your microphone is not being used by another application.',\n                type: 'danger',\n                duration: 3000,\n              });\n            }\n          }\n          break;\n\n        default:\n      }\n    }\n  }\n}\n","// screen-share.service.ts\nimport { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport {\n  CheckPermissionType,\n  CheckScreenShareParameters,\n  CheckScreenShareType,\n  ShowAlert,\n  StopShareScreenParameters,\n  StopShareScreenType,\n} from '../../@types/types';\n\nexport interface ClickScreenShareParameters\n  extends CheckScreenShareParameters,\n    StopShareScreenParameters {\n  showAlert?: ShowAlert;\n  roomName: string;\n  member: string;\n  socket: Socket;\n  islevel: string;\n  youAreCoHost: boolean;\n  adminRestrictSetting: boolean;\n  audioSetting: string;\n  videoSetting: string;\n  screenshareSetting: string;\n  chatSetting: string;\n  screenAction: boolean;\n  screenAlreadyOn: boolean;\n  screenRequestState: string | null;\n  screenRequestTime: number;\n  audioOnlyRoom: boolean;\n  updateRequestIntervalSeconds: number;\n  updateScreenRequestState: (state: string | null) => void;\n  updateScreenAlreadyOn: (status: boolean) => void;\n\n  // mediasfu functions\n  checkPermission: CheckPermissionType;\n  checkScreenShare: CheckScreenShareType;\n  stopShareScreen: StopShareScreenType;\n\n  getUpdatedAllParams: () => ClickScreenShareParameters;\n  [key: string]: any;\n}\n\nexport interface ClickScreenShareOptions {\n  parameters: ClickScreenShareParameters;\n}\n\n// Export the type definition for the function\nexport type ClickScreenShareType = (options: ClickScreenShareOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClickScreenShare {\n  /**\n   * Handles the action for the screen button, including starting and stopping screen sharing.\n   *\n   * @param {ClickScreenShareParams} options - Options for handling the screen button action.\n   * @returns {Promise<void>}\n   */\n  clickScreenShare = async ({ parameters }: ClickScreenShareOptions): Promise<void> => {\n    parameters = { ...parameters, ...parameters.getUpdatedAllParams() };\n    let {\n      showAlert,\n      roomName,\n      member,\n      socket,\n      islevel,\n      youAreCoHost,\n      adminRestrictSetting,\n      audioSetting,\n      videoSetting,\n      screenshareSetting,\n      chatSetting,\n      screenAction,\n      screenAlreadyOn,\n      screenRequestState,\n      screenRequestTime,\n      audioOnlyRoom,\n      updateRequestIntervalSeconds,\n      updateScreenRequestState,\n      updateScreenAlreadyOn,\n      checkPermission,\n      checkScreenShare,\n      stopShareScreen,\n    } = parameters;\n\n    if (audioOnlyRoom) {\n      showAlert?.({\n        message: 'You cannot turn on your camera in an audio-only event.',\n        type: 'danger',\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (roomName.startsWith('d')) {\n      showAlert?.({\n        message: 'You cannot start screen share in a demo room.',\n        type: 'danger',\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (screenAlreadyOn) {\n      screenAlreadyOn = false;\n      updateScreenAlreadyOn(screenAlreadyOn);\n      await stopShareScreen({ parameters });\n    } else {\n      if (adminRestrictSetting) {\n        showAlert?.({\n          message: 'You cannot start screen share. Access denied by host.',\n          type: 'danger',\n          duration: 3000,\n        });\n        return;\n      }\n\n      let response = 2;\n      if (!screenAction && islevel != '2' && !youAreCoHost) {\n        response = await checkPermission({\n          permissionType: 'screenshareSetting',\n          audioSetting,\n          videoSetting,\n          screenshareSetting,\n          chatSetting,\n        });\n      } else {\n        response = 0;\n      }\n\n      switch (response) {\n        case 0:\n          checkScreenShare({ parameters });\n          break;\n        case 1: {\n          if (screenRequestState === 'pending') {\n            showAlert?.({\n              message: 'A request is already pending. Please wait for the host to respond.',\n              type: 'danger',\n              duration: 3000,\n            });\n            return;\n          }\n\n          if (\n            screenRequestState === 'rejected' &&\n            Date.now() - screenRequestTime < updateRequestIntervalSeconds\n          ) {\n            showAlert?.({\n              message: 'You cannot send another request at this time.',\n              type: 'danger',\n              duration: 3000,\n            });\n\n            return;\n          }\n\n          showAlert?.({\n            message: 'Your request has been sent to the host.',\n            type: 'success',\n            duration: 3000,\n          });\n\n          screenRequestState = 'pending';\n          updateScreenRequestState(screenRequestState);\n\n          let userRequest = { id: socket.id, name: member, icon: 'fa-desktop' };\n          socket.emit('participantRequest', { userRequest, roomName });\n          break;\n        }\n        case 2:\n          showAlert?.({\n            message: 'You are not allowed to start screen share.',\n            type: 'danger',\n            duration: 3000,\n          });\n\n          break;\n        default:\n      }\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Device, ProducerOptions, Producer, RtpCodecCapability } from 'mediasoup-client/lib/types';\nimport { Socket } from 'socket.io-client';\nimport {\n  ConnectSendTransportVideoParameters,\n  Participant,\n  ShowAlert,\n  CreateSendTransportParameters,\n  ReorderStreamsParameters,\n  SleepType,\n  CreateSendTransportType,\n  ConnectSendTransportVideoType,\n  ReorderStreamsType,\n  VParamsType,\n  HParamsType,\n} from '../@types/types';\n\nexport interface StreamSuccessVideoParameters\n  extends CreateSendTransportParameters,\n    ConnectSendTransportVideoParameters,\n    ReorderStreamsParameters {\n  socket: Socket;\n  participants: Participant[];\n  localStream: MediaStream | null;\n  transportCreated: boolean;\n  transportCreatedVideo: boolean;\n  videoAlreadyOn: boolean;\n  videoAction: boolean;\n  videoParams: ProducerOptions;\n  localStreamVideo: MediaStream | null;\n  defVideoID: string;\n  userDefaultVideoInputDevice: string;\n  params: ProducerOptions;\n  videoParamse?: ProducerOptions;\n  islevel: string;\n  member: string;\n  updateMainWindow: boolean;\n  lock_screen: boolean;\n  shared: boolean;\n  shareScreenStarted: boolean;\n  vParams: VParamsType;\n  hParams: HParamsType;\n  allowed: boolean;\n  currentFacingMode: string;\n  device: Device | null;\n  keepBackground: boolean;\n  appliedBackground: boolean;\n  videoProducer: Producer | null;\n\n  // Update functions\n  updateTransportCreatedVideo: (created: boolean) => void;\n  updateVideoAlreadyOn: (videoOn: boolean) => void;\n  updateVideoAction: (videoAction: boolean) => void;\n  updateLocalStream: (stream: MediaStream | null) => void;\n  updateLocalStreamVideo: (stream: MediaStream | null) => void;\n  updateUserDefaultVideoInputDevice: (device: string) => void;\n  updateCurrentFacingMode: (mode: string) => void;\n  updateDefVideoID: (id: string) => void;\n  updateAllowed: (allowed: boolean) => void;\n  updateUpdateMainWindow: (updateMainWindow: boolean) => void;\n  updateParticipants: (participants: Participant[]) => void;\n  updateVideoParams: (params: ProducerOptions) => void;\n  updateIsBackgroundModalVisible: (isVisible: boolean) => void;\n  updateAutoClickBackground: (autoClick: boolean) => void;\n\n  showAlert?: ShowAlert;\n\n  // Media functions\n  createSendTransport: CreateSendTransportType;\n  connectSendTransportVideo: ConnectSendTransportVideoType;\n  reorderStreams: ReorderStreamsType;\n  sleep: SleepType;\n\n  getUpdatedAllParams: () => StreamSuccessVideoParameters;\n  [key: string]: any;\n}\n\nexport interface StreamSuccessVideoOptions {\n  stream: MediaStream;\n  parameters: StreamSuccessVideoParameters;\n}\n\n// Export the type definition for the function\nexport type StreamSuccessVideoType = (options: StreamSuccessVideoOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StreamSuccessVideo {\n  /**\n   * Streams a video successfully by managing the local stream, updating parameters, and handling video transport.\n   *\n   * @param {StreamSuccessVideoOptions} options - The options for streaming the video.\n   * @param {MediaStream} options.stream - The media stream to be used for the video.\n   * @param {Object} options.parameters - The parameters required for streaming.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   *\n   * @returns {Promise<void>} A promise that resolves when the video has been successfully streamed.\n   *\n   * @throws Will throw an error if there is an issue with streaming the video.\n   */\n  streamSuccessVideo = async ({ stream, parameters }: StreamSuccessVideoOptions): Promise<void> => {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    try {\n      let {\n        socket,\n        participants,\n        localStream,\n        transportCreated,\n        transportCreatedVideo,\n        videoAlreadyOn,\n        videoAction,\n        videoParams,\n        localStreamVideo,\n        defVideoID,\n        userDefaultVideoInputDevice,\n        params,\n        videoParamse,\n        islevel,\n        member,\n        updateMainWindow,\n        lock_screen,\n        shared,\n        shareScreenStarted,\n        vParams,\n        hParams,\n        allowed,\n        currentFacingMode,\n        device,\n        keepBackground,\n        appliedBackground,\n        videoProducer,\n\n        // update functions\n        updateTransportCreatedVideo,\n        updateVideoAlreadyOn,\n        updateVideoAction,\n        updateLocalStream,\n        updateLocalStreamVideo,\n        updateUserDefaultVideoInputDevice,\n        updateCurrentFacingMode,\n        updateDefVideoID,\n        updateAllowed,\n        updateUpdateMainWindow,\n        updateParticipants,\n        updateVideoParams,\n        updateIsBackgroundModalVisible,\n        updateAutoClickBackground,\n\n        // mediasfu functions\n        createSendTransport,\n        connectSendTransportVideo,\n        showAlert,\n        reorderStreams,\n        sleep,\n      } = parameters;\n\n      localStreamVideo = stream;\n      updateLocalStreamVideo(localStreamVideo);\n\n      // Add the video stream track to localStream\n      if (localStream == null) {\n        localStream = new MediaStream([localStreamVideo.getVideoTracks()[0]]);\n        updateLocalStream(localStream);\n      } else {\n        // Remove all video tracks that are currently in the localStream\n        localStream.getVideoTracks().forEach((track: MediaStreamTrack) => {\n          localStream?.removeTrack(track);\n        });\n        // Add the new video track to the localStream\n        localStream.addTrack(localStreamVideo.getVideoTracks()[0]);\n        updateLocalStream(localStream);\n      }\n\n      // Get the video track settings\n      const videoTracked = localStream.getVideoTracks()[0];\n      defVideoID = videoTracked.getSettings().deviceId ?? '';\n      userDefaultVideoInputDevice = defVideoID;\n      currentFacingMode = videoTracked.getSettings().facingMode ?? 'user';\n\n      // Update the state variables\n      if (defVideoID) {\n        updateDefVideoID(defVideoID);\n      }\n      if (userDefaultVideoInputDevice) {\n        updateUserDefaultVideoInputDevice(userDefaultVideoInputDevice);\n      }\n      if (currentFacingMode) {\n        updateCurrentFacingMode(currentFacingMode);\n      }\n\n      allowed = true;\n      updateAllowed(allowed);\n\n      try {\n        // Apply the video constraints\n        if (islevel == '2') {\n          if (!shared || !shareScreenStarted) {\n            params = hParams;\n            videoParamse = { ...params };\n          } else {\n            params = vParams;\n            videoParamse = { ...params };\n          }\n        } else {\n          params = vParams;\n          videoParamse = { ...params };\n        }\n\n        // Remove VP9 codec from the video codecs; support only VP8 and H264\n        let codec = device?.rtpCapabilities?.codecs?.filter(\n          (codec: RtpCodecCapability) =>\n            codec.mimeType.toLowerCase() !== 'video/vp9' && codec.kind === 'video',\n        );\n\n        // Create transport if not created else connect transport\n        if (codec && codec.length > 0) {\n          videoParams = {\n            track: localStream.getVideoTracks()[0],\n            ...videoParamse,\n            codec: codec[0],\n          };\n        } else {\n          throw new Error('No suitable video codec found');\n        }\n        updateVideoParams(videoParams);\n\n        if (keepBackground && appliedBackground) {\n          videoAlreadyOn = true;\n          updateVideoAlreadyOn(videoAlreadyOn);\n\n          updateAutoClickBackground(true);\n          updateIsBackgroundModalVisible(true);\n          await sleep({ ms: 500 });\n          updateIsBackgroundModalVisible(false);\n          updateAutoClickBackground(false);\n        } else {\n          if (!transportCreated) {\n            try {\n              await createSendTransport({\n                parameters: {\n                  ...parameters,\n                  videoParams: videoParams,\n                },\n                option: 'video',\n              });\n            } catch (error) {\n              console.log('Error creating send transport:', error);\n            }\n          } else {\n            try {\n              videoProducer?.close();\n              await sleep({ ms: 500 });\n            } catch {\n              /* handle error */\n            }\n            await connectSendTransportVideo({\n              parameters: parameters,\n              videoParams: videoParams,\n            });\n          }\n        }\n      } catch (error: any) {\n        showAlert?.({\n          message: error.message,\n          type: 'danger',\n          duration: 3000,\n        });\n      }\n\n      // Update the videoAlreadyOn state\n      videoAlreadyOn = true;\n      updateVideoAlreadyOn(videoAlreadyOn);\n\n      // If user requested to share video, update the videoAction state\n      if (videoAction) {\n        videoAction = false;\n        updateVideoAction(videoAction);\n      }\n\n      // Update the display screen if host\n      if (islevel == '2') {\n        updateMainWindow = true;\n        updateUpdateMainWindow(updateMainWindow);\n      }\n\n      // Update the participants array to reflect the change\n      participants.forEach((participant: any) => {\n        if (participant.socketId == socket.id && participant.name == member) {\n          participant.videoOn = true;\n        }\n      });\n      updateParticipants(participants);\n\n      // Update the transport created state\n      transportCreatedVideo = true;\n      updateTransportCreatedVideo(transportCreatedVideo);\n\n      // Reupdate the screen display\n      if (lock_screen) {\n        try {\n          await reorderStreams({\n            add: true,\n            screenChanged: true,\n            parameters: { ...parameters, videoAlreadyOn },\n          });\n        } catch (error) {\n          console.log('Error reordering streams with lock screen:', error);\n        }\n      } else {\n        try {\n          await reorderStreams({\n            add: false,\n            screenChanged: true,\n            parameters: { ...parameters, videoAlreadyOn },\n          });\n        } catch (error) {\n          console.log('Error reordering streams without lock screen:', error);\n        }\n      }\n    } catch (error: any) {\n      const { showAlert } = parameters;\n      console.log('Error in streamSuccessVideo:', error);\n      showAlert?.({\n        message: error.message,\n        type: 'danger',\n        duration: 3000,\n      });\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport {\n  Participant,\n  PrepopulateUserMediaParameters,\n  ShowAlert,\n  CreateSendTransportParameters,\n  ConnectSendTransportAudioParameters,\n  ResumeSendTransportAudioParameters,\n  PrepopulateUserMediaType,\n  CreateSendTransportType,\n  ConnectSendTransportAudioType,\n  ResumeSendTransportAudioType,\n} from '../@types/types';\nimport { ProducerOptions } from 'mediasoup-client/lib/types';\nexport interface StreamSuccessAudioParameters\n  extends CreateSendTransportParameters,\n    ConnectSendTransportAudioParameters,\n    ResumeSendTransportAudioParameters,\n    PrepopulateUserMediaParameters {\n  socket: Socket;\n  participants: Participant[];\n  localStream: MediaStream | null;\n  transportCreated: boolean;\n  transportCreatedAudio: boolean;\n  audioAlreadyOn: boolean;\n  micAction: boolean;\n  audioParams: ProducerOptions;\n  localStreamAudio: MediaStream | null;\n  defAudioID: string;\n  userDefaultAudioInputDevice: string;\n  params: ProducerOptions;\n  audioParamse?: ProducerOptions;\n  aParams: ProducerOptions;\n  hostLabel: string;\n  islevel: string;\n  member: string;\n  updateMainWindow: boolean;\n  lock_screen: boolean;\n  shared: boolean;\n  videoAlreadyOn: boolean;\n  showAlert?: ShowAlert;\n\n  updateParticipants: (participants: Participant[]) => void;\n  updateTransportCreated: (transportCreated: boolean) => void;\n  updateTransportCreatedAudio: (transportCreatedAudio: boolean) => void;\n  updateAudioAlreadyOn: (audioAlreadyOn: boolean) => void;\n  updateMicAction: (micAction: boolean) => void;\n  updateAudioParams: (audioParams: ProducerOptions) => void;\n  updateLocalStream: (localStream: MediaStream | null) => void;\n  updateLocalStreamAudio: (localStreamAudio: MediaStream | null) => void;\n  updateDefAudioID: (defAudioID: string) => void;\n  updateUserDefaultAudioInputDevice: (userDefaultAudioInputDevice: string) => void;\n  updateUpdateMainWindow: (updateMainWindow: boolean) => void;\n\n  // mediasfu functions\n  createSendTransport: CreateSendTransportType;\n  connectSendTransportAudio: ConnectSendTransportAudioType;\n  resumeSendTransportAudio: ResumeSendTransportAudioType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n\n  getUpdatedAllParams: () => StreamSuccessAudioParameters;\n  [key: string]: any;\n}\n\nexport interface StreamSuccessAudioOptions {\n  stream: MediaStream;\n  parameters: StreamSuccessAudioParameters;\n}\n\n// Export the type definition for the function\nexport type StreamSuccessAudioType = (options: StreamSuccessAudioOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StreamSuccessAudio {\n  /**\n   * Handles the successful streaming of audio by setting up the necessary transports and updating the relevant states.\n   *\n   * @param {Object} options - The options for streaming success audio.\n   * @param {MediaStream} options.stream - The media stream containing the audio track.\n   * @param {Object} options.parameters - The parameters required for setting up the audio stream.\n   * @param {Object} options.parameters.socket - The socket connection.\n   * @param {Array} options.parameters.participants - The list of participants.\n   * @param {MediaStream} options.parameters.localStream - The local media stream.\n   * @param {boolean} options.parameters.transportCreated - Flag indicating if the transport is created.\n   * @param {boolean} options.parameters.transportCreatedAudio - Flag indicating if the audio transport is created.\n   * @param {boolean} options.parameters.audioAlreadyOn - Flag indicating if the audio is already on.\n   * @param {boolean} options.parameters.micAction - Flag indicating the microphone action.\n   * @param {Object} options.parameters.audioParams - The audio parameters.\n   * @param {MediaStream} options.parameters.localStreamAudio - The local audio stream.\n   * @param {string} options.parameters.defAudioID - The default audio device ID.\n   * @param {string} options.parameters.userDefaultAudioInputDevice - The user default audio input device.\n   * @param {Object} options.parameters.params - Additional parameters.\n   * @param {Object} options.parameters.audioParamse - Additional audio parameters.\n   * @param {Object} options.parameters.aParams - Additional parameters for audio.\n   * @param {string} options.parameters.hostLabel - The label of the host.\n   * @param {string} options.parameters.islevel - The level of the user.\n   * @param {string} options.parameters.member - The member name.\n   * @param {boolean} options.parameters.updateMainWindow - Flag indicating if the main window should be updated.\n   * @param {boolean} options.parameters.lock_screen - Flag indicating if the screen is locked.\n   * @param {boolean} options.parameters.shared - Flag indicating if the screen is shared.\n   * @param {boolean} options.parameters.videoAlreadyOn - Flag indicating if the video is already on.\n   * @param {Function} options.parameters.showAlert - Function to show alert messages.\n   * @param {Function} options.parameters.updateParticipants - Function to update participants.\n   * @param {Function} options.parameters.updateTransportCreated - Function to update transport created flag.\n   * @param {Function} options.parameters.updateTransportCreatedAudio - Function to update audio transport created flag.\n   * @param {Function} options.parameters.updateAudioAlreadyOn - Function to update audio already on flag.\n   * @param {Function} options.parameters.updateMicAction - Function to update microphone action flag.\n   * @param {Function} options.parameters.updateAudioParams - Function to update audio parameters.\n   * @param {Function} options.parameters.updateLocalStream - Function to update local stream.\n   * @param {Function} options.parameters.updateLocalStreamAudio - Function to update local audio stream.\n   * @param {Function} options.parameters.updateDefAudioID - Function to update default audio device ID.\n   * @param {Function} options.parameters.updateUserDefaultAudioInputDevice - Function to update user default audio input device.\n   * @param {Function} options.parameters.updateUpdateMainWindow - Function to update main window flag.\n   * @param {Function} options.parameters.createSendTransport - Function to create send transport.\n   * @param {Function} options.parameters.connectSendTransportAudio - Function to connect send transport audio.\n   * @param {Function} options.parameters.resumeSendTransportAudio - Function to resume send transport audio.\n   * @param {Function} options.parameters.prepopulateUserMedia - Function to prepopulate user media.\n   * @returns {Promise<void>} A promise that resolves when the audio streaming setup is complete.\n   */\n\n  async streamSuccessAudio({ stream, parameters }: StreamSuccessAudioOptions): Promise<void> {\n    let {\n      socket,\n      participants,\n      localStream,\n      transportCreated,\n      transportCreatedAudio,\n      audioAlreadyOn,\n      micAction,\n      audioParams,\n      localStreamAudio,\n      defAudioID,\n      userDefaultAudioInputDevice,\n      params,\n      audioParamse,\n      aParams,\n      hostLabel,\n      islevel,\n      member,\n      updateMainWindow,\n      lock_screen,\n      shared,\n      videoAlreadyOn,\n      showAlert,\n\n      // update functions\n      updateParticipants,\n      updateTransportCreated,\n      updateTransportCreatedAudio,\n      updateAudioAlreadyOn,\n      updateMicAction,\n      updateAudioParams,\n      updateLocalStream,\n      updateLocalStreamAudio,\n      updateDefAudioID,\n      updateUserDefaultAudioInputDevice,\n      updateUpdateMainWindow,\n\n      // mediasfu functions\n      createSendTransport,\n      connectSendTransportAudio,\n      resumeSendTransportAudio,\n      prepopulateUserMedia,\n    } = parameters;\n\n    localStreamAudio = stream;\n    updateLocalStreamAudio(localStreamAudio);\n\n    // Add the audio stream track to the localStream\n    if (localStream == null) {\n      localStream = new MediaStream([localStreamAudio.getAudioTracks()[0]]);\n      updateLocalStream(localStream);\n    } else {\n      localStream.addTrack(localStreamAudio.getAudioTracks()[0]);\n      updateLocalStream(localStream);\n    }\n\n    const audioTracked = localStream.getAudioTracks()[0];\n    defAudioID = audioTracked.getSettings().deviceId || '';\n    userDefaultAudioInputDevice = defAudioID;\n\n    // Update the state variables\n    updateDefAudioID(defAudioID);\n    updateUserDefaultAudioInputDevice(userDefaultAudioInputDevice);\n\n    try {\n      params = aParams;\n      audioParamse = { ...params };\n\n      audioParams = { track: localStream.getAudioTracks()[0], ...audioParamse };\n      updateAudioParams(audioParams);\n\n      // Create transport if not created else connect transport\n      if (!transportCreated) {\n        try {\n          await createSendTransport({\n            parameters: {\n              ...parameters,\n              audioParams: audioParams,\n            },\n            option: 'audio',\n          });\n        } catch (error) {\n          console.error('Error creating send transport:', error);\n        }\n      } else {\n        if (!transportCreatedAudio) {\n          await connectSendTransportAudio({\n            audioParams,\n            parameters,\n          });\n        } else {\n          await resumeSendTransportAudio({ parameters });\n        }\n      }\n    } catch (error: any) {\n      showAlert?.({\n        message: error.message,\n        type: 'danger',\n        duration: 3000,\n      });\n    }\n\n    // Update the participants array to reflect the change\n    audioAlreadyOn = true;\n    updateAudioAlreadyOn(audioAlreadyOn);\n\n    if (micAction) {\n      micAction = false;\n      updateMicAction(micAction);\n    }\n\n    participants.forEach((participant: any) => {\n      if (participant.socketId == socket.id && participant.name == member) {\n        participant.muted = false;\n      }\n    });\n    updateParticipants(participants);\n\n    // Update the transport created state\n    transportCreated = true;\n    transportCreatedAudio = true;\n    updateTransportCreated(transportCreated);\n    updateTransportCreatedAudio(transportCreatedAudio);\n\n    // Reupdate screen display if host\n    if (videoAlreadyOn == false && islevel == '2') {\n      if (!lock_screen && !shared) {\n        updateMainWindow = true;\n        updateUpdateMainWindow(updateMainWindow);\n        await prepopulateUserMedia({ name: hostLabel, parameters });\n        updateMainWindow = false;\n        updateUpdateMainWindow(updateMainWindow);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport {\n  SleepType,\n  CreateSendTransportType,\n  ConnectSendTransportScreenType,\n  DisconnectSendTransportScreenType,\n  StopShareScreenType,\n  ReorderStreamsType,\n  PrepopulateUserMediaType,\n  RePortType,\n  ShowAlert,\n  CreateSendTransportParameters,\n  ConnectSendTransportScreenParameters,\n  DisconnectSendTransportScreenParameters,\n  StopShareScreenParameters,\n  ReorderStreamsParameters,\n  PrepopulateUserMediaParameters,\n  EventType,\n} from '../@types/types';\n\nexport interface StreamSuccessScreenParameters\n  extends CreateSendTransportParameters,\n    ConnectSendTransportScreenParameters,\n    DisconnectSendTransportScreenParameters,\n    StopShareScreenParameters,\n    ReorderStreamsParameters,\n    PrepopulateUserMediaParameters {\n  socket: Socket;\n  transportCreated: boolean;\n  localStreamScreen: MediaStream | null;\n  screenAlreadyOn: boolean;\n  screenAction: boolean;\n  transportCreatedScreen: boolean;\n  hostLabel: string;\n  eventType: EventType;\n  showAlert?: ShowAlert;\n  annotateScreenStream: boolean;\n  shared: boolean;\n\n  updateTransportCreatedScreen: (transportCreatedScreen: boolean) => void;\n  updateScreenAlreadyOn: (screenAlreadyOn: boolean) => void;\n  updateScreenAction: (screenAction: boolean) => void;\n  updateTransportCreated: (transportCreated: boolean) => void;\n  updateLocalStreamScreen: (localStreamScreen: MediaStream | null) => void;\n  updateShared: (shared: boolean) => void;\n  updateIsScreenboardModalVisible: (isVisible: boolean) => void;\n\n  // mediasfu functions\n  sleep: SleepType;\n  createSendTransport: CreateSendTransportType;\n  connectSendTransportScreen: ConnectSendTransportScreenType;\n  disconnectSendTransportScreen: DisconnectSendTransportScreenType;\n  stopShareScreen: StopShareScreenType;\n  reorderStreams: ReorderStreamsType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  rePort: RePortType;\n\n  getUpdatedAllParams: () => StreamSuccessScreenParameters;\n  [key: string]: any;\n}\n\nexport interface StreamSuccessScreenOptions {\n  stream: MediaStream;\n  parameters: StreamSuccessScreenParameters;\n}\n\n// Export the type definition for the function\nexport type StreamSuccessScreenType = (options: StreamSuccessScreenOptions) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class StreamSuccessScreen {\n  /**\n   * Handles the successful initiation of screen sharing.\n   *\n   * @param {StreamSuccessScreenOptions} options - The options for the screen sharing success handler.\n   * @param {MediaStream} options.stream - The media stream to be shared.\n   * @param {Object} options.parameters - The parameters required for screen sharing.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {Socket} options.parameters.socket - The socket instance for communication.\n   * @param {boolean} options.parameters.transportCreated - Flag indicating if the transport is already created.\n   * @param {MediaStream} options.parameters.localStreamScreen - The local screen media stream.\n   * @param {boolean} options.parameters.screenAlreadyOn - Flag indicating if the screen is already being shared.\n   * @param {boolean} options.parameters.screenAction - Flag indicating if the screen share action is requested.\n   * @param {boolean} options.parameters.transportCreatedScreen - Flag indicating if the screen transport is created.\n   * @param {string} options.parameters.hostLabel - The label of the host.\n   * @param {string} options.parameters.eventType - The type of the event (e.g., conference).\n   * @param {Function} options.parameters.showAlert - Function to show alerts.\n   * @param {boolean} options.parameters.annotateScreenStream - Flag indicating if screen annotation is enabled.\n   * @param {Function} options.parameters.updateTransportCreatedScreen - Function to update the screen transport creation state.\n   * @param {Function} options.parameters.updateScreenAlreadyOn - Function to update the screen sharing state.\n   * @param {Function} options.parameters.updateScreenAction - Function to update the screen action state.\n   * @param {Function} options.parameters.updateTransportCreated - Function to update the transport creation state.\n   * @param {Function} options.parameters.updateLocalStreamScreen - Function to update the local screen stream.\n   * @param {Function} options.parameters.updateShared - Function to update the shared state.\n   * @param {Function} options.parameters.updateIsScreenboardModalVisible - Function to update the screenboard modal visibility.\n   * @param {Function} options.parameters.sleep - Function to pause execution for a specified duration.\n   * @param {Function} options.parameters.createSendTransport - Function to create a send transport.\n   * @param {Function} options.parameters.connectSendTransportScreen - Function to connect the send transport for screen sharing.\n   * @param {Function} options.parameters.disconnectSendTransportScreen - Function to disconnect the send transport for screen sharing.\n   * @param {Function} options.parameters.stopShareScreen - Function to stop screen sharing.\n   * @param {Function} options.parameters.reorderStreams - Function to reorder streams.\n   * @param {Function} options.parameters.prepopulateUserMedia - Function to prepopulate user media.\n   * @param {Function} options.parameters.rePort - Function to reinitialize ports.\n   *\n   * @returns {Promise<void>} A promise that resolves when the screen sharing setup is complete.\n   */\n  async streamSuccessScreen({ stream, parameters }: StreamSuccessScreenOptions): Promise<void> {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      socket,\n      transportCreated,\n      localStreamScreen,\n      screenAlreadyOn,\n      screenAction,\n      transportCreatedScreen,\n      hostLabel,\n      eventType,\n      showAlert,\n      annotateScreenStream,\n\n      // updates for the above\n      updateTransportCreatedScreen,\n      updateScreenAlreadyOn,\n      updateScreenAction,\n      updateTransportCreated,\n      updateLocalStreamScreen,\n      updateShared,\n      updateIsScreenboardModalVisible,\n      sleep,\n\n      // mediasfu functions\n      createSendTransport,\n      connectSendTransportScreen,\n      disconnectSendTransportScreen,\n      stopShareScreen,\n      reorderStreams,\n      prepopulateUserMedia,\n      rePort,\n    } = parameters;\n\n    // Share screen on success\n    localStreamScreen = stream;\n    updateLocalStreamScreen(localStreamScreen);\n\n    try {\n      // Create transport if not created else connect transport\n      if (!transportCreated) {\n        await createSendTransport({\n          option: 'screen',\n          parameters: { ...parameters, localStreamScreen },\n        });\n      } else {\n        await connectSendTransportScreen({\n          stream: localStreamScreen,\n          parameters: { ...parameters, localStreamScreen },\n        });\n      }\n\n      // Alert the socket that you are sharing screen\n      socket.emit('startScreenShare');\n    } catch (error: any) {\n      showAlert?.({\n        message: error.message,\n        type: 'danger',\n        duration: 3000,\n      });\n    }\n\n    // Reupdate the screen display\n    try {\n      updateShared(true);\n      await prepopulateUserMedia({\n        name: hostLabel,\n        parameters: { ...parameters, localStreamScreen, shared: true },\n      });\n    } catch {\n      /* handle error */\n    }\n\n    // Update the participants array to reflect the change\n    screenAlreadyOn = true;\n    updateScreenAlreadyOn(screenAlreadyOn);\n\n    // Reorder streams if required\n    try {\n      if (eventType == 'conference') {\n        await reorderStreams({ add: false, screenChanged: true, parameters });\n        await prepopulateUserMedia({ name: hostLabel, parameters });\n      } else {\n        await reorderStreams({ parameters });\n      }\n    } catch (error) {\n      try {\n        await rePort({ parameters });\n      } catch {\n        /* handle error */\n      }\n    }\n\n    // Handle screen share end\n    localStreamScreen.getVideoTracks()[0].onended = async function () {\n      // Supports both manual and automatic screen share end\n      await disconnectSendTransportScreen({ parameters });\n      await stopShareScreen({ parameters });\n    };\n\n    // If user requested to share screen, update the screenAction state\n    if (screenAction == true) {\n      screenAction = false;\n    }\n    updateScreenAction(screenAction);\n\n    // Update the transport created state\n    transportCreatedScreen = true;\n    updateTransportCreatedScreen(transportCreatedScreen);\n    updateTransportCreated(transportCreated);\n\n    // Handle screen annotation modal\n    try {\n      if (annotateScreenStream) {\n        annotateScreenStream = false;\n        updateIsScreenboardModalVisible(true);\n        await sleep({ ms: 500 });\n        updateIsScreenboardModalVisible(false);\n      }\n    } catch (error) {\n      //console.log('Error handling screen annotation:', error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Producer, ProducerCodecOptions, ProducerOptions } from 'mediasoup-client/lib/types';\nimport { Socket } from 'socket.io-client';\nimport {\n  PrepopulateUserMediaParameters,\n  PrepopulateUserMediaType,\n  CreateSendTransportParameters,\n  CreateSendTransportType,\n  ConnectSendTransportAudioParameters,\n  ConnectSendTransportAudioType,\n  SleepType,\n} from '../@types/types';\n\n/**\n * Handles the success of switching audio devices in a streaming context.\n * @async\n * @function\n * @param {Object} parameters - The parameters object containing necessary variables.\n * @param {MediaStream} stream - The new MediaStream with the switched audio device.\n */\nexport interface StreamSuccessAudioSwitchParameters\n  extends PrepopulateUserMediaParameters,\n    CreateSendTransportParameters,\n    ConnectSendTransportAudioParameters {\n  audioProducer: Producer | null;\n  socket: Socket;\n  roomName: string;\n  localStream: MediaStream | null;\n  localStreamAudio: MediaStream | null;\n  audioParams: ProducerOptions;\n  audioPaused: boolean;\n  audioAlreadyOn: boolean;\n  transportCreated: boolean;\n  audioParamse?: ProducerCodecOptions;\n  defAudioID: string;\n  userDefaultAudioInputDevice: string;\n  hostLabel: string;\n  updateMainWindow: boolean;\n  videoAlreadyOn: boolean;\n  islevel: string;\n  lock_screen: boolean;\n  shared: boolean;\n\n  updateAudioProducer: (audioProducer: Producer | null) => void;\n  updateLocalStream: (localStream: MediaStream | null) => void;\n  updateAudioParams: (audioParams: ProducerOptions) => void;\n  updateDefAudioID: (defAudioID: string) => void;\n  updateUserDefaultAudioInputDevice: (userDefaultAudioInputDevice: string) => void;\n  updateUpdateMainWindow: (updateMainWindow: boolean) => void;\n\n  // mediasfu functions\n  sleep: SleepType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  createSendTransport: CreateSendTransportType;\n  connectSendTransportAudio: ConnectSendTransportAudioType;\n\n  getUpdatedAllParams: () => StreamSuccessAudioSwitchParameters;\n  [key: string]: any;\n}\n\nexport interface StreamSuccessAudioSwitchOptions {\n  stream: MediaStream;\n  parameters: StreamSuccessAudioSwitchParameters;\n}\n\n// Export the type definition for the function\nexport type StreamSuccessAudioSwitchType = (\n  options: StreamSuccessAudioSwitchOptions,\n) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StreamSuccessAudioSwitch {\n  /**\n   * Handles the switching of the audio stream upon successful stream connection.\n   *\n   * @param {Object} options - The options for the stream success audio switch.\n   * @param {MediaStream} options.stream - The new media stream.\n   * @param {Object} options.parameters - The parameters required for the audio switch.\n   * @param {Producer} options.parameters.audioProducer - The current audio producer.\n   * @param {Socket} options.parameters.socket - The socket connection.\n   * @param {string} options.parameters.roomName - The name of the room.\n   * @param {MediaStream} options.parameters.localStream - The local media stream.\n   * @param {MediaStream} options.parameters.localStreamAudio - The local audio stream.\n   * @param {Object} options.parameters.audioParams - The audio parameters.\n   * @param {boolean} options.parameters.audioPaused - Indicates if the audio is paused.\n   * @param {boolean} options.parameters.audioAlreadyOn - Indicates if the audio is already on.\n   * @param {boolean} options.parameters.transportCreated - Indicates if the transport is created.\n   * @param {Object} options.parameters.audioParamse - Additional audio parameters.\n   * @param {string} options.parameters.defAudioID - The default audio device ID.\n   * @param {string} options.parameters.userDefaultAudioInputDevice - The user default audio input device.\n   * @param {string} options.parameters.hostLabel - The host label.\n   * @param {boolean} options.parameters.updateMainWindow - Indicates if the main window should be updated.\n   * @param {boolean} options.parameters.videoAlreadyOn - Indicates if the video is already on.\n   * @param {string} options.parameters.islevel - The participant's level.\n   * @param {boolean} options.parameters.lock_screen - Indicates if the screen is locked.\n   * @param {boolean} options.parameters.shared - Indicates if the screen is shared.\n   * @param {Function} options.parameters.updateAudioProducer - Function to update the audio producer.\n   * @param {Function} options.parameters.updateLocalStream - Function to update the local stream.\n   * @param {Function} options.parameters.updateAudioParams - Function to update the audio parameters.\n   * @param {Function} options.parameters.updateDefAudioID - Function to update the default audio device ID.\n   * @param {Function} options.parameters.updateUserDefaultAudioInputDevice - Function to update the user default audio input device.\n   * @param {Function} options.parameters.updateUpdateMainWindow - Function to update the main window.\n   * @param {Function} options.parameters.sleep - Function to pause execution for a specified time.\n   * @param {Function} options.parameters.prepopulateUserMedia - Function to prepopulate user media.\n   * @param {Function} options.parameters.createSendTransport - Function to create a send transport.\n   * @param {Function} options.parameters.connectSendTransportAudio - Function to connect the send transport for audio.\n   *\n   * @returns {Promise<void>} A promise that resolves when the audio switch is complete.\n   */\n\n  async streamSuccessAudioSwitch({\n    stream,\n    parameters,\n  }: StreamSuccessAudioSwitchOptions): Promise<void> {\n    let {\n      audioProducer,\n      socket,\n      roomName,\n      localStream,\n      localStreamAudio,\n      audioParams,\n      audioPaused,\n      audioAlreadyOn,\n      transportCreated,\n      audioParamse,\n      defAudioID,\n      userDefaultAudioInputDevice,\n      hostLabel,\n      updateMainWindow,\n      videoAlreadyOn,\n      islevel,\n      lock_screen,\n      shared,\n      updateAudioProducer,\n      updateLocalStream,\n      updateAudioParams,\n      updateDefAudioID,\n      updateUserDefaultAudioInputDevice,\n      updateUpdateMainWindow,\n\n      // mediasfu functions\n      sleep,\n      prepopulateUserMedia,\n      createSendTransport,\n      connectSendTransportAudio,\n    } = parameters;\n\n    // Get the new default audio device ID\n    let newDefAudioID = stream.getAudioTracks()[0].getSettings().deviceId;\n\n    // Check if the audio device has changed\n    if (newDefAudioID != defAudioID) {\n      // Close the current audioProducer\n      if (audioProducer) {\n        audioProducer.close();\n        updateAudioProducer(audioProducer);\n      }\n\n      // Emit a pauseProducerMedia event to pause the audio media\n      socket.emit('pauseProducerMedia', { mediaTag: 'audio', roomName: roomName, force: true });\n\n      // Update the localStreamAudio with the new audio tracks\n      localStreamAudio = stream;\n\n      // If localStream is null, create a new MediaStream with the new audio track\n      if (localStream == null) {\n        localStream = new MediaStream([localStreamAudio.getAudioTracks()[0]]);\n      } else {\n        // Remove all existing audio tracks from localStream and add the new audio track\n        localStream.getAudioTracks().forEach((track: MediaStreamTrack) => {\n          localStream?.removeTrack(track);\n        });\n        localStream.addTrack(localStreamAudio.getAudioTracks()[0]);\n      }\n\n      // Update localStream\n      updateLocalStream(localStream);\n\n      // Get the new default audio device ID from the new audio track\n      const audioTracked = localStream.getAudioTracks()[0];\n      defAudioID = audioTracked.getSettings().deviceId ?? '';\n      updateDefAudioID(defAudioID);\n\n      // Update userDefaultAudioInputDevice\n      userDefaultAudioInputDevice = defAudioID;\n      updateUserDefaultAudioInputDevice(userDefaultAudioInputDevice);\n\n      // Update audioParams with the new audio track\n      audioParams = { track: localStream.getAudioTracks()[0], ...audioParamse };\n      updateAudioParams(audioParams);\n\n      // Sleep for 500 milliseconds\n      await sleep({ ms: 500 });\n\n      // Create a new send transport if not created, otherwise, connect the existing transport\n      if (!transportCreated) {\n        try {\n          await createSendTransport({\n            parameters: {\n              ...parameters,\n              audioParams: audioParams,\n            },\n            option: 'audio',\n          });\n        } catch (error) {\n          console.error('Error creating send transport:', error);\n        }\n      } else {\n        await connectSendTransportAudio({\n          audioParams,\n          parameters,\n        });\n      }\n\n      // If audio is paused and not already on, pause the audioProducer and emit a pauseProducerMedia event\n      if (audioPaused && !audioAlreadyOn) {\n        audioProducer?.pause();\n        updateAudioProducer(audioProducer);\n        socket.emit('pauseProducerMedia', { mediaTag: 'audio', roomName: roomName });\n      }\n    }\n\n    // Update the UI based on the participant's level and screen lock status\n    if (!videoAlreadyOn && islevel === '2') {\n      if (!lock_screen && !shared) {\n        // Set updateMainWindow to true, prepopulate user media, and set updateMainWindow back to false\n        updateMainWindow = true;\n        updateUpdateMainWindow(updateMainWindow);\n        await prepopulateUserMedia({ name: hostLabel, parameters });\n        updateMainWindow = false;\n        updateUpdateMainWindow(updateMainWindow);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface CheckPermissionOptions {\n  audioSetting: string;\n  videoSetting: string;\n  screenshareSetting: string;\n  chatSetting: string;\n  permissionType: 'audioSetting' | 'videoSetting' | 'screenshareSetting' | 'chatSetting';\n}\n\n// Export the type definition for the function\nexport type CheckPermissionType = (options: CheckPermissionOptions) => Promise<number>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckPermission {\n  /**\n   * Checks the permission based on the provided settings.\n   *\n   * @param {CheckPermissionOptions} options - The options for checking permissions.\n   * @param {string} options.permissionType - The type of permission to check. Can be \"audioSetting\", \"videoSetting\", \"screenshareSetting\", or \"chatSetting\".\n   * @param {string} options.audioSetting - The setting for audio permission. Can be \"allow\", \"approval\", or other.\n   * @param {string} options.videoSetting - The setting for video permission. Can be \"allow\", \"approval\", or other.\n   * @param {string} options.screenshareSetting - The setting for screenshare permission. Can be \"allow\", \"approval\", or other.\n   * @param {string} options.chatSetting - The setting for chat permission. Can be \"allow\", \"approval\", or other.\n   * @returns {Promise<number>} - Returns 0 if the setting is \"allow\", 1 if the setting is \"approval\", and 2 for other settings or invalid permission types.\n   * @throws Will throw an error if an unexpected error occurs during the permission check.\n   */\n\n  async checkPermission({\n    permissionType,\n    audioSetting,\n    videoSetting,\n    screenshareSetting,\n    chatSetting,\n  }: CheckPermissionOptions): Promise<number> {\n    try {\n      // Perform a switch case to check for the permissionType and return the response\n      switch (permissionType) {\n        case 'audioSetting':\n          if (audioSetting === 'allow') {\n            return 0;\n          } else if (audioSetting === 'approval') {\n            return 1;\n          } else {\n            return 2;\n          }\n        case 'videoSetting':\n          if (videoSetting === 'allow') {\n            return 0;\n          } else if (videoSetting === 'approval') {\n            return 1;\n          } else {\n            return 2;\n          }\n        case 'screenshareSetting':\n          if (screenshareSetting === 'allow') {\n            return 0;\n          } else if (screenshareSetting === 'approval') {\n            return 1;\n          } else {\n            return 2;\n          }\n        case 'chatSetting':\n          if (chatSetting === 'allow') {\n            return 0;\n          } else if (chatSetting === 'approval') {\n            return 1;\n          } else {\n            return 2;\n          }\n        default:\n          // throw new Error(`Invalid permissionType: ${permissionType}`);\n          return 2;\n      }\n    } catch (error) {\n      // console.log('checkPermission error', error);\n      // throw error;\n      return 2;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Transport, CloseAndResizeParameters, CloseAndResizeType } from '../../@types/types';\n\nexport interface ProducerClosedParameters extends CloseAndResizeParameters {\n  consumerTransports: Transport[];\n  screenId?: string;\n  updateConsumerTransports: (transports: Transport[]) => void;\n\n  // mediasfu functions\n  closeAndResize: CloseAndResizeType;\n  getUpdatedAllParams: () => ProducerClosedParameters;\n  [key: string]: any;\n}\n\nexport interface ProducerClosedOptions {\n  remoteProducerId: string;\n  parameters: ProducerClosedParameters;\n}\n\n// Export the type definition for the function\nexport type ProducerClosedType = (options: ProducerClosedOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProducerClosed {\n  /**\n   * Handles the closing of a producer and resizes video elements.\n   * @param {Object} options - The options object containing necessary variables.\n   * @param {string} options.remoteProducerId - The ID of the remote producer.\n   * @param {any} options.parameters - Additional parameters required for the function.\n   * @returns {Promise<void>}\n   */\n  producerClosed = async ({\n    remoteProducerId,\n    parameters,\n  }: ProducerClosedOptions): Promise<void> => {\n    let {\n      consumerTransports,\n      screenId,\n      updateConsumerTransports,\n\n      // mediasfu functions\n      closeAndResize,\n    } = parameters;\n\n    // Handle producer closed\n    const producerToClose = consumerTransports.find(\n      (transportData: any) => transportData.producerId === remoteProducerId,\n    );\n\n    if (!producerToClose) {\n      return;\n    }\n\n    // Check if the ID of the producer to close is == screenId\n    let kind: string = producerToClose.consumer.kind;\n\n    if (producerToClose.producerId == screenId) {\n      kind = 'screenshare';\n    }\n    try {\n      await producerToClose['consumerTransport'].close();\n    } catch (error) {\n      console.error('Error closing consumerTransport:', error);\n    }\n\n    try {\n      producerToClose.consumer.close();\n    } catch (error) {\n      console.error('Error closing consumer:', error);\n    }\n\n    consumerTransports = consumerTransports.filter(\n      (transportData: any) => transportData.producerId !== remoteProducerId,\n    );\n    updateConsumerTransports(consumerTransports);\n\n    // Close and resize the videos\n    await closeAndResize({ producerId: remoteProducerId, kind: kind, parameters: parameters });\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport {\n  ReorderStreamsParameters,\n  ReorderStreamsType,\n  ConnectRecvTransportType,\n  ConnectRecvTransportParameters,\n  CreateWebRTCTransportResponse,\n} from '../@types/types';\nimport { Device, DtlsParameters } from 'mediasoup-client/lib/types';\n\nexport interface SignalNewConsumerTransportParameters\n  extends ReorderStreamsParameters,\n    ConnectRecvTransportParameters {\n  device: Device | null;\n  consumingTransports: string[];\n  lock_screen: boolean;\n  updateConsumingTransports: (transports: string[]) => void;\n  connectRecvTransport: ConnectRecvTransportType;\n  reorderStreams: ReorderStreamsType;\n  getUpdatedAllParams: () => SignalNewConsumerTransportParameters;\n  [key: string]: any;\n}\n\nexport interface SignalNewConsumerTransportOptions {\n  remoteProducerId: string;\n  islevel: string;\n  nsock: Socket;\n  parameters: SignalNewConsumerTransportParameters;\n}\n\n// Export the type definition for the function\nexport type SignalNewConsumerTransportType = (\n  options: SignalNewConsumerTransportOptions,\n) => Promise<string[] | void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class SignalNewConsumerTransport {\n  /**\n   * Signals the creation of a new consumer transport.\n   *\n   * @param {Object} options - The options for signaling a new consumer transport.\n   * @param {string} options.remoteProducerId - The ID of the remote producer.\n   * @param {boolean} options.islevel - Indicates the level of the consumer.\n   * @param {any} options.nsock - The socket instance for communication.\n   * @param {SignalNewConsumerTransportOptions} options.parameters - The parameters for the transport.\n   *\n   * @returns {Promise<string[] | void>} A promise that resolves to an array of consuming transports or void.\n   *\n   * @throws Will throw an error if the signaling process fails.\n   *\n   * @example\n   * const options = {\n   *   remoteProducerId: 'producer-id',\n   *   islevel: true,\n   *   nsock: socketInstance,\n   *   parameters: {\n   *     device: mediaDevice,\n   *     consumingTransports: [],\n   *     lock_screen: false,\n   *     updateConsumingTransports: updateFunction,\n   *     connectRecvTransport: connectFunction,\n   *     reorderStreams: reorderFunction,\n   *     getUpdatedAllParams: getUpdatedParamsFunction,\n   *   },\n   * };\n   *\n   * signalNewConsumerTransport(options)\n   *   .then(consumingTransports => {\n   *     console.log('Consuming Transports:', consumingTransports);\n   *   })\n   *   .catch(error => {\n   *     console.error('Error signaling new consumer transport:', error);\n   *   });\n   */\n  signalNewConsumerTransport = async ({\n    remoteProducerId,\n    islevel,\n    nsock,\n    parameters,\n  }: SignalNewConsumerTransportOptions): Promise<string[] | void> => {\n    try {\n      let {\n        device,\n        consumingTransports,\n        lock_screen,\n        updateConsumingTransports,\n        connectRecvTransport,\n        reorderStreams,\n      } = parameters;\n\n      // Get updated parameters\n      const updatedParams = parameters.getUpdatedAllParams();\n      device = updatedParams.device;\n      consumingTransports = updatedParams.consumingTransports;\n\n      // Check if already consuming\n      if (consumingTransports.includes(remoteProducerId)) {\n        return consumingTransports;\n      }\n\n      // Add remote producer ID to consumingTransports array\n      consumingTransports.push(remoteProducerId);\n      updateConsumingTransports(consumingTransports);\n\n      // Emit createWebRtcTransport event to signal a new consumer\n      nsock.emit(\n        'createWebRtcTransport',\n        { consumer: true, islevel },\n        async ({ params }: { params: CreateWebRTCTransportResponse }) => {\n          if (params.error) {\n            // Handle error\n            return;\n          }\n\n          try {\n            // Create a new receiving transport using the received parameters\n            if (!device) {\n              throw new Error('Device is not initialized');\n            }\n            const consumerTransport = device.createRecvTransport({ ...params });\n\n            // Handle 'connect' event for the consumer transport\n            consumerTransport.on(\n              'connect',\n              async (\n                { dtlsParameters }: { dtlsParameters: DtlsParameters },\n                callback: () => void,\n                errback: (error: any) => void,\n              ) => {\n                try {\n                  // Emit transport-recv-connect event to signal connection\n                  nsock.emit('transport-recv-connect', {\n                    dtlsParameters,\n                    serverConsumerTransportId: params.id,\n                  });\n                  callback();\n                } catch (error) {\n                  errback(error);\n                }\n              },\n            );\n\n            // Listen for connection state change\n            consumerTransport.on('connectionstatechange', async (state: string) => {\n              switch (state) {\n                case 'connecting':\n                  // Handle connecting state\n                  break;\n\n                case 'connected':\n                  // Handle connected state\n                  break;\n\n                case 'failed':\n                  // Handle failed state\n                  consumerTransport.close();\n\n                  // Reorder streams based on conditions\n                  if (lock_screen) {\n                    await reorderStreams({ add: true, parameters });\n                  } else {\n                    await reorderStreams({ add: false, parameters });\n                  }\n                  break;\n\n                default:\n                  break;\n              }\n            });\n\n            // Connect the receiving transport\n            await connectRecvTransport({\n              consumerTransport,\n              remoteProducerId,\n              serverConsumerTransportId: params.id,\n              nsock,\n              parameters,\n            });\n          } catch (error) {\n            console.log(error, 'createRecvTransport error');\n            // Handle error\n            return;\n          }\n        },\n      );\n    } catch (error) {\n      console.log(error, 'signalNewConsumerTransport error');\n      // Handle error\n      return;\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { SignalNewConsumerTransport } from '../signal-new-consumer-transport.service';\nimport { Socket } from 'socket.io-client';\nimport {\n  ReorderStreamsParameters,\n  ReorderStreamsType,\n  SignalNewConsumerTransportParameters,\n  ConnectRecvTransportParameters,\n  ConnectRecvTransportType,\n  ShowAlert,\n} from '../../@types/types';\nimport { Device } from 'mediasoup-client/lib/types';\n\nexport interface NewPipeProducerParameters\n  extends ReorderStreamsParameters,\n    SignalNewConsumerTransportParameters,\n    ConnectRecvTransportParameters {\n  first_round: boolean;\n  shareScreenStarted: boolean;\n  shared: boolean;\n  landScaped: boolean;\n  showAlert?: ShowAlert;\n  isWideScreen: boolean;\n  updateFirst_round: (firstRound: boolean) => void;\n  updateLandScaped: (landScaped: boolean) => void;\n  device: Device | null;\n  consumingTransports: string[];\n  lock_screen: boolean;\n  updateConsumingTransports: (transports: string[]) => void;\n\n  // mediasfu functions\n  connectRecvTransport: ConnectRecvTransportType;\n  reorderStreams: ReorderStreamsType;\n  getUpdatedAllParams: () => NewPipeProducerParameters;\n  [key: string]: any;\n}\n\nexport interface NewPipeProducerOptions {\n  producerId: string;\n  islevel: string;\n  nsock: Socket;\n  parameters: NewPipeProducerParameters;\n}\n\n// Export the type definition for the function\nexport type NewPipeProducerType = (options: NewPipeProducerOptions) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class NewPipeProducer {\n  constructor(private signalNewConsumerTransportService: SignalNewConsumerTransport) {}\n\n  /**\n   * Handles new pipe producer events and updates relevant states.\n   * @param {Object} options - The options object containing necessary variables.\n   * @param {string} options.producerId - The ID of the producer.\n   * @param {string} options.islevel - The level of the producer.\n   * @param {any} options.nsock - The socket object.\n   * @param {any} options.parameters - Additional parameters required for the function.\n   * @returns {Promise<void>}\n   */\n  newPipeProducer = async ({\n    producerId,\n    islevel,\n    nsock,\n    parameters,\n  }: NewPipeProducerOptions): Promise<void> => {\n    let {\n      first_round,\n      shareScreenStarted,\n      shared,\n      landScaped,\n      showAlert,\n      isWideScreen,\n      updateFirst_round,\n      updateLandScaped,\n    } = parameters;\n\n    try {\n      // Perform signaling for new consumer transport\n      await this.signalNewConsumerTransportService.signalNewConsumerTransport({\n        remoteProducerId: producerId,\n        islevel: islevel,\n        nsock: nsock,\n        parameters: parameters,\n      });\n\n      first_round = false;\n      if (shareScreenStarted || shared) {\n        if (!isWideScreen) {\n          if (!landScaped) {\n            if (showAlert) {\n              showAlert({\n                message: 'Please rotate your device to landscape mode for better experience',\n                type: 'success',\n                duration: 3000,\n              });\n            }\n            landScaped = true;\n            updateLandScaped(landScaped);\n          }\n        }\n\n        first_round = true;\n        updateFirst_round(first_round);\n      }\n    } catch (error) {\n      console.error('Error in newPipeProducer:', error);\n      throw new Error('Failed to handle new pipe producer event.');\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { GridSizes, ComponentSizes, EventType } from '../@types/types';\nexport interface UpdateMiniCardsGridParameters {\n  updateGridRows: (rows: number) => void;\n  updateGridCols: (cols: number) => void;\n  updateAltGridRows: (rows: number) => void;\n  updateAltGridCols: (cols: number) => void;\n  updateGridSizes: (gridSizes: GridSizes) => void;\n  gridSizes: GridSizes;\n  paginationDirection: string;\n  paginationHeightWidth: number;\n  doPaginate: boolean;\n  componentSizes: ComponentSizes;\n  eventType: EventType;\n\n  getUpdatedAllParams: () => UpdateMiniCardsGridParameters;\n  [key: string]: any;\n}\n\nexport interface UpdateMiniCardsGridOptions {\n  rows: number;\n  cols: number;\n  defal?: boolean;\n  actualRows?: number;\n  parameters: UpdateMiniCardsGridParameters;\n}\n\n// Export the type definition for the function\nexport type UpdateMiniCardsGridType = (options: UpdateMiniCardsGridOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateMiniCardsGrid {\n  /**\n   * Updates the mini cards grid based on the specified rows and columns.\n   *\n   * @param {object} options - The function parameters.\n   * @param {number} options.rows - The number of rows in the grid.\n   * @param {number} options.cols - The number of columns in the grid.\n   * @param {boolean} options.defal - Flag indicating whether to update the default grid or an alternative grid.\n   * @param {number} options.actualRows - The actual number of rows in the grid.\n   * @param {number} options.ind - The index parameter.\n   * @param {object} options.parameters - Additional parameters needed for the function.\n   * @param {function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {function} options.parameters.updateGridRows - Function to update the grid rows.\n   * @param {function} options.parameters.updateGridCols - Function to update the grid columns.\n   * @param {function} options.parameters.updateAltGridRows - Function to update the alternative grid rows.\n   * @param {function} options.parameters.updateAltGridCols - Function to update the alternative grid columns.\n   * @param {function} options.parameters.updateGridSizes - Function to update the grid sizes.\n   * @param {object} options.parameters.gridSizes - Object containing grid width and height.\n   * @param {string} options.parameters.paginationDirection - The direction of pagination ('horizontal' or 'vertical').\n   * @param {number} options.parameters.paginationHeightWidth - The height or width of pagination.\n   * @param {boolean} options.parameters.doPaginate - Flag indicating whether pagination is enabled.\n   * @param {object} options.parameters.componentSizes - Object containing container width and height.\n   * @param {string} options.parameters.eventType - The type of event ('chat', etc.).\n   * @returns {Promise<void>} - A Promise that resolves after updating the mini cards grid.\n   */\n  async updateMiniCardsGrid({\n    rows,\n    cols,\n    defal = true,\n    actualRows = 2,\n    parameters,\n  }: UpdateMiniCardsGridOptions): Promise<void> {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      updateGridRows,\n      updateGridCols,\n      updateAltGridRows,\n      updateAltGridCols,\n      updateGridSizes,\n\n      gridSizes,\n      paginationDirection,\n      paginationHeightWidth,\n      doPaginate,\n      componentSizes,\n      eventType,\n    } = parameters;\n\n    let containerWidth = componentSizes.otherWidth;\n    let containerHeight = componentSizes.otherHeight;\n\n    if (doPaginate) {\n      // if pagination is enabled and direction is horizontal\n      if (paginationDirection == 'horizontal') {\n        containerHeight = containerHeight - paginationHeightWidth;\n      } else {\n        containerWidth = containerWidth - paginationHeightWidth;\n      }\n    }\n\n    let cardSpacing = 3; // 3px margin between cards\n    if (eventType == 'chat') {\n      cardSpacing = 0;\n    }\n    let totalSpacingHorizontal = (cols - 1) * cardSpacing;\n    let totalSpacingVertical = (actualRows - 1) * cardSpacing;\n    let cardWidth;\n    let cardHeight;\n    if (cols == 0 || actualRows == 0) {\n      cardWidth = 0;\n      cardHeight = 0;\n    } else {\n      cardWidth = Math.floor((containerWidth - totalSpacingHorizontal) / cols);\n      cardHeight = Math.floor((containerHeight - totalSpacingVertical) / actualRows);\n    }\n\n    if (defal) {\n      updateGridRows(rows);\n      updateGridCols(cols);\n\n      gridSizes = { ...gridSizes, gridWidth: cardWidth, gridHeight: cardHeight };\n      updateGridSizes(gridSizes);\n    } else {\n      updateAltGridRows(rows);\n      updateAltGridCols(cols);\n\n      gridSizes = { ...gridSizes, altGridWidth: cardWidth, altGridHeight: cardHeight };\n      updateGridSizes(gridSizes);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Stream, Participant } from '../@types/types';\n\nexport interface MixStreamsOptions {\n  alVideoStreams: (Stream | Participant)[];\n  non_alVideoStreams: Participant[];\n  ref_participants: (Stream | Participant)[];\n}\n\n// Export the type definition for the function\nexport type MixStreamsType = (options: MixStreamsOptions) => Promise<(Stream | Participant)[]>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MixStreams {\n  /**\n   * Mixes video and audio streams and participants based on specified parameters.\n   *\n   * @param {Object} options - The options for mixing streams.\n   * @param {Array} options.alVideoStreams - The list of audio and video streams to mix.\n   * @param {Array} options.non_alVideoStreams - The list of non-audio and video streams to mix.\n   * @param {Array} options.ref_participants - The list of reference participants to mix.\n   * @returns {Promise<Array>} A promise that resolves with the mixed streams.\n   * @throws Will throw an error if there is an issue mixing the streams.\n   * @example\n   * ```typescript\n   * mixStreams({\n   *   alVideoStreams: [stream1, stream2],\n   *  non_alVideoStreams: [participant1, participant2],\n   * ref_participants: [participant1, participant2]\n   * });\n   *\n   * ```\n   */\n\n  async mixStreams({\n    alVideoStreams,\n    non_alVideoStreams,\n    ref_participants,\n  }: MixStreamsOptions): Promise<(Stream | Participant)[]> {\n    try {\n      const mixedStreams: any[] = [];\n      const youyouStream = alVideoStreams.find(\n        (obj: any) => obj.producerId === 'youyou' || obj.producerId === 'youyouyou',\n      );\n      alVideoStreams = alVideoStreams.filter(\n        (obj: any) => obj.producerId !== 'youyou' && obj.producerId !== 'youyouyou',\n      );\n\n      const unmutedAlVideoStreams = alVideoStreams.filter((obj: any) => {\n        const participant = ref_participants.find((p: any) => p.videoID === obj.producerId);\n        return !obj.muted && participant && participant.muted === false;\n      });\n\n      const mutedAlVideoStreams = alVideoStreams.filter((obj: any) => {\n        const participant = ref_participants.find((p: any) => p.videoID === obj.producerId);\n        return obj.muted || (participant && participant.muted === true);\n      });\n\n      const nonAlVideoStreams = non_alVideoStreams.slice(); // Create a copy of non_alVideoStreams\n\n      // Add unmutedAlVideoStreams to mixedStreams\n      mixedStreams.push(...unmutedAlVideoStreams);\n\n      // Interleave the mutedAlVideoStreams and nonAlVideoStreams\n      let nonAlIndex = 0;\n      for (let i = 0; i < mutedAlVideoStreams.length; i++) {\n        if (nonAlIndex < nonAlVideoStreams.length) {\n          mixedStreams.push(nonAlVideoStreams[nonAlIndex]);\n          nonAlIndex++;\n        }\n        mixedStreams.push(mutedAlVideoStreams[i]);\n      }\n\n      // Handle remaining nonAlVideoStreams (if any)\n      for (let i = nonAlIndex; i < nonAlVideoStreams.length; i++) {\n        mixedStreams.push(nonAlVideoStreams[i]);\n      }\n\n      // Unshift 'youyou' or 'youyouyou' stream to mixedStreams\n      if (youyouStream) {\n        mixedStreams.unshift(youyouStream);\n      }\n\n      return mixedStreams;\n    } catch (error: any) {\n      // Handle errors during the process of mixing streams\n      console.log('Error mixing streams:', error.message);\n      throw error;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  Stream,\n  Participant,\n  Transport,\n  PrepopulateUserMediaParameters,\n  PrepopulateUserMediaType,\n  RePortParameters,\n  RePortType,\n  ProcessConsumerTransportsParameters,\n  ProcessConsumerTransportsType,\n  ResumePauseStreamsParameters,\n  ResumePauseStreamsType,\n  ReadjustParameters,\n  ReadjustType,\n  AddVideosGridType,\n  AddVideosGridParameters,\n  GetEstimateType,\n  CheckGridType,\n  ResumePauseAudioStreamsParameters,\n  ResumePauseAudioStreamsType,\n  GetEstimateParameters,\n  EventType,\n} from '../@types/types';\n\nexport interface DispStreamsParameters\n  extends PrepopulateUserMediaParameters,\n    RePortParameters,\n    ProcessConsumerTransportsParameters,\n    ResumePauseStreamsParameters,\n    ReadjustParameters,\n    ResumePauseAudioStreamsParameters,\n    GetEstimateParameters,\n    AddVideosGridParameters {\n  consumerTransports: Transport[];\n  streamNames: Stream[];\n  audStreamNames: Stream[];\n  participants: Participant[];\n  ref_participants: Participant[];\n  recordingDisplayType: 'video' | 'media' | 'all';\n  recordingVideoOptimized: boolean;\n  meetingDisplayType: string;\n  meetingVideoOptimized: boolean;\n  currentUserPage: number;\n  hostLabel: string;\n  mainHeightWidth: number;\n  prevMainHeightWidth: number;\n  prevDoPaginate: boolean;\n  doPaginate: boolean;\n  firstAll: boolean;\n  shared: boolean;\n  shareScreenStarted: boolean;\n  shareEnded: boolean;\n  oldAllStreams: (Stream | Participant)[];\n  updateMainWindow: boolean;\n  remoteProducerId?: string;\n  activeNames: string[];\n  dispActiveNames: string[];\n  p_dispActiveNames: string[];\n  nForReadjustRecord: number;\n  first_round: boolean;\n  lock_screen: boolean;\n  chatRefStreams: (Stream | Participant)[];\n  eventType: EventType;\n  islevel: string;\n  localStreamVideo: MediaStream | null;\n\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n  keepBackground: boolean;\n  virtualStream: MediaStream | null;\n\n  updateActiveNames: (names: string[]) => void;\n  updateDispActiveNames: (names: string[]) => void;\n  updateLStreams: (streams: (Stream | Participant)[]) => void;\n  updateChatRefStreams: (streams: (Stream | Participant)[]) => void;\n  updateNForReadjustRecord: (n: number) => void;\n  updateUpdateMainWindow: (value: boolean) => void;\n  updateShowMiniView: (value: boolean) => void;\n\n  // mediasfu functions\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  rePort: RePortType;\n  processConsumerTransports: ProcessConsumerTransportsType;\n  resumePauseStreams: ResumePauseStreamsType;\n  readjust: ReadjustType;\n  addVideosGrid: AddVideosGridType;\n  getEstimate: GetEstimateType;\n  checkGrid: CheckGridType;\n  resumePauseAudioStreams: ResumePauseAudioStreamsType;\n\n  getUpdatedAllParams: () => DispStreamsParameters;\n  [key: string]: any;\n}\n\nexport interface DispStreamsOptions {\n  lStreams: (Stream | Participant)[];\n  ind: number;\n  auto?: boolean;\n  ChatSkip?: boolean;\n  forChatCard?: any;\n  forChatID?: any;\n  parameters: DispStreamsParameters;\n  breakRoom?: number;\n  inBreakRoom?: boolean;\n}\n\n// Export the type definition for the function\nexport type DispStreamsType = (options: DispStreamsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DispStreams {\n  /**\n   * Function to display streams based on various parameters and conditions.\n   *\n   * @param {Object} options - The options object.\n   * @param {Array} options.lStreams - List of streams.\n   * @param {number} options.ind - Index of the current stream.\n   * @param {boolean} [options.auto=false] - Flag to indicate if the function should run automatically.\n   * @param {boolean} [options.ChatSkip=false] - Flag to indicate if chat should be skipped.\n   * @param {string|null} [options.forChatID=null] - ID for chat reference.\n   * @param {Object} options.parameters - Parameters object containing various settings and functions.\n   * @param {number} [options.breakRoom=-1] - Break room number.\n   * @param {boolean} [options.inBreakRoom=false] - Flag to indicate if in break room.\n   *\n   * @returns {Promise<void>} - A promise that resolves when the function completes.\n   *\n   * @async\n   */\n  dispStreams = async ({\n    lStreams,\n    ind,\n    auto = false,\n    ChatSkip = false,\n    forChatID = null,\n    parameters,\n    breakRoom = -1,\n    inBreakRoom = false,\n  }: DispStreamsOptions): Promise<void> => {\n    // function to display streams\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      consumerTransports,\n      streamNames,\n      audStreamNames,\n      participants,\n      ref_participants,\n      recordingDisplayType,\n      recordingVideoOptimized,\n      meetingDisplayType,\n      meetingVideoOptimized,\n      currentUserPage,\n      hostLabel,\n      mainHeightWidth,\n      prevMainHeightWidth,\n      prevDoPaginate,\n      doPaginate,\n      firstAll,\n      shared,\n      shareScreenStarted,\n      shareEnded,\n      oldAllStreams,\n      updateMainWindow,\n      remoteProducerId,\n      activeNames,\n      dispActiveNames,\n      p_dispActiveNames,\n      nForReadjustRecord,\n      first_round,\n      lock_screen,\n      chatRefStreams,\n      eventType,\n      islevel,\n      localStreamVideo,\n\n      breakOutRoomStarted,\n      breakOutRoomEnded,\n      keepBackground,\n      virtualStream,\n\n      updateActiveNames,\n      updateDispActiveNames,\n      updateLStreams,\n      updateChatRefStreams,\n      updateNForReadjustRecord,\n      updateUpdateMainWindow,\n      updateShowMiniView,\n\n      prepopulateUserMedia,\n      rePort,\n      processConsumerTransports,\n      resumePauseStreams,\n      readjust,\n      addVideosGrid,\n      checkGrid,\n      getEstimate,\n      resumePauseAudioStreams,\n    } = parameters;\n\n    let proceed = true;\n\n    let lStreams_ = lStreams.filter(\n      (stream) => stream.producerId !== 'youyou' && stream.producerId !== 'youyouyou',\n    );\n    lStreams_ = lStreams_.filter(\n      (stream) =>\n        stream.id !== 'youyou' &&\n        stream.id !== 'youyouyou' &&\n        stream.name !== 'youyou' &&\n        stream.name !== 'youyouyou',\n    );\n\n    if (eventType === 'chat') {\n      proceed = true;\n    } else if (ind === 0 || (islevel !== '2' && currentUserPage === ind)) {\n      proceed = false;\n\n      lStreams_.forEach((stream) => {\n        let checker = false;\n        let check_level = 0;\n\n        if (recordingDisplayType === 'video') {\n          if (recordingVideoOptimized) {\n            if (\n              Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== ''\n            ) {\n              checker = true;\n              check_level = 0;\n            }\n          } else {\n            if (\n              (Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n                stream.producerId != null &&\n                stream.producerId !== '') ||\n              (Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n                stream.audioID != null &&\n                stream.audioID !== '')\n            ) {\n              checker = true;\n              check_level = 1;\n            }\n          }\n        } else if (recordingDisplayType === 'media') {\n          if (\n            (Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== '') ||\n            (Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n              stream.audioID != null &&\n              stream.audioID !== '')\n          ) {\n            checker = true;\n            check_level = 1;\n          }\n        } else {\n          if (\n            (Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== '') ||\n            (Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n              stream.audioID != null &&\n              stream.audioID !== '') ||\n            (Object.prototype.hasOwnProperty.call(stream, 'name') &&\n              stream.name !== null &&\n              stream.name != '')\n          ) {\n            checker = true;\n            check_level = 2;\n          }\n        }\n\n        let participant;\n\n        if (checker) {\n          if (check_level === 0) {\n            if (\n              Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== ''\n            ) {\n              participant = streamNames.find((obj: any) => obj.producerId === stream.producerId);\n            }\n          } else if (check_level === 1) {\n            if (\n              Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== ''\n            ) {\n              participant = streamNames.find((obj: any) => obj.producerId === stream.producerId);\n            }\n            if (!participant) {\n              if (\n                Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n                stream.audioID != null &&\n                stream.audioID !== ''\n              ) {\n                participant = audStreamNames.find((obj: any) => obj.producerId === stream.audioID);\n                if (!participant) {\n                  participant = ref_participants.find((obj: any) => obj.audioID === stream.audioID);\n                }\n              }\n            }\n          } else if (check_level === 2) {\n            if (\n              Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== ''\n            ) {\n              participant = streamNames.find((obj: any) => obj.producerId === stream.producerId);\n            }\n            if (!participant) {\n              if (\n                Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n                stream.audioID != null &&\n                stream.audioID !== ''\n              ) {\n                participant = audStreamNames.find((obj: any) => obj.producerId === stream.audioID);\n                if (!participant) {\n                  participant = ref_participants.find((obj: any) => obj.audioID === stream.audioID);\n                }\n              }\n            }\n            if (!participant) {\n              if (\n                Object.prototype.hasOwnProperty.call(stream, 'name') &&\n                stream.name !== null &&\n                stream.name != ''\n              ) {\n                participant = ref_participants.find((obj: any) => obj.name === stream.name);\n              }\n            }\n          }\n\n          if (participant) {\n            if (participant.name && !activeNames.includes(participant.name)) {\n              activeNames.push(participant.name);\n            }\n          }\n        }\n      });\n\n      updateActiveNames(activeNames);\n\n      lStreams_.forEach((stream) => {\n        let disp_checker = false;\n        let disp_check_level = 0;\n\n        if (meetingDisplayType === 'video') {\n          if (meetingVideoOptimized) {\n            if (\n              Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== ''\n            ) {\n              disp_checker = true;\n              disp_check_level = 0;\n            }\n          } else {\n            if (\n              (Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n                stream.producerId != null &&\n                stream.producerId !== '') ||\n              (Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n                stream.audioID != null &&\n                stream.audioID !== '')\n            ) {\n              disp_checker = true;\n              disp_check_level = 1;\n            }\n          }\n        } else if (meetingDisplayType === 'media') {\n          if (\n            (Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== '') ||\n            (Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n              stream.audioID != null &&\n              stream.audioID !== '')\n          ) {\n            disp_checker = true;\n            disp_check_level = 1;\n          }\n        } else {\n          if (\n            (Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== '') ||\n            (Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n              stream.audioID != null &&\n              stream.audioID !== '') ||\n            (Object.prototype.hasOwnProperty.call(stream, 'name') &&\n              stream.name !== null &&\n              stream.name != '')\n          ) {\n            disp_checker = true;\n            disp_check_level = 2;\n          }\n        }\n\n        let participant_;\n\n        if (disp_checker) {\n          if (disp_check_level === 0) {\n            if (\n              Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== ''\n            ) {\n              participant_ = streamNames.find((obj: any) => obj.producerId === stream.producerId);\n            }\n          } else if (disp_check_level === 1) {\n            if (\n              Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== ''\n            ) {\n              participant_ = streamNames.find((obj: any) => obj.producerId === stream.producerId);\n            }\n            if (!participant_) {\n              if (\n                Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n                stream.audioID != null &&\n                stream.audioID !== ''\n              ) {\n                participant_ = audStreamNames.find((obj: any) => obj.producerId === stream.audioID);\n                if (!participant_) {\n                  participant_ = ref_participants.find(\n                    (obj: any) => obj.audioID === stream.audioID,\n                  );\n                }\n              }\n            }\n          } else if (disp_check_level === 2) {\n            if (\n              Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== ''\n            ) {\n              participant_ = streamNames.find((obj: any) => obj.producerId === stream.producerId);\n            }\n            if (!participant_) {\n              if (\n                Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n                stream.audioID != null &&\n                stream.audioID !== ''\n              ) {\n                participant_ = audStreamNames.find((obj: any) => obj.producerId === stream.audioID);\n                if (!participant_) {\n                  participant_ = ref_participants.find(\n                    (obj: any) => obj.audioID === stream.audioID,\n                  );\n                }\n              }\n            }\n            if (!participant_) {\n              if (\n                Object.prototype.hasOwnProperty.call(stream, 'name') &&\n                stream.name !== null &&\n                stream.name != ''\n              ) {\n                participant_ = ref_participants.find((obj: any) => obj.name === stream.name);\n              }\n            }\n          }\n\n          if (participant_) {\n            if (participant_.name && !dispActiveNames.includes(participant_.name)) {\n              dispActiveNames.push(participant_.name);\n              if (!p_dispActiveNames.includes(participant_.name)) {\n                proceed = true;\n              }\n            }\n          }\n        }\n      });\n\n      updateDispActiveNames(dispActiveNames);\n\n      if (lStreams_.length < 1) {\n        if (shareScreenStarted || shared) {\n          proceed = true;\n        } else if (!firstAll) {\n          proceed = true;\n        }\n      }\n\n      if (shareScreenStarted || shared) {\n        // screen share started\n      } else {\n        if (prevMainHeightWidth !== mainHeightWidth) {\n          updateMainWindow = true;\n          updateUpdateMainWindow(updateMainWindow);\n        }\n      }\n\n      nForReadjustRecord = activeNames.length;\n      updateNForReadjustRecord(nForReadjustRecord);\n    }\n\n    if (!proceed && auto) {\n      if (updateMainWindow) {\n        if (!lock_screen && !shared) {\n          await prepopulateUserMedia({ name: hostLabel, parameters });\n        } else {\n          if (!first_round) {\n            await prepopulateUserMedia({ name: hostLabel, parameters });\n          }\n        }\n      }\n\n      if (ind === 0 && eventType !== 'chat') {\n        await rePort({ parameters });\n      }\n      return;\n    }\n\n    if (eventType === 'broadcast') {\n      lStreams = lStreams_;\n      updateLStreams(lStreams);\n    } else if (eventType === 'chat') {\n      if (forChatID != null) {\n        lStreams = chatRefStreams;\n        updateLStreams(lStreams);\n      } else {\n        updateShowMiniView(false);\n\n        if (islevel !== '2') {\n          let host = participants.find((obj: any) => obj.islevel === '2');\n          if (host) {\n            let streame;\n            remoteProducerId = host.videoID;\n            if (islevel === '2') {\n              host['stream'] = keepBackground && virtualStream ? virtualStream : localStreamVideo;\n            } else {\n              streame = oldAllStreams.find(\n                (streame: any) => streame.producerId === remoteProducerId,\n              );\n              if (streame) {\n                lStreams = lStreams.filter((stream) => stream.name !== host.name);\n                lStreams.push(streame);\n              }\n            }\n          }\n        }\n\n        let youyou = lStreams.find(\n          (obj: any) => obj.producerId === 'youyou' || obj.producerId === 'youyouyou',\n        );\n        lStreams = lStreams.filter(\n          (stream) => stream.producerId !== 'youyou' && stream.producerId !== 'youyouyou',\n        );\n        if (youyou) {\n          lStreams.push(youyou);\n        }\n\n        chatRefStreams = lStreams;\n        updateLStreams(lStreams);\n        updateChatRefStreams(chatRefStreams);\n      }\n    }\n\n    let refLength = lStreams.length;\n\n    const [, rows, cols] = getEstimate({ n: refLength, parameters });\n    let result = (await checkGrid({ rows, cols, actives: refLength })) || [false, 0, 0, 0, 0, 0, 0];\n    let [removeAltGrid, numtoaddd, numRows, numCols, , actualRows, lastrowcols] = result;\n\n    if (ChatSkip && eventType == 'chat') {\n      numRows = 1;\n      numCols = 1;\n      actualRows = 1;\n    }\n\n    //if removeAltGrid is true then remove everyting from altGrid and add to mainGrid,check for streams on alvideoStreams and add to mainGrid that are not on mainGrid and add switching to true\n\n    await readjust({ n: lStreams.length, state: ind, parameters });\n\n    // split the streams into two arrays, one for mainGrid and one for altGrid\n    // take up to numtoadd from the lStreams and add to mainGridStreams\n    let mainGridStreams = lStreams.slice(0, numtoaddd);\n    // take the rest of the streams and add to altGridStreams\n    let altGridStreams = lStreams.slice(numtoaddd, lStreams.length);\n    //add to grids\n\n    if (\n      doPaginate == true ||\n      prevDoPaginate != doPaginate ||\n      shared ||\n      shareScreenStarted ||\n      shareEnded\n    ) {\n      let lStreams_alt = lStreams_;\n      await processConsumerTransports({ consumerTransports, lStreams_: lStreams_alt, parameters });\n\n      try {\n        if (breakOutRoomStarted && !breakOutRoomEnded) {\n          await resumePauseAudioStreams({ inBreakRoom, breakRoom, parameters });\n        }\n      } catch (error) {\n        // console.log('Error in resumePauseAudioStreams:', error);\n      }\n\n      try {\n        if (!breakOutRoomStarted || (breakOutRoomStarted && breakOutRoomEnded)) {\n          await resumePauseStreams({ parameters });\n        }\n      } catch {\n        /* handle error */\n      }\n\n      if (shareEnded) {\n        shareEnded = false;\n      }\n    }\n\n    if (ChatSkip && eventType == 'chat') {\n      await addVideosGrid({\n        mainGridStreams,\n        altGridStreams,\n        numtoadd: numtoaddd - 1,\n        numRows,\n        numCols,\n        actualRows,\n        lastrowcols,\n        removeAltGrid,\n        parameters,\n      });\n    } else {\n      await addVideosGrid({\n        mainGridStreams,\n        altGridStreams,\n        numtoadd: numtoaddd,\n        numRows,\n        numCols,\n        actualRows,\n        lastrowcols,\n        removeAltGrid,\n        parameters,\n      });\n    }\n\n    if (updateMainWindow) {\n      if (!lock_screen && !shared) {\n        await prepopulateUserMedia({ name: hostLabel, parameters });\n      } else {\n        if (!first_round) {\n          await prepopulateUserMedia({ name: hostLabel, parameters });\n        }\n      }\n    }\n\n    if (ind == 0 && eventType !== 'chat') {\n      await rePort({ parameters });\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  DisconnectSendTransportScreenType,\n  PrepopulateUserMediaType,\n  ReorderStreamsType,\n  GetVideosType,\n  DisconnectSendTransportScreenParameters,\n  PrepopulateUserMediaParameters,\n  ReorderStreamsParameters,\n  EventType,\n} from '../@types/types';\nexport interface StopShareScreenParameters\n  extends DisconnectSendTransportScreenParameters,\n    PrepopulateUserMediaParameters,\n    ReorderStreamsParameters {\n  shared: boolean;\n  shareScreenStarted: boolean;\n  shareEnded: boolean;\n  updateMainWindow: boolean;\n  defer_receive: boolean;\n  hostLabel: string;\n  lock_screen: boolean;\n  forceFullDisplay: boolean;\n  firstAll: boolean;\n  first_round: boolean;\n  localStreamScreen: MediaStream | null;\n  eventType: EventType;\n  prevForceFullDisplay: boolean;\n  annotateScreenStream: boolean;\n\n  updateShared: (shared: boolean) => void;\n  updateShareScreenStarted: (shareScreenStarted: boolean) => void;\n  updateShareEnded: (shareEnded: boolean) => void;\n  updateUpdateMainWindow: (updateMainWindow: boolean) => void;\n  updateDefer_receive: (defer_receive: boolean) => void;\n  updateLock_screen: (lock_screen: boolean) => void;\n  updateForceFullDisplay: (forceFullDisplay: boolean) => void;\n  updateFirstAll: (firstAll: boolean) => void;\n  updateFirst_round: (first_round: boolean) => void;\n  updateLocalStreamScreen: (localStreamScreen: MediaStream | null) => void;\n  updateMainHeightWidth: (mainHeightWidth: number) => void;\n  updateAnnotateScreenStream: (annotateScreenStream: boolean) => void;\n  updateIsScreenboardModalVisible: (isVisible: boolean) => void;\n\n  // mediasfu functions\n  disconnectSendTransportScreen: DisconnectSendTransportScreenType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  reorderStreams: ReorderStreamsType;\n  getVideos: GetVideosType;\n\n  getUpdatedAllParams: () => StopShareScreenParameters;\n  [key: string]: any;\n}\n\nexport interface StopShareScreenOptions {\n  parameters: StopShareScreenParameters;\n}\n\n// Export the type definition for the function\nexport type StopShareScreenType = (options: StopShareScreenOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StopShareScreen {\n  /**\n   * Stops the screen sharing process and updates the relevant parameters and states.\n   *\n   * @param {StopShareScreenOptions} options - The options for stopping the screen share.\n   * @param {Object} options.parameters - The parameters required for stopping the screen share.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {boolean} options.parameters.shared - Indicates if the screen is currently shared.\n   * @param {boolean} options.parameters.shareScreenStarted - Indicates if the screen sharing has started.\n   * @param {boolean} options.parameters.shareEnded - Indicates if the screen sharing has ended.\n   * @param {boolean} options.parameters.updateMainWindow - Indicates if the main window needs to be updated.\n   * @param {boolean} options.parameters.defer_receive - Indicates if receiving is deferred.\n   * @param {string} options.parameters.hostLabel - The label of the host.\n   * @param {boolean} options.parameters.lock_screen - Indicates if the screen is locked.\n   * @param {boolean} options.parameters.forceFullDisplay - Indicates if full display is forced.\n   * @param {boolean} options.parameters.firstAll - Indicates if it is the first all.\n   * @param {boolean} options.parameters.first_round - Indicates if it is the first round.\n   * @param {MediaStream} options.parameters.localStreamScreen - The local screen stream.\n   * @param {string} options.parameters.eventType - The type of event.\n   * @param {boolean} options.parameters.prevForceFullDisplay - Indicates if full display was previously forced.\n   * @param {boolean} options.parameters.annotateScreenStream - Indicates if the screen stream is annotated.\n   * @param {Function} options.parameters.updateShared - Function to update the shared state.\n   * @param {Function} options.parameters.updateShareScreenStarted - Function to update the share screen started state.\n   * @param {Function} options.parameters.updateShareEnded - Function to update the share ended state.\n   * @param {Function} options.parameters.updateUpdateMainWindow - Function to update the main window state.\n   * @param {Function} options.parameters.updateDefer_receive - Function to update the defer receive state.\n   * @param {Function} options.parameters.updateLock_screen - Function to update the lock screen state.\n   * @param {Function} options.parameters.updateForceFullDisplay - Function to update the force full display state.\n   * @param {Function} options.parameters.updateFirstAll - Function to update the first all state.\n   * @param {Function} options.parameters.updateFirst_round - Function to update the first round state.\n   * @param {Function} options.parameters.updateLocalStreamScreen - Function to update the local screen stream.\n   * @param {Function} options.parameters.updateMainHeightWidth - Function to update the main height and width.\n   * @param {Function} options.parameters.updateAnnotateScreenStream - Function to update the annotate screen stream state.\n   * @param {Function} options.parameters.updateIsScreenboardModalVisible - Function to update the screenboard modal visibility.\n   * @param {Function} options.parameters.disconnectSendTransportScreen - Function to disconnect the send transport screen.\n   * @param {Function} options.parameters.prepopulateUserMedia - Function to prepopulate user media.\n   * @param {Function} options.parameters.reorderStreams - Function to reorder streams.\n   * @param {Function} options.parameters.getVideos - Function to get videos.\n   *\n   * @returns {Promise<void>} A promise that resolves when the screen sharing process is stopped.\n   */\n  stopShareScreen = async ({ parameters }: StopShareScreenOptions): Promise<void> => {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      shared,\n      shareScreenStarted,\n      shareEnded,\n      updateMainWindow,\n      defer_receive,\n      hostLabel,\n      lock_screen,\n      forceFullDisplay,\n      firstAll,\n      first_round,\n      localStreamScreen,\n      eventType,\n      prevForceFullDisplay,\n      annotateScreenStream,\n\n      // updates for the above\n      updateShared,\n      updateShareScreenStarted,\n      updateShareEnded,\n      updateUpdateMainWindow,\n      updateDefer_receive,\n      updateLock_screen,\n      updateForceFullDisplay,\n      updateFirstAll,\n      updateFirst_round,\n      updateLocalStreamScreen,\n      updateMainHeightWidth,\n      updateAnnotateScreenStream,\n      updateIsScreenboardModalVisible,\n\n      // mediasfu functions\n      disconnectSendTransportScreen,\n      prepopulateUserMedia,\n      reorderStreams,\n      getVideos,\n    } = parameters;\n\n    shared = false;\n    updateShared(shared);\n    shareScreenStarted = false;\n    updateShareScreenStarted(shareScreenStarted);\n    shareEnded = true;\n    updateShareEnded(shareEnded);\n    updateMainWindow = true;\n    updateUpdateMainWindow(updateMainWindow);\n\n    if (defer_receive) {\n      defer_receive = false;\n      updateDefer_receive(defer_receive);\n      await getVideos({\n        participants: parameters.participants,\n        allVideoStreams: parameters.allVideoStreams,\n        oldAllStreams: parameters.oldAllStreams,\n        adminVidID: parameters.adminVidID,\n        updateAllVideoStreams: parameters['updateAllVideoStreams'],\n        updateOldAllStreams: parameters['updateOldAllStreams'],\n      });\n    }\n\n    localStreamScreen?.getTracks().forEach((track: MediaStreamTrack) => track.stop());\n    updateLocalStreamScreen(localStreamScreen);\n    await disconnectSendTransportScreen({ parameters });\n\n    try {\n      if (annotateScreenStream) {\n        annotateScreenStream = false;\n        updateAnnotateScreenStream(annotateScreenStream);\n        updateIsScreenboardModalVisible(true);\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        updateIsScreenboardModalVisible(false);\n      }\n    } catch (error) {\n      console.log('Error handling screen annotation:', error);\n    }\n\n    if (eventType == 'conference') {\n      updateMainHeightWidth(0);\n    }\n\n    try {\n      await prepopulateUserMedia({ name: hostLabel, parameters });\n    } catch (error) {\n      console.log('Error in prepopulateUserMedia:', error);\n    }\n\n    try {\n      await reorderStreams({ add: false, screenChanged: true, parameters });\n    } catch (error) {\n      console.log('Error in reorderStreams:', error);\n    }\n\n    lock_screen = false;\n    updateLock_screen(lock_screen);\n    forceFullDisplay = prevForceFullDisplay;\n    updateForceFullDisplay(forceFullDisplay);\n    firstAll = false;\n    updateFirstAll(firstAll);\n    first_round = false;\n    updateFirst_round(first_round);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  StopShareScreenType,\n  StopShareScreenParameters,\n  RequestScreenShareType,\n  RequestScreenShareParameters,\n  ShowAlert,\n} from '../@types/types';\nexport interface CheckScreenShareParameters\n  extends StopShareScreenParameters,\n    RequestScreenShareParameters {\n  shared: boolean;\n  whiteboardStarted: boolean;\n  whiteboardEnded: boolean;\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n  showAlert?: ShowAlert;\n\n  // Mediasfu functions\n  stopShareScreen: StopShareScreenType;\n  requestScreenShare: RequestScreenShareType;\n\n  getUpdatedAllParams: () => CheckScreenShareParameters;\n  [key: string]: any;\n}\n\nexport interface CheckScreenShareOptions {\n  parameters: CheckScreenShareParameters;\n}\n\n// Export the type definition for the function\nexport type CheckScreenShareType = (options: CheckScreenShareOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckScreenShare {\n  /**\n   * Checks the current screen sharing status and either stops or requests screen sharing based on the provided parameters.\n   *\n   * @param {CheckScreenShareOptions} options - The options for checking screen share.\n   * @param {Object} options.parameters - The parameters for screen sharing.\n   * @param {boolean} options.parameters.shared - Indicates if the screen is currently being shared.\n   * @param {Function} [options.parameters.showAlert] - Function to show alerts.\n   * @param {boolean} options.parameters.whiteboardStarted - Indicates if the whiteboard session has started.\n   * @param {boolean} options.parameters.whiteboardEnded - Indicates if the whiteboard session has ended.\n   * @param {boolean} options.parameters.breakOutRoomStarted - Indicates if the breakout room session has started.\n   * @param {boolean} options.parameters.breakOutRoomEnded - Indicates if the breakout room session has ended.\n   * @param {Function} options.parameters.stopShareScreen - Function to stop screen sharing.\n   * @param {Function} options.parameters.requestScreenShare - Function to request screen sharing.\n   *\n   * @returns {Promise<void>} A promise that resolves when the screen sharing status has been checked and the appropriate action has been taken.\n   *\n   * @throws Will log an error message if an error occurs during the process.\n   */\n  checkScreenShare = async ({ parameters }: CheckScreenShareOptions): Promise<void> => {\n    try {\n      const {\n        shared,\n        showAlert,\n        whiteboardStarted,\n        whiteboardEnded,\n        breakOutRoomStarted,\n        breakOutRoomEnded,\n\n        // mediasfu functions\n        stopShareScreen,\n        requestScreenShare,\n      } = parameters;\n\n      // Stop screen share if already shared or request screen share if not shared\n      if (shared) {\n        if (whiteboardStarted && !whiteboardEnded) {\n          showAlert?.({\n            message: 'Screen share is not allowed when whiteboard is active',\n            type: 'danger',\n          });\n          return;\n        }\n        await stopShareScreen({ parameters });\n      } else {\n        // Can't share if breakout room is active\n        if (breakOutRoomStarted && !breakOutRoomEnded) {\n          showAlert?.({\n            message: 'Screen share is not allowed when breakout room is active',\n            type: 'danger',\n          });\n          return;\n        }\n\n        if (whiteboardStarted && !whiteboardEnded) {\n          showAlert?.({\n            message: 'Screen share is not allowed when whiteboard is active',\n            type: 'danger',\n          });\n          return;\n        }\n        await requestScreenShare({ parameters });\n      }\n    } catch (error) {\n      console.log('checkScreenShare error', error);\n      // throw error;\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { StreamSuccessScreenType, StreamSuccessScreenParameters, ShowAlert } from '../@types/types';\nexport interface StartShareScreenParameters extends StreamSuccessScreenParameters {\n  shared: boolean;\n  showAlert?: ShowAlert;\n  updateShared: (shared: boolean) => void;\n  onWeb: boolean;\n  targetWidth?: number;\n  targetHeight?: number;\n\n  // mediasfu functions\n  streamSuccessScreen: StreamSuccessScreenType;\n  [key: string]: any;\n}\n\nexport interface StartShareScreenOptions {\n  parameters: StartShareScreenParameters;\n}\n\n// Export the type definition for the function\nexport type StartShareScreenType = (options: StartShareScreenOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StartShareScreen {\n  /**\n   * Starts the screen sharing process.\n   *\n   * @param {StartShareScreenOptions} options - The options for starting screen sharing.\n   * @param {Object} options.parameters - The parameters for screen sharing.\n   * @param {boolean} options.parameters.shared - Indicates if the screen is currently being shared.\n   * @param {Function} options.parameters.showAlert - Function to show alert messages.\n   * @param {Function} options.parameters.updateShared - Function to update the shared state.\n   * @param {boolean} options.parameters.onWeb - Indicates if the application is running on a web platform.\n   * @param {number} [options.parameters.targetWidth] - The target width for screen sharing.\n   * @param {number} [options.parameters.targetHeight] - The target height for screen sharing.\n   * @param {Function} options.parameters.streamSuccessScreen - Function to handle successful screen sharing.\n   *\n   * @returns {Promise<void>} A promise that resolves when the screen sharing process is complete.\n   *\n   * @throws Will log an error message if there is an issue starting the screen share.\n   */\n  startShareScreen = async ({ parameters }: StartShareScreenOptions): Promise<void> => {\n    // start screen share function\n    // attempt to start screen share and return true if successful\n\n    let {\n      shared,\n      showAlert,\n      updateShared,\n      onWeb,\n      targetWidth = 1280,\n      targetHeight = 720,\n      streamSuccessScreen,\n    } = parameters;\n\n    try {\n      if (!onWeb) {\n        showAlert?.({\n          message: 'You cannot share screen while on mobile',\n          type: 'danger',\n          duration: 3000,\n        });\n        return;\n      }\n\n      if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n        shared = true;\n        await navigator.mediaDevices\n          .getDisplayMedia({\n            video: {\n              width: targetWidth,\n              height: targetHeight,\n              frameRate: 30,\n            },\n            audio: false,\n          })\n          .then(async (stream: MediaStream) => {\n            await streamSuccessScreen({ stream, parameters });\n          })\n          .catch(async () => {\n            shared = false;\n            showAlert?.({\n              message: 'Could not share screen, check and retry',\n              type: 'danger',\n              duration: 3000,\n            });\n          });\n      } else {\n        showAlert?.({\n          message: 'Could not share screen, check and retry',\n          type: 'danger',\n          duration: 3000,\n        });\n      }\n\n      // update the shared variable\n      updateShared(shared);\n    } catch (error) {\n      console.log('Error starting screen share', error);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { ShowAlert, StartShareScreenType, StartShareScreenParameters } from '../@types/types';\n\nexport interface RequestScreenShareParameters extends StartShareScreenParameters {\n  socket: Socket;\n  showAlert?: ShowAlert;\n  localUIMode: boolean;\n  targetResolution?: string;\n  targetResolutionHost?: string;\n\n  // mediasfu functions\n  startShareScreen: StartShareScreenType;\n  getUpdatedAllParams: () => RequestScreenShareParameters;\n  [key: string]: any;\n}\n\nexport interface RequestScreenShareOptions {\n  parameters: RequestScreenShareParameters;\n}\n\n// Export the type definition for the function\nexport type RequestScreenShareType = (options: RequestScreenShareOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestScreenShare {\n  /**\n   * Requests to start screen sharing.\n   *\n   * @param {RequestScreenShareOptions} options - The options for requesting screen share.\n   * @param {Object} options.parameters - The parameters for the screen share request.\n   * @param {Socket} options.parameters.socket - The socket instance to communicate with the server.\n   * @param {Function} [options.parameters.showAlert] - Optional function to show alerts to the user.\n   * @param {boolean} options.parameters.localUIMode - Indicates if the user is in local UI mode.\n   * @param {string} [options.parameters.targetResolution] - The target resolution for screen sharing.\n   * @param {string} [options.parameters.targetResolutionHost] - The target resolution for the host screen.\n   * @param {Function} options.parameters.startShareScreen - Function to start screen sharing.\n   *\n   * @returns {Promise<void>} A promise that resolves when the screen share request is processed.\n   *\n   * @throws {Error} Throws an error if there is an issue during the screen share request process.\n   */\n  requestScreenShare = async ({ parameters }: RequestScreenShareOptions): Promise<void> => {\n    try {\n      // Destructure parameters\n      const {\n        showAlert,\n        localUIMode,\n        startShareScreen,\n        socket,\n        targetResolution = 'hd',\n        targetResolutionHost = 'hd',\n      } = parameters;\n\n      // Check if the user is in local UI mode\n      if (localUIMode === true) {\n        await startShareScreen({ parameters });\n        return;\n      }\n\n      let targetWidth = 1280;\n      let targetHeight = 720;\n\n      if (targetResolution == 'qhd' || targetResolutionHost == 'qhd') {\n        targetWidth = 2560;\n        targetHeight = 1440;\n      } else if (targetResolution == 'fhd' || targetResolutionHost == 'fhd') {\n        targetWidth = 1920;\n        targetHeight = 1080;\n      }\n\n      socket.emit(\n        'requestScreenShare',\n        async ({ allowScreenShare }: { allowScreenShare: boolean }) => {\n          if (!allowScreenShare) {\n            // Send an alert to the user\n            showAlert?.({\n              message: 'You are not allowed to share screen',\n              type: 'danger',\n              duration: 3000,\n            });\n          } else {\n            await startShareScreen({ parameters: { ...parameters, targetWidth, targetHeight } });\n          }\n        },\n      );\n    } catch (error) {\n      // Handle errors during the process of requesting screen share\n      console.error('Error during requesting screen share: ', error);\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Injectable } from '@angular/core';\nimport { Participant, Stream, ChangeVidsParameters, ChangeVidsType } from '../@types/types';\n\nexport interface ReorderStreamsParameters extends ChangeVidsParameters {\n  allVideoStreams: (Stream | Participant)[];\n  participants: Participant[];\n  oldAllStreams: (Stream | Participant)[];\n  screenId?: string;\n  adminVidID?: string;\n  newLimitedStreams: (Stream | Participant)[];\n  newLimitedStreamsIDs: string[];\n  activeSounds: string[];\n  screenShareIDStream?: string;\n  screenShareNameStream?: string;\n  adminIDStream?: string;\n  adminNameStream?: string;\n  updateNewLimitedStreams: (streams: (Stream | Participant)[]) => void;\n  updateNewLimitedStreamsIDs: (ids: string[]) => void;\n  updateActiveSounds: (sounds: string[]) => void;\n  updateScreenShareIDStream: (id: string) => void;\n  updateScreenShareNameStream: (name: string) => void;\n  updateAdminIDStream: (id: string) => void;\n  updateAdminNameStream: (name: string) => void;\n  updateYouYouStream: (streams: (Stream | Participant)[]) => void;\n\n  // mediasfu functions\n  changeVids: ChangeVidsType;\n  getUpdatedAllParams: () => ReorderStreamsParameters;\n  [key: string]: any;\n}\n\nexport interface ReorderStreamsOptions {\n  add?: boolean;\n  screenChanged?: boolean;\n  parameters: ReorderStreamsParameters;\n}\n\nexport type ReorderStreamsType = (options: ReorderStreamsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReorderStreams {\n  /**\n   * Reorders the video streams based on the provided options and updates the UI accordingly.\n   *\n   * @param {Object} options - The options for reordering streams.\n   * @param {boolean} [options.add=false] - Whether to add new streams or not.\n   * @param {boolean} [options.screenChanged=false] - Whether the screen has changed or not.\n   * @param {ReorderStreamsOptions} options.parameters - The parameters required for reordering streams.\n   *\n   * @returns {Promise<void>} A promise that resolves when the reordering is complete.\n   *\n   * @typedef {Object} ReorderStreamsOptions\n   * @property {Function} getUpdatedAllParams - Function to get updated parameters.\n   * @property {Array} allVideoStreams - Array of all video streams.\n   * @property {Array} participants - Array of participants.\n   * @property {Array} oldAllStreams - Array of old streams.\n   * @property {string} screenId - ID of the screen.\n   * @property {string} adminVidID - ID of the admin video.\n   * @property {Array} newLimitedStreams - Array of new limited streams.\n   * @property {Array} newLimitedStreamsIDs - Array of new limited stream IDs.\n   * @property {Array} activeSounds - Array of active sounds.\n   * @property {string} screenShareIDStream - ID of the screen share stream.\n   * @property {string} screenShareNameStream - Name of the screen share stream.\n   * @property {string} adminIDStream - ID of the admin stream.\n   * @property {string} adminNameStream - Name of the admin stream.\n   * @property {Function} updateNewLimitedStreams - Function to update new limited streams.\n   * @property {Function} updateNewLimitedStreamsIDs - Function to update new limited stream IDs.\n   * @property {Function} updateActiveSounds - Function to update active sounds.\n   * @property {Function} updateScreenShareIDStream - Function to update screen share ID stream.\n   * @property {Function} updateScreenShareNameStream - Function to update screen share name stream.\n   * @property {Function} updateAdminIDStream - Function to update admin ID stream.\n   * @property {Function} updateAdminNameStream - Function to update admin name stream.\n   * @property {Function} updateYouYouStream - Function to update YouYou stream.\n   * @property {Function} changeVids - Function to reflect changes on the UI.\n   */\n\n  reorderStreams = async ({\n    add = false,\n    screenChanged = false,\n    parameters,\n  }: ReorderStreamsOptions): Promise<void> => {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      allVideoStreams,\n      participants,\n      oldAllStreams,\n      screenId,\n      adminVidID,\n      newLimitedStreams,\n      newLimitedStreamsIDs,\n      activeSounds,\n      screenShareIDStream,\n      screenShareNameStream,\n      adminIDStream,\n      adminNameStream,\n      updateNewLimitedStreams,\n      updateNewLimitedStreamsIDs,\n      updateActiveSounds,\n      updateScreenShareIDStream,\n      updateScreenShareNameStream,\n      updateAdminIDStream,\n      updateAdminNameStream,\n      updateYouYouStream,\n\n      //mediasfu functions\n      changeVids,\n    } = parameters;\n\n    // function to reorder streams on the ui\n    if (!add) {\n      newLimitedStreams = [];\n      newLimitedStreamsIDs = [];\n      activeSounds = [];\n    }\n\n    const youyou = allVideoStreams.filter((stream) => stream.producerId === 'youyou');\n    const admin = participants.filter((participant) => participant.islevel === '2');\n\n    if (admin.length > 0) {\n      adminVidID = admin[0].videoID;\n    } else {\n      adminVidID = '';\n    }\n\n    if (adminVidID) {\n      const adminStream = allVideoStreams.find((stream) => stream.producerId === adminVidID);\n\n      if (!add) {\n        newLimitedStreams = [...newLimitedStreams, ...youyou];\n        newLimitedStreamsIDs = [\n          ...newLimitedStreamsIDs,\n          ...youyou.map((stream) => stream.producerId),\n        ];\n      } else {\n        const youyouStream = newLimitedStreams.find((stream) => stream.producerId === 'youyou');\n\n        if (!youyouStream) {\n          newLimitedStreams = [...newLimitedStreams, ...youyou];\n          newLimitedStreamsIDs = [\n            ...newLimitedStreamsIDs,\n            ...youyou.map((stream) => stream.producerId),\n          ];\n        }\n      }\n\n      if (adminStream) {\n        adminIDStream = adminVidID;\n\n        if (!add) {\n          newLimitedStreams = [...newLimitedStreams, adminStream];\n          newLimitedStreamsIDs = [...newLimitedStreamsIDs, adminStream.producerId];\n        } else {\n          const adminStreamer = newLimitedStreams.find(\n            (stream) => stream.producerId === adminVidID,\n          );\n\n          if (!adminStreamer) {\n            newLimitedStreams = [...newLimitedStreams, adminStream];\n            newLimitedStreamsIDs = [...newLimitedStreamsIDs, adminStream.producerId];\n          }\n        }\n      } else {\n        const oldAdminStream = oldAllStreams.find((stream) => stream.producerId === adminVidID);\n\n        if (oldAdminStream) {\n          //add it to the allVideoStream\n\n          adminIDStream = adminVidID;\n          adminNameStream = admin[0].name;\n\n          if (!add) {\n            newLimitedStreams = [...newLimitedStreams, oldAdminStream];\n            newLimitedStreamsIDs = [...newLimitedStreamsIDs, oldAdminStream.producerId];\n          } else {\n            const adminStreamer = newLimitedStreams.find(\n              (stream) => stream.producerId === adminVidID,\n            );\n\n            if (!adminStreamer) {\n              newLimitedStreams = [...newLimitedStreams, oldAdminStream];\n              newLimitedStreamsIDs = [...newLimitedStreamsIDs, oldAdminStream.producerId];\n            }\n          }\n        }\n      }\n\n      const screenParticipant = participants.filter(\n        (participant) => participant.ScreenID === screenId,\n      );\n\n      if (screenParticipant.length > 0) {\n        const screenParticipantVidID = screenParticipant[0].videoID;\n        const screenParticipantVidID_ = newLimitedStreams.filter(\n          (stream) => stream.producerId === screenParticipantVidID,\n        );\n\n        if (screenParticipantVidID_?.length < 1 && screenParticipantVidID) {\n          screenShareIDStream = screenParticipantVidID;\n          screenShareNameStream = screenParticipant[0].name;\n          const screenParticipantVidID__ = allVideoStreams.filter(\n            (stream) => stream.producerId === screenParticipantVidID,\n          );\n          newLimitedStreams = [...newLimitedStreams, ...screenParticipantVidID__];\n          newLimitedStreamsIDs = [\n            ...newLimitedStreamsIDs,\n            ...screenParticipantVidID__.map((stream) => stream.producerId),\n          ];\n        }\n      }\n    } else {\n      if (!add) {\n        newLimitedStreams = [...newLimitedStreams, ...youyou];\n        newLimitedStreamsIDs = [\n          ...newLimitedStreamsIDs,\n          ...youyou.map((stream) => stream.producerId),\n        ];\n      } else {\n        const youyouStream = newLimitedStreams.find((stream) => stream.producerId === 'youyou');\n\n        if (!youyouStream) {\n          newLimitedStreams = [...newLimitedStreams, ...youyou];\n          newLimitedStreamsIDs = [\n            ...newLimitedStreamsIDs,\n            ...youyou.map((stream) => stream.producerId),\n          ];\n        }\n      }\n\n      const screenParticipant = participants.filter(\n        (participant) => participant.ScreenID === screenId,\n      );\n\n      if (screenParticipant.length > 0) {\n        const screenParticipantVidID = screenParticipant[0].videoID;\n        const screenParticipantVidID_ = newLimitedStreams.filter(\n          (stream) => stream.producerId === screenParticipantVidID,\n        );\n\n        if (screenParticipantVidID_?.length < 1 && screenParticipantVidID) {\n          screenShareIDStream = screenParticipantVidID;\n          screenShareNameStream = screenParticipant[0].name;\n          const screenParticipantVidID__ = allVideoStreams.filter(\n            (stream) => stream.producerId === screenParticipantVidID,\n          );\n          newLimitedStreams = [...newLimitedStreams, ...screenParticipantVidID__];\n          newLimitedStreamsIDs = [\n            ...newLimitedStreamsIDs,\n            ...screenParticipantVidID__.map((stream) => stream.producerId),\n          ];\n        }\n      }\n    }\n\n    updateNewLimitedStreams(newLimitedStreams);\n    updateNewLimitedStreamsIDs(newLimitedStreamsIDs);\n    updateActiveSounds(activeSounds);\n    updateScreenShareIDStream(screenShareIDStream!);\n    updateScreenShareNameStream(screenShareNameStream!);\n    updateAdminIDStream(adminIDStream!);\n    updateAdminNameStream(adminNameStream!);\n    updateYouYouStream(youyou);\n\n    //reflect the changes on the ui\n    await changeVids({ screenChanged, parameters });\n  };\n}\n","import { Component, Input, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nexport interface MiniCardOptions {\n  initials?: string;\n  fontSize?: number;\n  customStyle?: Partial<CSSStyleDeclaration>;\n  imageSource?: string;\n  roundedImage?: boolean;\n  imageStyle?: Partial<CSSStyleDeclaration>;\n}\n\nexport type MiniCardType = (options: MiniCardOptions) => HTMLElement;\n\n/**\n * MiniCard component displays a card with either an image or initials.\n *\n * @component\n * @selector app-mini-card\n * @standalone true\n * @imports CommonModule\n *\n * @template\n * <div class=\"mini-card\" [ngStyle]=\"getMergedCardStyles()\">\n *   <div *ngIf=\"imageSource; else noImage\" class=\"image-container\">\n *     <img [src]=\"imageSource\" alt=\"Profile\" [ngStyle]=\"getMergedImageStyles()\" />\n *   </div>\n *   <ng-template #noImage>\n *     <div class=\"initials\" [ngStyle]=\"getInitialsStyle()\">{{ initials }}</div>\n *   </ng-template>\n * </div>\n *\n * @styleUrls ['./mini-card.component.css']\n *\n * @property {string} initials - The initials to display if no image is provided.\n * @property {number} fontSize - The font size for the initials text. Default is 14.\n * @property {Partial<CSSStyleDeclaration>} customStyle - Custom styles for the card.\n * @property {string} imageSource - The source URL for the image.\n * @property {boolean} roundedImage - Whether the image should be rounded. Default is false.\n * @property {Partial<CSSStyleDeclaration>} imageStyle - Custom styles for the image.\n *\n * @constructor\n * @param {string} [injectedInitials] - Injected initials.\n * @param {number} [injectedFontSize] - Injected font size.\n * @param {Partial<CSSStyleDeclaration>} [injectedCustomStyle] - Injected custom styles.\n * @param {string} [injectedImageSource] - Injected image source.\n * @param {boolean} [injectedRoundedImage] - Injected rounded image flag.\n * @param {Partial<CSSStyleDeclaration>} [injectedImageStyle] - Injected image styles.\n *\n * @method getMergedCardStyles\n * @description Merges the default card styles with custom styles.\n * @returns {CSSStyleDeclaration} The merged card styles.\n *\n * @method getMergedImageStyles\n * @description Merges the default image styles with custom styles.\n * @returns {CSSStyleDeclaration} The merged image styles.\n *\n * @method getInitialsStyle\n * @description Returns the styles for the initials text.\n * @returns {CSSStyleDeclaration} The initials text styles.\n */\n@Component({\n  selector: 'app-mini-card',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"mini-card\" [ngStyle]=\"getMergedCardStyles()\">\n      <div *ngIf=\"imageSource; else noImage\" class=\"image-container\">\n        <img [src]=\"imageSource\" alt=\"Profile\" [ngStyle]=\"getMergedImageStyles()\" />\n      </div>\n      <ng-template #noImage>\n        <div class=\"initials\" [ngStyle]=\"getInitialsStyle()\">{{ initials }}</div>\n      </ng-template>\n    </div>\n  `,\n  styleUrls: ['./mini-card.component.css'],\n})\nexport class MiniCard {\n  @Input() initials!: string;\n  @Input() fontSize = 14;\n  @Input() customStyle: Partial<CSSStyleDeclaration> = {};\n  @Input() imageSource!: string;\n  @Input() roundedImage = false;\n  @Input() imageStyle: Partial<CSSStyleDeclaration> = {};\n\n  constructor(\n    @Optional() @Inject('initials') injectedInitials: string,\n    @Optional() @Inject('fontSize') injectedFontSize: number,\n    @Optional() @Inject('customStyle') injectedCustomStyle: Partial<CSSStyleDeclaration>,\n    @Optional() @Inject('imageSource') injectedImageSource: string,\n    @Optional() @Inject('roundedImage') injectedRoundedImage: boolean,\n    @Optional() @Inject('imageStyle') injectedImageStyle: Partial<CSSStyleDeclaration>,\n  ) {\n    this.initials = injectedInitials || this.initials || '';\n    this.fontSize = injectedFontSize || this.fontSize || 14;\n    this.customStyle = injectedCustomStyle || this.customStyle || {};\n    this.imageSource = injectedImageSource || this.imageSource || '';\n    this.roundedImage = injectedRoundedImage || this.roundedImage || true;\n    this.imageStyle = injectedImageStyle || this.imageStyle || {};\n  }\n\n  getMergedCardStyles() {\n    return {\n      'font-size': this.fontSize + 'px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: '0',\n      width: '100%',\n      height: '100%',\n      color: 'black',\n      fontFamily: \"'Nunito', sans-serif\",\n      overflow: 'hidden',\n      border: '2px solid black',\n      ...this.customStyle,\n    };\n  }\n\n  getMergedImageStyles() {\n    return {\n      width: '60%',\n      height: '60%',\n      objectFit: 'cover',\n      ...(this.roundedImage ? { borderRadius: '50%' } : {}),\n      ...this.imageStyle,\n    };\n  }\n\n  getInitialsStyle() {\n    return {\n      textAlign: 'center',\n      'font-size': this.fontSize + 'px',\n    };\n  }\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EventType } from '../../../@types/types';\n\nexport interface CardVideoDisplayOptions {\n  remoteProducerId: string;\n  eventType: string;\n  forceFullDisplay: boolean;\n  videoStream: MediaStream | null;\n  backgroundColor: string;\n  doMirror?: boolean;\n}\n\nexport type CardVideoDisplayType = (options: CardVideoDisplayOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-card-video-display',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './card-video-display.component.html',\n  styleUrls: ['./card-video-display.component.css'],\n})\nexport class CardVideoDisplay implements OnInit, OnChanges {\n  @Input() remoteProducerId = '';\n  @Input() eventType: EventType = 'webinar';\n  @Input() forceFullDisplay = false;\n  @Input() videoStream: MediaStream | null = null;\n  @Input() backgroundColor = 'transparent';\n  @Input() doMirror = false;\n\n  @ViewChild('videoElement', { static: true }) videoElement!: ElementRef<HTMLVideoElement>;\n\n  videoContainerStyle: any;\n\n  ngOnInit() {\n    this.updateVideoStream();\n    this.setVideoContainerStyle();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['videoStream'] && this.videoStream) {\n      const currentStream = changes['videoStream'].currentValue;\n      const previousStream = changes['videoStream'].previousValue;\n\n      if (\n        !previousStream ||\n        currentStream.id !== previousStream.id ||\n        currentStream.active !== previousStream.active\n      ) {\n        this.updateVideoStream();\n      }\n    }\n\n    if (\n      changes['backgroundColor'] &&\n      changes['backgroundColor'].currentValue !== changes['backgroundColor'].previousValue\n    ) {\n      this.setVideoContainerStyle();\n    }\n  }\n\n  updateVideoStream() {\n    if (this.videoElement && this.videoStream) {\n      const videoElement = this.videoElement.nativeElement;\n\n      // Update the video element's srcObject only if it has changed\n      if (videoElement.srcObject !== this.videoStream) {\n        videoElement.srcObject = this.videoStream;\n      }\n    }\n  }\n\n  setVideoContainerStyle() {\n    this.videoContainerStyle = {\n      ...this.getBaseVideoContainerStyle(),\n      backgroundColor: this.backgroundColor,\n    };\n  }\n\n  getBaseVideoContainerStyle() {\n    return {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'black',\n    };\n  }\n\n  getVideoStyle() {\n    const baseStyles: any = {\n      width: this.forceFullDisplay ? '100%' : 'auto',\n      height: '100%',\n      maxWidth: '100%',\n      maxHeight: '100%',\n      objectFit: this.forceFullDisplay ? 'cover' : 'contain',\n      backgroundColor: this.backgroundColor,\n    };\n\n    if (this.doMirror) {\n      baseStyles.transform = 'rotateY(180deg)';\n    }\n\n    return baseStyles;\n  }\n}\n","<div [ngStyle]=\"videoContainerStyle\">\r\n  <video #videoElement autoplay muted playsinline [ngStyle]=\"getVideoStyle()\"></video>\r\n</div>\r\n","import { OverlayPositionStyle } from '../../@types/types';\n\nexport interface GetOverlayPositionOptions {\n  position: string;\n}\n\n// Export the type definition for the function\nexport type GetOverlayPositionType = (options: GetOverlayPositionOptions) => OverlayPositionStyle;\n\n/**\n * Gets the style for positioning an overlay based on the specified position.\n * @function\n * @param {string} position - The desired position for the overlay ('topLeft', 'topRight', 'bottomLeft', 'bottomRight').\n * @returns {OverlayPositionStyle} - The style object for positioning the overlay.\n */\n\nexport function getOverlayPosition({ position }: GetOverlayPositionOptions): OverlayPositionStyle {\n  switch (position) {\n    case 'topLeft':\n      return { top: 0, left: 0 };\n    case 'topRight':\n      return { top: 0, right: 0 };\n    case 'bottomLeft':\n      return { bottom: 0, left: 0 };\n    case 'bottomRight':\n      return { bottom: 0, right: 0 };\n    default:\n      return {};\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Socket } from 'socket.io-client';\nimport { CoHostResponsibility, Participant, ShowAlert } from '../@types/types';\n\nexport interface ControlMediaOptions {\n  participantId: string;\n  participantName: string;\n  type: 'audio' | 'video' | 'screenshare' | 'all';\n  socket: Socket;\n  coHostResponsibility: CoHostResponsibility[];\n  participants: Participant[];\n  member: string;\n  islevel: string;\n  showAlert?: ShowAlert;\n  coHost: string;\n  roomName: string;\n}\n// Export the type definition for the function\nexport type ControlMediaType = (options: ControlMediaOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ControlMedia {\n  /**\n   * Controls the media of a participant in a media session if certain conditions are met.\n   *\n   * @param {Object} options - The options for controlling media.\n   * @param {string} options.participantId - The ID of the participant to control.\n   * @param {string} options.participantName - The name of the participant to control.\n   * @param {string} options.type - The type of media to control.\n   * @param {Socket} options.socket - The socket instance for communication.\n   * @param {Array} options.coHostResponsibility - List of co-host responsibilities.\n   * @param {Array} options.participants - List of participants in the session.\n   * @param {string} options.member - The current member attempting to control media.\n   * @param {string} options.islevel - The level of the current member.\n   * @param {Function} [options.showAlert] - Optional function to show alerts.\n   * @param {string} options.coHost - The co-host information.\n   * @param {string} options.roomName - The name of the room.\n   *\n   * @returns {Promise<void>} A promise that resolves when the media control operation is complete.\n   */\n\n  async controlMedia({\n    participantId,\n    participantName,\n    type,\n    socket,\n    coHostResponsibility,\n    participants,\n    member,\n    islevel,\n    showAlert,\n    coHost,\n    roomName,\n  }: ControlMediaOptions): Promise<void> {\n    try {\n      // Destructure parameters\n      let mediaValue = false;\n\n      try {\n        mediaValue =\n          coHostResponsibility.find((item: any) => item.name === 'media')?.value ?? false;\n      } catch {\n        /* handle error */\n      }\n\n      let participant = participants.find((obj: any) => obj.name === participantName);\n\n      if (islevel === '2' || (coHost === member && mediaValue === true)) {\n        // Check if the participant is not muted and is not a host\n        if (\n          participant &&\n          ((!participant.muted && participant.islevel !== '2' && type == 'audio') ||\n            (participant.islevel !== '2' && type == 'video' && participant['videoOn']))\n        ) {\n          // Emit controlMedia event to the server\n          socket.emit('controlMedia', { participantId, participantName, type, roomName });\n        }\n      } else {\n        // Display an alert if the participant is not allowed to mute other participants\n        if (showAlert) {\n          showAlert({\n            message: 'You are not allowed to control media for other participants.',\n            type: 'danger',\n            duration: 3000,\n          });\n        }\n      }\n    } catch (error) {\n      console.log('controlMedia error', error);\n      // throw error;\n    }\n  }\n}\n","import { Component, Input, OnInit, OnDestroy, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  faMicrophone,\n  faMicrophoneSlash,\n  faVideo,\n  faVideoSlash,\n} from '@fortawesome/free-solid-svg-icons';\nimport { CardVideoDisplay } from '../card-video-display/card-video-display.component';\nimport { getOverlayPosition } from '../../../methods/utils/get-overlay-position.util';\nimport { ControlMedia } from '../../../consumers/control-media.service';\nimport {\n  Participant,\n  AudioDecibels,\n  CoHostResponsibility,\n  ShowAlert,\n  EventType,\n  CustomComponent,\n} from '../../../@types/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface VideoCardParameters {\n  socket: Socket;\n  roomName: string;\n  coHostResponsibility: CoHostResponsibility[];\n  showAlert?: ShowAlert;\n  coHost: string;\n  participants: Participant[];\n  member: string;\n  islevel: string;\n  audioDecibels: AudioDecibels[];\n\n  // mediasfu functions\n  getUpdatedAllParams: () => VideoCardParameters;\n  // [key: string]: any;\n}\n\nexport interface VideoCardOptions {\n  customStyle?: Partial<CSSStyleDeclaration>;\n  name: string;\n  barColor?: string;\n  textColor?: string;\n  imageSource: string;\n  roundedImage?: boolean;\n  imageStyle?: Partial<CSSStyleDeclaration>;\n  remoteProducerId: string;\n  eventType: EventType;\n  forceFullDisplay?: boolean;\n  videoStream: MediaStream | null;\n  showControls?: boolean;\n  showInfo?: boolean;\n  videoInfoComponent?: HTMLElement | CustomComponent;\n  videoControlsComponent?: HTMLElement | CustomComponent;\n  controlsPosition?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n  infoPosition?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n  participant: Participant;\n  backgroundColor: string;\n  audioDecibels: AudioDecibels[];\n  doMirror?: boolean;\n  parameters: VideoCardParameters;\n}\n\nexport type VideoCardType = (options: VideoCardOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-video-card',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, CardVideoDisplay],\n  templateUrl: './video-card.component.html',\n  styleUrls: ['./video-card.component.css'],\n})\nexport class VideoCard implements OnInit, OnDestroy {\n  @Input() customStyle: Partial<CSSStyleDeclaration> = {};\n  @Input() name!: string;\n  @Input() barColor = 'red';\n  @Input() textColor = 'white';\n  @Input() imageSource!: string;\n  @Input() roundedImage = false;\n  @Input() imageStyle: Partial<CSSStyleDeclaration> = {};\n  @Input() remoteProducerId!: string;\n  @Input() eventType!: EventType;\n  @Input() forceFullDisplay!: boolean;\n  @Input() videoStream: MediaStream | null = null;\n  @Input() showControls = true;\n  @Input() showInfo = true;\n  @Input() videoInfoComponent?: HTMLElement | CustomComponent;\n  @Input() videoControlsComponent?: HTMLElement | CustomComponent;\n  @Input() controlsPosition: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' = 'topLeft';\n  @Input() infoPosition: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' = 'topRight';\n  @Input() participant!: Participant;\n  @Input() backgroundColor!: string;\n  @Input() audioDecibels: AudioDecibels[] = [];\n  @Input() doMirror!: boolean;\n  @Input() parameters!: VideoCardParameters;\n\n  waveformAnimations: number[] = Array.from({ length: 9 }, () => 0);\n  showWaveform = true;\n  interval: any;\n\n  faMicrophone = faMicrophone;\n  faMicrophoneSlash = faMicrophoneSlash;\n  faVideo = faVideo;\n  faVideoSlash = faVideoSlash;\n\n  constructor(\n    private controlMediaService: ControlMedia,\n    @Optional() @Inject('customStyle') injectedCustomStyle: Partial<CSSStyleDeclaration>,\n    @Optional() @Inject('name') injectedName: string,\n    @Optional() @Inject('barColor') injectedBarColor: string,\n    @Optional() @Inject('textColor') injectedTextColor: string,\n    @Optional() @Inject('imageSource') injectedImageSource: string,\n    @Optional() @Inject('roundedImage') injectedRoundedImage: boolean,\n    @Optional() @Inject('imageStyle') injectedImageStyle: Partial<CSSStyleDeclaration>,\n    @Optional() @Inject('remoteProducerId') injectedRemoteProducerId: string,\n    @Optional() @Inject('eventType') injectedEventType: EventType,\n    @Optional() @Inject('forceFullDisplay') injectedForceFullDisplay: boolean,\n    @Optional() @Inject('videoStream') injectedVideoStream: MediaStream | null,\n    @Optional() @Inject('showControls') injectedShowControls: boolean,\n    @Optional() @Inject('showInfo') injectedShowInfo: boolean,\n    @Optional() @Inject('videoInfoComponent') injectedVideoInfoComponent: HTMLElement,\n    @Optional() @Inject('videoControlsComponent') injectedVideoControlsComponent: HTMLElement,\n    @Optional()\n    @Inject('controlsPosition')\n    injectedControlsPosition: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight',\n    @Optional()\n    @Inject('infoPosition')\n    injectedInfoPosition: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight',\n    @Optional() @Inject('participant') injectedParticipant: Participant,\n    @Optional() @Inject('backgroundColor') injectedBackgroundColor: string,\n    @Optional() @Inject('audioDecibels') injectedAudioDecibels: AudioDecibels[],\n    @Optional() @Inject('doMirror') injectedDoMirror: boolean,\n    @Optional() @Inject('parameters') injectedParameters: VideoCardParameters,\n  ) {\n    this.customStyle = injectedCustomStyle || this.customStyle;\n    this.name = injectedName || this.name;\n    this.barColor = injectedBarColor || this.barColor;\n    this.textColor = injectedTextColor || this.textColor;\n    this.imageSource = injectedImageSource || this.imageSource;\n    this.roundedImage = injectedRoundedImage || this.roundedImage;\n    this.imageStyle = injectedImageStyle || this.imageStyle;\n    this.remoteProducerId = injectedRemoteProducerId || this.remoteProducerId;\n    this.eventType = injectedEventType || this.eventType;\n    this.forceFullDisplay = injectedForceFullDisplay || this.forceFullDisplay;\n    this.videoStream = injectedVideoStream || this.videoStream;\n    this.showControls = injectedShowControls != null ? injectedShowControls : this.showControls;\n    this.showInfo = injectedShowInfo != null ? injectedShowInfo : this.showInfo;\n    this.videoInfoComponent = injectedVideoInfoComponent || this.videoInfoComponent;\n    this.videoControlsComponent = injectedVideoControlsComponent || this.videoControlsComponent;\n    this.controlsPosition = injectedControlsPosition || this.controlsPosition;\n    this.infoPosition = injectedInfoPosition || this.infoPosition;\n    this.participant = injectedParticipant || this.participant;\n    this.backgroundColor = injectedBackgroundColor || this.backgroundColor;\n    this.audioDecibels = injectedAudioDecibels || this.audioDecibels;\n    this.doMirror = injectedDoMirror || this.doMirror;\n    this.parameters = injectedParameters || this.parameters;\n  }\n\n  ngOnInit() {\n    this.interval = setInterval(() => {\n      const params = this.parameters.getUpdatedAllParams();\n      const { audioDecibels, participants } = params;\n      const existingEntry =\n        audioDecibels && audioDecibels.find((entry: AudioDecibels) => entry.name === this.name);\n      const participantEntry =\n        participants && participants.find((p: Participant) => p.name === this.name);\n      if (\n        existingEntry &&\n        existingEntry.averageLoudness > 127.5 &&\n        participantEntry &&\n        !participantEntry.muted\n      ) {\n        this.animateWaveform();\n      } else {\n        this.resetWaveform();\n      }\n    }, 1000);\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.interval);\n  }\n\n  animateWaveform() {\n    this.waveformAnimations.forEach((_, index) => {\n      setInterval(() => this.animateBar(index), this.getAnimationDuration(index) * 2);\n    });\n  }\n\n  animateBar(index: number) {\n    this.waveformAnimations[index] = 1;\n    setTimeout(() => {\n      this.waveformAnimations[index] = 0;\n    }, this.getAnimationDuration(index));\n  }\n\n  resetWaveform() {\n    this.waveformAnimations.fill(0);\n  }\n\n  getAnimationDuration(index: number): number {\n    const durations = [474, 433, 407, 458, 400, 427, 441, 419, 487];\n    return durations[index] || 0;\n  }\n\n  async toggleAudio() {\n    if (this.participant && !this.participant.muted) {\n      const params = this.parameters;\n      await this.controlMediaService.controlMedia({\n        participantId: this.participant.id || '',\n        participantName: this.participant.name,\n        type: 'audio',\n        socket: params.socket,\n        roomName: params.roomName,\n        coHostResponsibility: params.coHostResponsibility,\n        showAlert: params.showAlert,\n        coHost: params.coHost,\n        participants: params.participants,\n        member: params.member,\n        islevel: params.islevel,\n      });\n    }\n  }\n\n  async toggleVideo() {\n    if (this.participant) {\n      const params = this.parameters.getUpdatedAllParams();\n      await this.controlMediaService.controlMedia({\n        participantId: this.participant.id || '',\n        participantName: this.participant.name,\n        type: 'video',\n        socket: params.socket,\n        roomName: params.roomName,\n        coHostResponsibility: params.coHostResponsibility,\n        showAlert: params.showAlert,\n        coHost: params.coHost,\n        participants: params.participants,\n        member: params.member,\n        islevel: params.islevel,\n      });\n    }\n  }\n\n  renderControls() {\n    if (!this.showControls) {\n      return null;\n    }\n\n    if (this.videoControlsComponent) {\n      return this.videoControlsComponent;\n    }\n\n    return `\n      <div class=\"overlayControls\">\n        <button class=\"controlButton\" (click)=\"toggleAudio()\">\n          <fa-icon [icon]=\"participant?.muted ? faMicrophoneSlash : faMicrophone\" [style.color]=\"participant?.muted ? 'red' : 'green'\"></fa-icon>\n        </button>\n        <button class=\"controlButton\" (click)=\"toggleVideo()\">\n          <fa-icon [icon]=\"participant?.videoOn ? faVideo : faVideoSlash\" [style.color]=\"participant?.videoOn ? 'green' : 'red'\"></fa-icon>\n        </button>\n      </div>\n    `;\n  }\n\n  getOverlayPosition(position: string) {\n    return getOverlayPosition({ position });\n  }\n\n  isCustomComponent(\n    comp: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent),\n  ): comp is CustomComponent {\n    return (\n      typeof (comp as CustomComponent).component !== 'function' &&\n      (comp as CustomComponent).component !== undefined\n    );\n  }\n\n  isFunctionComponent(\n    comp: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent),\n  ): comp is () => HTMLElement | CustomComponent {\n    return typeof comp === 'function';\n  }\n}\n","<div\r\n  [ngStyle]=\"customStyle\"\r\n  [style.backgroundColor]=\"backgroundColor\"\r\n  class=\"video-card\"\r\n>\r\n  <app-card-video-display\r\n    [remoteProducerId]=\"remoteProducerId\"\r\n    [eventType]=\"eventType\"\r\n    [forceFullDisplay]=\"forceFullDisplay\"\r\n    [videoStream]=\"videoStream\"\r\n    [backgroundColor]=\"backgroundColor\"\r\n    [doMirror]=\"doMirror\"\r\n  ></app-card-video-display>\r\n\r\n  <div\r\n    *ngIf=\"showInfo\"\r\n    [ngClass]=\"showControls ? 'overlayWeb' : 'overlayWebAlt'\"\r\n    [ngStyle]=\"getOverlayPosition(infoPosition)\"\r\n  >\r\n    <div class=\"nameColumn\">\r\n      <span class=\"nameText\" [style.color]=\"textColor\">{{\r\n        participant.name\r\n      }}</span>\r\n    </div>\r\n    <div *ngIf=\"showWaveform\" class=\"waveformWeb\">\r\n      <div\r\n        *ngFor=\"let animation of waveformAnimations; let i = index\"\r\n        class=\"bar\"\r\n        [ngStyle]=\"{\r\n          height: animation === 0 ? '1px' : '16px',\r\n          backgroundColor: barColor\r\n        }\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"showControls\"\r\n    class=\"overlayControls\"\r\n    [ngStyle]=\"getOverlayPosition(controlsPosition)\"\r\n  >\r\n    <ng-container *ngIf=\"!videoControlsComponent\">\r\n      <div class=\"overlayControls\">\r\n        <button class=\"controlButton\" (click)=\"toggleAudio()\">\r\n          <fa-icon\r\n            [icon]=\"participant.muted ? faMicrophoneSlash : faMicrophone\"\r\n            [style.color]=\"participant.muted ? 'red' : 'green'\"\r\n          ></fa-icon>\r\n        </button>\r\n        <button class=\"controlButton\" (click)=\"toggleVideo()\">\r\n          <fa-icon\r\n            [icon]=\"participant['videoOn'] ? faVideo : faVideoSlash\"\r\n            [style.color]=\"participant['videoOn'] ? 'green' : 'red'\"\r\n          ></fa-icon>\r\n        </button>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"videoControlsComponent\">\r\n      <ng-container *ngIf=\"isCustomComponent(videoControlsComponent)\">\r\n        <ng-container\r\n          *ngComponentOutlet=\"\r\n            videoControlsComponent.component;\r\n            injector: videoControlsComponent.injector\r\n          \"\r\n        ></ng-container>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!isCustomComponent(videoControlsComponent)\">\r\n        <div [innerHTML]=\"videoControlsComponent.outerHTML\"></div>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, OnDestroy, NgZone, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  faVideo,\n  faVideoSlash,\n  faMicrophone,\n  faMicrophoneSlash,\n} from '@fortawesome/free-solid-svg-icons';\nimport { getOverlayPosition } from '../../../methods/utils/get-overlay-position.util';\nimport { ControlMedia } from '../../../consumers/control-media.service';\nimport { MiniCard } from '../mini-card/mini-card.component';\nimport {\n  Participant,\n  ControlsPosition,\n  InfoPosition,\n  AudioDecibels,\n  ControlMediaOptions,\n  ShowAlert,\n  CoHostResponsibility,\n  CustomComponent,\n} from '../../../@types/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface AudioCardParameters {\n  audioDecibels: AudioDecibels[];\n  participants: Participant[];\n  socket: Socket;\n  coHostResponsibility: CoHostResponsibility[];\n  roomName: string;\n  showAlert?: ShowAlert;\n  coHost: string;\n  islevel: string;\n  member: string;\n  eventType: string;\n\n  // mediasfu functions\n  getUpdatedAllParams(): AudioCardParameters;\n}\n\nexport interface AudioCardOptions {\n  controlUserMedia?: (options: ControlMediaOptions) => Promise<void>;\n  customStyle?: Partial<CSSStyleDeclaration>; // Use Partial to allow specific CSS properties\n  name: string; // Required field for name\n  barColor?: string; // Optional color for audio bar\n  textColor?: string; // Optional color for text\n  imageSource?: string; // Optional URL for image source\n  roundedImage?: boolean; // Optional flag for rounded image\n  imageStyle?: Partial<CSSStyleDeclaration>; // Use Partial for CSS style type safety\n  showControls?: boolean; // Toggle to show/hide controls\n  showInfo?: boolean; // Toggle to show/hide info section\n  videoInfoComponent?: HTMLElement | CustomComponent; // Custom component for participant information\n  videoControlsComponent?: HTMLElement | CustomComponent; // Custom component for video controls\n  controlsPosition?: ControlsPosition; // Custom control positioning\n  infoPosition?: InfoPosition; // Custom info positioning\n  participant: Participant; // Required participant object reference\n  backgroundColor?: string; // Optional background color\n  audioDecibels?: AudioDecibels; // Optional audio decibels info\n  parameters: AudioCardParameters; // Required parameters object for configurations\n}\n\nexport type AudioCardType = (options: AudioCardOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-audio-card',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, MiniCard],\n  templateUrl: './audio-card.component.html',\n  styleUrls: ['./audio-card.component.css'],\n})\nexport class AudioCard implements OnInit, OnDestroy {\n  @Input() controlUserMedia?: (options: ControlMediaOptions) => Promise<void>;\n  @Input() customStyle: Partial<CSSStyleDeclaration> = {};\n  @Input() name = '';\n  @Input() barColor = 'red';\n  @Input() textColor = 'white';\n  @Input() imageSource = '';\n  @Input() roundedImage = false;\n  @Input() imageStyle: Partial<CSSStyleDeclaration> = {};\n  @Input() showControls = true;\n  @Input() showInfo = true;\n  @Input() videoInfoComponent?: HTMLElement | CustomComponent; // Custom component for participant information\n  @Input() videoControlsComponent?: HTMLElement | CustomComponent; // Custom component for video controls\n  @Input() controlsPosition = 'topLeft';\n  @Input() infoPosition = 'topRight';\n  @Input() participant: Participant | null = null;\n  @Input() backgroundColor = '';\n  @Input() audioDecibels: any;\n  @Input() parameters!: AudioCardParameters;\n\n  faVideo = faVideo;\n  faVideoSlash = faVideoSlash;\n  faMicrophone = faMicrophone;\n  faMicrophoneSlash = faMicrophoneSlash;\n\n  waveformAnimations: number[] = Array.from({ length: 9 }, () => 0);\n  showWaveform = true;\n  interval: any;\n\n  constructor(\n    private ngZone: NgZone,\n    private controlMediaService: ControlMedia,\n    @Optional()\n    @Inject('controlUserMedia')\n    injectedControlUserMedia: (options: ControlMediaOptions) => Promise<void>,\n    @Optional() @Inject('customStyle') injectedCustomStyle: Partial<CSSStyleDeclaration>,\n    @Optional() @Inject('name') injectedName: string,\n    @Optional() @Inject('barColor') injectedBarColor: string,\n    @Optional() @Inject('textColor') injectedTextColor: string,\n    @Optional() @Inject('imageSource') injectedImageSource: string,\n    @Optional() @Inject('roundedImage') injectedRoundedImage: boolean,\n    @Optional() @Inject('imageStyle') injectedImageStyle: Partial<CSSStyleDeclaration>,\n    @Optional() @Inject('showControls') injectedShowControls: boolean,\n    @Optional() @Inject('showInfo') injectedShowInfo: boolean,\n    @Optional()\n    @Inject('videoInfoComponent')\n    injectedVideoInfoComponent: HTMLElement | CustomComponent,\n    @Optional()\n    @Inject('videoControlsComponent')\n    injectedVideoControlsComponent: HTMLElement | CustomComponent,\n    @Optional() @Inject('controlsPosition') injectedControlsPosition: ControlsPosition,\n    @Optional() @Inject('infoPosition') injectedInfoPosition: InfoPosition,\n    @Optional() @Inject('participant') injectedParticipant: Participant | null,\n    @Optional() @Inject('backgroundColor') injectedBackgroundColor: string,\n    @Optional() @Inject('audioDecibels') injectedAudioDecibels: AudioDecibels,\n    @Optional() @Inject('parameters') injectedParameters: AudioCardParameters,\n  ) {\n    this.controlUserMedia = injectedControlUserMedia || this.controlUserMedia;\n    this.customStyle = injectedCustomStyle || this.customStyle;\n    this.name = injectedName || this.name;\n    this.barColor = injectedBarColor || this.barColor;\n    this.textColor = injectedTextColor || this.textColor;\n    this.imageSource = injectedImageSource || this.imageSource;\n    this.roundedImage = injectedRoundedImage || this.roundedImage;\n    this.imageStyle = injectedImageStyle || this.imageStyle;\n    this.showControls = injectedShowControls != null ? injectedShowControls : this.showControls;\n    this.showInfo = injectedShowInfo != null ? injectedShowInfo : this.showInfo;\n    this.videoInfoComponent = injectedVideoInfoComponent || this.videoInfoComponent;\n    this.videoControlsComponent = injectedVideoControlsComponent || this.videoControlsComponent;\n    this.controlsPosition = injectedControlsPosition || this.controlsPosition;\n    this.infoPosition = injectedInfoPosition || this.infoPosition;\n    this.participant = injectedParticipant || this.participant;\n    this.backgroundColor = injectedBackgroundColor || this.backgroundColor;\n    this.audioDecibels = injectedAudioDecibels || this.audioDecibels;\n    this.parameters = injectedParameters || this.parameters;\n  }\n\n  ngOnInit() {\n    if (!this.controlUserMedia) {\n      this.controlUserMedia = async (options: ControlMediaOptions) => {\n        await this.controlMediaService.controlMedia(options);\n      };\n    }\n\n    if (this.parameters) {\n      this.ngZone.runOutsideAngular(() => {\n        this.interval = setInterval(() => {\n          const { audioDecibels, participants } = this.parameters.getUpdatedAllParams();\n          const existingEntry = audioDecibels.find((entry: any) => entry.name == this.name);\n          this.participant = participants.find((p: Participant) => p.name == this.name) || null;\n\n          if (\n            existingEntry &&\n            existingEntry.averageLoudness > 127.5 &&\n            this.participant &&\n            !this.participant.muted\n          ) {\n            this.animateWaveform();\n          } else {\n            this.resetWaveform();\n          }\n        }, 1000);\n      });\n    }\n\n    if (this.participant?.muted) {\n      this.showWaveform = false;\n    } else {\n      this.showWaveform = true;\n    }\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.interval);\n  }\n\n  animateBar(index: number) {\n    this.waveformAnimations[index] = 1;\n    setTimeout(() => {\n      this.waveformAnimations[index] = 0;\n    }, this.getAnimationDuration(index));\n  }\n\n  animateWaveform() {\n    this.waveformAnimations.forEach((_, index) => {\n      setInterval(() => this.animateBar(index), this.getAnimationDuration(index) * 2);\n    });\n  }\n\n  resetWaveform() {\n    this.waveformAnimations.fill(0);\n  }\n\n  getAnimationDuration(index: number): number {\n    const durations = [474, 433, 407, 458, 400, 427, 441, 419, 487];\n    return durations[index] || 0;\n  }\n\n  async toggleAudio() {\n    if (this.participant && !this.participant.muted) {\n      await this.controlUserMedia?.({\n        participantId: this.participant.id || '',\n        participantName: this.participant.name,\n        type: 'audio',\n        socket: this.parameters.socket,\n        coHostResponsibility: this.parameters.coHostResponsibility,\n        roomName: this.parameters.roomName,\n        showAlert: this.parameters.showAlert,\n        coHost: this.parameters.coHost,\n        islevel: this.parameters.islevel,\n        member: this.parameters.member,\n        participants: this.parameters.participants,\n      });\n    }\n  }\n\n  async toggleVideo() {\n    if (this.participant) {\n      await this.controlUserMedia?.({\n        participantId: this.participant.id || '',\n        participantName: this.participant.name,\n        type: 'video',\n        socket: this.parameters.socket,\n        coHostResponsibility: this.parameters.coHostResponsibility,\n        roomName: this.parameters.roomName,\n        showAlert: this.parameters.showAlert,\n        coHost: this.parameters.coHost,\n        islevel: this.parameters.islevel,\n        member: this.parameters.member,\n        participants: this.parameters.participants,\n      });\n    }\n  }\n\n  renderControls() {\n    return this.showControls;\n  }\n\n  // Helper method to combine styles\n  combineStyles(baseStyle: any, additionalStyles: any) {\n    return { ...baseStyle, ...additionalStyles };\n  }\n\n  getOverlayPosition(position: string) {\n    return getOverlayPosition({ position });\n  }\n\n  isCustomComponent(\n    comp: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent),\n  ): comp is CustomComponent {\n    return (\n      typeof (comp as CustomComponent).component !== 'function' &&\n      (comp as CustomComponent).component !== undefined\n    );\n  }\n\n  isFunctionComponent(\n    comp: HTMLElement | CustomComponent | (() => HTMLElement | CustomComponent),\n  ): comp is () => HTMLElement | CustomComponent {\n    return typeof comp === 'function';\n  }\n}\n","<div\r\n  class=\"card\"\r\n  [ngStyle]=\"customStyle\"\r\n  [style.backgroundColor]=\"backgroundColor\"\r\n>\r\n  <ng-container *ngIf=\"imageSource; else noImage\">\r\n    <div class=\"imageContainer\">\r\n      <img\r\n        [src]=\"imageSource\"\r\n        [ngStyle]=\"\r\n          combineStyles(imageStyle, {\r\n            'border-radius': roundedImage ? '20%' : '0'\r\n          })\r\n        \"\r\n        class=\"backgroundImage\"\r\n      />\r\n    </div>\r\n  </ng-container>\r\n  <ng-template #noImage>\r\n    <div style=\"width: 100%; height: 100%\">\r\n      <app-mini-card [initials]=\"name\" [fontSize]=\"20\" [ngStyle]=\"{ 'border': parameters.eventType === 'broadcast' ? '2px solid black' : '0px solid black' }\"></app-mini-card>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-container *ngIf=\"showInfo\">\r\n    <div\r\n      class=\"overlay\"\r\n      [ngStyle]=\"getOverlayPosition(infoPosition)\"\r\n      [ngClass]=\"showControls ? 'overlayWeb' : 'overlayWebAlt'\"\r\n    >\r\n      <div class=\"nameColumn\">\r\n        <p [ngStyle]=\"{ color: textColor }\" class=\"nameText\">{{ name }}</p>\r\n      </div>\r\n      <div *ngIf=\"showWaveform\" class=\"waveformWeb\">\r\n        <div\r\n          *ngFor=\"let animation of waveformAnimations\"\r\n          [ngStyle]=\"{\r\n            height: animation === 0 ? '1px' : '12px',\r\n            backgroundColor: barColor\r\n          }\"\r\n          class=\"bar\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"renderControls()\">\r\n    <div\r\n      class=\"overlayControls\"\r\n      [ngStyle]=\"getOverlayPosition(controlsPosition)\"\r\n    >\r\n      <ng-container *ngIf=\"!videoControlsComponent\">\r\n        <button class=\"controlButton\" (click)=\"toggleAudio()\">\r\n          <fa-icon\r\n            [icon]=\"participant?.muted ? faMicrophoneSlash : faMicrophone\"\r\n            [style.color]=\"participant?.muted ? 'red' : 'green'\"\r\n          ></fa-icon>\r\n        </button>\r\n        <button class=\"controlButton\" (click)=\"toggleVideo()\">\r\n          <fa-icon\r\n            [icon]=\"participant?.['videoOn'] ? faVideo : faVideoSlash\"\r\n            [style.color]=\"participant?.['videoOn'] ? 'green' : 'red'\"\r\n          ></fa-icon>\r\n        </button>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"videoControlsComponent\">\r\n        <ng-container *ngIf=\"isCustomComponent(videoControlsComponent)\">\r\n          <ng-container\r\n            *ngComponentOutlet=\"\r\n              videoControlsComponent.component;\r\n              injector: videoControlsComponent.injector\r\n            \"\r\n          ></ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!isCustomComponent(videoControlsComponent)\">\r\n          <div [innerHTML]=\"videoControlsComponent.outerHTML\"></div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { MiniCard } from '../components/display-components/mini-card/mini-card.component';\nimport { VideoCard } from '../components/display-components/video-card/video-card.component';\nimport { AudioCard } from '../components/display-components/audio-card/audio-card.component';\nimport {\n  Participant,\n  Stream,\n  AudioCardParameters,\n  EventType,\n  CustomMediaComponent,\n} from '../@types/types';\n\nexport interface PrepopulateUserMediaParameters extends AudioCardParameters {\n  participants: Participant[];\n  allVideoStreams: (Stream | Participant)[];\n  islevel: string;\n  member: string;\n  shared: boolean;\n  shareScreenStarted: boolean;\n  eventType: EventType;\n  screenId?: string;\n  forceFullDisplay: boolean;\n  updateMainWindow: boolean;\n  mainScreenFilled: boolean;\n  adminOnMainScreen: boolean;\n  mainScreenPerson: string;\n  videoAlreadyOn: boolean;\n  audioAlreadyOn: boolean;\n  oldAllStreams: (Stream | Participant)[];\n  checkOrientation: () => string;\n  screenForceFullDisplay: boolean;\n  localStreamScreen: MediaStream | null;\n  remoteScreenStream: Stream[];\n  localStreamVideo: MediaStream | null;\n  mainHeightWidth: number;\n  isWideScreen: boolean;\n  localUIMode: boolean;\n  whiteboardStarted: boolean;\n  whiteboardEnded: boolean;\n  virtualStream: MediaStream | null;\n  keepBackground: boolean;\n  annotateScreenStream: boolean;\n  updateMainScreenPerson: (person: string) => void;\n  updateMainScreenFilled: (filled: boolean) => void;\n  updateAdminOnMainScreen: (admin: boolean) => void;\n  updateMainHeightWidth: (heightWidth: number) => void;\n  updateScreenForceFullDisplay: (force: boolean) => void;\n  updateUpdateMainWindow: (update: boolean) => void;\n  updateMainGridStream: (components: CustomMediaComponent[]) => void;\n\n  // mediasfu functions\n  getUpdatedAllParams: () => PrepopulateUserMediaParameters;\n  [key: string]: any;\n}\n\nexport interface PrepopulateUserMediaOptions {\n  name: string;\n  parameters: PrepopulateUserMediaParameters;\n}\n\n// Export the type definition for the function\nexport type PrepopulateUserMediaType = (options: {\n  name: string;\n  parameters: any;\n}) => Promise<{ component: any; inputs: any }[] | void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrepopulateUserMedia {\n  /**\n   * Prepopulates the user media based on the provided options.\n   *\n   * @param {PrepopulateUserMediaOptions} options - The options for prepopulating user media.\n   * @param {string} options.name - The name of the user.\n   * @param {Parameters} options.parameters - The parameters for prepopulating user media.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {Array<Participant>} options.parameters.participants - List of participants.\n   * @param {Array<Stream>} options.parameters.allVideoStreams - List of all video streams.\n   * @param {string} options.parameters.islevel - The level of the user.\n   * @param {string} options.parameters.member - The member name.\n   * @param {boolean} options.parameters.shared - Indicates if the screen is shared.\n   * @param {boolean} options.parameters.shareScreenStarted - Indicates if screen sharing has started.\n   * @param {string} options.parameters.eventType - The type of event.\n   * @param {string} options.parameters.screenId - The screen ID.\n   * @param {boolean} options.parameters.forceFullDisplay - Indicates if full display is forced.\n   * @param {Function} options.parameters.updateMainWindow - Function to update the main window.\n   * @param {boolean} options.parameters.mainScreenFilled - Indicates if the main screen is filled.\n   * @param {boolean} options.parameters.adminOnMainScreen - Indicates if admin is on the main screen.\n   * @param {string} options.parameters.mainScreenPerson - The person on the main screen.\n   * @param {boolean} options.parameters.videoAlreadyOn - Indicates if the video is already on.\n   * @param {boolean} options.parameters.audioAlreadyOn - Indicates if the audio is already on.\n   * @param {Array<Stream>} options.parameters.oldAllStreams - List of old all streams.\n   * @param {Function} options.parameters.checkOrientation - Function to check orientation.\n   * @param {boolean} options.parameters.screenForceFullDisplay - Indicates if screen force full display is enabled.\n   * @param {Stream} options.parameters.localStreamScreen - The local screen stream.\n   * @param {Array<Stream>} options.parameters.remoteScreenStream - List of remote screen streams.\n   * @param {Stream} options.parameters.localStreamVideo - The local video stream.\n   * @param {number} options.parameters.mainHeightWidth - The main height and width.\n   * @param {boolean} options.parameters.isWideScreen - Indicates if the screen is wide.\n   * @param {boolean} options.parameters.localUIMode - Indicates if local UI mode is enabled.\n   * @param {boolean} options.parameters.whiteboardStarted - Indicates if whiteboard has started.\n   * @param {boolean} options.parameters.whiteboardEnded - Indicates if whiteboard has ended.\n   * @param {Stream} options.parameters.virtualStream - The virtual stream.\n   * @param {boolean} options.parameters.keepBackground - Indicates if background should be kept.\n   * @param {Stream} options.parameters.annotateScreenStream - The annotate screen stream.\n   * @param {Function} options.parameters.updateMainScreenPerson - Function to update the main screen person.\n   * @param {Function} options.parameters.updateMainScreenFilled - Function to update if the main screen is filled.\n   * @param {Function} options.parameters.updateAdminOnMainScreen - Function to update if admin is on the main screen.\n   * @param {Function} options.parameters.updateMainHeightWidth - Function to update the main height and width.\n   * @param {Function} options.parameters.updateScreenForceFullDisplay - Function to update screen force full display.\n   * @param {Function} options.parameters.updateUpdateMainWindow - Function to update the main window update status.\n   * @param {Function} options.parameters.updateMainGridStream - Function to update the main grid stream.\n   *\n   * @returns {Promise<{ component: any, inputs: any }[] | void>} A promise that resolves with the components and inputs or void.\n   */\n  prepopulateUserMedia = async ({\n    name,\n    parameters,\n  }: PrepopulateUserMediaOptions): Promise<{ component: any; inputs: any }[] | void> => {\n    try {\n      // Destructure parameters\n\n      let { getUpdatedAllParams } = parameters;\n      parameters = getUpdatedAllParams();\n\n      let {\n        participants,\n        allVideoStreams,\n        islevel,\n        member,\n        shared,\n        shareScreenStarted,\n        eventType,\n        screenId,\n        forceFullDisplay,\n        updateMainWindow,\n        mainScreenFilled,\n        adminOnMainScreen,\n        mainScreenPerson,\n        videoAlreadyOn,\n        audioAlreadyOn,\n        oldAllStreams,\n        checkOrientation,\n        screenForceFullDisplay,\n\n        localStreamScreen,\n        remoteScreenStream,\n        localStreamVideo,\n        mainHeightWidth,\n        isWideScreen,\n        localUIMode,\n        whiteboardStarted,\n        whiteboardEnded,\n\n        virtualStream,\n        keepBackground,\n        annotateScreenStream,\n\n        updateMainScreenPerson,\n        updateMainScreenFilled,\n        updateAdminOnMainScreen,\n        updateMainHeightWidth,\n        updateScreenForceFullDisplay,\n        updateUpdateMainWindow,\n        updateMainGridStream,\n      } = parameters;\n\n      // If the event type is 'chat', return early\n      if (eventType == 'chat') {\n        return;\n      }\n\n      // Initialize variables\n      let host: Participant | null;\n      let hostStream: any;\n      let newComponents: { component: any; inputs: any }[] = [];\n\n      // Check if screen sharing is started or shared\n      if (shareScreenStarted || shared) {\n        // Handle main grid visibility based on the event type\n        if (eventType == 'conference') {\n          if (shared || shareScreenStarted) {\n            if (mainHeightWidth == 0) {\n              // Add the main grid if not present\n              updateMainHeightWidth(84);\n            }\n          } else {\n            // Remove the main grid if not shared or started\n            updateMainHeightWidth(0);\n          }\n        }\n\n        // Switch display to optimize for screen share\n        screenForceFullDisplay = forceFullDisplay;\n\n        updateScreenForceFullDisplay(screenForceFullDisplay);\n\n        // Get the orientation and adjust forceFullDisplay\n        let orientation = checkOrientation();\n        if (orientation == 'portrait' || !isWideScreen) {\n          if (shareScreenStarted || shared) {\n            screenForceFullDisplay = false;\n            updateScreenForceFullDisplay(screenForceFullDisplay);\n          }\n        }\n\n        // Check if the user is sharing the screen\n        if (shared) {\n          // User is sharing\n          host = { name: member, audioID: '', videoID: '' };\n          hostStream = localStreamScreen;\n\n          // Update admin on the main screen\n          adminOnMainScreen = islevel == '2';\n          updateAdminOnMainScreen(adminOnMainScreen);\n\n          // Update main screen person\n          mainScreenPerson = host.name || '';\n          updateMainScreenPerson(mainScreenPerson);\n        } else {\n          //someone else is sharing\n          host =\n            participants.find(\n              (participant: Participant) =>\n                participant.ScreenID == screenId && participant.ScreenOn == true,\n            ) ?? null;\n\n          if (whiteboardStarted && !whiteboardEnded) {\n            host = { name: 'WhiteboardActive', islevel: '2', audioID: '', videoID: '' };\n            hostStream = { producerId: 'WhiteboardActive' };\n          }\n\n          if (host == null) {\n            // remoteScreenStream\n            host =\n              participants.find((participant: Participant) => participant.ScreenOn == true) ?? null;\n          }\n\n          // check remoteScreenStream\n          if (host != null && !host?.name?.includes('WhiteboardActive')) {\n            if (remoteScreenStream.length == 0) {\n              hostStream =\n                allVideoStreams.find(\n                  (stream: Stream | Participant) => stream.producerId == host?.ScreenID,\n                ) ?? null;\n            } else {\n              hostStream = remoteScreenStream[0];\n            }\n          }\n\n          // Update admin on the main screen\n          adminOnMainScreen = (host && host.islevel == '2') ?? false;\n          updateAdminOnMainScreen(adminOnMainScreen);\n\n          // Update main screen person\n          mainScreenPerson = host?.name ?? '';\n          updateMainScreenPerson(mainScreenPerson);\n        }\n      } else {\n        // Screen share not started\n        if (eventType == 'conference') {\n          // No main grid for conferences\n          return;\n        }\n\n        // Find the host with level '2'\n        host = participants.find((participant: Participant) => participant.islevel == '2') ?? null;\n\n        // Update main screen person\n        mainScreenPerson = host?.name ?? '';\n        updateMainScreenPerson(mainScreenPerson);\n      }\n\n      // If host is not null, check if host videoIsOn\n      if (host) {\n        // Populate the main screen with the host video\n        if (shareScreenStarted || shared) {\n          forceFullDisplay = screenForceFullDisplay;\n          if (whiteboardStarted && !whiteboardEnded) {\n            // Whiteboard is active\n          } else {\n            newComponents.push({\n              component: VideoCard,\n              inputs: {\n                videoStream: shared ? hostStream : hostStream.stream,\n                remoteProducerId: host.ScreenID,\n                eventType,\n                forceFullDisplay: annotateScreenStream && shared ? false : forceFullDisplay,\n                customStyle: {\n                  border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                },\n                participant: host,\n                backgroundColor: 'rgba(217, 227, 234, 0.99)',\n                showControls: false,\n                showInfo: true,\n                name: host.name,\n                doMirror: false,\n                parameters,\n              },\n            });\n          }\n\n          updateMainGridStream(newComponents);\n\n          mainScreenFilled = true;\n          updateMainScreenFilled(mainScreenFilled);\n          adminOnMainScreen = host.islevel == '2';\n          updateAdminOnMainScreen(adminOnMainScreen);\n          mainScreenPerson = host.name ?? '';\n          updateMainScreenPerson(mainScreenPerson);\n\n          return newComponents;\n        }\n\n        // Check if video is already on or not\n        if (\n          (islevel != '2' && !host['videoOn']) ||\n          (islevel == '2' && (!host['videoOn'] || !videoAlreadyOn)) ||\n          localUIMode == true\n        ) {\n          // Video is off\n          if (islevel == '2' && videoAlreadyOn) {\n            // Admin's video is on\n            newComponents.push({\n              component: VideoCard,\n              inputs: {\n                videoStream: keepBackground && virtualStream ? virtualStream : localStreamVideo,\n                remoteProducerId: host.videoID,\n                eventType,\n                forceFullDisplay,\n                customStyle: {\n                  border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                },\n                participant: host,\n                backgroundColor: 'rgba(217, 227, 234, 0.99)',\n                showControls: false,\n                showInfo: true,\n                name: host.name,\n                doMirror: true,\n                parameters,\n              },\n            });\n            updateMainGridStream(newComponents);\n\n            mainScreenFilled = true;\n            updateMainScreenFilled(mainScreenFilled);\n            adminOnMainScreen = true;\n            updateAdminOnMainScreen(adminOnMainScreen);\n            mainScreenPerson = host.name ?? '';\n            updateMainScreenPerson(mainScreenPerson);\n          } else {\n            // Video is off and not admin\n            let audOn;\n\n            if (islevel == '2' && audioAlreadyOn) {\n              audOn = true;\n            } else {\n              if (host != null && islevel != '2') {\n                audOn = host['muted'] == false;\n              }\n            }\n\n            if (audOn) {\n              // Audio is on\n              try {\n                newComponents.push({\n                  component: AudioCard,\n                  inputs: {\n                    name: host.name,\n                    barColor: 'red',\n                    textColor: 'white',\n                    customStyle: {\n                      backgroundColor: 'transparent',\n                      border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                    },\n                    controlsPosition: 'topLeft',\n                    infoPosition: 'topRight',\n                    showWaveform: true,\n                    roundedImage: true,\n                    parameters: parameters,\n                    showControls: false,\n                    backgroundColor: 'transparent',\n                  },\n                });\n\n                updateMainGridStream(newComponents);\n              } catch (error) {\n                // Handle audio card creation error\n              }\n\n              mainScreenFilled = true;\n              updateMainScreenFilled(mainScreenFilled);\n              adminOnMainScreen = islevel == '2';\n              updateAdminOnMainScreen(adminOnMainScreen);\n              mainScreenPerson = host.name ?? '';\n              updateMainScreenPerson(mainScreenPerson);\n            } else {\n              // Audio is off\n              try {\n                newComponents.push({\n                  component: MiniCard,\n                  inputs: {\n                    initials: name,\n                    fontSize: 20,\n                    customStyle: {\n                      backgroundColor: 'transparent',\n                      border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                    },\n                  },\n                });\n                updateMainGridStream(newComponents);\n              } catch (error) {\n                // Handle mini card creation error\n              }\n\n              mainScreenFilled = false;\n              updateMainScreenFilled(mainScreenFilled);\n              adminOnMainScreen = islevel == '2';\n              updateAdminOnMainScreen(adminOnMainScreen);\n              mainScreenPerson = host.name ?? '';\n              updateMainScreenPerson(mainScreenPerson);\n            }\n          }\n        } else {\n          // Video is on\n          if (shareScreenStarted || shared) {\n            // Screen share is on\n            if (whiteboardStarted && !whiteboardEnded) {\n              // Whiteboard is active\n            } else {\n              try {\n                newComponents.push({\n                  component: VideoCard,\n                  inputs: {\n                    videoStream: shared ? hostStream : hostStream.stream,\n                    remoteProducerId: host.ScreenID,\n                    eventType,\n                    forceFullDisplay,\n                    customStyle: {\n                      border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                    },\n                    participant: host,\n                    backgroundColor: 'rgba(217, 227, 234, 0.99)',\n                    showControls: false,\n                    showInfo: true,\n                    name: host.name,\n                    doMirror: false,\n                    parameters,\n                  },\n                });\n\n                updateMainGridStream(newComponents);\n\n                mainScreenFilled = true;\n                updateMainScreenFilled(mainScreenFilled);\n                adminOnMainScreen = host.islevel == '2';\n                updateAdminOnMainScreen(adminOnMainScreen);\n                mainScreenPerson = host.name ?? '';\n                updateMainScreenPerson(mainScreenPerson);\n              } catch (error) {\n                // Handle video card creation error\n              }\n            }\n          } else {\n            // Screen share is off\n            let streame;\n            if (islevel == '2') {\n              host['stream'] = keepBackground && virtualStream ? virtualStream : localStreamVideo;\n            } else {\n              streame = oldAllStreams.find(\n                (streame: Stream | Participant) => streame.producerId == host.videoID,\n              );\n              host['stream'] = streame && streame.stream;\n            }\n\n            try {\n              if (host['stream']) {\n                newComponents.push({\n                  component: VideoCard,\n                  inputs: {\n                    videoStream: host['stream'],\n                    remoteProducerId: host.videoID,\n                    eventType,\n                    forceFullDisplay,\n                    customStyle: {\n                      border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                    },\n                    participant: host,\n                    backgroundColor: 'rgba(217, 227, 234, 0.99)',\n                    showControls: false,\n                    showInfo: true,\n                    name: host.name,\n                    doMirror: member == host.name,\n                    parameters,\n                  },\n                });\n\n                updateMainGridStream(newComponents);\n\n                mainScreenFilled = true;\n                adminOnMainScreen = host.islevel == '2';\n                mainScreenPerson = host.name ?? '';\n              } else {\n                newComponents.push({\n                  component: MiniCard,\n                  inputs: {\n                    initials: name,\n                    fontSize: 20,\n                    customStyle: {\n                      backgroundColor: 'transparent',\n                      border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                    },\n                  },\n                });\n\n                updateMainGridStream(newComponents);\n                mainScreenFilled = false;\n                adminOnMainScreen = islevel == '2';\n                mainScreenPerson = host.name ?? '';\n              }\n\n              updateMainScreenFilled(mainScreenFilled);\n\n              updateAdminOnMainScreen(adminOnMainScreen);\n\n              updateMainScreenPerson(mainScreenPerson);\n            } catch (error) {\n              // Handle video card creation error\n            }\n          }\n        }\n      } else {\n        // Host is null, add a mini card\n        try {\n          newComponents.push({\n            component: MiniCard,\n            inputs: {\n              initials: name,\n              fontSize: 20,\n              customStyle: {\n                backgroundColor: 'transparent',\n                border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n              },\n            },\n          });\n\n          updateMainGridStream(newComponents);\n\n          mainScreenFilled = false;\n          adminOnMainScreen = false;\n          mainScreenPerson = '';\n          updateMainScreenFilled(mainScreenFilled);\n          updateAdminOnMainScreen(adminOnMainScreen);\n          updateMainScreenPerson(mainScreenPerson);\n        } catch (error) {\n          // Handle mini card creation error\n        }\n      }\n\n      updateMainWindow = false;\n      updateUpdateMainWindow(updateMainWindow);\n\n      return newComponents;\n    } catch (error: any) {\n      // Handle errors during the process of preparing and populating the main screen\n      console.log('Error preparing and populating the main screen:', error.message);\n      return [];\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Stream, Participant } from '../@types/types';\nexport interface GetVideosOptions {\n  participants: Participant[];\n  allVideoStreams: (Stream | Participant)[];\n  oldAllStreams: (Stream | Participant)[];\n  adminVidID?: string;\n  updateAllVideoStreams: (streams: (Stream | Participant)[]) => void;\n  updateOldAllStreams: (streams: (Stream | Participant)[]) => void;\n}\n\n// Export the type definition for the function\nexport type GetVideosType = (options: GetVideosOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetVideos {\n  /**\n   * Asynchronously processes and updates video streams by filtering out the admin's video stream.\n   *\n   * @param {GetVideosOptions} options - The options for getting videos.\n   * @param {Participant[]} options.participants - The list of participants.\n   * @param {Stream[]} options.allVideoStreams - The list of all video streams.\n   * @param {(Stream | Participant)[]} options.oldAllStreams - The list of old video streams.\n   * @param {string} options.adminVidID - The ID of the admin's video stream.\n   * @param {Function} options.updateAllVideoStreams - Function to update the state variable for all video streams.\n   * @param {Function} options.updateOldAllStreams - Function to update the state variable for old video streams.\n   * @returns {Promise<void>} A promise that resolves when the video streams have been processed and updated.\n   */\n\n  async getVideos({\n    participants,\n    allVideoStreams,\n    oldAllStreams,\n    adminVidID,\n    updateAllVideoStreams,\n    updateOldAllStreams,\n  }: GetVideosOptions): Promise<void> {\n    try {\n      // Filter out the admin's video stream and update state variables\n      let admin = participants.filter((participant: any) => participant.islevel === '2');\n\n      if (admin.length > 0) {\n        adminVidID = admin[0].videoID;\n\n        if (adminVidID != null && adminVidID !== '') {\n          let oldAllStreams_: any[] = [];\n\n          // Check if the length of oldAllStreams is greater than 0\n          if (oldAllStreams.length > 0) {\n            oldAllStreams_ = oldAllStreams;\n          }\n\n          // Filter out admin's video stream from oldAllStreams\n          oldAllStreams = allVideoStreams.filter(\n            (streame: any) => streame.producerId === adminVidID,\n          );\n\n          // If no admin's video stream found, revert to the previous state\n          if (oldAllStreams.length < 1) {\n            oldAllStreams = oldAllStreams_;\n          }\n\n          // Update the state variable for old video streams\n          updateOldAllStreams(oldAllStreams);\n\n          // Filter out admin's video stream from allVideoStreams\n          allVideoStreams = allVideoStreams.filter(\n            (streame: any) => streame.producerId !== adminVidID,\n          );\n\n          // Update the state variable for all video streams\n          updateAllVideoStreams(allVideoStreams);\n        }\n      }\n    } catch (error: any) {\n      // Handle errors during the process of updating video streams\n      console.log('Error updating video streams:', error.message);\n      // throw error;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ScreenState,\n  CompareScreenStatesParameters,\n  CompareScreenStatesType,\n  CompareActiveNamesParameters,\n  CompareActiveNamesType,\n} from '../@types/types';\n\nexport interface RePortParameters\n  extends CompareScreenStatesParameters,\n    CompareActiveNamesParameters {\n  islevel: string;\n  mainScreenPerson: string;\n  adminOnMainScreen: boolean;\n  mainScreenFilled: boolean;\n  recordStarted: boolean;\n  recordStopped: boolean;\n  recordPaused: boolean;\n  recordResumed: boolean;\n  screenStates: ScreenState[];\n  prevScreenStates: ScreenState[];\n  updateScreenStates: (states: ScreenState[]) => void;\n  updatePrevScreenStates: (states: ScreenState[]) => void;\n\n  // mediasfu functions\n  compareActiveNames: CompareActiveNamesType;\n  compareScreenStates: CompareScreenStatesType;\n\n  getUpdatedAllParams: () => RePortParameters;\n  [key: string]: any;\n}\n\nexport interface RePortOptions {\n  restart?: boolean;\n  parameters: RePortParameters;\n}\n\n// Export the type definition for the function\nexport type RePortType = (options: RePortOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RePort {\n  /**\n   * RePort function that handles the reporting logic based on the provided parameters.\n   *\n   * @param {RePortOptions} options - The options for the rePort function.\n   * @param {boolean} [options.restart=false] - Flag indicating whether to restart the process.\n   * @param {Object} options.parameters - The parameters object containing various states and functions.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {string} options.parameters.islevel - The current level of the process.\n   * @param {string} options.parameters.mainScreenPerson - The person on the main screen.\n   * @param {boolean} options.parameters.adminOnMainScreen - Flag indicating if admin is on the main screen.\n   * @param {boolean} options.parameters.mainScreenFilled - Flag indicating if the main screen is filled.\n   * @param {boolean} options.parameters.recordStarted - Flag indicating if recording has started.\n   * @param {boolean} options.parameters.recordStopped - Flag indicating if recording has stopped.\n   * @param {boolean} options.parameters.recordPaused - Flag indicating if recording is paused.\n   * @param {boolean} options.parameters.recordResumed - Flag indicating if recording has resumed.\n   * @param {Array} options.parameters.screenStates - Array of current screen states.\n   * @param {Function} options.parameters.updateScreenStates - Function to update the current screen states.\n   * @param {Function} options.parameters.updatePrevScreenStates - Function to update the previous screen states.\n   * @param {Function} options.parameters.compareActiveNames - Function to compare active names.\n   * @param {Function} options.parameters.compareScreenStates - Function to compare screen states.\n   *\n   * @returns {Promise<void>} A promise that resolves when the reporting process is complete.\n   *\n   * @throws {Error} Throws an error if there is an issue during the reporting process.\n   */\n\n  async rePort({ restart = false, parameters }: RePortOptions): Promise<void> {\n    const { getUpdatedAllParams } = parameters;\n    const updatedParams = getUpdatedAllParams();\n\n    const {\n      islevel,\n      mainScreenPerson,\n      adminOnMainScreen,\n      mainScreenFilled,\n      recordStarted,\n      recordStopped,\n      recordPaused,\n      recordResumed,\n      screenStates,\n      updateScreenStates,\n      updatePrevScreenStates,\n      compareActiveNames,\n      compareScreenStates,\n    } = updatedParams;\n\n    try {\n      if (recordStarted || recordResumed) {\n        if (recordStopped || recordPaused) {\n          // Recording stopped or paused, do nothing\n        } else {\n          if (islevel === '2') {\n            const prevScreenStatesCopy = [...screenStates];\n            updatePrevScreenStates(prevScreenStatesCopy);\n\n            const newScreenStates = [{ mainScreenPerson, adminOnMainScreen, mainScreenFilled }];\n            updateScreenStates(newScreenStates);\n\n            await compareActiveNames({ restart, parameters: updatedParams });\n            if (!restart) {\n              await compareScreenStates({ restart, parameters: updatedParams });\n            }\n          }\n        }\n      }\n    } catch (error) {\n      // Handle errors during the process of rePorting\n      console.error('Error during rePorting: ', error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { Participant, AutoAdjustType, ScreenState, EventType } from '../@types/types';\n\nexport interface TriggerParameters {\n  socket: Socket;\n  roomName: string;\n  screenStates: ScreenState[];\n  participants: Participant[];\n  updateDateState?: number | null;\n  lastUpdate: number | null;\n  nForReadjust: number;\n  eventType: EventType;\n  shared: boolean;\n  shareScreenStarted: boolean;\n  whiteboardStarted: boolean;\n  whiteboardEnded: boolean;\n  updateUpdateDateState: (timestamp: number | null) => void;\n  updateLastUpdate: (lastUpdate: number | null) => void;\n  updateNForReadjust: (nForReadjust: number) => void;\n\n  // mediasfu functions\n  autoAdjust: AutoAdjustType;\n\n  getUpdatedAllParams: () => TriggerParameters;\n  [key: string]: any;\n}\n\nexport interface TriggerOptions {\n  ref_ActiveNames: string[];\n  parameters: TriggerParameters;\n}\n\n// Export the type definition for the function\nexport type TriggerType = (options: TriggerOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Trigger {\n  /**\n   * Triggers an update to the screen client based on the provided parameters.\n   *\n   * @param {TriggerOptions} options - The options for triggering the update.\n   * @param {string[]} options.ref_ActiveNames - Reference to the active names.\n   * @param {Parameters} options.parameters - The parameters for the trigger.\n   * @returns {Promise<void>} A promise that resolves when the trigger is complete.\n   *\n   * @throws Will throw an error if the updateScreenClient operation fails.\n   *\n   * @remarks\n   * This function handles various conditions to determine the main screen person,\n   * adjusts the screen states, and emits an update to the screen client via socket.\n   *\n   * @example\n   * ```typescript\n   * await trigger({\n   *   ref_ActiveNames: [\"user1\", \"user2\"],\n   *   parameters: {\n   *     socket: socketInstance,\n   *     roomName: \"room1\",\n   *     screenStates: [{ mainScreenPerson: \"user1\", mainScreenFilled: true, adminOnMainScreen: false }],\n   *     participants: [{ name: \"admin\", islevel: \"2\" }],\n   *     updateDateState: 0,\n   *     lastUpdate: null,\n   *     nForReadjust: 0,\n   *     eventType: \"conference\",\n   *     shared: false,\n   *     shareScreenStarted: false,\n   *     whiteboardStarted: false,\n   *     whiteboardEnded: false,\n   *     updateUpdateDateState: (date) => {},\n   *     updateLastUpdate: (date) => {},\n   *     updateNForReadjust: (n) => {},\n   *     autoAdjust: async ({ n, parameters }) => [n, 0],\n   *   },\n   * });\n   * ```\n   */\n  async trigger({ ref_ActiveNames, parameters }: TriggerOptions): Promise<void> {\n    // Function to trigger the updateScreen event\n\n    try {\n      let {\n        socket,\n        roomName,\n        screenStates,\n        participants,\n        updateDateState,\n        lastUpdate,\n        nForReadjust,\n        eventType,\n        shared,\n        shareScreenStarted,\n        whiteboardStarted,\n        whiteboardEnded,\n\n        updateUpdateDateState,\n        updateLastUpdate,\n        updateNForReadjust,\n\n        autoAdjust,\n      } = parameters;\n\n      let personOnMainScreen = screenStates[0].mainScreenPerson;\n\n      let adminName = '';\n      const admin = participants.filter((participant: Participant) => participant.islevel == '2');\n      if (admin.length > 0) {\n        adminName = admin[0].name || '';\n      }\n      if (personOnMainScreen === 'WhiteboardActive') {\n        personOnMainScreen = adminName;\n      }\n\n      let mainfilled = screenStates[0].mainScreenFilled;\n      let adminOnMain = screenStates[0].adminOnMainScreen;\n      let nForReadjust_;\n      let val1;\n\n      let noww = new Date().getTime();\n      // get now in seconds\n      let timestamp = Math.floor(noww / 1000);\n\n      let eventPass = false;\n      if (eventType === 'conference' && !(shared || shareScreenStarted)) {\n        eventPass = true;\n        personOnMainScreen = adminName;\n        if (!ref_ActiveNames.includes(adminName)) {\n          ref_ActiveNames.unshift(adminName);\n        }\n      }\n\n      if ((mainfilled && personOnMainScreen != null && adminOnMain) || eventPass) {\n        if (eventType === 'conference') {\n          nForReadjust = nForReadjust + 1;\n          updateNForReadjust(nForReadjust);\n        }\n\n        if (!ref_ActiveNames.includes(adminName) && whiteboardStarted && !whiteboardEnded) {\n          ref_ActiveNames.unshift(adminName);\n        }\n\n        nForReadjust_ = ref_ActiveNames.length;\n\n        if (nForReadjust_ === 0 && eventType === 'webinar') {\n          val1 = 0;\n        } else {\n          const [val11] = await autoAdjust({\n            n: nForReadjust_,\n            eventType,\n            shared,\n            shareScreenStarted,\n          });\n          val1 = val11;\n        }\n\n        let calc1 = Math.floor((val1 / 12) * 100);\n        let calc2 = 100 - calc1;\n\n        // check if lastUpdate is not null and at least same seconds\n        if (lastUpdate == null || updateDateState != timestamp) {\n          let now = new Date();\n\n          socket.emit(\n            'updateScreenClient',\n            {\n              roomName,\n              names: ref_ActiveNames,\n              mainPercent: calc2,\n              mainScreenPerson: personOnMainScreen,\n              viewType: eventType,\n            },\n            ({ success, reason }: { success: boolean; reason: string }) => {\n              updateDateState = timestamp;\n              updateUpdateDateState(updateDateState);\n              lastUpdate = Math.floor(now.getTime() / 1000);\n              updateLastUpdate(lastUpdate);\n              if (success) {\n                // handle success\n              } else {\n                console.log(reason, 'updateScreenClient failed');\n              }\n            },\n          );\n        }\n      } else if (mainfilled && personOnMainScreen != null && !adminOnMain) {\n        nForReadjust_ = ref_ActiveNames.length;\n\n        if (!ref_ActiveNames.includes(adminName)) {\n          ref_ActiveNames.unshift(adminName);\n          nForReadjust_ = ref_ActiveNames.length;\n        }\n\n        const [val11] = await autoAdjust({\n          n: nForReadjust_,\n          eventType,\n          shared,\n          shareScreenStarted,\n        });\n\n        val1 = val11;\n\n        const calc1 = Math.floor((val1 / 12) * 100);\n        const calc2 = 100 - calc1;\n\n        if (lastUpdate == null || updateDateState != timestamp) {\n          let now = new Date();\n\n          socket.emit(\n            'updateScreenClient',\n            {\n              roomName,\n              names: ref_ActiveNames,\n              mainPercent: calc2,\n              mainScreenPerson: personOnMainScreen,\n              viewType: eventType,\n            },\n            ({ success, reason }: { success: boolean; reason: string }) => {\n              updateDateState = timestamp;\n              updateUpdateDateState(updateDateState);\n              lastUpdate = Math.floor(now.getTime() / 1000);\n              updateLastUpdate(lastUpdate);\n              if (success) {\n                // handle success\n              } else {\n                console.log(reason, 'updateScreenClient failed');\n              }\n            },\n          );\n        }\n      } else {\n        // stop recording\n        console.log('trigger stopRecording');\n      }\n    } catch (error) {\n      console.log('Error triggering updateScreen:', error);\n    }\n  }\n}\n","import { Component, Input, OnInit, OnDestroy, HostListener, Optional, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { getOverlayPosition } from '../../../methods/utils/get-overlay-position.util';\n\nexport interface MiniAudioOptions {\n  visible?: boolean;\n  customStyle?: any;\n  name?: string;\n  showWaveform?: boolean;\n  overlayPosition?: string;\n  barColor?: string;\n  textColor?: string;\n  nameTextStyling?: any;\n  imageSource?: string;\n  roundedImage?: boolean;\n  imageStyle?: any;\n}\n\nexport type MiniAudioType = (options: MiniAudioOptions) => HTMLElement;\n\n/**\n * MiniAudio component is a standalone Angular component that displays a mini audio player with waveform animations.\n * It supports various customizations including visibility, styles, text, and image properties.\n * The component can be dragged around the screen.\n *\n * @selector app-mini-audio\n * @standalone true\n * @imports CommonModule\n *\n * @template\n * The template includes a modal container with a card that displays an optional background image, name text, and waveform animations.\n *\n * @styles\n * The styles define the appearance of the modal container, card, background image, name text, overlay, waveform, and bars.\n *\n * @class MiniAudio\n * @implements OnInit, OnDestroy\n *\n * @property {boolean} visible - Determines if the component is visible.\n * @property {any} customStyle - Custom styles for the component.\n * @property {string} name - The name text displayed in the component.\n * @property {boolean} showWaveform - Flag to show or hide the waveform animations.\n * @property {string} overlayPosition - Position of the overlay.\n * @property {string} barColor - Color of the waveform bars.\n * @property {string} textColor - Color of the name text.\n * @property {any} nameTextStyling - Additional styles for the name text.\n * @property {string} imageSource - Source URL for the background image.\n * @property {boolean} roundedImage - Flag to apply rounded corners to the background image.\n * @property {any} imageStyle - Custom styles for the background image.\n *\n * @constructor\n * The constructor allows optional dependency injection for all input properties.\n *\n * @method ngOnInit\n * Initializes the component and starts waveform animations if enabled.\n *\n * @method ngOnDestroy\n * Cleans up intervals to prevent memory leaks.\n *\n * @method animateWaveform\n * Starts the waveform animations by setting intervals for each bar.\n *\n * @method animateBar\n * Animates a single bar in the waveform.\n *\n * @method resetWaveform\n * Resets the waveform animations to their initial state.\n *\n * @method clearIntervals\n * Clears all animation intervals.\n *\n * @method getAnimationDuration\n * Returns the animation duration for a given bar index.\n *\n * @method getImageStyle\n * Returns the combined styles for the background image, including optional rounded corners.\n *\n * @method combineStyles\n * Combines base styles with additional styles.\n *\n * @method handleMouseDown\n * Handles the mousedown event to start dragging the component.\n *\n * @method handleMouseMove\n * Handles the mousemove event to update the component's position while dragging.\n *\n * @method handleMouseUp\n * Handles the mouseup event to stop dragging the component.\n *\n * @method getOverlayPosition\n * Returns the position styles for the overlay.\n */\n@Component({\n  selector: 'app-mini-audio',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div\n      *ngIf=\"visible\"\n      class=\"modal-container\"\n      [ngStyle]=\"{ transform: 'translate(' + position.x + 'px, ' + position.y + 'px)' }\"\n      (mousedown)=\"handleMouseDown($event)\"\n    >\n      <div class=\"card\" [ngStyle]=\"customStyle\">\n        <ng-container *ngIf=\"imageSource\">\n          <img\n            [src]=\"imageSource\"\n            [ngStyle]=\"getImageStyle()\"\n            alt=\"Background\"\n            class=\"background-image\"\n          />\n        </ng-container>\n        <div class=\"name-text\" [ngStyle]=\"combineStyles({ color: textColor }, nameTextStyling)\">\n          {{ name }}\n        </div>\n        <div [ngStyle]=\"getOverlayPosition(overlayPosition)\" class=\"overlay-web\">\n          <div class=\"waveform-web\">\n            <div\n              *ngFor=\"let animation of waveformAnimations; let i = index\"\n              [ngStyle]=\"{\n                height: animation == 0 ? '1px' : '30px',\n                width: '10px',\n                backgroundColor: barColor\n              }\"\n              class=\"bar\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .modal-container {\n        position: absolute;\n        top: 0;\n        right: 0;\n        padding: 0;\n        margin: 0;\n        width: 100px;\n        height: 100px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(0, 45, 33, 0.5);\n        z-index: 8;\n        elevation: 8;\n      }\n\n      .card {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n        background-color: #2c678f;\n      }\n\n      .background-image {\n        position: absolute;\n        width: 70px;\n        height: 70px;\n        justify-content: center;\n        align-items: center;\n        align-self: center;\n        top: 40%;\n        left: 50%;\n        transform: translate(-35px, -10px);\n      }\n\n      .name-text {\n        font-size: 20px;\n        font-weight: bold;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(0, 0, 0, 0.5);\n        width: 100%;\n        padding-top: 5px;\n        padding-bottom: 5px;\n        text-align: center;\n        z-index: 2;\n      }\n\n      .overlay-web {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        display: grid;\n        grid-template-columns: 1fr 12fr 1fr;\n        grid-gap: 3px;\n        z-index: 3;\n      }\n\n      .waveform-web {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(0, 0, 0, 0.05);\n        padding: 0;\n        flex-direction: row;\n      }\n\n      .bar {\n        flex: 1;\n        opacity: 0.35;\n        margin-right: 0.5px;\n      }\n    `,\n  ],\n})\nexport class MiniAudio implements OnInit, OnDestroy {\n  @Input() visible = true;\n  @Input() customStyle: any;\n  @Input() name = '';\n  @Input() showWaveform = false;\n  @Input() overlayPosition = '';\n  @Input() barColor = 'red';\n  @Input() textColor = 'white';\n  @Input() nameTextStyling: any = {};\n  @Input() imageSource = '';\n  @Input() roundedImage = false;\n  @Input() imageStyle: any = {};\n\n  waveformAnimations: number[] = Array.from({ length: 9 }, () => 0);\n  intervals: NodeJS.Timeout[] = [];\n  position = { x: 0, y: 0 };\n  isDragging = false;\n  dragOffset = { x: 0, y: 0 };\n\n  constructor(\n    @Optional() @Inject('visible') injectedVisible: boolean,\n    @Optional() @Inject('customStyle') injectedCustomStyle: any,\n    @Optional() @Inject('name') injectedName: string,\n    @Optional() @Inject('showWaveform') injectedShowWaveform: boolean,\n    @Optional() @Inject('overlayPosition') injectedOverlayPosition: string,\n    @Optional() @Inject('barColor') injectedBarColor: string,\n    @Optional() @Inject('textColor') injectedTextColor: string,\n    @Optional() @Inject('nameTextStyling') injectedNameTextStyling: any,\n    @Optional() @Inject('imageSource') injectedImageSource: string,\n    @Optional() @Inject('roundedImage') injectedRoundedImage: boolean,\n    @Optional() @Inject('imageStyle') injectedImageStyle: any,\n  ) {\n    this.visible = injectedVisible != null ? injectedVisible : this.visible;\n    this.customStyle = injectedCustomStyle || this.customStyle;\n    this.name = injectedName || this.name;\n    this.showWaveform = injectedShowWaveform != null ? injectedShowWaveform : this.showWaveform;\n    this.overlayPosition = injectedOverlayPosition || this.overlayPosition;\n    this.barColor = injectedBarColor || this.barColor;\n    this.textColor = injectedTextColor || this.textColor;\n    this.nameTextStyling = injectedNameTextStyling || this.nameTextStyling;\n    this.imageSource = injectedImageSource || this.imageSource;\n    this.roundedImage = injectedRoundedImage != null ? injectedRoundedImage : this.roundedImage;\n    this.imageStyle = injectedImageStyle || this.imageStyle;\n  }\n\n  ngOnInit() {\n    if (this.showWaveform) {\n      this.animateWaveform();\n    } else {\n      this.resetWaveform();\n    }\n  }\n\n  ngOnDestroy() {\n    this.clearIntervals();\n  }\n\n  animateWaveform() {\n    this.intervals = this.waveformAnimations.map((_, index) =>\n      setInterval(() => this.animateBar(index), this.getAnimationDuration(index) * 2),\n    );\n  }\n\n  animateBar(index: number) {\n    this.waveformAnimations[index] = 1;\n    setTimeout(() => {\n      this.waveformAnimations[index] = 0;\n    }, this.getAnimationDuration(index));\n  }\n\n  resetWaveform() {\n    this.waveformAnimations.fill(0);\n  }\n\n  clearIntervals() {\n    this.intervals.forEach((interval) => clearInterval(interval));\n  }\n\n  getAnimationDuration(index: number): number {\n    const durations = [474, 433, 407, 458, 400, 427, 441, 419, 487];\n    return durations[index] || 0;\n  }\n\n  getImageStyle() {\n    return {\n      ...this.imageStyle,\n      ...(this.roundedImage ? { borderRadius: '20%' } : {}),\n    };\n  }\n\n  combineStyles(baseStyle: any, additionalStyles: any) {\n    return { ...baseStyle, ...additionalStyles };\n  }\n\n  handleMouseDown(event: MouseEvent) {\n    this.isDragging = true;\n    this.dragOffset = {\n      x: event.clientX - this.position.x,\n      y: event.clientY - this.position.y,\n    };\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  handleMouseMove(event: MouseEvent) {\n    if (this.isDragging) {\n      this.position = {\n        x: event.clientX - this.dragOffset.x,\n        y: event.clientY - this.dragOffset.y,\n      };\n    }\n  }\n\n  @HostListener('document:mouseup')\n  handleMouseUp() {\n    this.isDragging = false;\n  }\n\n  getOverlayPosition(position: string) {\n    return getOverlayPosition({ position });\n  }\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  Injector,\n  Inject,\n  Optional,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ReUpdateInterType,\n  UpdateParticipantAudioDecibelsType,\n  ReUpdateInterParameters,\n  Participant,\n} from '../../../@types/types';\n\nexport interface MiniAudioPlayerParameters extends ReUpdateInterParameters {\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n  limitedBreakRoom: Participant[];\n\n  // mediasfu functions\n  reUpdateInter: ReUpdateInterType;\n  updateParticipantAudioDecibels: UpdateParticipantAudioDecibelsType;\n\n  getUpdatedAllParams: () => MiniAudioPlayerParameters;\n  [key: string]: any;\n}\n\nexport interface MiniAudioPlayerOptions {\n  stream: MediaStream | null;\n  remoteProducerId: string;\n  parameters: MiniAudioPlayerParameters;\n  MiniAudioComponent?: any;\n  miniAudioProps?: Record<string, any>;\n}\n\nexport type MiniAudioPlayerType = (options: MiniAudioPlayerOptions) => HTMLElement;\n\n@Component({\n  selector: 'app-mini-audio-player',\n  standalone: true,\n  templateUrl: './mini-audio-player.component.html',\n  styleUrls: ['./mini-audio-player.component.css'],\n  imports: [CommonModule],\n})\nexport class MiniAudioPlayer implements OnInit, OnDestroy {\n  @Input() stream: MediaStream | null = null;\n  @Input() remoteProducerId = '';\n  @Input() parameters: MiniAudioPlayerParameters = {} as MiniAudioPlayerParameters;\n  @Input() MiniAudioComponent: any;\n  @Input() miniAudioProps: Record<string, any> = {};\n\n  @ViewChild('audioElement', { static: true }) audioElement!: ElementRef<HTMLAudioElement>;\n\n  showWaveModal = false;\n  isMuted = false;\n  audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n  intervalId: any;\n  autoWaveCheck = false;\n\n  private previousShowWaveModal: boolean | null = null;\n  private previousIsMuted: boolean | null = null;\n\n  private injectorCache = new WeakMap<any, Injector>();\n  private cachedMiniAudioProps: any;\n\n  constructor(\n    private injector: Injector,\n    @Optional() @Inject('stream') injectedStream: MediaStream | null,\n    @Optional() @Inject('remoteProducerId') injectedRemoteProducerId: string,\n    @Optional() @Inject('parameters') injectedParameters: MiniAudioPlayerParameters,\n    @Optional() @Inject('MiniAudioComponent') injectedMiniAudioComponent: any,\n    @Optional() @Inject('miniAudioProps') injectedMiniAudioProps: Record<string, any>,\n  ) {\n    this.stream = injectedStream || this.stream;\n    this.remoteProducerId = injectedRemoteProducerId || this.remoteProducerId;\n    this.parameters = injectedParameters || this.parameters;\n    this.MiniAudioComponent = injectedMiniAudioComponent || this.MiniAudioComponent;\n    this.miniAudioProps = injectedMiniAudioProps || this.miniAudioProps;\n  }\n\n  ngOnInit(): void {\n    if (this.stream) {\n      this.setupAudioProcessing();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  setupAudioProcessing() {\n    const analyser = this.audioContext.createAnalyser();\n    analyser.fftSize = 32;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const source = this.audioContext.createMediaStreamSource(this.stream!);\n    source.connect(analyser);\n    let consLow = false;\n\n    this.intervalId = setInterval(() => {\n      analyser.getByteTimeDomainData(dataArray);\n      let averageLoudness =\n        Array.from(dataArray).reduce((sum, value) => sum + value, 0) / bufferLength;\n\n      const updatedParams = this.parameters.getUpdatedAllParams();\n      let {\n        eventType,\n        participants,\n        paginatedStreams,\n        currentUserPage,\n        adminNameStream,\n        dispActiveNames,\n        activeSounds,\n        reUpdateInter,\n        updateParticipantAudioDecibels,\n        updateActiveSounds,\n        shared,\n        shareScreenStarted,\n        breakOutRoomStarted,\n        breakOutRoomEnded,\n        limitedBreakRoom,\n      } = updatedParams;\n\n      const participant = participants.find((obj: any) => obj.audioID == this.remoteProducerId);\n\n      let audioActiveInRoom = true;\n      if (participant) {\n        if (breakOutRoomStarted && !breakOutRoomEnded) {\n          if (!limitedBreakRoom.map((obj: any) => obj.name).includes(participant.name)) {\n            audioActiveInRoom = false;\n            averageLoudness = 127;\n          }\n        }\n      }\n\n      if (this.parameters.meetingDisplayType != 'video') {\n        this.autoWaveCheck = true;\n      }\n      if (shared || shareScreenStarted) {\n        this.autoWaveCheck = false;\n      }\n\n      if (participant) {\n        this.isMuted = participant.muted || false;\n\n        if (eventType != 'chat' && eventType != 'broadcast') {\n          updateParticipantAudioDecibels({\n            name: participant.name ?? '',\n            averageLoudness: averageLoudness,\n            audioDecibels: updatedParams.audioDecibels,\n            updateAudioDecibels: updatedParams['updateAudioDecibels'],\n          });\n        }\n\n        const inPage = paginatedStreams[currentUserPage].findIndex(\n          (obj: any) => obj.name == participant.name,\n        );\n\n        if (participant.name && !dispActiveNames.includes(participant.name) && inPage == -1) {\n          this.autoWaveCheck = false;\n          if (!adminNameStream) {\n            const adminParticipant = participants.find((obj: any) => obj.islevel == '2');\n            adminNameStream = adminParticipant ? adminParticipant.name : '';\n          }\n\n          if (participant.name == adminNameStream) {\n            this.autoWaveCheck = true;\n          }\n        } else {\n          this.autoWaveCheck = true;\n        }\n\n        if (\n          participant.videoID ||\n          this.autoWaveCheck ||\n          (breakOutRoomStarted && !breakOutRoomEnded && audioActiveInRoom)\n        ) {\n          this.showWaveModal = false;\n\n          if (averageLoudness > 127.5) {\n            if (!activeSounds.includes(participant.name)) {\n              activeSounds.push(participant.name);\n              consLow = false;\n\n              if ((shareScreenStarted || shared) && !participant.videoID) {\n                // do nothing\n              } else {\n                if (eventType != 'chat' && eventType != 'broadcast' && participant.name) {\n                  reUpdateInter({\n                    name: participant.name,\n                    add: true,\n                    average: averageLoudness,\n                    parameters: updatedParams,\n                  });\n                }\n              }\n            }\n          } else {\n            if (activeSounds.includes(participant.name) && consLow) {\n              activeSounds.splice(activeSounds.indexOf(participant.name), 1);\n\n              if ((shareScreenStarted || shared) && !participant.videoID) {\n                // do nothing\n              } else {\n                if (eventType != 'chat' && eventType != 'broadcast' && participant.name) {\n                  reUpdateInter({\n                    name: participant.name,\n                    average: averageLoudness,\n                    parameters: updatedParams,\n                  });\n                }\n              }\n            } else {\n              consLow = true;\n            }\n          }\n        } else {\n          if (averageLoudness > 127.5) {\n            if (!this.parameters['autoWave']) {\n              this.showWaveModal = false;\n            } else {\n              this.showWaveModal = true;\n            }\n\n            if (!activeSounds.includes(participant.name)) {\n              activeSounds.push(participant.name);\n            }\n            if ((shareScreenStarted || shared) && !participant.videoID) {\n              // do nothing\n            } else {\n              if (eventType != 'chat' && eventType != 'broadcast' && participant.name) {\n                reUpdateInter({\n                  name: participant.name,\n                  add: true,\n                  average: averageLoudness,\n                  parameters: updatedParams,\n                });\n              }\n            }\n          } else {\n            this.showWaveModal = false;\n            if (activeSounds.includes(participant.name)) {\n              activeSounds.splice(activeSounds.indexOf(participant.name), 1);\n            }\n            if ((shareScreenStarted || shared) && !participant.videoID) {\n              // do nothing\n            } else {\n              if (eventType != 'chat' && eventType != 'broadcast' && participant.name) {\n                reUpdateInter({\n                  name: participant.name,\n                  average: averageLoudness,\n                  parameters: updatedParams,\n                });\n              }\n            }\n          }\n        }\n\n        updateActiveSounds(activeSounds);\n      } else {\n        this.showWaveModal = false;\n        this.isMuted = true;\n      }\n    }, 2000);\n  }\n\n  createInjector(inputs: any) {\n    if (!this.injectorCache.has(inputs)) {\n      const injector = Injector.create({\n        providers: Object.keys(inputs).map((key) => ({ provide: key, useValue: inputs[key] })),\n        parent: this.injector,\n      });\n      this.injectorCache.set(inputs, injector);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.injectorCache.get(inputs)!;\n  }\n\n  getMiniAudioProps() {\n    if (\n      !this.cachedMiniAudioProps ||\n      this.showWaveModal !== this.previousShowWaveModal ||\n      this.isMuted !== this.previousIsMuted\n    ) {\n      this.cachedMiniAudioProps = {\n        ...this.miniAudioProps,\n        visible: this.showWaveModal && !this.isMuted,\n        showWaveform: this.showWaveModal,\n      };\n\n      this.previousShowWaveModal = this.showWaveModal;\n      this.previousIsMuted = this.isMuted;\n    }\n    return this.cachedMiniAudioProps;\n  }\n}\n","<div class=\"container\">\r\n  <audio *ngIf=\"stream\" autoplay playsinline #audioElement [srcObject]=\"stream\"></audio>\r\n\r\n  <ng-container *ngIf=\"MiniAudioComponent\">\r\n    <ng-container *ngComponentOutlet=\"MiniAudioComponent; injector: createInjector(getMiniAudioProps())\"></ng-container>\r\n  </ng-container>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { MiniAudio } from '../components/display-components/mini-audio/mini-audio.component';\nimport { MiniAudioPlayer } from '../methods/utils/mini-audio-player/mini-audio-player.component';\nimport { Socket } from 'socket.io-client';\nimport {\n  ReorderStreamsType,\n  ReorderStreamsParameters,\n  Participant,\n  PrepopulateUserMediaType,\n  PrepopulateUserMediaParameters,\n  Stream,\n  EventType,\n} from '../@types/types';\n\nexport interface ConsumerResumeParameters\n  extends ReorderStreamsParameters,\n    PrepopulateUserMediaParameters {\n  nStream: MediaStream | null;\n  allAudioStreams: (Stream | Participant)[];\n  allVideoStreams: (Stream | Participant)[];\n  streamNames: Stream[];\n  audStreamNames: Stream[];\n  updateMainWindow: boolean;\n  shared: boolean;\n  shareScreenStarted: boolean;\n  screenId?: string;\n  participants: Array<Participant>;\n  eventType: EventType;\n  meetingDisplayType: string;\n  mainScreenFilled: boolean;\n  first_round: boolean;\n  lock_screen: boolean;\n  oldAllStreams: (Stream | Participant)[];\n  adminVidID?: string;\n  mainHeightWidth: number;\n  member: string;\n  audioOnlyStreams: Array<any>;\n  gotAllVids: boolean;\n  defer_receive: boolean;\n  firstAll: boolean;\n  remoteScreenStream: Stream[];\n  hostLabel: string;\n  whiteboardStarted: boolean;\n  whiteboardEnded: boolean;\n  updateUpdateMainWindow: (value: boolean) => void;\n  updateAllAudioStreams: (value: (Stream | Participant)[]) => void;\n  updateAllVideoStreams: (value: (Stream | Participant)[]) => void;\n  updateStreamNames: (value: Stream[]) => void;\n  updateAudStreamNames: (value: Stream[]) => void;\n  updateNStream: (value: MediaStream | null) => void;\n  updateMainHeightWidth: (value: number) => void;\n  updateLock_screen: (value: boolean) => void;\n  updateFirstAll: (value: boolean) => void;\n  updateRemoteScreenStream: (value: Stream[]) => void;\n  updateOldAllStreams: (value: (Stream | Participant)[]) => void;\n  updateAudioOnlyStreams: (value: Array<any>) => void;\n  updateShareScreenStarted: (value: boolean) => void;\n  updateGotAllVids: (value: boolean) => void;\n  updateScreenId: (value: string) => void;\n  updateDefer_receive: (value: boolean) => void;\n\n  //mediasfu functions\n  reorderStreams: ReorderStreamsType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  getUpdatedAllParams: () => ConsumerResumeParameters;\n  [key: string]: any;\n}\n\ninterface ResumeParams {\n  id: string;\n  producerId: string;\n  kind: string;\n  rtpParameters: any;\n}\n\nexport interface ConsumerResumeOptions {\n  track: MediaStreamTrack;\n  kind: string;\n  remoteProducerId: string;\n  params: ResumeParams;\n  parameters: ConsumerResumeParameters;\n  nsock: Socket;\n}\n\n//export the type definition for the function\nexport type ConsumerResumeType = (options: ConsumerResumeOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsumerResume {\n  /**\n   * Resumes a consumer, making it ready for use.\n   *\n   * @param {Object} options - The options object.\n   * @param {MediaStreamTrack} options.track - The media stream track associated with the resumed consumer.\n   * @param {string} options.kind - The type of media ('audio' or 'video') being resumed.\n   * @param {string} options.remoteProducerId - The ID of the remote producer associated with the resumed consumer.\n   * @param {Object} options.params - Additional parameters related to the resumed consumer.\n   * @param {Object} options.parameters - The parameters object containing various utility functions and state.\n   * @param {Object} options.nsock - The socket associated with the consumer.\n   * @throws Throws an error if an issue occurs during the consumer resumption.\n   */\n  consumerResume = async ({\n    track,\n    remoteProducerId,\n    params,\n    parameters,\n    nsock,\n  }: ConsumerResumeOptions): Promise<void> => {\n    try {\n      // Get updated parameters\n      parameters = parameters.getUpdatedAllParams();\n\n      // Destructure parameters\n      let {\n        nStream,\n        allAudioStreams,\n        allVideoStreams,\n        streamNames,\n        audStreamNames,\n        updateMainWindow,\n        shared,\n        shareScreenStarted,\n        screenId,\n        participants,\n        eventType,\n        meetingDisplayType,\n        mainScreenFilled,\n        first_round,\n        lock_screen,\n        oldAllStreams,\n\n        adminVidID,\n        mainHeightWidth,\n        member,\n        audioOnlyStreams,\n        gotAllVids,\n        defer_receive,\n        firstAll,\n        remoteScreenStream,\n        hostLabel,\n        whiteboardStarted,\n        whiteboardEnded,\n\n        updateUpdateMainWindow,\n        updateAllAudioStreams,\n        updateAllVideoStreams,\n        updateStreamNames,\n        updateAudStreamNames,\n        updateNStream,\n        updateMainHeightWidth,\n        updateLock_screen,\n        updateFirstAll,\n        updateRemoteScreenStream,\n        updateOldAllStreams,\n        updateAudioOnlyStreams,\n        updateShareScreenStarted,\n        updateGotAllVids,\n        updateScreenId,\n        updateDefer_receive,\n\n        //mediasfu functions\n        reorderStreams,\n        prepopulateUserMedia,\n      } = parameters;\n\n      if (params.kind === 'audio') {\n        // Audio resumed\n\n        // Check if the participant with audioID == remoteProducerId has a valid videoID\n        let participant = participants.filter((p) => p.audioID === remoteProducerId);\n        let name__ = participant.length > 0 ? participant[0].name || '' : '';\n\n        if (name__ === member) return;\n\n        //find any participants with ScreenID not null and ScreenOn == true\n        let screenParticipant_alt = participants.filter(\n          (participant) =>\n            participant.ScreenID != null &&\n            participant.ScreenOn == true &&\n            participant.ScreenID != '',\n        );\n        if (screenParticipant_alt.length > 0) {\n          screenId = screenParticipant_alt[0].ScreenID;\n          if (screenId) {\n            updateScreenId(screenId);\n          }\n          if (!shared) {\n            shareScreenStarted = true;\n            updateShareScreenStarted(shareScreenStarted);\n          }\n        } else {\n          if (whiteboardStarted && !whiteboardEnded) {\n            // whiteboard is active\n          } else {\n            screenId = '';\n            updateScreenId(screenId);\n            updateShareScreenStarted(false);\n          }\n        }\n\n        // Media display and UI update to prioritize audio/video\n        nStream = new MediaStream([track]);\n        updateNStream(nStream);\n\n        // Create MiniAudioPlayer track\n        let nTrack = {\n          component: MiniAudioPlayer,\n          inputs: {\n            stream: nStream ? nStream : null,\n            remoteProducerId: remoteProducerId,\n            parameters: parameters,\n            MiniAudioComponent: MiniAudio,\n            miniAudioProps: {\n              customStyle: { backgroundColor: 'gray' },\n              name: name__,\n              showWaveform: true,\n              overlayPosition: 'topRight',\n              barColor: 'white',\n              textColor: 'white',\n              imageSource: 'https://mediasfu.com/images/logo192.png',\n              roundedImage: true,\n              imageStyle: {},\n            },\n          },\n        };\n\n        // Add to audioOnlyStreams array\n        audioOnlyStreams.push(nTrack);\n        updateAudioOnlyStreams(audioOnlyStreams);\n\n        // Add to allAudioStreams array; add producerId, stream\n        allAudioStreams = [...allAudioStreams, { producerId: remoteProducerId, stream: nStream }];\n        updateAllAudioStreams(allAudioStreams);\n\n        let name;\n\n        try {\n          name = participant[0].name;\n        } catch {\n          /* handle error */\n        }\n\n        if (name) {\n          // Add to audStreamNames array; add producerId, name\n          audStreamNames = [...audStreamNames, { producerId: remoteProducerId, name: name__ }];\n          updateAudStreamNames(audStreamNames);\n\n          if (!mainScreenFilled && participant[0].islevel === '2') {\n            updateMainWindow = true;\n            updateUpdateMainWindow(updateMainWindow);\n            await prepopulateUserMedia({\n              name: hostLabel,\n              parameters: { ...parameters, audStreamNames, allAudioStreams },\n            });\n            updateMainWindow = false;\n            updateUpdateMainWindow(updateMainWindow);\n          }\n        } else {\n          return;\n        }\n\n        // Checks for display type and updates the UI\n        let checker;\n        let alt_checker = false;\n\n        if (meetingDisplayType == 'video') {\n          checker =\n            participant[0].videoID != null &&\n            participant[0].videoID != '' &&\n            participant[0].videoID != undefined;\n        } else {\n          checker = true;\n          alt_checker = true;\n        }\n\n        if (checker) {\n          if (shareScreenStarted || shared) {\n            if (!alt_checker) {\n              await reorderStreams({\n                parameters: { ...parameters, audStreamNames, allAudioStreams },\n              });\n            }\n          } else {\n            if (alt_checker && meetingDisplayType != 'video') {\n              await reorderStreams({\n                add: false,\n                screenChanged: true,\n                parameters: { ...parameters, audStreamNames, allAudioStreams },\n              });\n            }\n          }\n        }\n      } else {\n        // Video resumed\n        nStream = new MediaStream([track]);\n        updateNStream(nStream);\n\n        //find any participants with ScreenID not null and ScreenOn == true\n        let screenParticipant_alt = participants.filter(\n          (participant) =>\n            participant.ScreenID != null &&\n            participant.ScreenOn == true &&\n            participant.ScreenID != '',\n        );\n        if (screenParticipant_alt.length > 0) {\n          screenId = screenParticipant_alt[0].ScreenID;\n          if (screenId) {\n            updateScreenId(screenId);\n          }\n          if (!shared) {\n            shareScreenStarted = true;\n            updateShareScreenStarted(shareScreenStarted);\n          }\n        } else {\n          if (whiteboardStarted && !whiteboardEnded) {\n            // whiteboard is active\n          } else {\n            screenId = '';\n            updateScreenId(screenId);\n            updateShareScreenStarted(false);\n          }\n        }\n\n        // Check for display type and update the UI\n        if (remoteProducerId == screenId) {\n          // Put on main screen for screen share\n          updateMainWindow = true;\n          updateUpdateMainWindow(updateMainWindow);\n          remoteScreenStream = [{ producerId: remoteProducerId, stream: nStream }];\n          updateRemoteScreenStream(remoteScreenStream);\n\n          if (eventType == 'conference') {\n            if (shared || shareScreenStarted) {\n              if (mainHeightWidth == 0) {\n                updateMainHeightWidth(84);\n              }\n            } else {\n              if (mainHeightWidth > 0) {\n                updateMainHeightWidth(0);\n              }\n            }\n          }\n\n          if (!lock_screen) {\n            await prepopulateUserMedia({ name: hostLabel, parameters });\n            await reorderStreams({\n              add: false,\n              screenChanged: true,\n              parameters: { ...parameters, remoteScreenStream, allVideoStreams },\n            });\n          } else {\n            if (!first_round) {\n              await prepopulateUserMedia({\n                name: hostLabel,\n                parameters: {\n                  ...parameters,\n                  remoteScreenStream,\n                  allVideoStreams,\n                },\n              });\n              await reorderStreams({\n                add: false,\n                screenChanged: true,\n                parameters: {\n                  ...parameters,\n                  remoteScreenStream,\n                  allVideoStreams,\n                },\n              });\n            }\n          }\n\n          lock_screen = true;\n          updateLock_screen(lock_screen);\n          firstAll = true;\n          updateFirstAll(firstAll);\n        } else {\n          // Non-screen share video resumed\n\n          // Operations to add video to the UI (either main screen or mini screen)\n          parameters = parameters.getUpdatedAllParams();\n\n          // Get the name of the participant with videoID == remoteProducerId\n          let participant = participants.filter(\n            (participant) => participant.videoID == remoteProducerId,\n          );\n\n          if (\n            participant.length > 0 &&\n            participant[0].name != null &&\n            participant[0].name != '' &&\n            participant[0].name != undefined &&\n            participant[0].name !== member\n          ) {\n            allVideoStreams = [\n              ...allVideoStreams,\n              { producerId: remoteProducerId, stream: nStream, socket_: nsock },\n            ];\n            updateAllVideoStreams(allVideoStreams);\n          }\n\n          if (participant.length > 0) {\n            let name = participant[0].name;\n            streamNames = [...streamNames, { producerId: remoteProducerId, name: name || '' }];\n            updateStreamNames(streamNames);\n          }\n\n          // If not screenshare, filter out the stream that belongs to the participant with isAdmin = true and islevel == '2' (host)\n          // Find the ID of the participant with isAdmin = true and islevel == '2'\n          if (!shareScreenStarted) {\n            let admin = participants.filter(\n              (participant) => participant.isAdmin == true && participant.islevel == '2',\n            );\n            // Remove video stream with producerId == admin.id\n            // Get the videoID of the admin\n\n            if (admin.length > 0) {\n              adminVidID = admin[0].videoID;\n\n              if (adminVidID != null && adminVidID != '') {\n                let oldAllStreams_: (Stream | Participant)[] = [];\n                // Check if the length of allVideoStreams is > 0\n                if (oldAllStreams.length > 0) {\n                  oldAllStreams_ = oldAllStreams;\n                }\n\n                oldAllStreams = allVideoStreams.filter(\n                  (streame) => streame.producerId == adminVidID,\n                );\n                updateOldAllStreams(oldAllStreams);\n\n                if (oldAllStreams.length < 1) {\n                  oldAllStreams = oldAllStreams_;\n                  updateOldAllStreams(oldAllStreams);\n                }\n\n                allVideoStreams = allVideoStreams.filter(\n                  (streame) => streame.producerId != adminVidID,\n                );\n                updateAllVideoStreams(allVideoStreams);\n\n                if (remoteProducerId == adminVidID) {\n                  updateMainWindow = true;\n                }\n              }\n\n              gotAllVids = true;\n              updateGotAllVids(gotAllVids);\n            }\n          } else {\n            // Check if the videoID is either that of the admin or that of the screen participant\n            let screenParticipant = participants.filter(\n              (participant) => participant.ScreenID == screenId,\n            );\n\n            // See if producerId is that of admin videoID or screenParticipant videoID\n            let adminVidID;\n\n            let screenParticipantVidID;\n            if (screenParticipant.length > 0) {\n              screenParticipantVidID = screenParticipant[0].videoID;\n            }\n\n            if (\n              (adminVidID != null && adminVidID != '') ||\n              (screenParticipantVidID != null && screenParticipantVidID != '')\n            ) {\n              if (adminVidID == remoteProducerId || screenParticipantVidID == remoteProducerId) {\n                await reorderStreams({\n                  parameters: { ...parameters, allVideoStreams },\n                });\n                return;\n              }\n            }\n          }\n\n          // Update the UI\n          if (lock_screen || shared) {\n            defer_receive = true;\n            updateDefer_receive(defer_receive);\n\n            if (!first_round) {\n              await reorderStreams({\n                add: false,\n                screenChanged: true,\n                parameters: { ...parameters, allVideoStreams },\n              });\n            }\n          } else {\n            await reorderStreams({\n              add: false,\n              screenChanged: true,\n              parameters: { ...parameters, allVideoStreams },\n            });\n          }\n        }\n      }\n    } catch (error) {\n      console.log('consumerResume error', error);\n      // throw error;\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\n\nimport { Transport, Producer, ProducerOptions } from 'mediasoup-client/lib/types';\nexport interface ConnectSendTransportAudioParameters {\n  audioProducer: Producer | null;\n  producerTransport: Transport | null;\n  updateAudioProducer: (producer: Producer | null) => void;\n  updateProducerTransport: (transport: Transport | null) => void;\n}\n\nexport interface ConnectSendTransportAudioOptions {\n  audioParams: ProducerOptions;\n  parameters: ConnectSendTransportAudioParameters;\n}\n\n// Export the type definition for the function\nexport type ConnectSendTransportAudioType = (\n  options: ConnectSendTransportAudioOptions,\n) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectSendTransportAudio {\n  /**\n   * Connects the send transport for audio by producing audio data and updating the audio producer and producer transport objects.\n   *\n   * @param {Object} params - The parameters for connecting the send transport.\n   * @param {ProducerOptions} params.audioParams - The options for the audio producer.\n   * @param {ConnectSendTransportAudioParameters} params.parameters - The parameters containing the audio producer, producer transport, and update functions.\n   * @param {Producer} params.parameters.audioProducer - The current audio producer.\n   * @param {Transport} params.parameters.producerTransport - The transport used to produce audio data.\n   * @param {Function} params.parameters.updateAudioProducer - Function to update the audio producer.\n   * @param {Function} params.parameters.updateProducerTransport - Function to update the producer transport.\n   *\n   * @returns {Promise<void>} A promise that resolves when the audio transport is successfully connected.\n   *\n   * @throws Will throw an error if the connection fails.\n   */\n\n  async connectSendTransportAudio({\n    audioParams,\n    parameters,\n  }: ConnectSendTransportAudioOptions): Promise<void> {\n    try {\n      let { audioProducer, producerTransport, updateAudioProducer, updateProducerTransport } =\n        parameters;\n\n      // Connect the send transport for audio by producing audio data\n      if (producerTransport) {\n        audioProducer = await producerTransport.produce(audioParams);\n      } else {\n        throw new Error('Producer transport is null');\n      }\n\n      // Update the audio producer and producer transport objects\n      updateAudioProducer(audioProducer);\n      updateProducerTransport(producerTransport);\n    } catch (error) {\n      console.log('connectSendTransportAudio error', error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Device, Producer, ProducerOptions, Transport } from 'mediasoup-client/lib/types';\nexport interface ConnectSendTransportVideoParameters {\n  videoProducer: Producer | null;\n  device: Device | null;\n  producerTransport: Transport | null;\n  islevel: string;\n  updateMainWindow: boolean;\n  updateVideoProducer: (producer: Producer | null) => void;\n  updateProducerTransport: (transport: Transport | null) => void;\n  updateUpdateMainWindow: (state: boolean) => void;\n  [key: string]: any; // Extendable for additional parameters\n}\n\nexport interface ConnectSendTransportVideoOptions {\n  videoParams: ProducerOptions;\n  parameters: ConnectSendTransportVideoParameters;\n}\n\n// Export the type definition for the function\nexport type ConnectSendTransportVideoType = (\n  options: ConnectSendTransportVideoOptions,\n) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectSendTransportVideo {\n  /**\n   * Connects the send transport for video by producing video data and updates the relevant states.\n   *\n   * @param {ConnectSendTransportVideoOptions} options - The options for connecting the send transport for video.\n   * @param {Object} options.videoParams - The parameters for producing video data.\n   * @param {Object} options.parameters - The parameters for updating the state.\n   * @param {Producer} options.parameters.videoProducer - The video producer instance.\n   * @param {Transport} options.parameters.producerTransport - The transport instance used for producing video.\n   * @param {string} options.parameters.islevel - The connection level.\n   * @param {boolean} options.parameters.updateMainWindow - The state of the main window update.\n   * @param {Function} options.parameters.updateVideoProducer - Function to update the video producer.\n   * @param {Function} options.parameters.updateProducerTransport - Function to update the producer transport.\n   * @param {Function} options.parameters.updateUpdateMainWindow - Function to update the main window state.\n   *\n   * @returns {Promise<void>} A promise that resolves when the send transport for video is connected.\n   *\n   * @throws Will throw an error if the connection fails.\n   */\n  connectSendTransportVideo = async ({\n    videoParams,\n    parameters,\n  }: ConnectSendTransportVideoOptions): Promise<void> => {\n    try {\n      let {\n        videoProducer,\n        producerTransport,\n        islevel,\n        updateMainWindow,\n        updateVideoProducer,\n        updateProducerTransport,\n        updateUpdateMainWindow,\n      } = parameters;\n\n      // Connect the send transport for video by producing video data\n      if (producerTransport) {\n        videoProducer = await producerTransport.produce(videoParams);\n      } else {\n        throw new Error('Producer transport is null');\n      }\n\n      // Update main window state based on the video connection level\n      if (islevel === '2') {\n        updateMainWindow = true;\n      }\n\n      // Update the video producer and producer transport objects\n      updateVideoProducer(videoProducer);\n      updateProducerTransport(producerTransport);\n      updateUpdateMainWindow(updateMainWindow);\n    } catch (error) {\n      console.log('connectSendTransportVideo error', error);\n      throw error;\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Transport, Producer, Device, ProducerOptions } from 'mediasoup-client/lib/types';\nexport interface ConnectSendTransportScreenParameters {\n  screenProducer: Producer | null;\n  device: Device | null;\n  screenParams: ProducerOptions;\n  producerTransport: Transport | null;\n  params: ProducerOptions;\n  updateScreenProducer: (producer: Producer | null) => void;\n  updateProducerTransport: (transport: Transport | null) => void;\n\n  getUpdatedAllParams: () => ConnectSendTransportScreenParameters;\n  [key: string]: any; // Extendable for additional parameters\n}\n\nexport interface ConnectSendTransportScreenOptions {\n  stream: MediaStream | null;\n  parameters: ConnectSendTransportScreenParameters;\n}\n\n// Export the type definition for the function\nexport type ConnectSendTransportScreenType = (\n  options: ConnectSendTransportScreenOptions,\n) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectSendTransportScreen {\n  /**\n   * Connects and sets up the screen sharing transport for sending video streams.\n   *\n   * @param {Object} options - The options for connecting the screen transport.\n   * @param {MediaStream} options.stream - The media stream containing the screen video track.\n   * @param {ConnectSendTransportScreenOptions} options.parameters - The parameters required for setting up the transport.\n   * @param {Producer} options.parameters.screenProducer - The screen producer object.\n   * @param {Device} options.parameters.device - The device object containing RTP capabilities.\n   * @param {Promise<ScreenParams>} options.parameters.screenParams - A promise resolving to screen share parameters.\n   * @param {Transport} options.parameters.producerTransport - The transport object used for producing the screen share.\n   * @param {Params} options.parameters.params - The parameters for producing the screen share.\n   * @param {Function} options.parameters.updateScreenProducer - Function to update the screen producer object.\n   * @param {Function} options.parameters.updateProducerTransport - Function to update the producer transport object.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to fetch updated device information.\n   *\n   * @returns {Promise<void>} A promise that resolves when the screen transport is successfully connected and set up.\n   *\n   * @throws Will throw an error if the connection or setup process fails.\n   */\n  async connectSendTransportScreen({\n    stream,\n    parameters,\n  }: ConnectSendTransportScreenOptions): Promise<void> {\n    try {\n      let {\n        screenProducer,\n        device,\n        screenParams,\n        producerTransport,\n        params,\n        updateScreenProducer,\n        updateProducerTransport,\n      } = parameters;\n\n      device = parameters.getUpdatedAllParams().device;\n      // Connect the send transport for screen share by producing screen video data\n      params = screenParams;\n\n      // Find VP9 codec for screen share\n      if (!device || !device.rtpCapabilities || !device.rtpCapabilities.codecs) {\n        throw new Error('Device or its RTP capabilities are not available.');\n      }\n\n      let codec = device.rtpCapabilities.codecs.find(\n        (codec: any) => codec.mimeType.toLowerCase() === 'video/vp9' && codec.kind === 'video',\n      );\n\n      // Produce screen share data using the producer transport\n      if (!producerTransport) {\n        throw new Error('Producer transport is not available.');\n      }\n\n      screenProducer = await producerTransport.produce({\n        track: stream?.getVideoTracks()[0],\n        ...params,\n        codec: codec,\n        appData: { mediaTag: 'screen-video' },\n      });\n\n      // Update the screen producer and producer transport objects\n      updateScreenProducer(screenProducer);\n      updateProducerTransport(producerTransport);\n    } catch (error) {\n      console.log('connectSendTransportScreen error', error);\n      throw error;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Stream, Participant, Transport, SleepType } from '../@types/types';\n\nexport interface ProcessConsumerTransportsParameters {\n  remoteScreenStream: Stream[];\n  oldAllStreams: (Stream | Participant)[];\n  newLimitedStreams: (Stream | Participant)[];\n\n  // mediasfu functions\n  sleep: SleepType;\n  getUpdatedAllParams: () => ProcessConsumerTransportsParameters;\n  [key: string]: any;\n}\n\nexport interface ProcessConsumerTransportsOptions {\n  consumerTransports: Transport[];\n  lStreams_: (Stream | Participant)[];\n  parameters: ProcessConsumerTransportsParameters;\n}\n\n// Export the type definition for the function\nexport type ProcessConsumerTransportsType = (\n  options: ProcessConsumerTransportsOptions,\n) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProcessConsumerTransports {\n  /**\n   * Processes consumer transports by pausing and resuming them based on certain conditions.\n   *\n   * @param {Object} options - The options for processing consumer transports.\n   * @param {Array} options.consumerTransports - The list of consumer transports to process.\n   * @param {Array} options.lStreams_ - The list of local streams.\n   * @param {Object} options.parameters - The parameters object containing various stream arrays and utility functions.\n   *\n   * @returns {Promise<void>} - A promise that resolves when the processing is complete.\n   *\n   * @throws {Error} - Throws an error if there is an issue processing consumer transports.\n   *\n   * The function performs the following steps:\n   * 1. Destructures and updates the parameters.\n   * 2. Defines a helper function to check if a producerId is valid in given stream arrays.\n   * 3. Filters consumer transports to resume based on certain conditions.\n   * 4. Filters consumer transports to pause based on certain conditions.\n   * 5. Pauses consumer transports after a short delay.\n   * 6. Emits `consumer-pause` event for each filtered transport (not audio).\n   * 7. Emits `consumer-resume` event for each filtered transport (not audio).\n   */\n  processConsumerTransports = async ({\n    consumerTransports,\n    lStreams_,\n    parameters,\n  }: ProcessConsumerTransportsOptions): Promise<void> => {\n    try {\n      // Destructure parameters\n      let { getUpdatedAllParams } = parameters;\n      parameters = getUpdatedAllParams();\n\n      const {\n        remoteScreenStream,\n        oldAllStreams,\n        newLimitedStreams,\n        // mediasfu functions\n        sleep,\n      } = parameters;\n\n      // Function to check if the producerId is valid in the given stream arrays\n      const isValidProducerId = (\n        producerId: string,\n        ...streamArrays: (Stream | Participant)[][]\n      ): boolean => {\n        return (\n          producerId !== null &&\n          producerId !== '' &&\n          streamArrays.some((streamArray) => {\n            return (\n              streamArray.length > 0 &&\n              streamArray.some((stream) => stream?.producerId === producerId)\n            );\n          })\n        );\n      };\n\n      // Get paused consumer transports that are not audio\n      const consumerTransportsToResume = consumerTransports.filter(\n        (transport) =>\n          isValidProducerId(\n            transport.producerId,\n            lStreams_,\n            remoteScreenStream,\n            oldAllStreams,\n            newLimitedStreams,\n          ) &&\n          transport.consumer?.paused === true &&\n          transport.consumer.kind !== 'audio',\n      );\n\n      // Get unpaused consumer transports that are not audio\n      const consumerTransportsToPause = consumerTransports.filter(\n        (transport) =>\n          transport.producerId &&\n          transport.producerId !== null &&\n          transport.producerId !== '' &&\n          !lStreams_.some((stream) => stream.producerId === transport.producerId) &&\n          transport.consumer &&\n          transport.consumer.kind &&\n          transport.consumer.paused !== true &&\n          transport.consumer.kind !== 'audio' &&\n          !remoteScreenStream.some((stream: any) => stream.producerId === transport.producerId) &&\n          !oldAllStreams.some((stream: any) => stream.producerId === transport.producerId) &&\n          !newLimitedStreams.some((stream: any) => stream.producerId === transport.producerId),\n      );\n\n      // Pause consumer transports after a short delay\n      await sleep({ ms: 100 });\n\n      // Emit consumer.pause() for each filtered transport (not audio)\n      for (const transport of consumerTransportsToPause) {\n        transport.consumer.pause();\n        transport.socket_.emit(\n          'consumer-pause',\n          { serverConsumerId: transport.serverConsumerTransportId },\n          async () => {\n            // Handle the response if needed\n          },\n        );\n      }\n\n      // Emit consumer.resume() for each filtered transport (not audio)\n      for (const transport of consumerTransportsToResume) {\n        transport.socket_.emit(\n          'consumer-resume',\n          { serverConsumerId: transport.serverConsumerTransportId },\n          async ({ resumed }: { resumed: boolean }) => {\n            if (resumed) {\n              transport.consumer.resume();\n            }\n          },\n        );\n      }\n    } catch (error: any) {\n      // Handle errors during the process of pausing or resuming consumer transports\n      console.log(`Error processing consumer transports: ${error.message}`);\n      // throw new Error(`Error processing consumer transports: ${error.message}`);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Participant, Transport, Stream } from '../@types/types';\n\nexport interface ResumePauseStreamsParameters {\n  participants: Participant[];\n  dispActiveNames: string[];\n  remoteScreenStream: Stream[];\n  consumerTransports: Transport[];\n  screenId?: string;\n  islevel: string;\n\n  // mediasfu functions\n  getUpdatedAllParams: () => ResumePauseStreamsParameters;\n  [key: string]: any;\n}\n\nexport interface ResumePauseStreamsOptions {\n  parameters: ResumePauseStreamsParameters;\n}\n\n// Export the type definition for the function\nexport type ResumePauseStreamsType = (options: ResumePauseStreamsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResumePauseStreams {\n  /**\n   * Resumes or pauses streams based on the provided parameters.\n   *\n   * @param {ResumePauseStreamsOptions} options - The options for resuming or pausing streams.\n   * @param {Object} options.parameters - The parameters for the function.\n   * @param {Array} options.parameters.participants - The list of participants.\n   * @param {Array} options.parameters.dispActiveNames - The list of active display names.\n   * @param {Array} options.parameters.consumerTransports - The list of consumer transports.\n   * @param {string} options.parameters.screenId - The screen producer ID.\n   * @param {string} options.parameters.islevel - The level of the user.\n   *\n   * @returns {Promise<void>} A promise that resolves when the streams have been resumed or paused.\n   *\n   * @throws Will throw an error if there is an issue during the process of resuming or pausing streams.\n   */\n  resumePauseStreams = async ({ parameters }: ResumePauseStreamsOptions): Promise<void> => {\n    try {\n      // Destructure parameters\n      parameters = parameters.getUpdatedAllParams();\n      let { participants, dispActiveNames, consumerTransports, screenId, islevel } = parameters;\n\n      // Get the videoID of the host (islevel=2)\n      let host = participants.find((obj: any) => obj.islevel === '2');\n      let hostVideoID = host ? host.videoID : null;\n\n      // Get videoIDs of participants in dispActiveNames and screenproducerId\n      let videosIDs = dispActiveNames.map((name: any) => {\n        let participant = participants.find((obj: any) => obj.name === name);\n        return participant ? participant.videoID : null;\n      });\n\n      // Add screenproducerId to allVideoIDs if it's not null or empty\n      if (screenId) {\n        videosIDs.push(screenId);\n      }\n\n      // Add hostVideoID to allVideoIDs if it's not null or empty (only if the user is not the host)\n      if (islevel !== '2' && hostVideoID) {\n        videosIDs.push(hostVideoID);\n      }\n\n      // Remove null or empty videoIDs\n      let allVideoIDs = videosIDs.filter(\n        (videoID: string | null) => videoID !== null && videoID !== '',\n      );\n\n      if (allVideoIDs.length > 0) {\n        // Get consumer transports with producerId in allVideoIDs\n        const consumerTransportsToResume = consumerTransports.filter(\n          (transport: any) =>\n            allVideoIDs.includes(transport.producerId) && transport.consumer.kind !== 'audio',\n        );\n\n        // Resume all consumerTransportsToResume\n        for (const transport of consumerTransportsToResume) {\n          transport.socket_.emit(\n            'consumer-resume',\n            { serverConsumerId: transport.serverConsumerTransportId },\n            async ({ resumed }: { resumed: boolean }) => {\n              if (resumed) {\n                transport.consumer.resume();\n              }\n            },\n          );\n        }\n      }\n    } catch (error) {\n      console.log('Error during resuming or pausing streams: ', error);\n      // Handle errors during the process of resuming or pausing streams\n      // throw new Error(`Error during resuming or pausing streams: ${error.message}`);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  PrepopulateUserMediaType,\n  PrepopulateUserMediaParameters,\n  EventType,\n} from '../@types/types';\nexport interface ReadjustParameters extends PrepopulateUserMediaParameters {\n  eventType: EventType;\n  shareScreenStarted: boolean;\n  shared: boolean;\n  mainHeightWidth: number;\n  prevMainHeightWidth: number;\n  hostLabel: string;\n  first_round: boolean;\n  lock_screen: boolean;\n  updateMainHeightWidth: (value: number) => void;\n\n  // mediasfu functions\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  getUpdatedAllParams: () => ReadjustParameters;\n  [key: string]: any;\n}\n\nexport interface ReadjustOptions {\n  n: number;\n  state: number;\n  parameters: ReadjustParameters;\n}\n\n// Export the type definition for the function\nexport type ReadjustType = (options: ReadjustOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Readjust {\n  /**\n   * Adjusts the layout parameters based on the provided options.\n   *\n   * @param {ReadjustOptions} options - The options for readjusting the layout.\n   * @param {number} options.n - The number of participants or elements.\n   * @param {number} options.state - The current state of the layout.\n   * @param {object} options.parameters - The parameters for the layout adjustment.\n   * @param {function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {string} options.parameters.eventType - The type of event (e.g., \"broadcast\", \"chat\", \"conference\").\n   * @param {boolean} options.parameters.shareScreenStarted - Indicates if screen sharing has started.\n   * @param {boolean} options.parameters.shared - Indicates if content is being shared.\n   * @param {number} options.parameters.mainHeightWidth - The main height and width value.\n   * @param {number} options.parameters.prevMainHeightWidth - The previous main height and width value.\n   * @param {string} options.parameters.hostLabel - The label for the host.\n   * @param {boolean} options.parameters.first_round - Indicates if it is the first round.\n   * @param {boolean} options.parameters.lock_screen - Indicates if the screen is locked.\n   * @param {function} options.parameters.updateMainHeightWidth - Function to update the main height and width.\n   * @param {function} options.parameters.prepopulateUserMedia - Function to prepopulate user media.\n   * @returns {Promise<void>} A promise that resolves when the layout adjustment is complete.\n   * @throws {Error} Throws an error if there is an issue updating the grid sizes.\n   */\n  readjust = async ({ n, state, parameters }: ReadjustOptions): Promise<void> => {\n    let { getUpdatedAllParams, prepopulateUserMedia } = parameters;\n    parameters = getUpdatedAllParams();\n\n    try {\n      // Destructure parameters\n      let {\n        eventType,\n        shareScreenStarted,\n        shared,\n        mainHeightWidth,\n        prevMainHeightWidth,\n        hostLabel,\n        first_round,\n        lock_screen,\n        updateMainHeightWidth,\n      } = parameters;\n\n      if (state == 0) {\n        prevMainHeightWidth = mainHeightWidth;\n      }\n\n      let val1 = 6;\n      let val2 = 12 - val1;\n      let cal1 = Math.floor((val1 / 12) * 100);\n      let cal2 = 100 - cal1;\n\n      if (eventType == 'broadcast') {\n        val1 = 0;\n        val2 = 12 - val1;\n\n        if (n == 0) {\n          val1 = 0;\n          val2 = 12 - val1;\n        }\n      } else if (\n        eventType == 'chat' ||\n        (eventType == 'conference' && !(shareScreenStarted || shared))\n      ) {\n        val1 = 12;\n        val2 = 12 - val1;\n      } else {\n        if (shareScreenStarted || shared) {\n          val2 = 10;\n          val1 = 12 - val2;\n        } else {\n          if (n == 0) {\n            val1 = 1;\n            val2 = 12 - val1;\n          } else if (n >= 1 && n < 4) {\n            val1 = 4;\n            val2 = 12 - val1;\n          } else if (n >= 4 && n < 6) {\n            val1 = 6;\n            val2 = 12 - val1;\n          } else if (n >= 6 && n < 9) {\n            val1 = 6;\n            val2 = 12 - val1;\n          } else if (n >= 9 && n < 12) {\n            val1 = 6;\n            val2 = 12 - val1;\n          } else if (n >= 12 && n < 20) {\n            val1 = 8;\n            val2 = 12 - val1;\n          } else if (n >= 20 && n < 50) {\n            val1 = 8;\n            val2 = 12 - val1;\n          } else {\n            val1 = 10;\n            val2 = 12 - val1;\n          }\n        }\n      }\n\n      if (state == 0) {\n        mainHeightWidth = val2;\n      }\n\n      cal1 = Math.floor((val1 / 12) * 100);\n      cal2 = 100 - cal1;\n\n      updateMainHeightWidth(cal2);\n\n      if (prevMainHeightWidth != mainHeightWidth) {\n        if (!lock_screen && !shared) {\n          await prepopulateUserMedia({ name: hostLabel, parameters });\n        } else {\n          if (!first_round) {\n            await prepopulateUserMedia({ name: hostLabel, parameters });\n          }\n        }\n      }\n    } catch (error: any) {\n      // Handle errors during the process of updating grid sizes\n      console.log('Error updating grid sizes:', error.message);\n      // throw error;\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\n\nexport interface CheckGridOptions {\n  rows: number;\n  cols: number;\n  actives: number;\n}\n\nexport type CheckGridType = (\n  options: CheckGridOptions,\n) => Promise<[boolean, number, number, number, number, number, number] | void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckGrid {\n  /**\n   * Checks the grid configuration and calculates various parameters based on the number of rows, columns, and active elements.\n   *\n   * @param {CheckGridOptions} options - The options for checking the grid.\n   * @param {number} options.rows - The number of rows in the grid.\n   * @param {number} options.cols - The number of columns in the grid.\n   * @param {number} options.actives - The number of active elements in the grid.\n   * @returns {Promise<[boolean, number, number, number, number, number, number] | void>} A promise that resolves to a tuple containing:\n   * - `removeAltGrid` (boolean): Indicates whether to remove the alternate grid.\n   * - `numtoadd` (number): The number of elements to add.\n   * - `numRows` (number): The number of rows.\n   * - `numCols` (number): The number of columns.\n   * - `remainingVideos` (number): The number of remaining videos.\n   * - `actualRows` (number): The actual number of rows.\n   * - `lastrowcols` (number): The number of columns in the last row.\n   *\n   * If an error occurs, it logs the error to the console.\n   */\n  async checkGrid({\n    rows,\n    cols,\n    actives,\n  }: CheckGridOptions): Promise<[boolean, number, number, number, number, number, number] | void> {\n    try {\n      let numRows = 0;\n      let numCols = 0;\n      let lastrow = 0;\n      let lastrowcols = 0;\n      let remainingVideos = 0;\n      let numtoadd = 0;\n      let actualRows = 0;\n      let removeAltGrid = false;\n\n      if (rows * cols !== actives) {\n        if (rows * cols > actives) {\n          const res = actives - (rows - 1) * cols;\n          if (cols * 0.5 < res) {\n            lastrow = rows;\n            lastrowcols = res;\n            remainingVideos = lastrowcols;\n          } else {\n            lastrowcols = res + cols;\n            lastrow = rows - 1;\n            remainingVideos = lastrowcols;\n          }\n\n          numRows = lastrow - 1;\n          numCols = cols;\n          numtoadd = (lastrow - 1) * numCols;\n          actualRows = lastrow;\n\n          removeAltGrid = false;\n        }\n      } else {\n        // Perfect fit\n        numCols = cols;\n        numRows = rows;\n        lastrow = rows;\n        lastrowcols = cols;\n        remainingVideos = 0;\n        numtoadd = lastrow * numCols;\n        actualRows = lastrow;\n        removeAltGrid = true;\n      }\n\n      return [removeAltGrid, numtoadd, numRows, numCols, remainingVideos, actualRows, lastrowcols];\n    } catch (error) {\n      console.log('checkGrid error', error);\n      throw error;\n    }\n  }\n}\n","// estimate.service.ts\nimport { Injectable } from '@angular/core';\n\nimport { CalculateRowsAndColumnsType, EventType } from '../@types/types';\n\nexport interface GetEstimateParameters {\n  fixedPageLimit: number;\n  screenPageLimit: number;\n  shareScreenStarted: boolean;\n  shared?: boolean;\n  eventType: EventType;\n  removeAltGrid: boolean;\n  isWideScreen: boolean;\n  isMediumScreen: boolean;\n  updateRemoveAltGrid: (value: boolean) => void;\n\n  // mediaSfu functions\n  calculateRowsAndColumns: CalculateRowsAndColumnsType;\n\n  [key: string]: any;\n}\n\nexport interface GetEstimateOptions {\n  n: number;\n  parameters: GetEstimateParameters;\n}\n\n// Export the type definition for the function\nexport type GetEstimateType = (options: GetEstimateOptions) => [number, number, number];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetEstimate {\n  /**\n   * Estimates the number of rows and columns for a given set of parameters.\n   *\n   * @param {GetEstimateOptions} options - The options for the estimation.\n   * @param {number} options.n - The number of items to estimate for.\n   * @param {Object} options.parameters - The parameters for the estimation.\n   * @param {number} options.parameters.fixedPageLimit - The fixed page limit.\n   * @param {number} options.parameters.screenPageLimit - The screen page limit.\n   * @param {boolean} options.parameters.shareScreenStarted - Indicates if screen sharing has started.\n   * @param {boolean} options.parameters.shared - Indicates if sharing is active.\n   * @param {string} options.parameters.eventType - The type of event (e.g., \"chat\", \"conference\").\n   * @param {boolean} options.parameters.removeAltGrid - Indicates if the alternate grid should be removed.\n   * @param {boolean} options.parameters.isWideScreen - Indicates if the screen is wide.\n   * @param {boolean} options.parameters.isMediumScreen - Indicates if the screen is medium-sized.\n   * @param {Function} options.parameters.updateRemoveAltGrid - Function to update the removeAltGrid parameter.\n   * @param {Function} options.parameters.calculateRowsAndColumns - Function to calculate rows and columns.\n   *\n   * @returns {number[]} An array containing the estimated number of items, rows, and columns.\n   *\n   * @throws Will log an error message if an error occurs during estimation.\n   */\n  getEstimate({ n, parameters }: GetEstimateOptions): [number, number, number] {\n    try {\n      // Destructure parameters\n      let {\n        fixedPageLimit,\n        screenPageLimit,\n        shareScreenStarted,\n        shared,\n        eventType,\n        removeAltGrid,\n        isWideScreen,\n        isMediumScreen,\n        updateRemoveAltGrid,\n        // mediaSfu functions\n        calculateRowsAndColumns,\n      } = parameters;\n\n      // Calculate rows and columns\n      const [rows, cols] = calculateRowsAndColumns({ n });\n\n      // Check conditions for removing alt grid\n      if (n < fixedPageLimit || ((shareScreenStarted || shared) && n < screenPageLimit + 1)) {\n        removeAltGrid = true;\n        updateRemoveAltGrid(removeAltGrid);\n\n        // Return estimated values based on screen width\n        if (!(isMediumScreen || isWideScreen)) {\n          return eventType === 'chat' ||\n            (eventType === 'conference' && !(shareScreenStarted || shared))\n            ? [n, n, 1]\n            : [n, 1, n];\n        } else {\n          return eventType === 'chat' ||\n            (eventType === 'conference' && !(shareScreenStarted || shared))\n            ? [n, 1, n]\n            : [n, n, 1];\n        }\n      }\n\n      return [rows * cols, rows, cols];\n    } catch (error: any) {\n      // Handle errors during estimation\n      console.log('Error estimating rows and columns:', error.message);\n      // throw error;\n      return [0, 0, 0];\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface CalculateRowsAndColumnsOptions {\n  n: number;\n}\n\n// Export the type definition for the function\nexport type CalculateRowsAndColumnsType = (\n  options: CalculateRowsAndColumnsOptions,\n) => [number, number];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CalculateRowsAndColumns {\n  /**\n   * Calculates the number of rows and columns needed to display a given number of items in a grid.\n   *\n   * @param {CalculateRowsAndColumnsOptions} options - The options for calculating rows and columns.\n   * @param {number} options.n - The number of items to display.\n   * @returns {[number, number]} A tuple containing the number of rows and columns.\n   */\n  calculateRowsAndColumns({ n }: CalculateRowsAndColumnsOptions): [number, number] {\n    // Calculate the square root of n\n    const sqrt = Math.sqrt(n);\n\n    // Initialize columns based on the floor of the square root\n    let cols = Math.floor(sqrt);\n\n    // Calculate the number of rows needed to display n videos\n    let rows = Math.ceil(n / cols);\n\n    // Calculate the product of rows and columns\n    let prod = rows * cols;\n\n    // Adjust rows and columns until the product is greater than or equal to n\n    while (prod < n) {\n      if (cols < rows) {\n        cols++;\n      } else {\n        rows++;\n      }\n      prod = rows * cols;\n    }\n\n    // Return an array with the calculated number of rows and columns\n    return [rows, cols];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MiniCard } from '../components/display-components/mini-card/mini-card.component';\nimport { VideoCard } from '../components/display-components/video-card/video-card.component';\nimport { AudioCard } from '../components/display-components/audio-card/audio-card.component';\nimport {\n  Participant,\n  Stream,\n  UpdateMiniCardsGridType,\n  UpdateMiniCardsGridParameters,\n  AudioCardParameters,\n  EventType,\n  CustomMediaComponent,\n} from '../@types/types';\n\nexport interface AddVideosGridParameters\n  extends UpdateMiniCardsGridParameters,\n    AudioCardParameters {\n  eventType: EventType;\n  updateAddAltGrid: (addAltGrid: boolean) => void;\n  ref_participants: Participant[];\n  islevel: string;\n  videoAlreadyOn: boolean;\n  localStreamVideo: MediaStream | null;\n  keepBackground: boolean;\n  virtualStream: MediaStream | null;\n  forceFullDisplay: boolean;\n  otherGridStreams: CustomMediaComponent[][];\n  updateOtherGridStreams: (otherGridStreams: CustomMediaComponent[][]) => void;\n\n  // mediasfu functions\n  updateMiniCardsGrid: UpdateMiniCardsGridType;\n  getUpdatedAllParams: () => AddVideosGridParameters;\n  [key: string]: any;\n}\n\nexport interface AddVideosGridOptions {\n  mainGridStreams: (Stream | Participant)[];\n  altGridStreams: (Stream | Participant)[];\n  numtoadd: number;\n  numRows: number;\n  numCols: number;\n  actualRows: number;\n  lastrowcols: number;\n  removeAltGrid: boolean;\n  parameters: AddVideosGridParameters;\n}\n\n// Export the type definition for the function\nexport type AddVideosGridType = (options: AddVideosGridOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddVideosGrid {\n  addVideosGrid = async ({\n    mainGridStreams,\n    altGridStreams,\n    numtoadd,\n    numRows,\n    numCols,\n    actualRows,\n    lastrowcols,\n    removeAltGrid,\n    parameters,\n  }: AddVideosGridOptions): Promise<void> => {\n    let { getUpdatedAllParams } = parameters;\n    parameters = { ...parameters, ...getUpdatedAllParams() };\n\n    let {\n      eventType,\n      updateAddAltGrid,\n      ref_participants,\n      islevel,\n      videoAlreadyOn,\n      localStreamVideo,\n      keepBackground,\n      virtualStream,\n      forceFullDisplay,\n      otherGridStreams,\n      updateOtherGridStreams,\n      updateMiniCardsGrid,\n    } = parameters;\n\n    let newComponents: { component: any; inputs: any }[][] = [[], []];\n    let participant: any;\n    let remoteProducerId = '';\n    let participant_ = null;\n\n    numtoadd = mainGridStreams.length;\n\n    if (removeAltGrid) {\n      updateAddAltGrid(false);\n    }\n\n    // Add participants to the main grid\n    for (let i = 0; i < numtoadd; i++) {\n      participant = mainGridStreams[i];\n      remoteProducerId = participant.producerId;\n\n      let pseudoName = !remoteProducerId || remoteProducerId === '';\n\n      if (pseudoName) {\n        participant_ = participant;\n        remoteProducerId = await participant.name;\n\n        if (\n          Object.prototype.hasOwnProperty.call(participant, 'audioID') &&\n          participant.audioID != null &&\n          participant.audioID !== ''\n        ) {\n          newComponents[0].push({\n            component: AudioCard,\n            inputs: {\n              name: participant.name,\n              barColor: 'red',\n              textColor: 'white',\n              customStyle: {\n                backgroundColor: 'transparent',\n                border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n              },\n              controlsPosition: 'topLeft',\n              infoPosition: 'topRight',\n              showWaveform: true,\n              roundedImage: true,\n              parameters,\n              backgroundColor: 'transparent',\n              showControls: eventType !== 'chat',\n              participant,\n            },\n          });\n        } else {\n          newComponents[0].push({\n            component: MiniCard,\n            inputs: {\n              initials: participant.name,\n              fontSize: 20,\n              customStyle: {\n                backgroundColor: 'transparent',\n                border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n              },\n            },\n          });\n        }\n      } else {\n        if (remoteProducerId === 'youyou' || remoteProducerId === 'youyouyou') {\n          let name = 'You';\n          if (islevel === '2' && eventType !== 'chat') {\n            name = 'You (Host)';\n          }\n\n          if (!videoAlreadyOn) {\n            name = 'You';\n            if (islevel == '2' && eventType != 'chat') {\n              name = 'You (Host)';\n            }\n\n            newComponents[0].push({\n              component: MiniCard,\n              inputs: {\n                initials: name,\n                fontSize: 20,\n                customStyle: {\n                  backgroundColor: 'transparent',\n                  border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                },\n              },\n            });\n          } else {\n            participant = {\n              id: 'youyouyou',\n              stream: keepBackground && virtualStream ? virtualStream : localStreamVideo,\n              name: 'youyouyou',\n              muted: true,\n            };\n            participant_ = {\n              id: 'youyou',\n              videoID: 'youyou',\n              name: 'youyouyou',\n              stream: keepBackground && virtualStream ? virtualStream : localStreamVideo,\n            };\n            remoteProducerId = 'youyouyou';\n\n            newComponents[0].push({\n              component: VideoCard,\n              inputs: {\n                videoStream: participant.stream ? participant.stream : null,\n                remoteProducerId: participant.stream ? participant.stream.id : null,\n                eventType,\n                forceFullDisplay: eventType == 'webinar' ? false : forceFullDisplay,\n                customStyle: {\n                  border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                },\n                participant: participant,\n                backgroundColor: 'transparent',\n                showControls: false,\n                showInfo: false,\n                name: participant.name,\n                doMirror: true,\n                parameters,\n              },\n            });\n          }\n        } else {\n          participant_ = ref_participants.find((obj: any) => obj.videoID === remoteProducerId);\n          if (participant_) {\n            newComponents[0].push({\n              component: VideoCard,\n              inputs: {\n                videoStream: participant.stream ? participant.stream : null,\n                remoteProducerId,\n                eventType,\n                forceFullDisplay,\n                customStyle: {\n                  border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                },\n                participant: participant_,\n                backgroundColor: 'transparent',\n                showControls: eventType !== 'chat',\n                showInfo: true,\n                name: participant_.name,\n                doMirror: false,\n                parameters,\n              },\n            });\n          }\n        }\n      }\n\n      if (i === numtoadd - 1) {\n        otherGridStreams[0] = newComponents[0];\n\n        await updateMiniCardsGrid({\n          rows: numRows,\n          cols: numCols,\n          defal: true,\n          actualRows: actualRows,\n          parameters,\n        });\n\n        updateOtherGridStreams(otherGridStreams);\n        await updateMiniCardsGrid({\n          rows: numRows,\n          cols: numCols,\n          defal: true,\n          actualRows,\n          parameters,\n        });\n      }\n    }\n\n    // Handle the alternate grid streams\n    if (!removeAltGrid) {\n      for (let i = 0; i < altGridStreams.length; i++) {\n        participant = altGridStreams[i];\n        remoteProducerId = participant.producerId;\n\n        let participant_;\n        let pseudoName = false;\n\n        //check if there is .name in the participant object and if it is null\n        if (\n          Object.prototype.hasOwnProperty.call(participant, 'producerId') &&\n          participant.producerId != null &&\n          participant.producerId !== ''\n        ) {\n          //actual video\n          pseudoName = false;\n        } else {\n          pseudoName = true;\n        }\n\n        if (pseudoName) {\n          participant_ = participant;\n          remoteProducerId = await participant.name;\n\n          if (\n            Object.prototype.hasOwnProperty.call(participant, 'audioID') &&\n            participant.audioID != null &&\n            participant.audioID !== ''\n          ) {\n            newComponents[1].push({\n              component: AudioCard,\n              inputs: {\n                name: participant.name,\n                barColor: 'red',\n                textColor: 'white',\n                customStyle: {\n                  backgroundColor: 'transparent',\n                  border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                },\n                controlsPosition: 'topLeft',\n                infoPosition: 'topRight',\n                showWaveform: true,\n                roundedImage: true,\n                parameters,\n                backgroundColor: 'transparent',\n                showControls: eventType !== 'chat',\n                participant,\n              },\n            });\n          } else {\n            newComponents[1].push({\n              component: MiniCard,\n              inputs: {\n                initials: participant.name,\n                fontSize: 20,\n                customStyle: {\n                  backgroundColor: 'transparent',\n                  border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n                },\n              },\n            });\n          }\n        } else {\n          participant_ = ref_participants.find((obj: any) => obj.videoID === remoteProducerId);\n          newComponents[1].push({\n            component: VideoCard,\n            inputs: {\n              videoStream: participant_ && participant_['stream'] ? participant_['stream'] : null,\n              remoteProducerId,\n              eventType,\n              forceFullDisplay,\n              customStyle: {\n                border: eventType !== 'broadcast' ? '2px solid black' : '0px solid black',\n              },\n              participant: participant_,\n              backgroundColor: 'transparent',\n              showControls: eventType !== 'chat',\n              showInfo: true,\n              name: participant.name,\n              doMirror: false,\n              parameters,\n            },\n          });\n        }\n\n        if (i === numtoadd - 1) {\n          otherGridStreams[1] = newComponents[1];\n\n          await updateMiniCardsGrid({\n            rows: 1,\n            cols: lastrowcols,\n            defal: false,\n            actualRows,\n            parameters,\n          });\n\n          updateOtherGridStreams(otherGridStreams);\n          await updateMiniCardsGrid({\n            rows: 1,\n            cols: lastrowcols,\n            defal: false,\n            actualRows,\n            parameters,\n          });\n        }\n      }\n    } else {\n      updateAddAltGrid(false);\n      otherGridStreams[1] = [];\n\n      await updateMiniCardsGrid({\n        rows: 0,\n        cols: 0,\n        defal: false,\n        actualRows: actualRows,\n        parameters,\n      });\n\n      updateOtherGridStreams(otherGridStreams);\n      await updateMiniCardsGrid({\n        rows: 0,\n        cols: 0,\n        defal: false,\n        actualRows,\n        parameters,\n      });\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ReorderStreamsType, ReorderStreamsParameters, EventType } from '../@types/types';\nexport interface OnScreenChangesParameters extends ReorderStreamsParameters {\n  eventType: EventType;\n  shareScreenStarted: boolean;\n  shared: boolean;\n  addForBasic: boolean;\n  updateAddForBasic: (value: boolean) => void;\n  itemPageLimit: number;\n  updateItemPageLimit: (value: number) => void;\n  updateMainHeightWidth: (value: number) => void;\n\n  //mediasfu functions\n  reorderStreams: ReorderStreamsType;\n  [key: string]: any;\n}\n\nexport interface OnScreenChangesOptions {\n  changed?: boolean;\n  parameters: OnScreenChangesParameters;\n}\n\n// Export the type definition for the function\nexport type OnScreenChangesType = (options: OnScreenChangesOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnScreenChanges {\n  /**\n   * Handles changes in screen events such as broadcast, chat, and conference.\n   *\n   * @param {OnScreenChangesOptions} options - The options for handling screen changes.\n   * @param {boolean} options.changed - Indicates if the screen has changed.\n   * @param {object} options.parameters - The parameters for handling screen changes.\n   * @param {string} options.parameters.eventType - The type of event (e.g., \"broadcast\", \"chat\", \"conference\").\n   * @param {boolean} options.parameters.shareScreenStarted - Indicates if screen sharing has started.\n   * @param {boolean} options.parameters.shared - Indicates if the screen is shared.\n   * @param {boolean} options.parameters.addForBasic - Flag to add basic controls.\n   * @param {function} options.parameters.updateMainHeightWidth - Function to update the main height and width.\n   * @param {function} options.parameters.updateAddForBasic - Function to update the addForBasic flag.\n   * @param {number} options.parameters.itemPageLimit - The limit for item pages.\n   * @param {function} options.parameters.updateItemPageLimit - Function to update the item page limit.\n   * @param {function} options.parameters.reorderStreams - Function to reorder streams.\n   *\n   * @returns {Promise<void>} A promise that resolves when the screen changes have been handled.\n   *\n   * @throws {Error} Throws an error if there is an issue handling screen changes.\n   */\n  onScreenChanges = async ({\n    changed = false,\n    parameters,\n  }: OnScreenChangesOptions): Promise<void> => {\n    try {\n      // Destructure parameters\n      let {\n        eventType,\n        shareScreenStarted,\n        shared,\n        addForBasic,\n        updateMainHeightWidth,\n        updateAddForBasic,\n        itemPageLimit,\n        updateItemPageLimit,\n\n        // mediasfu functions\n        reorderStreams,\n      } = parameters;\n\n      // Remove element with id 'controlButtons'\n      addForBasic = false;\n      updateAddForBasic(addForBasic);\n\n      if (eventType == 'broadcast' || eventType == 'chat') {\n        addForBasic = true;\n        updateAddForBasic(addForBasic);\n\n        itemPageLimit = eventType == 'broadcast' ? 1 : 2;\n        updateItemPageLimit(itemPageLimit);\n        updateMainHeightWidth(eventType == 'broadcast' ? 100 : 0);\n      } else {\n        if (eventType == 'conference' && !(shareScreenStarted || shared)) {\n          updateMainHeightWidth(0);\n        }\n      }\n\n      // Update the mini cards grid\n      await reorderStreams({ add: false, screenChanged: changed, parameters });\n    } catch (error: any) {\n      // Handle errors during the process of handling screen changes\n      console.log('Error handling screen changes:', error.message);\n      // throw error;\n    }\n  };\n}\n","export interface SleepOptions {\n  ms: number;\n}\n\n// Export the type definition for the function\nexport type SleepType = (options: SleepOptions) => Promise<void>;\n\n/**\n * Pauses the execution for a specified number of milliseconds.\n *\n * @param {SleepOptions} options - An object containing the sleep duration.\n * @param {number} options.ms - The number of milliseconds to sleep.\n * @returns {Promise<void>} A promise that resolves after the specified duration.\n */\n\nexport function sleep({ ms }: SleepOptions): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Stream,\n  Participant,\n  DispStreamsType,\n  DispStreamsParameters,\n  AudioDecibels,\n  MixStreamsType,\n  BreakoutParticipant,\n  EventType,\n} from '../@types/types';\n\nexport interface ChangeVidsParameters extends DispStreamsParameters {\n  allVideoStreams: (Stream | Participant)[];\n  p_activeNames: string[];\n  activeNames: string[];\n  dispActiveNames: string[];\n  shareScreenStarted: boolean;\n  shared: boolean;\n  newLimitedStreams: (Stream | Participant)[];\n  non_alVideoStreams: Participant[];\n  ref_participants: Participant[];\n  participants: Participant[];\n  eventType: EventType;\n  islevel: string;\n  member: string;\n  sortAudioLoudness: boolean;\n  audioDecibels: AudioDecibels[];\n  mixed_alVideoStreams: (Stream | Participant)[];\n  non_alVideoStreams_muted: Participant[];\n  remoteProducerId?: string;\n  localStreamVideo: MediaStream | null;\n  oldAllStreams: (Stream | Participant)[];\n  screenPageLimit: number;\n  meetingDisplayType: string;\n  meetingVideoOptimized: boolean;\n  recordingVideoOptimized: boolean;\n  recordingDisplayType: 'video' | 'media' | 'all';\n  paginatedStreams: (Stream | Participant)[][];\n  itemPageLimit: number;\n  doPaginate: boolean;\n  prevDoPaginate: boolean;\n  currentUserPage: number;\n  breakoutRooms: BreakoutParticipant[][];\n  hostNewRoom: number;\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n  virtualStream: MediaStream | null;\n  mainRoomsLength: number;\n  memberRoom: number;\n  updateP_activeNames: (names: string[]) => void;\n  updateActiveNames: (names: string[]) => void;\n  updateDispActiveNames: (names: string[]) => void;\n  updateNewLimitedStreams: (streams: (Stream | Participant)[]) => void;\n  updateNon_alVideoStreams: (participants: Participant[]) => void;\n  updateRef_participants: (participants: Participant[]) => void;\n  updateSortAudioLoudness: (sort: boolean) => void;\n  updateMixed_alVideoStreams: (streams: (Stream | Participant)[]) => void;\n  updateNon_alVideoStreams_muted: (participants: Participant[]) => void;\n  updatePaginatedStreams: (streams: (Stream | Participant)[][]) => void;\n  updateDoPaginate: (paginate: boolean) => void;\n  updatePrevDoPaginate: (paginate: boolean) => void;\n  updateCurrentUserPage: (page: number) => void;\n  updateNumberPages: (pages: number) => void;\n  updateMainRoomsLength: (length: number) => void;\n  updateMemberRoom: (room: number) => void;\n\n  // mediasfu functions\n  mixStreams: MixStreamsType;\n  dispStreams: DispStreamsType;\n  getUpdatedAllParams: () => ChangeVidsParameters;\n  [key: string]: any;\n}\n\nexport interface ChangeVidsOptions {\n  screenChanged?: boolean;\n  parameters: ChangeVidsParameters;\n}\n\n// Export the type definition for the function\nexport type ChangeVidsType = (options: ChangeVidsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChangeVids {\n  /**\n   * Asynchronously changes the video streams based on the provided options.\n   *\n   * @param {Object} options - The options for changing video streams.\n   * @param {boolean} [options.screenChanged=false] - Indicates if the screen has changed.\n   * @param {ChangeVidsOptions} options.parameters - The parameters for changing video streams.\n   * @returns {Promise<void>} A promise that resolves when the video streams have been changed.\n   *\n   * @typedef {Object} ChangeVidsOptions\n   * @property {Function} getUpdatedAllParams - Function to get updated parameters.\n   * @property {Array} allVideoStreams - Array of all video streams.\n   * @property {Array} p_activeNames - Array of active participant names.\n   * @property {Array} activeNames - Array of active names.\n   * @property {Array} dispActiveNames - Array of displayed active names.\n   * @property {boolean} shareScreenStarted - Indicates if screen sharing has started.\n   * @property {boolean} shared - Indicates if the screen is shared.\n   * @property {Array} newLimitedStreams - Array of new limited streams.\n   * @property {Array} non_alVideoStreams - Array of non-al video streams.\n   * @property {Array} ref_participants - Array of reference participants.\n   * @property {Array} participants - Array of participants.\n   * @property {string} eventType - Type of the event.\n   * @property {string} islevel - Level of the participant.\n   * @property {string} member - Name of the member.\n   * @property {boolean} sortAudioLoudness - Indicates if audio loudness should be sorted.\n   * @property {Array} audioDecibels - Array of audio decibels.\n   * @property {Array} mixed_alVideoStreams - Array of mixed al video streams.\n   * @property {Array} non_alVideoStreams_muted - Array of muted non-al video streams.\n   * @property {string} remoteProducerId - ID of the remote producer.\n   * @property {Object} localStreamVideo - Local stream video object.\n   * @property {Array} oldAllStreams - Array of old all streams.\n   * @property {number} screenPageLimit - Limit of streams per screen page.\n   * @property {string} meetingDisplayType - Type of meeting display.\n   * @property {boolean} meetingVideoOptimized - Indicates if meeting video is optimized.\n   * @property {boolean} recordingVideoOptimized - Indicates if recording video is optimized.\n   * @property {string} recordingDisplayType - Type of recording display.\n   * @property {Array} paginatedStreams - Array of paginated streams.\n   * @property {number} itemPageLimit - Limit of items per page.\n   * @property {boolean} doPaginate - Indicates if pagination should be done.\n   * @property {boolean} prevDoPaginate - Indicates if pagination was previously done.\n   * @property {number} currentUserPage - Current user page number.\n   * @property {Array} breakoutRooms - Array of breakout rooms.\n   * @property {number} hostNewRoom - Index of the new room for the host.\n   * @property {boolean} breakOutRoomStarted - Indicates if breakout room has started.\n   * @property {boolean} breakOutRoomEnded - Indicates if breakout room has ended.\n   * @property {Object} virtualStream - Virtual stream object.\n   * @property {number} mainRoomsLength - Length of main rooms.\n   * @property {string} memberRoom - Room of the member.\n   * @property {Function} updateP_activeNames - Function to update active participant names.\n   * @property {Function} updateActiveNames - Function to update active names.\n   * @property {Function} updateDispActiveNames - Function to update displayed active names.\n   * @property {Function} updateNewLimitedStreams - Function to update new limited streams.\n   * @property {Function} updateNon_alVideoStreams - Function to update non-al video streams.\n   * @property {Function} updateRef_participants - Function to update reference participants.\n   * @property {Function} updateSortAudioLoudness - Function to update audio loudness sorting.\n   * @property {Function} updateMixed_alVideoStreams - Function to update mixed al video streams.\n   * @property {Function} updateNon_alVideoStreams_muted - Function to update muted non-al video streams.\n   * @property {Function} updatePaginatedStreams - Function to update paginated streams.\n   * @property {Function} updateDoPaginate - Function to update pagination status.\n   * @property {Function} updatePrevDoPaginate - Function to update previous pagination status.\n   * @property {Function} updateCurrentUserPage - Function to update current user page.\n   * @property {Function} updateNumberPages - Function to update number of pages.\n   * @property {Function} updateMainRoomsLength - Function to update main rooms length.\n   * @property {Function} updateMemberRoom - Function to update member room.\n   * @property {Function} mixStreams - Function to mix streams.\n   * @property {Function} dispStreams - Function to display streams.\n   */\n  changeVids = async ({ screenChanged = false, parameters }: ChangeVidsOptions): Promise<void> => {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      allVideoStreams,\n      p_activeNames,\n      activeNames,\n      dispActiveNames,\n      shareScreenStarted,\n      shared,\n      newLimitedStreams,\n      non_alVideoStreams,\n      ref_participants,\n      participants,\n      eventType,\n      islevel,\n      member,\n      sortAudioLoudness,\n      audioDecibels,\n      mixed_alVideoStreams,\n      non_alVideoStreams_muted,\n      remoteProducerId,\n      localStreamVideo,\n      oldAllStreams,\n      screenPageLimit,\n      meetingDisplayType,\n      meetingVideoOptimized,\n      recordingVideoOptimized,\n      recordingDisplayType,\n      paginatedStreams,\n      itemPageLimit,\n      doPaginate,\n      prevDoPaginate,\n      currentUserPage,\n\n      breakoutRooms,\n      hostNewRoom,\n      breakOutRoomStarted,\n      breakOutRoomEnded,\n      virtualStream,\n      mainRoomsLength,\n      memberRoom,\n\n      updateP_activeNames,\n      updateActiveNames,\n      updateDispActiveNames,\n      updateNewLimitedStreams,\n      updateNon_alVideoStreams,\n      updateRef_participants,\n      updateSortAudioLoudness,\n      updateMixed_alVideoStreams,\n      updateNon_alVideoStreams_muted,\n      updatePaginatedStreams,\n      updateDoPaginate,\n      updatePrevDoPaginate,\n      updateCurrentUserPage,\n      updateNumberPages,\n\n      updateMainRoomsLength,\n      updateMemberRoom,\n\n      // mediasfu functions\n      mixStreams,\n      dispStreams,\n    } = parameters;\n\n    try {\n      let alVideoStreams = [...allVideoStreams];\n      p_activeNames = [...activeNames];\n\n      let streame;\n\n      if (shareScreenStarted || shared) {\n        alVideoStreams = [...newLimitedStreams];\n        activeNames = [];\n      }\n\n      activeNames = [];\n      dispActiveNames = [];\n      ref_participants = participants;\n\n      let temp = alVideoStreams;\n\n      await Promise.all(\n        temp.map(async (stream) => {\n          let participant = ref_participants.find((obj) => obj.videoID === stream.producerId);\n          if (!participant && stream.producerId !== 'youyou' && stream.producerId !== 'youyouyou') {\n            alVideoStreams = alVideoStreams.filter((obj) => obj.producerId !== stream.producerId);\n          }\n        }),\n      );\n\n      if (eventType === 'broadcast' || eventType === 'chat') {\n        sortAudioLoudness = false;\n      }\n\n      if (shareScreenStarted || shared) {\n        non_alVideoStreams = [];\n        non_alVideoStreams_muted = [];\n        mixed_alVideoStreams = [];\n      } else {\n        if (alVideoStreams.length > screenPageLimit) {\n          alVideoStreams = alVideoStreams.filter(\n            (obj) => obj.producerId !== 'youyou' && obj.producerId !== 'youyouyou',\n          );\n\n          ref_participants = ref_participants.sort((a, b) =>\n            (a.muted ?? false) > (b.muted ?? false) ? 1 : -1,\n          );\n\n          let temp: (Stream | Participant)[] = [];\n          await Promise.all(\n            ref_participants.map((participant) => {\n              let stream = alVideoStreams.find((obj) => obj.producerId === participant.videoID);\n              if (stream) {\n                temp.push(stream);\n              }\n            }),\n          );\n\n          alVideoStreams = temp;\n\n          let youyou = allVideoStreams.find((obj) => obj.producerId === 'youyou');\n          if (!youyou) {\n            let youyouyou = allVideoStreams.find((obj) => obj.producerId === 'youyouyou');\n            if (youyouyou) {\n              alVideoStreams.unshift(youyouyou);\n            }\n          } else {\n            if (youyou) {\n              alVideoStreams.unshift(youyou);\n            }\n          }\n        }\n\n        const admin = participants.filter((participant) => participant.islevel === '2');\n        let adminName = '';\n        if (admin.length > 0) {\n          adminName = admin[0].name || '';\n        }\n\n        non_alVideoStreams = [];\n\n        await Promise.all(\n          ref_participants.map(async (participant) => {\n            let stream = alVideoStreams.find((obj) => obj.producerId === participant.videoID);\n            if (eventType !== 'chat' && eventType !== 'conference') {\n              if (\n                !stream &&\n                participant.name !== member &&\n                !participant['muted'] &&\n                participant.name !== adminName\n              ) {\n                non_alVideoStreams.push(participant);\n              }\n            } else {\n              if (!stream && participant.name !== member && !participant['muted']) {\n                non_alVideoStreams.push(participant);\n              }\n            }\n          }),\n        );\n\n        if (sortAudioLoudness) {\n          non_alVideoStreams.sort((a, b) => {\n            const avgLoudnessA =\n              audioDecibels.find((obj) => obj.name === a.name)?.averageLoudness || 127;\n            const avgLoudnessB =\n              audioDecibels.find((obj) => obj.name === b.name)?.averageLoudness || 127;\n            return avgLoudnessB - avgLoudnessA;\n          });\n\n          if (\n            !(meetingDisplayType === 'video' && meetingVideoOptimized) ||\n            !(recordingVideoOptimized && recordingDisplayType === 'video')\n          ) {\n            mixed_alVideoStreams = await mixStreams({\n              alVideoStreams,\n              non_alVideoStreams,\n              ref_participants,\n            });\n          }\n        }\n\n        non_alVideoStreams_muted = [];\n        await Promise.all(\n          ref_participants.map(async (participant) => {\n            let stream = alVideoStreams.find((obj) => obj.producerId === participant.videoID);\n            if (eventType !== 'chat' && eventType !== 'conference') {\n              if (\n                !stream &&\n                participant.name !== member &&\n                participant['muted'] &&\n                participant.name !== adminName\n              ) {\n                non_alVideoStreams_muted.push(participant);\n              }\n            } else {\n              if (!stream && participant.name !== member && participant['muted']) {\n                non_alVideoStreams_muted.push(participant);\n              }\n            }\n          }),\n        );\n      }\n\n      if (eventType === 'conference' && islevel !== '2') {\n        let host = participants.find((obj) => obj.islevel === '2');\n        if (host) {\n          if (host.videoID) {\n            remoteProducerId = host.videoID;\n          }\n          if (islevel === '2') {\n            host['stream'] = virtualStream || localStreamVideo;\n          } else {\n            let hostVideo = alVideoStreams.find((obj) => obj.producerId === remoteProducerId);\n            if (!hostVideo) {\n              streame = oldAllStreams.find((streame) => streame.producerId === remoteProducerId);\n              if (streame) {\n                alVideoStreams = alVideoStreams.filter((obj) => obj.producerId !== host.videoID);\n                non_alVideoStreams = non_alVideoStreams.filter((obj) => obj.name !== host.name);\n                non_alVideoStreams_muted = non_alVideoStreams_muted.filter(\n                  (obj) => obj.name !== host.name,\n                );\n                if (sortAudioLoudness) {\n                  mixed_alVideoStreams = mixed_alVideoStreams.filter(\n                    (obj) => obj.name !== host.name,\n                  );\n                  non_alVideoStreams_muted = non_alVideoStreams_muted.filter(\n                    (obj) => obj.name !== host.name,\n                  );\n                  if (meetingDisplayType == 'video' && meetingVideoOptimized) {\n                    alVideoStreams.unshift(streame);\n                  } else {\n                    mixed_alVideoStreams.unshift(streame);\n                  }\n                } else {\n                  alVideoStreams.unshift(streame);\n                }\n              } else {\n                await Promise.all(\n                  ref_participants.map(async (participant) => {\n                    let stream = alVideoStreams.find(\n                      (obj) =>\n                        obj.producerId == participant.videoID && participant.name == host.name,\n                    );\n                    if (stream) {\n                      if (sortAudioLoudness) {\n                        mixed_alVideoStreams = mixed_alVideoStreams.filter(\n                          (obj) => obj.name !== host.name,\n                        );\n                        non_alVideoStreams_muted = non_alVideoStreams_muted.filter(\n                          (obj) => obj.name !== host.name,\n                        );\n                        mixed_alVideoStreams.unshift(participant);\n                      } else {\n                        non_alVideoStreams = non_alVideoStreams.filter(\n                          (obj) => obj.name !== host.name,\n                        );\n                        non_alVideoStreams.unshift(participant);\n                        return;\n                      }\n                    }\n                  }),\n                );\n              }\n            }\n          }\n        }\n      }\n\n      let allStreamsPaged: (Stream | Participant)[] = [];\n      if (sortAudioLoudness) {\n        if (meetingDisplayType === 'video') {\n          if (meetingVideoOptimized) {\n            allStreamsPaged = [...alVideoStreams];\n          } else {\n            allStreamsPaged = [...mixed_alVideoStreams];\n          }\n        } else if (meetingDisplayType === 'media') {\n          allStreamsPaged = [...mixed_alVideoStreams];\n        } else if (meetingDisplayType === 'all') {\n          allStreamsPaged = [...mixed_alVideoStreams, ...non_alVideoStreams_muted];\n        }\n      } else {\n        if (meetingDisplayType === 'video') {\n          allStreamsPaged = [...alVideoStreams];\n        } else if (meetingDisplayType === 'media') {\n          allStreamsPaged = [...alVideoStreams, ...non_alVideoStreams];\n        } else if (meetingDisplayType === 'all') {\n          allStreamsPaged = [...alVideoStreams, ...non_alVideoStreams, ...non_alVideoStreams_muted];\n        }\n      }\n\n      paginatedStreams = [];\n      let limit = itemPageLimit;\n\n      if (shareScreenStarted || shared) {\n        limit = screenPageLimit;\n      }\n\n      let firstPage: (Stream | Participant)[] = [];\n      let page: (Stream | Participant)[] = [];\n      let limit_ = limit + 1;\n\n      if (eventType === 'conference' && !shared && !shareScreenStarted) {\n        limit_ = limit_ - 1;\n      }\n\n      // Create pagination\n      let memberInRoom = false;\n      let filterHost = false;\n      if (breakOutRoomStarted && !breakOutRoomEnded) {\n        let tempBreakoutRooms = JSON.parse(JSON.stringify(breakoutRooms));\n        let host = participants.find((obj) => obj.islevel == '2');\n        for (let room of tempBreakoutRooms) {\n          try {\n            let currentStreams = [];\n            const roomIndex = tempBreakoutRooms.indexOf(room);\n            if (hostNewRoom != -1 && roomIndex == hostNewRoom) {\n              if (host) {\n                if (!room.map((obj: any) => obj.name).includes(host.name)) {\n                  room = [...room, { name: host.name, breakRoom: roomIndex }];\n                  filterHost = true;\n                }\n              }\n            }\n            for (let participant of room) {\n              if (participant.name == member && !memberInRoom) {\n                memberInRoom = true;\n                memberRoom = participant.breakRoom;\n                updateMemberRoom(memberRoom);\n              }\n              let streams = allStreamsPaged.filter((stream) => {\n                if (\n                  (Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n                    stream.producerId != null &&\n                    stream.producerId !== '') ||\n                  (Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n                    stream['audioID'] != null &&\n                    stream['audioID'] !== '')\n                ) {\n                  let producerId = stream.producerId || stream['audioID'];\n                  let matchingParticipant = ref_participants.find(\n                    (obj) =>\n                      obj['audioID'] === producerId ||\n                      obj.videoID === producerId ||\n                      ((producerId == 'youyou' || producerId == 'youyouyou') &&\n                        member == participant.name),\n                  );\n                  return (\n                    (matchingParticipant && matchingParticipant.name === participant.name) ||\n                    (participant.name == member &&\n                      (producerId == 'youyou' || producerId == 'youyouyou'))\n                  );\n                } else {\n                  return (\n                    Object.prototype.hasOwnProperty.call(stream, 'name') &&\n                    stream.name == participant.name\n                  );\n                }\n              });\n              for (let stream of streams) {\n                if (currentStreams.length < limit_) {\n                  currentStreams.push(stream);\n                }\n              }\n            }\n            paginatedStreams.push(currentStreams);\n          } catch {\n            /* handle error */\n          }\n        }\n\n        let remainingStreams = allStreamsPaged.filter((stream) => {\n          if (\n            (Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== '') ||\n            (Object.prototype.hasOwnProperty.call(stream, 'audioID') &&\n              stream['audioID'] != null &&\n              stream['audioID'] !== '')\n          ) {\n            let producerId = stream.producerId || stream['audioID'];\n            let matchingParticipant = ref_participants.find(\n              (obj) =>\n                obj['audioID'] === producerId ||\n                obj.videoID === producerId ||\n                ((producerId == 'youyou' || producerId == 'youyouyou') && member == obj.name),\n            );\n            return (\n              matchingParticipant &&\n              !breakoutRooms\n                .flat()\n                .map((obj) => obj.name)\n                .includes(matchingParticipant.name) &&\n              (!filterHost || matchingParticipant.name != host?.name)\n            );\n          } else {\n            return (\n              !breakoutRooms\n                .flat()\n                .map((obj) => obj.name)\n                .includes(stream.name ?? '') &&\n              (!filterHost || stream.name != host?.name)\n            );\n          }\n        });\n\n        if (memberInRoom) {\n          let memberStream = allStreamsPaged.find((stream) => {\n            if (\n              Object.prototype.hasOwnProperty.call(stream, 'producerId') &&\n              stream.producerId != null &&\n              stream.producerId !== ''\n            ) {\n              return stream.producerId == 'youyou' || stream.producerId == 'youyouyou';\n            }\n            return false; // Add a return statement here\n          });\n          if (memberStream && !remainingStreams.includes(memberStream)) {\n            remainingStreams.unshift(memberStream);\n          }\n        }\n        let remainingPaginatedStreams = [];\n\n        if (remainingStreams.length > 0) {\n          firstPage = remainingStreams.slice(0, limit_);\n          remainingPaginatedStreams.push(firstPage);\n          for (let i = limit_; i < remainingStreams.length; i += limit) {\n            page = remainingStreams.slice(i, i + limit);\n            remainingPaginatedStreams.push(page);\n          }\n        }\n\n        mainRoomsLength = remainingPaginatedStreams.length;\n        updateMainRoomsLength(mainRoomsLength);\n        // Add the remaining streams to the beginning of the paginatedStreams\n        for (let i = remainingPaginatedStreams.length - 1; i >= 0; i--) {\n          paginatedStreams.unshift(remainingPaginatedStreams[i]);\n        }\n      } else {\n        firstPage = allStreamsPaged.slice(0, limit_);\n        paginatedStreams.push(firstPage);\n\n        for (let i = limit_; i < allStreamsPaged.length; i += limit) {\n          page = allStreamsPaged.slice(i, i + limit);\n          paginatedStreams.push(page);\n        }\n      }\n\n      // State updates\n      updateP_activeNames(p_activeNames);\n      updateActiveNames(activeNames);\n      updateDispActiveNames(dispActiveNames);\n      updateNewLimitedStreams(newLimitedStreams);\n      updateNon_alVideoStreams(non_alVideoStreams);\n      updateRef_participants(ref_participants);\n      updateSortAudioLoudness(sortAudioLoudness);\n      updateMixed_alVideoStreams(mixed_alVideoStreams);\n      updateNon_alVideoStreams_muted(non_alVideoStreams_muted);\n      updatePaginatedStreams(paginatedStreams);\n\n      prevDoPaginate = doPaginate;\n      doPaginate = false;\n      updatePrevDoPaginate(prevDoPaginate);\n      updateDoPaginate(doPaginate);\n\n      let isActive = false;\n\n      if (paginatedStreams.length > 1) {\n        if (!shareScreenStarted && !shared) {\n          doPaginate = true;\n        }\n        updateDoPaginate(doPaginate);\n\n        if (currentUserPage > paginatedStreams.length - 1) {\n          if (breakOutRoomStarted && !breakOutRoomEnded) {\n            currentUserPage = 0;\n          } else {\n            currentUserPage = paginatedStreams.length - 1;\n          }\n        } else if (currentUserPage == 0) {\n          isActive = true;\n        }\n        updateCurrentUserPage(currentUserPage);\n        updateNumberPages(paginatedStreams.length - 1);\n\n        if (screenChanged) {\n          await dispStreams({\n            lStreams: paginatedStreams[0],\n            ind: 0,\n            parameters,\n          });\n        } else {\n          await dispStreams({\n            lStreams: paginatedStreams[0],\n            ind: 0,\n            auto: true,\n            parameters,\n          });\n        }\n\n        if (!isActive) {\n          const currentPageBreak = currentUserPage - mainRoomsLength;\n          await dispStreams({\n            lStreams: paginatedStreams[currentUserPage],\n            ind: currentUserPage,\n            parameters,\n            breakRoom: currentPageBreak,\n            inBreakRoom: currentPageBreak >= 0,\n          });\n        }\n      } else {\n        currentUserPage = 0;\n        updateCurrentUserPage(currentUserPage);\n\n        if (screenChanged) {\n          await dispStreams({\n            lStreams: paginatedStreams[0],\n            ind: 0,\n            parameters,\n          });\n        } else {\n          await dispStreams({\n            lStreams: paginatedStreams[0],\n            ind: 0,\n            auto: true,\n            parameters,\n          });\n        }\n      }\n    } catch (error) {\n      console.log('changeVids error', error);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { TriggerType, TriggerParameters } from '../@types/types';\n\nexport interface CompareActiveNamesParameters extends TriggerParameters {\n  activeNames: string[];\n  prevActiveNames: string[];\n  updateActiveNames: (activeNames: string[]) => void;\n  updatePrevActiveNames: (prevActiveNames: string[]) => void;\n\n  // mediasfu functions\n  trigger: TriggerType;\n  getUpdatedAllParams: () => CompareActiveNamesParameters;\n  [key: string]: any;\n}\n\nexport interface CompareActiveNamesOptions {\n  restart?: boolean;\n  parameters: CompareActiveNamesParameters;\n}\n\n// Export the type definition for the function\nexport type CompareActiveNamesType = (options: CompareActiveNamesOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompareActiveNames {\n  /**\n   * Compares the current active names with the previous active names and triggers an action if there are changes.\n   *\n   * @param {Object} options - The options for comparing active names.\n   * @param {boolean} [options.restart=false] - Whether to restart the comparison.\n   * @param {CompareActiveNamesOptions} options.parameters - The parameters for the comparison.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {string[]} options.parameters.activeNames - The current active names.\n   * @param {string[]} options.parameters.prevActiveNames - The previous active names.\n   * @param {Function} options.parameters.updatePrevActiveNames - Function to update the previous active names.\n   * @param {Function} options.parameters.trigger - Function to trigger an action when names change.\n   *\n   * @returns {Promise<void>} A promise that resolves when the comparison is complete.\n   *\n   * @throws Will log an error message if an error occurs during the comparison.\n   */\n  async compareActiveNames({\n    restart = false,\n    parameters,\n  }: CompareActiveNamesOptions): Promise<void> {\n    try {\n      let { getUpdatedAllParams } = parameters;\n      parameters = getUpdatedAllParams();\n\n      let { activeNames, prevActiveNames, updatePrevActiveNames, trigger } = parameters;\n\n      // Restart the comparison if needed\n      if (restart) {\n        await trigger({ ref_ActiveNames: activeNames, parameters });\n        return;\n      }\n\n      // Array to track changes in activeNames\n      let nameChanged = [];\n\n      // Compare each name in activeNames\n      for (let i = 0; i < activeNames.length; i++) {\n        const currentName = activeNames[i];\n\n        // Check if the name is present in prevActiveNames\n        const hasNameChanged = !prevActiveNames.includes(currentName);\n\n        if (hasNameChanged) {\n          nameChanged.push(true);\n          trigger({ ref_ActiveNames: activeNames, parameters });\n          break;\n        }\n      }\n\n      // Count the number of true in nameChanged\n      let count = nameChanged.filter((value) => value === true).length;\n\n      if (count < 1) {\n        // Check for new names in prevActiveNames\n        for (let i = 0; i < prevActiveNames.length; i++) {\n          const currentName = prevActiveNames[i];\n\n          // Check if the name is present in activeNames\n          const hasNameChanged = !activeNames.includes(currentName);\n\n          // Signal change if the name is new\n          if (hasNameChanged) {\n            trigger({ ref_ActiveNames: activeNames, parameters });\n            break;\n          }\n        }\n      }\n\n      // Update prevActiveNames with current activeNames\n      prevActiveNames = [...activeNames];\n      updatePrevActiveNames(prevActiveNames);\n    } catch (error) {\n      console.log('compareActiveNames error', error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ScreenState, TriggerType, TriggerParameters } from '../@types/types';\n\nexport interface CompareScreenStatesParameters extends TriggerParameters {\n  recordingDisplayType: 'video' | 'media' | 'all';\n  recordingVideoOptimized: boolean;\n  screenStates: ScreenState[];\n  prevScreenStates: ScreenState[];\n  activeNames: string[];\n\n  // mediasfu functions\n  trigger: TriggerType;\n  getUpdatedAllParams: () => CompareScreenStatesParameters;\n  [key: string]: any;\n}\n\nexport interface CompareScreenStatesOptions {\n  restart?: boolean;\n  parameters: CompareScreenStatesParameters;\n}\n\n// Export the type definition for the function\nexport type CompareScreenStatesType = (options: CompareScreenStatesOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompareScreenStates {\n  /**\n   * Compares the current screen states with the previous screen states and triggers actions based on changes.\n   *\n   * @param {Object} options - The options for comparing screen states.\n   * @param {boolean} [options.restart=false] - Whether to restart the comparison process.\n   * @param {CompareScreenStatesOptions} options.parameters - The parameters for the comparison.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {string} options.parameters.recordingDisplayType - The type of display being recorded.\n   * @param {boolean} options.parameters.recordingVideoOptimized - Whether the recording is optimized for video.\n   * @param {Array<ScreenState>} options.parameters.screenStates - The current screen states.\n   * @param {Array<ScreenState>} options.parameters.prevScreenStates - The previous screen states.\n   * @param {Array<string>} options.parameters.activeNames - The active names in the current context.\n   * @param {Function} options.parameters.trigger - Function to trigger actions based on changes.\n   *\n   * @returns {Promise<void>} A promise that resolves when the comparison and any triggered actions are complete.\n   *\n   * @throws Will log an error message if an error occurs during the comparison process.\n   */\n  async compareScreenStates({\n    restart = false,\n    parameters,\n  }: CompareScreenStatesOptions): Promise<void> {\n    try {\n      let { getUpdatedAllParams } = parameters;\n      parameters = getUpdatedAllParams();\n\n      let {\n        recordingDisplayType,\n        recordingVideoOptimized,\n        screenStates,\n        prevScreenStates,\n        activeNames,\n        trigger,\n      } = parameters;\n\n      // Restart the comparison if needed\n      if (restart) {\n        // Perform necessary actions on restart\n        return;\n      }\n\n      // Compare each key-value pair in the screenStates objects\n      for (let i = 0; i < screenStates.length; i++) {\n        const currentScreenState = screenStates[i];\n        const prevScreenState = prevScreenStates[i];\n\n        // Check if any value has changed\n        const hasChanged = (Object.keys(currentScreenState) as (keyof ScreenState)[]).some(\n          (key) => currentScreenState[key] !== prevScreenState[key],\n        );\n\n        // Signal change if any value has changed\n        if (hasChanged) {\n          // Perform actions or trigger events based on the change\n          if (recordingDisplayType === 'video' && recordingVideoOptimized) {\n            await trigger({ ref_ActiveNames: activeNames, parameters });\n            break;\n          }\n          await trigger({ ref_ActiveNames: activeNames, parameters });\n          break;\n        }\n      }\n    } catch (error) {\n      console.log('compareScreenStates error', error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { Device, Transport, DtlsParameters } from 'mediasoup-client/lib/types';\nimport { ConnectSendTransportParameters, ConnectSendTransportType } from '../@types/types';\n\nexport interface CreateSendTransportParameters extends ConnectSendTransportParameters {\n  islevel: string;\n  member: string;\n  socket: Socket;\n  device: Device | null;\n  transportCreated: boolean;\n  producerTransport: Transport | null;\n  updateProducerTransport: (producerTransport: Transport | null) => void;\n  updateTransportCreated: (transportCreated: boolean) => void;\n\n  // mediasfu functions\n  connectSendTransport: ConnectSendTransportType;\n  getUpdatedAllParams: () => CreateSendTransportParameters;\n  [key: string]: any;\n}\n\nexport interface CreateSendTransportOptions {\n  option: 'audio' | 'video' | 'screen' | 'all';\n  parameters: CreateSendTransportParameters;\n}\n\n// Export the type definition for the function\nexport type CreateSendTransportType = (options: CreateSendTransportOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateSendTransport {\n  /**\n   * Creates a WebRTC send transport and sets up event handlers for the transport.\n   *\n   * @param {CreateSendTransportOptions} options - The options for creating the send transport.\n   * @param {Object} options.option - Additional options for the transport creation.\n   * @param {Object} options.parameters - The parameters required for creating the transport.\n   * @param {boolean} options.parameters.islevel - Indicates the level of the transport.\n   * @param {string} options.parameters.member - The member name associated with the transport.\n   * @param {Socket} options.parameters.socket - The socket instance for communication.\n   * @param {Device} options.parameters.device - The WebRTC device instance.\n   * @param {boolean} options.parameters.transportCreated - Flag indicating if the transport is created.\n   * @param {Transport} options.parameters.producerTransport - The producer transport instance.\n   * @param {Function} options.parameters.updateProducerTransport - Function to update the producer transport.\n   * @param {Function} options.parameters.updateTransportCreated - Function to update the transport creation state.\n   * @param {Function} options.parameters.connectSendTransport - Function to connect the send transport.\n   * @returns {Promise<void>} A promise that resolves when the send transport is created and configured.\n   *\n   * @throws Will throw an error if there is an issue creating the send transport.\n   */\n  async createSendTransport({ option, parameters }: CreateSendTransportOptions): Promise<void> {\n    try {\n      // Destructure parameters\n      let {\n        islevel,\n        member,\n        device,\n        socket,\n        transportCreated,\n        producerTransport,\n        updateProducerTransport,\n        updateTransportCreated,\n        connectSendTransport,\n        getUpdatedAllParams,\n      } = parameters;\n\n      const updatedParams = getUpdatedAllParams();\n      device = updatedParams.device;\n      socket = updatedParams.socket;\n\n      // Emit createWebRtcTransport event to the server\n      socket.emit(\n        'createWebRtcTransport',\n        { consumer: false, islevel: islevel },\n        async ({ params }: any) => {\n          // Check if there is an error in the response\n          if (params && params.error) {\n            return;\n          }\n\n          // Create a WebRTC send transport\n          if (device) {\n            producerTransport = device.createSendTransport(params);\n          } else {\n            throw new Error('Device is null');\n          }\n          updateProducerTransport(producerTransport);\n\n          // Handle 'connect' event\n          producerTransport.on(\n            'connect',\n            async (\n              { dtlsParameters }: { dtlsParameters: DtlsParameters },\n              callback: () => void,\n              errback: (error: any) => void,\n            ) => {\n              try {\n                socket.emit('transport-connect', {\n                  dtlsParameters,\n                });\n                callback();\n              } catch (error) {\n                errback(error);\n              }\n            },\n          );\n\n          // Handle 'produce' event\n          producerTransport.on(\n            'produce',\n            async (\n              parameters: any,\n              callback: (arg0: { id: any }) => void,\n              errback: (error: any) => void,\n            ) => {\n              try {\n                socket.emit(\n                  'transport-produce',\n                  {\n                    kind: parameters.kind,\n                    rtpParameters: parameters.rtpParameters,\n                    appData: parameters.appData,\n                    islevel: islevel,\n                    name: member,\n                  },\n                  ({ id }: { id: string }) => {\n                    callback({ id });\n                  },\n                );\n              } catch (error) {\n                errback(error);\n              }\n            },\n          );\n\n          // Handle 'connectionstatechange' event\n          producerTransport.on('connectionstatechange', (state: string) => {\n            switch (state) {\n              case 'connecting':\n                break;\n              case 'connected':\n                break;\n              case 'failed':\n                producerTransport?.close();\n                break;\n              default:\n                break;\n            }\n          });\n\n          // Update transport creation state\n          transportCreated = true;\n          await connectSendTransport({\n            option: option,\n            parameters: {\n              ...parameters,\n              producerTransport: producerTransport,\n            },\n          });\n\n          updateTransportCreated(transportCreated);\n        },\n      );\n    } catch (error) {\n      // Handle errors during transport creation\n      try {\n        const { showAlert } = parameters;\n        if (showAlert) {\n          showAlert({\n            message: 'Error creating send transport.',\n            type: 'danger',\n            duration: 3000,\n          });\n        }\n      } catch (innerError) {\n        console.log('Error creating send transport:', innerError);\n      }\n      console.log('Error creating send transport:', error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Producer } from 'mediasoup-client/lib/types';\nimport { PrepopulateUserMediaParameters, PrepopulateUserMediaType } from '../@types/types';\nexport interface ResumeSendTransportAudioParameters extends PrepopulateUserMediaParameters {\n  audioProducer: Producer | null;\n  islevel: string;\n  hostLabel: string;\n  lock_screen: boolean;\n  shared: boolean;\n  videoAlreadyOn: boolean;\n  updateAudioProducer: (audioProducer: Producer | null) => void;\n  updateUpdateMainWindow: (updateMainWindow: boolean) => void;\n\n  // mediasfu functions\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  [key: string]: any;\n}\n\nexport interface ResumeSendTransportAudioOptions {\n  parameters: ResumeSendTransportAudioParameters;\n}\n\n// Export the type definition for the function\nexport type ResumeSendTransportAudioType = (\n  options: ResumeSendTransportAudioOptions,\n) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResumeSendTransportAudio {\n  /**\n   * Resumes the send transport for audio and updates the UI and audio producer state accordingly.\n   *\n   * @param {ResumeSendTransportAudioOptions} options - The options for resuming the send transport.\n   * @param {Object} options.parameters - The parameters required for resuming the send transport.\n   * @param {Producer} options.parameters.audioProducer - The audio producer to be resumed.\n   * @param {string} options.parameters.islevel - The level of the user.\n   * @param {string} options.parameters.hostLabel - The label of the host.\n   * @param {boolean} options.parameters.lock_screen - Indicates if the screen is locked.\n   * @param {boolean} options.parameters.shared - Indicates if the screen is shared.\n   * @param {Function} options.parameters.updateAudioProducer - Function to update the audio producer state.\n   * @param {boolean} options.parameters.videoAlreadyOn - Indicates if the video is already on.\n   * @param {Function} options.parameters.updateUpdateMainWindow - Function to update the main window state.\n   * @param {Function} options.parameters.prepopulateUserMedia - Function to prepopulate user media.\n   *\n   * @returns {Promise<void>} A promise that resolves when the send transport is resumed and the UI is updated.\n   *\n   * @throws {Error} Throws an error if there is an issue during the process of resuming the audio send transport.\n   */\n\n  async resumeSendTransportAudio({ parameters }: ResumeSendTransportAudioOptions): Promise<void> {\n    try {\n      let {\n        audioProducer,\n        islevel,\n        updateMainWindow,\n        hostLabel,\n        lock_screen,\n        shared,\n        updateAudioProducer,\n        videoAlreadyOn,\n        updateUpdateMainWindow,\n        prepopulateUserMedia,\n      } = parameters;\n\n      // Resume send transport for audio\n      audioProducer?.resume();\n\n      // Update the UI\n      if (!videoAlreadyOn && islevel === '2') {\n        if (!lock_screen && !shared) {\n          updateMainWindow = true;\n          updateUpdateMainWindow(updateMainWindow);\n          await prepopulateUserMedia({ name: hostLabel, parameters });\n          updateMainWindow = false;\n          updateUpdateMainWindow(updateMainWindow);\n        }\n      }\n\n      // Update audio producer state\n      updateAudioProducer(audioProducer);\n    } catch (error: any) {\n      // Handle errors during the process of resuming the audio send transport\n      throw new Error(`Error during resuming audio send transport: ${error.message}`);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { GetPipedProducersAltType, GetPipedProducersAltParameters } from '../@types/types';\n\nexport interface ReceiveAllPipedTransportsParameters extends GetPipedProducersAltParameters {\n  roomName: string;\n  member: string;\n\n  // mediasfu functions\n  getPipedProducersAlt: GetPipedProducersAltType;\n  [key: string]: any;\n}\n\nexport interface ReceiveAllPipedTransportsOptions {\n  nsock: Socket;\n  parameters: ReceiveAllPipedTransportsParameters;\n}\n\n// Export the type definition for the function\nexport type ReceiveAllPipedTransportsType = (\n  options: ReceiveAllPipedTransportsOptions,\n) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReceiveAllPipedTransports {\n  /**\n   * Receives all piped transports by emitting an event to the server and processing the response.\n   *\n   * @param {ReceiveAllPipedTransportsOptions} options - The options for receiving all piped transports.\n   * @param {any} options.nsock - The socket instance used for communication.\n   * @param {Object} options.parameters - The parameters for the operation.\n   * @param {string} options.parameters.roomName - The name of the room.\n   * @param {string} options.parameters.member - The member identifier.\n   * @param {Function} options.parameters.getPipedProducersAlt - The function to get piped producers for a given level.\n   *\n   * @returns {Promise<void>} A promise that resolves when the operation is complete.\n   *\n   * @throws Will log an error message if the operation fails.\n   */\n  receiveAllPipedTransports = async ({\n    nsock,\n    parameters,\n  }: ReceiveAllPipedTransportsOptions): Promise<void> => {\n    try {\n      // Destructure parameters\n      const { roomName, member, getPipedProducersAlt } = parameters;\n\n      // Emit createReceiveAllTransportsPiped event to the server\n      await new Promise<void>((resolve, reject) => {\n        nsock.emit(\n          'createReceiveAllTransportsPiped',\n          { roomName, member },\n          async ({ producersExist }: { producersExist: boolean }) => {\n            try {\n              // Array of options representing different levels\n              const options = ['0', '1', '2'];\n\n              // If producers exist, loop through each level and get producers\n              if (producersExist) {\n                for (const islevel of options) {\n                  await getPipedProducersAlt({ nsock, islevel, parameters });\n                }\n              }\n              resolve();\n            } catch (err) {\n              reject(err);\n            }\n          },\n        );\n      });\n    } catch (error) {\n      console.log('receiveAllPipedTransports error', error);\n      // throw error;\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Producer } from 'mediasoup-client/lib/types';\nimport { Socket } from 'socket.io-client';\nimport { ReorderStreamsType, ReorderStreamsParameters } from '../@types/types';\nexport interface DisconnectSendTransportVideoParameters extends ReorderStreamsParameters {\n  videoProducer: Producer | null;\n  socket: Socket;\n  islevel: string;\n  roomName: string;\n  lock_screen: boolean;\n  updateMainWindow: boolean;\n  updateUpdateMainWindow: (state: boolean) => void;\n  updateVideoProducer: (producer: Producer | null) => void;\n\n  // mediasfu functions\n  reorderStreams: ReorderStreamsType;\n  [key: string]: any;\n}\n\nexport interface DisconnectSendTransportVideoOptions {\n  parameters: DisconnectSendTransportVideoParameters;\n}\n\n// Export the type definition for the function\nexport type DisconnectSendTransportVideoType = (\n  options: DisconnectSendTransportVideoOptions,\n) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DisconnectSendTransportVideo {\n  /**\n   * Disconnects the send transport for video, closes the video producer, and updates the state.\n   *\n   * @param {DisconnectSendTransportVideoOptions} parameters - The parameters required for disconnecting the send transport.\n   * @param {Producer} parameters.videoProducer - The video producer to be closed.\n   * @param {Socket} parameters.socket - The socket instance for communication.\n   * @param {string} parameters.islevel - The participant's level.\n   * @param {string} parameters.roomName - The name of the room.\n   * @param {boolean} parameters.updateMainWindow - Flag to update the main window.\n   * @param {boolean} parameters.lock_screen - Flag indicating if the screen is locked.\n   * @param {Function} parameters.updateUpdateMainWindow - Function to update the main window state.\n   * @param {Function} parameters.updateVideoProducer - Function to update the video producer state.\n   * @param {Function} parameters.reorderStreams - Function to reorder streams.\n   *\n   * @returns {Promise<void>} - A promise that resolves when the disconnection process is complete.\n   *\n   * @throws {Error} - Throws an error if the disconnection process fails.\n   */\n\n  async disconnectSendTransportVideo({\n    parameters,\n  }: DisconnectSendTransportVideoOptions): Promise<void> {\n    try {\n      let {\n        videoProducer,\n        socket,\n        islevel,\n        roomName,\n        lock_screen,\n        updateMainWindow,\n        updateUpdateMainWindow,\n        updateVideoProducer,\n        reorderStreams,\n      } = parameters.getUpdatedAllParams();\n\n      // Close the video producer and update the state\n      await videoProducer.close();\n      updateVideoProducer(null);\n\n      // Notify the server about pausing video sharing\n      socket.emit('pauseProducerMedia', { mediaTag: 'video', roomName });\n\n      // Update the UI based on the participant's level and screen lock status\n      if (islevel === '2') {\n        updateMainWindow = true;\n        updateUpdateMainWindow(updateMainWindow);\n      }\n\n      if (lock_screen) {\n        await reorderStreams({ add: true, screenChanged: true, parameters });\n      } else {\n        await reorderStreams({ add: false, screenChanged: true, parameters });\n      }\n    } catch (error: any) {\n      // Handle errors during the disconnection process\n      console.log('Error disconnecting send transport for video:', error.message);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { PrepopulateUserMediaType, PrepopulateUserMediaParameters } from '../@types/types';\nimport { Producer } from 'mediasoup-client/lib/types';\nexport interface DisconnectSendTransportAudioParameters extends PrepopulateUserMediaParameters {\n  audioProducer: Producer | null;\n  socket: Socket;\n  videoAlreadyOn: boolean;\n  islevel: string;\n  lock_screen: boolean;\n  shared: boolean;\n  updateMainWindow: boolean;\n  hostLabel: string;\n  roomName: string;\n  updateAudioProducer: (audioProducer: Producer | null) => void;\n  updateUpdateMainWindow: (updateMainWindow: boolean) => void;\n\n  // mediasfu functions\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  [key: string]: any;\n}\n\nexport interface DisconnectSendTransportAudioOptions {\n  parameters: DisconnectSendTransportAudioParameters;\n}\n\n// Export the type definition for the function\nexport type DisconnectSendTransportAudioType = (\n  options: DisconnectSendTransportAudioOptions,\n) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DisconnectSendTransportAudio {\n  /**\n   * Disconnects the send transport for audio by pausing the audio producer and updating the UI accordingly.\n   *\n   * @param {DisconnectSendTransportAudioOptions} parameters - The parameters required to disconnect the send transport for audio.\n   * @param {Object} parameters.audioProducer - The audio producer to be paused.\n   * @param {Object} parameters.socket - The socket connection to notify the server.\n   * @param {boolean} parameters.videoAlreadyOn - Flag indicating if the video is already on.\n   * @param {string} parameters.islevel - The level of the user.\n   * @param {boolean} parameters.lock_screen - Flag indicating if the screen is locked.\n   * @param {boolean} parameters.shared - Flag indicating if the screen is shared.\n   * @param {Function} parameters.updateMainWindow - Function to update the main window state.\n   * @param {string} parameters.hostLabel - The label of the host.\n   * @param {string} parameters.roomName - The name of the room.\n   * @param {Function} parameters.updateAudioProducer - Function to update the audio producer state.\n   * @param {Function} parameters.updateUpdateMainWindow - Function to update the main window update state.\n   * @param {Function} parameters.prepopulateUserMedia - Function to prepopulate user media.\n   *\n   * @returns {Promise<void>} A promise that resolves when the send transport for audio is disconnected.\n   *\n   * @throws Will throw an error if the operation fails.\n   */\n  async disconnectSendTransportAudio({\n    parameters,\n  }: DisconnectSendTransportAudioOptions): Promise<void> {\n    try {\n      // Destructure parameters\n      let {\n        audioProducer,\n        socket,\n        videoAlreadyOn,\n        islevel,\n        lock_screen,\n        shared,\n        updateMainWindow,\n        hostLabel,\n        roomName,\n        updateAudioProducer,\n        updateUpdateMainWindow,\n        prepopulateUserMedia,\n      } = parameters;\n\n      // Pause the audio producer\n      audioProducer?.pause(); // actual logic is to close (await audioProducer.close()) but mediaSFU prefers pause if recording\n      updateAudioProducer(audioProducer);\n\n      // Update the UI\n      if (!videoAlreadyOn && islevel === '2') {\n        if (!lock_screen && !shared) {\n          updateMainWindow = true;\n          updateUpdateMainWindow(updateMainWindow);\n          await prepopulateUserMedia({ name: hostLabel, parameters });\n          updateMainWindow = false;\n          updateUpdateMainWindow(updateMainWindow);\n        }\n      }\n\n      // Notify the server about pausing audio producer\n      socket.emit('pauseProducerMedia', { mediaTag: 'audio', roomName: roomName });\n    } catch (error) {\n      console.error('disconnectSendTransportAudio error', error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Producer } from 'mediasoup-client/lib/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface DisconnectSendTransportScreenParameters {\n  screenProducer: Producer | null;\n  socket: Socket;\n  roomName: string;\n  updateScreenProducer: (screenProducer: Producer | null) => void;\n\n  getUpdatedAllParams: () => DisconnectSendTransportScreenParameters;\n  [key: string]: any;\n}\nexport interface DisconnectSendTransportScreenOptions {\n  parameters: DisconnectSendTransportScreenParameters;\n}\n\n// Export the type definition for the function\nexport type DisconnectSendTransportScreenType = (\n  options: DisconnectSendTransportScreenOptions,\n) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class DisconnectSendTransportScreen {\n  /**\n   * Disconnects the send transport for screen sharing.\n   *\n   * This function closes the screen producer, updates the state, and notifies the server\n   * about the closure and pausing of screen sharing.\n   *\n   * @param {DisconnectSendTransportScreenOptions} options - The options for disconnecting the send transport.\n   * @param {Object} options.parameters - The parameters required for disconnection.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {Object} options.parameters.screenProducer - The screen producer to be closed.\n   * @param {Object} options.parameters.socket - The socket connection to notify the server.\n   * @param {string} options.parameters.roomName - The name of the room.\n   * @param {Function} options.parameters.updateScreenProducer - Function to update the screen producer state.\n   * @returns {Promise<void>} A promise that resolves when the disconnection process is complete.\n   * @throws {Error} If an error occurs during the disconnection process.\n   */\n  async disconnectSendTransportScreen({\n    parameters,\n  }: DisconnectSendTransportScreenOptions): Promise<void> {\n    try {\n      // Destructure parameters\n      let { screenProducer, socket, roomName, updateScreenProducer } =\n        parameters.getUpdatedAllParams();\n\n      // Close the screen producer and update the state\n      screenProducer?.close();\n      updateScreenProducer(screenProducer);\n\n      // Notify the server about closing the screen producer and pausing screen sharing\n      socket.emit('closeScreenProducer');\n      socket.emit('pauseProducerMedia', { mediaTag: 'screen', roomName });\n    } catch (error: any) {\n      // Handle errors during the disconnection process\n      console.log('Error disconnecting send transport for screen:', error.message);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ProducerOptions } from 'mediasoup-client/lib/types';\nimport {\n  ConnectSendTransportAudioType,\n  ConnectSendTransportVideoType,\n  ConnectSendTransportScreenType,\n  ConnectSendTransportAudioParameters,\n  ConnectSendTransportVideoParameters,\n  ConnectSendTransportScreenParameters,\n} from '../@types/types';\nexport interface ConnectSendTransportParameters\n  extends ConnectSendTransportAudioParameters,\n    ConnectSendTransportVideoParameters,\n    ConnectSendTransportScreenParameters {\n  audioParams: ProducerOptions;\n  videoParams: ProducerOptions;\n  localStreamScreen: MediaStream | null;\n  canvasStream: MediaStream | null;\n  whiteboardStarted: boolean;\n  whiteboardEnded: boolean;\n  shared: boolean;\n  islevel: string;\n\n  //mediasfu functions\n  connectSendTransportAudio: ConnectSendTransportAudioType;\n  connectSendTransportVideo: ConnectSendTransportVideoType;\n  connectSendTransportScreen: ConnectSendTransportScreenType;\n  [key: string]: any;\n}\n\nexport interface ConnectSendTransportOptions {\n  option: 'audio' | 'video' | 'screen' | 'all';\n  parameters: ConnectSendTransportParameters;\n}\n\n// Export the type definition for the function\nexport type ConnectSendTransportType = (options: ConnectSendTransportOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectSendTransport {\n  /**\n   * Connects the send transport based on the specified option.\n   *\n   * @param {ConnectSendTransportOptions} options - The options for connecting the send transport.\n   * @param {string} options.option - The type of transport to connect (\"audio\", \"video\", \"screen\", or both).\n   * @param {Object} options.parameters - The parameters required for connecting the transport.\n   * @param {Object} options.parameters.audioParams - The audio parameters.\n   * @param {Object} options.parameters.videoParams - The video parameters.\n   * @param {MediaStream} options.parameters.localStreamScreen - The local screen stream.\n   * @param {MediaStream} options.parameters.canvasStream - The canvas stream.\n   * @param {boolean} options.parameters.whiteboardStarted - Indicates if the whiteboard has started.\n   * @param {boolean} options.parameters.whiteboardEnded - Indicates if the whiteboard has ended.\n   * @param {boolean} options.parameters.shared - Indicates if the screen is shared.\n   * @param {string} options.parameters.islevel - The level of the screen sharing.\n   * @param {Function} options.parameters.connectSendTransportAudio - Function to connect the audio send transport.\n   * @param {Function} options.parameters.connectSendTransportVideo - Function to connect the video send transport.\n   * @param {Function} options.parameters.connectSendTransportScreen - Function to connect the screen send transport.\n   *\n   * @returns {Promise<void>} A promise that resolves when the transport is connected.\n   *\n   * @throws Will throw an error if the connection fails.\n   */\n\n  async connectSendTransport({ option, parameters }: ConnectSendTransportOptions): Promise<void> {\n    try {\n      const {\n        audioParams,\n        videoParams,\n        localStreamScreen,\n        canvasStream,\n        whiteboardStarted,\n        whiteboardEnded,\n        shared,\n        islevel,\n        connectSendTransportAudio,\n        connectSendTransportVideo,\n        connectSendTransportScreen,\n      } = parameters;\n\n      // Connect send transport based on the specified option\n      if (option === 'audio') {\n        await connectSendTransportAudio({\n          audioParams,\n          parameters,\n        });\n      } else if (option === 'video') {\n        await connectSendTransportVideo({\n          videoParams,\n          parameters,\n        });\n      } else if (option === 'screen') {\n        if (whiteboardStarted && !whiteboardEnded && canvasStream && islevel === '2' && !shared) {\n          await connectSendTransportScreen({\n            stream: canvasStream,\n            parameters,\n          });\n        } else {\n          if (localStreamScreen) {\n            await connectSendTransportScreen({\n              stream: localStreamScreen,\n              parameters,\n            });\n          } else {\n            throw new Error('localStreamScreen is null or undefined');\n          }\n        }\n      } else {\n        // Connect both audio and video send transports\n        await connectSendTransportAudio({\n          audioParams,\n          parameters,\n        });\n        await connectSendTransportVideo({\n          videoParams,\n          parameters,\n        });\n      }\n    } catch (error) {\n      console.log('connectSendTransport error', error);\n    }\n  }\n}\n","// piped-producers.service.ts\nimport { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\n\nimport {\n  SignalNewConsumerTransportParameters,\n  SignalNewConsumerTransportType,\n} from '../@types/types';\n\nexport interface GetPipedProducersAltParameters extends SignalNewConsumerTransportParameters {\n  member: string;\n\n  // mediasfu functions\n  signalNewConsumerTransport: SignalNewConsumerTransportType;\n  [key: string]: any;\n}\n\nexport interface GetPipedProducersAltOptions {\n  nsock: Socket;\n  islevel: string;\n  parameters: GetPipedProducersAltParameters;\n}\n\n// Export the type definition for the function\nexport type GetPipedProducersAltType = (options: GetPipedProducersAltOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetPipedProducersAlt {\n  /**\n   * Retrieves piped producers and signals new consumer transport for each retrieved producer.\n   *\n   * @param {Object} options - The options for retrieving piped producers.\n   * @param {WebSocket} options.nsock - The WebSocket instance used for communication.\n   * @param {boolean} options.islevel - A flag indicating the level of the request.\n   * @param {Object} options.parameters - Additional parameters for the request.\n   * @param {string} options.parameters.member - The member identifier.\n   * @param {Function} options.parameters.signalNewConsumerTransport - A function to signal new consumer transport.\n   *\n   * @returns {Promise<void>} A promise that resolves when the operation is complete.\n   *\n   * @throws {Error} If an error occurs during the process of retrieving producers.\n   */\n  async getPipedProducersAlt({\n    nsock,\n    islevel,\n    parameters,\n  }: GetPipedProducersAltOptions): Promise<void> {\n    try {\n      // Destructure parameters\n      const { member, signalNewConsumerTransport } = parameters;\n\n      // Emit request to get piped producers using WebSocket\n      nsock.emit('getProducersPipedAlt', { islevel, member }, async (producerIds: string[]) => {\n        // Check if producers are retrieved\n        if (producerIds.length > 0) {\n          // Signal new consumer transport for each retrieved producer\n          for (const id of producerIds) {\n            await signalNewConsumerTransport({ nsock, remoteProducerId: id, islevel, parameters });\n          }\n        }\n      });\n    } catch (error: any) {\n      // Handle errors during the process of retrieving producers\n      console.log('Error getting piped producers:', error.message);\n      // throw error;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport {\n  ConsumerResumeType,\n  ConsumerResumeParameters,\n  Transport as TransportType,\n} from '../@types/types';\nimport { Consumer, Device, Transport } from 'mediasoup-client/lib/types';\ninterface Params {\n  id: string;\n  producerId: string;\n  kind: string;\n  rtpParameters: any;\n  serverConsumerId: string;\n  error?: string;\n}\n\nexport interface ConnectRecvTransportParameters extends ConsumerResumeParameters {\n  device: Device | null;\n  consumerTransports: TransportType[];\n  updateConsumerTransports: (transports: TransportType[]) => void;\n\n  // mediasfu functions\n  consumerResume: ConsumerResumeType;\n  getUpdatedAllParams: () => ConnectRecvTransportParameters;\n  [key: string]: any; // Extendable for additional parameters\n}\nexport interface ConnectRecvTransportOptions {\n  consumerTransport: Transport;\n  remoteProducerId: string;\n  serverConsumerTransportId: string;\n  nsock: Socket;\n  parameters: ConnectRecvTransportParameters;\n}\n\n// Export the type definition for the function\nexport type ConnectRecvTransportType = (options: ConnectRecvTransportOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectRecvTransport {\n  /**\n   * Connects the receiving transport to consume media from a remote producer.\n   *\n   * @param {Object} options - The options for connecting the receiving transport.\n   * @param {Transport} options.consumerTransport - The transport used for consuming media.\n   * @param {string} options.remoteProducerId - The ID of the remote producer.\n   * @param {string} options.serverConsumerTransportId - The ID of the server consumer transport.\n   * @param {Socket} options.nsock - The socket used for communication.\n   * @param {ConnectRecvTransportOptions} options.parameters - The parameters for the connection.\n   *\n   * @returns {Promise<void>} A promise that resolves when the connection is established.\n   *\n   * @throws Will throw an error if the connection or consumption fails.\n   *\n   * @example\n   * ```typescript\n   * const options = {\n   *   consumerTransport,\n   *   remoteProducerId: 'producer-id',\n   *   serverConsumerTransportId: 'transport-id',\n   *   nsock: socket,\n   *   parameters: connectRecvTransportOptions,\n   * };\n   *\n   * connectRecvTransport(options)\n   *   .then(() => {\n   *     console.log('Transport connected and consuming media');\n   *   })\n   *   .catch((error) => {\n   *     console.error('Error connecting transport:', error);\n   *   });\n   * ```\n   */\n\n  connectRecvTransport = async ({\n    consumerTransport,\n    remoteProducerId,\n    serverConsumerTransportId,\n    nsock,\n    parameters,\n  }: ConnectRecvTransportOptions): Promise<void> => {\n    try {\n      parameters = parameters.getUpdatedAllParams();\n      const { device, consumerTransports, updateConsumerTransports, consumerResume } = parameters;\n\n      // Emit 'consume' event to signal consumption initiation\n      nsock.emit(\n        'consume',\n        {\n          rtpCapabilities: device ? device.rtpCapabilities : null,\n          remoteProducerId,\n          serverConsumerTransportId,\n        },\n        async ({ params }: { params: Params }) => {\n          if (params.error) {\n            // Handle error\n            console.log('consume error', params.error);\n            return;\n          }\n\n          try {\n            // Consume media using received parameters\n            const consumer: Consumer = await consumerTransport.consume({\n              id: params.id,\n              producerId: params.producerId,\n              kind: params.kind as 'audio' | 'video',\n              rtpParameters: params.rtpParameters,\n            });\n\n            // Update consumerTransports array with the new consumer\n            consumerTransports.push({\n              consumerTransport,\n              serverConsumerTransportId: params.id,\n              producerId: remoteProducerId,\n              consumer,\n              socket_: nsock,\n            });\n\n            updateConsumerTransports(consumerTransports);\n\n            // Extract track from the consumer\n            const { track } = consumer;\n\n            // Emit 'consumer-resume' event to signal consumer resumption\n            nsock.emit(\n              'consumer-resume',\n              { serverConsumerId: params.serverConsumerId },\n              async ({ resumed }: any) => {\n                if (resumed) {\n                  // Consumer resumed and ready to be used\n                  try {\n                    await consumerResume({\n                      track,\n                      kind: params.kind,\n                      remoteProducerId,\n                      params,\n                      parameters,\n                      nsock,\n                    });\n                  } catch (error) {\n                    // Handle error\n                    console.log('consumerResume error', error);\n                  }\n                }\n              },\n            );\n          } catch (error) {\n            // Handle error\n            console.log('consume error', error);\n            return;\n          }\n        },\n      );\n    } catch (error) {\n      // Handle error\n      console.log('connectRecvTransport error', error);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Participant,\n  Stream,\n  OnScreenChangesType,\n  ReorderStreamsType,\n  ChangeVidsType,\n  OnScreenChangesParameters,\n  ReorderStreamsParameters,\n  ChangeVidsParameters,\n  EventType,\n} from '../@types/types';\nexport interface ReUpdateInterParameters\n  extends OnScreenChangesParameters,\n    ReorderStreamsParameters,\n    ChangeVidsParameters {\n  screenPageLimit: number;\n  itemPageLimit: number;\n  reorderInterval: number;\n  fastReorderInterval: number;\n  eventType: EventType;\n  participants: Participant[];\n  allVideoStreams: (Participant | Stream)[];\n  shared: boolean;\n  shareScreenStarted: boolean;\n  adminNameStream?: string;\n  screenShareNameStream?: string;\n  updateMainWindow: boolean;\n  sortAudioLoudness: boolean;\n  lastReorderTime: number;\n  newLimitedStreams: (Participant | Stream)[];\n  newLimitedStreamsIDs: string[];\n  oldSoundIds: string[];\n  updateUpdateMainWindow: (value: boolean) => void;\n  updateSortAudioLoudness: (value: boolean) => void;\n  updateLastReorderTime: (value: number) => void;\n  updateNewLimitedStreams: (streams: (Participant | Stream)[]) => void;\n  updateNewLimitedStreamsIDs: (ids: string[]) => void;\n  updateOldSoundIds: (ids: string[]) => void;\n\n  // mediasfu functions\n  onScreenChanges: OnScreenChangesType;\n  reorderStreams: ReorderStreamsType;\n  changeVids: ChangeVidsType;\n\n  getUpdatedAllParams: () => ReUpdateInterParameters;\n  [key: string]: any;\n}\n\nexport interface ReUpdateInterOptions {\n  name: string;\n  add?: boolean;\n  force?: boolean;\n  average?: number;\n  parameters: ReUpdateInterParameters;\n}\n\n// Export the type definition for the function\nexport type ReUpdateInterType = (options: ReUpdateInterOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReUpdateInter {\n  /**\n   * Updates the interaction state based on the provided options and parameters.\n   *\n   * @param {ReUpdateInterOptions} options - The options for updating the interaction.\n   * @param {string} options.name - The name of the participant.\n   * @param {boolean} [options.add=false] - Whether to add the participant to the interaction.\n   * @param {boolean} [options.force=false] - Whether to force the update.\n   * @param {number} [options.average=127] - The average value used for determining reorder intervals.\n   * @param {Object} options.parameters - The parameters for updating the interaction.\n   * @param {number} options.parameters.screenPageLimit - The screen page limit.\n   * @param {number} options.parameters.itemPageLimit - The item page limit.\n   * @param {number} options.parameters.reorderInterval - The reorder interval.\n   * @param {number} options.parameters.fastReorderInterval - The fast reorder interval.\n   * @param {string} options.parameters.eventType - The type of event.\n   * @param {Array} options.parameters.participants - The list of participants.\n   * @param {Array} options.parameters.allVideoStreams - The list of all video streams.\n   * @param {boolean} options.parameters.shared - Whether the screen is shared.\n   * @param {boolean} options.parameters.shareScreenStarted - Whether screen sharing has started.\n   * @param {string} options.parameters.adminNameStream - The admin name stream.\n   * @param {string} options.parameters.screenShareNameStream - The screen share name stream.\n   * @param {boolean} options.parameters.updateMainWindow - Whether to update the main window.\n   * @param {boolean} options.parameters.sortAudioLoudness - Whether to sort audio by loudness.\n   * @param {number} options.parameters.lastReorderTime - The last reorder time.\n   * @param {Array} options.parameters.newLimitedStreams - The list of new limited streams.\n   * @param {Array} options.parameters.newLimitedStreamsIDs - The list of new limited stream IDs.\n   * @param {Array} options.parameters.oldSoundIds - The list of old sound IDs.\n   * @param {Function} options.parameters.updateUpdateMainWindow - Function to update the main window.\n   * @param {Function} options.parameters.updateSortAudioLoudness - Function to update the audio loudness sorting.\n   * @param {Function} options.parameters.updateLastReorderTime - Function to update the last reorder time.\n   * @param {Function} options.parameters.updateNewLimitedStreams - Function to update the new limited streams.\n   * @param {Function} options.parameters.updateNewLimitedStreamsIDs - Function to update the new limited stream IDs.\n   * @param {Function} options.parameters.updateOldSoundIds - Function to update the old sound IDs.\n   * @param {Function} options.parameters.onScreenChanges - Function to handle screen changes.\n   * @param {Function} options.parameters.reorderStreams - Function to reorder streams.\n   * @param {Function} options.parameters.changeVids - Function to change videos.\n   *\n   * @returns {Promise<void>} A promise that resolves when the interaction update is complete.\n   */\n\n  reUpdateInter = async ({\n    name,\n    add = false,\n    force = false,\n    average = 127,\n    parameters,\n  }: ReUpdateInterOptions): Promise<void> => {\n    let {\n      screenPageLimit,\n      itemPageLimit,\n      reorderInterval,\n      fastReorderInterval,\n      eventType,\n      participants,\n      allVideoStreams,\n      shared,\n      shareScreenStarted,\n      adminNameStream,\n      screenShareNameStream,\n      updateMainWindow,\n      sortAudioLoudness,\n      lastReorderTime,\n      newLimitedStreams,\n      newLimitedStreamsIDs,\n      oldSoundIds,\n      updateUpdateMainWindow,\n      updateSortAudioLoudness,\n      updateLastReorderTime,\n      updateNewLimitedStreams,\n      updateNewLimitedStreamsIDs,\n      updateOldSoundIds,\n      onScreenChanges,\n      reorderStreams,\n      changeVids,\n    } = parameters;\n\n    if (eventType == 'broadcast' || eventType == 'chat') {\n      return;\n    }\n\n    let refLimit = screenPageLimit - 1;\n\n    if (shareScreenStarted || shared) {\n      // Do something when screen is shared or screen share is started\n    } else {\n      refLimit = itemPageLimit - 1;\n\n      if (add) {\n        const currentTime = Date.now();\n        if (\n          (currentTime - lastReorderTime >= reorderInterval && average > 128.5) ||\n          (average > 130 && currentTime - lastReorderTime >= fastReorderInterval)\n        ) {\n          lastReorderTime = currentTime;\n          sortAudioLoudness = true;\n          if (eventType == 'conference') {\n            await onScreenChanges({ changed: true, parameters });\n          } else {\n            await reorderStreams({ add: false, screenChanged: true, parameters });\n          }\n          sortAudioLoudness = false;\n\n          updateSortAudioLoudness(sortAudioLoudness);\n          updateUpdateMainWindow(updateMainWindow);\n          updateLastReorderTime(lastReorderTime);\n\n          return;\n        }\n      }\n    }\n\n    let videoID: string | null = null;\n    if (shareScreenStarted || shared) {\n      if (add) {\n        const participant = participants.find((p) => p.name === name);\n        videoID = participant?.videoID ?? null;\n\n        if (!videoID) {\n          return;\n        }\n\n        if (!newLimitedStreamsIDs.includes(videoID)) {\n          //first check length of newLimitedStreams to not exceed refLimit, if so remove oldSoundID from newLimitedStreams\n          if (newLimitedStreams.length > refLimit) {\n            let oldoldSounds = [...oldSoundIds];\n            for (let i = 0; i < oldSoundIds.length; i++) {\n              if (newLimitedStreams.length > refLimit) {\n                // remove stream from newLimitedStreams\n                if (newLimitedStreams.length < screenPageLimit) {\n                  return;\n                }\n                const currentId = oldSoundIds[i];\n                if (currentId !== screenShareNameStream && currentId !== adminNameStream) {\n                  newLimitedStreams = newLimitedStreams.filter(\n                    (stream) => stream.producerId !== currentId,\n                  );\n                  newLimitedStreamsIDs = newLimitedStreamsIDs.filter((id) => id !== currentId);\n                  oldoldSounds = oldoldSounds.filter((id) => id !== currentId);\n                }\n              }\n            }\n            oldSoundIds = [...oldoldSounds];\n          }\n\n          const stream = allVideoStreams.find((s) => s.producerId === videoID);\n          if (stream && newLimitedStreams.length < screenPageLimit) {\n            newLimitedStreams.push(stream);\n            newLimitedStreamsIDs.push(videoID);\n            if (!oldSoundIds.includes(name)) {\n              oldSoundIds.push(name);\n            }\n            await changeVids({ screenChanged: true, parameters });\n          }\n        }\n      } else {\n        if (!force) {\n          try {\n            // remove stream from newLimitedStreams\n            if (newLimitedStreams.length < screenPageLimit) {\n              return;\n            }\n            newLimitedStreams = newLimitedStreams.filter((stream) => stream.producerId != videoID);\n            newLimitedStreamsIDs = newLimitedStreamsIDs.filter((id) => id !== videoID);\n            oldSoundIds = oldSoundIds.filter((id) => id !== name);\n            await changeVids({ parameters });\n          } catch {\n            /* handle error */\n          }\n        } else {\n          const participant = participants.find((p) => p.name === name);\n          if (participant?.muted) {\n            try {\n              newLimitedStreams = newLimitedStreams.filter(\n                (stream) => stream.producerId !== videoID,\n              );\n              newLimitedStreamsIDs = newLimitedStreamsIDs.filter((id) => id !== videoID);\n              oldSoundIds = oldSoundIds.filter((id) => id !== name);\n              await changeVids({ parameters });\n            } catch {\n              /* handle error */\n            }\n          }\n        }\n      }\n\n      updateNewLimitedStreams(newLimitedStreams);\n      updateNewLimitedStreamsIDs(newLimitedStreamsIDs);\n      updateOldSoundIds(oldSoundIds);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { AudioDecibels } from '../@types/types';\nexport interface UpdateParticipantAudioDecibelsOptions {\n  name: string;\n  averageLoudness: number;\n  audioDecibels: AudioDecibels[];\n  updateAudioDecibels: (audioDecibels: AudioDecibels[]) => void;\n}\n\n// Export the type definition for the function\nexport type UpdateParticipantAudioDecibelsType = (\n  options: UpdateParticipantAudioDecibelsOptions,\n) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateParticipantAudioDecibels {\n  /**\n   * Updates the audio decibels for a participant.\n   *\n   * @param {Object} options - The options for updating participant audio decibels.\n   * @param {string} options.name - The name of the participant.\n   * @param {number} options.averageLoudness - The average loudness of the participant.\n   * @param {Array<{ name: string, averageLoudness: number }>} options.audioDecibels - The array of audio decibels entries.\n   * @param {Function} options.updateAudioDecibels - The function to update the audio decibels array.\n   *\n   * @returns {void}\n   */\n\n  updateParticipantAudioDecibels({\n    name,\n    averageLoudness,\n    audioDecibels,\n    updateAudioDecibels,\n  }: UpdateParticipantAudioDecibelsOptions): void {\n    // Function to update the audioDecibels array\n    // Check if the entry already exists in audioDecibels\n    const existingEntry = audioDecibels.find((entry: any) => entry.name === name);\n\n    if (existingEntry) {\n      // Entry exists, update the averageLoudness\n      existingEntry.averageLoudness = averageLoudness;\n    } else {\n      // Entry doesn't exist, add a new entry to audioDecibels\n      audioDecibels.push({ name, averageLoudness });\n    }\n\n    // Update the audioDecibels array\n    updateAudioDecibels(audioDecibels);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Stream,\n  Participant,\n  ReorderStreamsType,\n  ReorderStreamsParameters,\n  PrepopulateUserMediaParameters,\n  PrepopulateUserMediaType,\n  GetVideosType,\n  RePortType,\n  RePortParameters,\n  EventType,\n} from '../@types/types';\n\nexport interface CloseAndResizeParameters\n  extends ReorderStreamsParameters,\n    PrepopulateUserMediaParameters,\n    RePortParameters {\n  allAudioStreams: (Stream | Participant)[];\n  allVideoStreams: (Stream | Participant)[];\n  activeNames: string[];\n  participants: Participant[];\n  streamNames: Stream[];\n  recordingDisplayType: 'video' | 'media' | 'all';\n  recordingVideoOptimized: boolean;\n  adminIDStream?: string;\n  newLimitedStreams: (Stream | Participant)[];\n  newLimitedStreamsIDs: string[];\n  oldAllStreams: (Stream | Participant)[];\n  shareScreenStarted: boolean;\n  shared: boolean;\n  meetingDisplayType: string;\n  defer_receive: boolean;\n  lock_screen: boolean;\n  firstAll: boolean;\n  first_round: boolean;\n  gotAllVids: boolean;\n  eventType: EventType;\n  hostLabel: string;\n  shareEnded: boolean;\n  updateMainWindow: boolean;\n  updateActiveNames: (activeNames: string[]) => void;\n  updateAllAudioStreams: (allAudioStreams: (Stream | Participant)[]) => void;\n  updateShareScreenStarted: (shareScreenStarted: boolean) => void;\n  updateUpdateMainWindow: (updateMainWindow: boolean) => void;\n  updateNewLimitedStreams: (newLimitedStreams: (Stream | Participant)[]) => void;\n  updateOldAllStreams: (oldAllStreams: (Stream | Participant)[]) => void;\n  updateDefer_receive: (defer_receive: boolean) => void;\n  updateMainHeightWidth: (heightWidth: number) => void;\n  updateShareEnded: (shareEnded: boolean) => void;\n  updateLock_screen: (lock_screen: boolean) => void;\n  updateFirstAll: (firstAll: boolean) => void;\n  updateFirst_round: (first_round: boolean) => void;\n\n  // mediasfu functions\n  reorderStreams: ReorderStreamsType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  getVideos: GetVideosType;\n  rePort: RePortType;\n  getUpdatedAllParams: () => CloseAndResizeParameters;\n  [key: string]: any;\n}\n\nexport interface CloseAndResizeOptions {\n  producerId: string;\n  kind: string;\n  parameters: CloseAndResizeParameters;\n}\n\n// Export the type definition for the function\nexport type CloseAndResizeType = (options: CloseAndResizeOptions) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class CloseAndResize {\n  /**\n   * Closes and resizes the video and audio elements based on the provided options.\n   *\n   * @param {CloseAndResizeOptions} options - The options for closing and resizing.\n   * @param {string} options.producerId - The ID of the producer.\n   * @param {string} options.kind - The kind of media (audio, video, screenshare, or screen).\n   * @param {object} options.parameters - The parameters for the operation.\n   * @param {function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   * @param {Array} options.parameters.allAudioStreams - Array of all audio streams.\n   * @param {Array} options.parameters.allVideoStreams - Array of all video streams.\n   * @param {Array} options.parameters.activeNames - Array of active participant names.\n   * @param {Array} options.parameters.participants - Array of participants.\n   * @param {Array} options.parameters.streamNames - Array of stream names.\n   * @param {string} options.parameters.recordingDisplayType - Type of recording display.\n   * @param {boolean} options.parameters.recordingVideoOptimized - Whether recording is video optimized.\n   * @param {string} options.parameters.adminIDStream - ID of the admin stream.\n   * @param {Array} options.parameters.newLimitedStreams - Array of new limited streams.\n   * @param {Array} options.parameters.newLimitedStreamsIDs - Array of new limited stream IDs.\n   * @param {Array} options.parameters.oldAllStreams - Array of old all streams.\n   * @param {boolean} options.parameters.shareScreenStarted - Whether screen sharing has started.\n   * @param {boolean} options.parameters.shared - Whether sharing is active.\n   * @param {string} options.parameters.meetingDisplayType - Type of meeting display.\n   * @param {boolean} options.parameters.defer_receive - Whether to defer receiving.\n   * @param {boolean} options.parameters.lock_screen - Whether the screen is locked.\n   * @param {boolean} options.parameters.firstAll - Whether it is the first all.\n   * @param {boolean} options.parameters.first_round - Whether it is the first round.\n   * @param {boolean} options.parameters.gotAllVids - Whether all videos are received.\n   * @param {string} options.parameters.eventType - Type of event.\n   * @param {string} options.parameters.hostLabel - Label of the host.\n   * @param {boolean} options.parameters.shareEnded - Whether sharing has ended.\n   * @param {boolean} options.parameters.updateMainWindow - Whether to update the main window.\n   * @param {function} options.parameters.updateActiveNames - Function to update active names.\n   * @param {function} options.parameters.updateAllAudioStreams - Function to update all audio streams.\n   * @param {function} options.parameters.updateAllVideoStreams - Function to update all video streams.\n   * @param {function} options.parameters.updateShareScreenStarted - Function to update share screen started status.\n   * @param {function} options.parameters.updateUpdateMainWindow - Function to update main window status.\n   * @param {function} options.parameters.updateNewLimitedStreams - Function to update new limited streams.\n   * @param {function} options.parameters.updateOldAllStreams - Function to update old all streams.\n   * @param {function} options.parameters.updateDefer_receive - Function to update defer receive status.\n   * @param {function} options.parameters.updateMainHeightWidth - Function to update main height and width.\n   * @param {function} options.parameters.updateShareEnded - Function to update share ended status.\n   * @param {function} options.parameters.updateLock_screen - Function to update lock screen status.\n   * @param {function} options.parameters.updateFirstAll - Function to update first all status.\n   * @param {function} options.parameters.updateFirst_round - Function to update first round status.\n   * @param {function} options.parameters.reorderStreams - Function to reorder streams.\n   * @param {function} options.parameters.prepopulateUserMedia - Function to prepopulate user media.\n   * @param {function} options.parameters.getVideos - Function to get videos.\n   * @param {function} options.parameters.rePort - Function to report.\n   *\n   * @returns {Promise<void>} A promise that resolves when the operation is complete.\n   */\n\n  closeAndResize = async ({\n    producerId,\n    kind,\n    parameters,\n  }: CloseAndResizeOptions): Promise<void> => {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      allAudioStreams,\n      allVideoStreams,\n      activeNames,\n      participants,\n      streamNames,\n      recordingDisplayType,\n      recordingVideoOptimized,\n      adminIDStream,\n      newLimitedStreams,\n      newLimitedStreamsIDs,\n      oldAllStreams,\n      shareScreenStarted,\n      shared,\n      meetingDisplayType,\n      defer_receive,\n      lock_screen,\n      firstAll,\n      first_round,\n      gotAllVids,\n      eventType,\n\n      hostLabel,\n      shareEnded,\n      updateMainWindow,\n      updateActiveNames,\n      updateAllAudioStreams,\n      updateAllVideoStreams,\n\n      updateShareScreenStarted,\n      updateUpdateMainWindow,\n      updateNewLimitedStreams,\n      updateOldAllStreams,\n      updateDefer_receive,\n      updateMainHeightWidth,\n      updateShareEnded,\n      updateLock_screen,\n      updateFirstAll,\n      updateFirst_round,\n\n      //mediasfu functions\n      reorderStreams,\n      prepopulateUserMedia,\n      getVideos,\n      rePort,\n    } = parameters;\n\n    //function to close and resize the video and audio elements\n\n    let participant: Participant | undefined;\n\n    if (kind === 'audio') {\n      //stop the audio by removing the miniAudio with id = producerId\n\n      //remove the audio from the allAudioStreams array\n      allAudioStreams = allAudioStreams.filter(function (audioStream) {\n        return audioStream.producerId !== producerId;\n      });\n\n      updateAllAudioStreams(allAudioStreams);\n\n      if (recordingDisplayType == 'video' && recordingVideoOptimized == true) {\n        // do nothing\n      } else {\n        //get the name of the participant with the producerId\n        participant = participants.find((obj) => obj.audioID === producerId);\n\n        if (participant) {\n          //check if the participants videoID is not null or \"\"\n          if (participant.videoID !== null && participant.videoID !== '') {\n            // do nothing\n          } else {\n            //remove the participant from the activeNames array\n            activeNames = activeNames.filter(function (name) {\n              return name !== participant?.name;\n            });\n            updateActiveNames(activeNames);\n          }\n        }\n      }\n\n      let checker = false;\n      let alt_checker = false;\n\n      if (meetingDisplayType == 'video' && participant) {\n        checker =\n          participant[0].videoID != null &&\n          participant[0].videoID != '' &&\n          participant[0].videoID != undefined;\n      } else {\n        checker = true;\n        alt_checker = true;\n      }\n\n      if (checker) {\n        if (shareScreenStarted || shared) {\n          if (!alt_checker) {\n            await reorderStreams({ parameters });\n          }\n        } else {\n          if (alt_checker && meetingDisplayType != 'video') {\n            await reorderStreams({ add: false, screenChanged: true, parameters });\n          }\n        }\n      }\n    } else if (kind === 'video') {\n      //update the video elements by removing the miniVideo with id = producerId\n      //remove the video from the allVideoStreams array\n\n      //check if producerId == adminidstream\n      if (producerId == adminIDStream) {\n        updateMainWindow = true;\n        updateUpdateMainWindow(updateMainWindow);\n      }\n\n      try {\n        allVideoStreams = allVideoStreams.filter(function (videoStream) {\n          return videoStream.producerId !== producerId;\n        });\n\n        updateAllVideoStreams(allVideoStreams);\n\n        try {\n          //try remove it from oldVideoStreams\n          oldAllStreams = oldAllStreams.filter(function (videoStream) {\n            return videoStream.producerId !== producerId;\n          });\n\n          updateOldAllStreams(oldAllStreams);\n        } catch {\n          /* handle error */\n        }\n\n        try {\n          //try remove it from newLimitedStreams\n          newLimitedStreams = newLimitedStreams.filter(function (videoStream) {\n            return videoStream.producerId !== producerId;\n          });\n\n          updateNewLimitedStreams(newLimitedStreams);\n        } catch {\n          /* handle error */\n        }\n      } catch (error) {\n        try {\n          //try remove it from oldVideoStreams\n          oldAllStreams = oldAllStreams.filter(function (videoStream) {\n            return videoStream.producerId !== producerId;\n          });\n          updateOldAllStreams(oldAllStreams);\n        } catch {\n          /* handle error */\n        }\n      }\n\n      try {\n        //remove the participant from activeNames\n        activeNames = activeNames.filter(function (name) {\n          //get the participant with the producerId\n          let participant = streamNames.find((obj) => obj.producerId === producerId);\n\n          return name !== (participant?.name ?? '');\n        });\n\n        updateActiveNames(activeNames);\n      } catch {\n        /* handle error */\n      }\n\n      if (lock_screen) {\n        defer_receive = true;\n        // check if the video is the one being displayed (i.e. (newLimitedStreamsIDs))\n        if (newLimitedStreamsIDs.includes(producerId)) {\n          await prepopulateUserMedia({ name: hostLabel, parameters });\n          await reorderStreams({ add: false, screenChanged: true, parameters });\n        }\n      } else {\n        await prepopulateUserMedia({ name: hostLabel, parameters });\n        await reorderStreams({ add: false, screenChanged: true, parameters });\n      }\n    } else if (kind === 'screenshare' || kind === 'screen') {\n      //update the video elements by removing the mainVideo with id = producerId\n      updateMainWindow = true;\n\n      //screenshare stuff\n      shareScreenStarted = false;\n      shareEnded = true;\n\n      lock_screen = false;\n      firstAll = false;\n      first_round = false;\n\n      updateUpdateMainWindow(updateMainWindow);\n      updateShareScreenStarted(shareScreenStarted);\n      updateShareEnded(shareEnded);\n      updateLock_screen(lock_screen);\n      updateFirstAll(firstAll);\n      updateFirst_round(first_round);\n\n      if (!gotAllVids || defer_receive) {\n        defer_receive = false;\n        updateDefer_receive(defer_receive);\n        await getVideos({\n          participants,\n          allVideoStreams,\n          oldAllStreams,\n          updateAllVideoStreams,\n          updateOldAllStreams,\n        });\n        await rePort({ parameters });\n      }\n\n      if (eventType == 'conference') {\n        updateMainHeightWidth(0);\n      }\n\n      await prepopulateUserMedia({ name: hostLabel, parameters });\n      await reorderStreams({ add: false, screenChanged: true, parameters });\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { EventType } from '../@types/types';\n\nexport interface AutoAdjustOptions {\n  n: number;\n  eventType: EventType;\n  shareScreenStarted: boolean;\n  shared: boolean;\n}\n\nexport type AutoAdjustType = (options: AutoAdjustOptions) => Promise<number[]>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AutoAdjust {\n  /**\n   * Adjusts values based on the provided options.\n   *\n   * @param {AutoAdjustOptions} options - The options for auto adjustment.\n   * @param {number} options.n - The number of participants.\n   * @param {string} options.eventType - The type of event (e.g., 'broadcast', 'chat', 'conference').\n   * @param {boolean} options.shareScreenStarted - Indicates if screen sharing has started.\n   * @param {boolean} options.shared - Indicates if something is shared.\n   *\n   * @returns {Promise<number[]>} A promise that resolves to an array containing the adjusted values.\n   */\n  async autoAdjust({\n    n,\n    eventType,\n    shareScreenStarted,\n    shared,\n  }: AutoAdjustOptions): Promise<number[]> {\n    // Default values\n    let val1 = 6;\n    let val2 = 12 - val1;\n\n    // Calculate percentage values\n\n    // Adjust values based on eventType and other conditions\n    if (eventType === 'broadcast') {\n      val1 = 0;\n      val2 = 12 - val1;\n    } else if (\n      eventType === 'chat' ||\n      (eventType === 'conference' && !(shareScreenStarted || shared))\n    ) {\n      val1 = 12;\n      val2 = 12 - val1;\n    } else {\n      if (shareScreenStarted || shared) {\n        val2 = 10;\n        val1 = 12 - val2;\n      } else {\n        // Adjust values based on the number of participants (n)\n        if (n === 0) {\n          val1 = 1;\n          val2 = 12 - val1;\n        } else if (n >= 1 && n < 4) {\n          val1 = 4;\n          val2 = 12 - val1;\n        } else if (n >= 4 && n < 6) {\n          val1 = 6;\n          val2 = 12 - val1;\n        } else if (n >= 6 && n < 9) {\n          val1 = 6;\n          val2 = 12 - val1;\n        } else if (n >= 9 && n < 12) {\n          val1 = 6;\n          val2 = 12 - val1;\n        } else if (n >= 12 && n < 20) {\n          val1 = 8;\n          val2 = 12 - val1;\n        } else if (n >= 20 && n < 50) {\n          val1 = 8;\n          val2 = 12 - val1;\n        } else {\n          val1 = 10;\n          val2 = 12 - val1;\n        }\n      }\n    }\n\n    // Return an array with adjusted values\n    return [val1, val2];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ClickVideo, ClickVideoParameters } from '../methods/stream-methods/click-video.service';\nimport {\n  ShowAlert,\n  VidCons,\n  RequestPermissionCameraType,\n  StreamSuccessVideoType,\n  SleepType,\n  StreamSuccessVideoParameters,\n} from '../@types/types';\n\nexport interface SwitchUserVideoAltParameters\n  extends StreamSuccessVideoParameters,\n    ClickVideoParameters {\n  audioOnlyRoom: boolean;\n  frameRate: number;\n  vidCons: VidCons;\n  showAlert?: ShowAlert;\n  hasCameraPermission: boolean;\n  updateVideoSwitching: (state: boolean) => void;\n  updateCurrentFacingMode: (mode: string) => void;\n\n  // mediasfu functions\n  requestPermissionCamera: RequestPermissionCameraType;\n  streamSuccessVideo: StreamSuccessVideoType;\n  sleep: SleepType;\n  checkMediaPermission: boolean;\n  getUpdatedAllParams: () => SwitchUserVideoAltParameters;\n\n  [key: string]: any;\n}\n\nexport interface SwitchUserVideoAltOptions {\n  videoPreference: string;\n  checkoff: boolean;\n  parameters: SwitchUserVideoAltParameters;\n}\n\n// Export the type definition for the function\nexport type SwitchUserVideoAltType = (options: SwitchUserVideoAltOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SwitchUserVideoAlt {\n  constructor(private ClickVideoService: ClickVideo) {}\n\n  /**\n   * Switches the user's video stream based on the provided video preference and other parameters.\n   *\n   * @param {Object} options - The options for switching the user's video.\n   * @param {string} options.videoPreference - The preferred video facing mode (e.g., \"user\" or \"environment\").\n   * @param {boolean} options.checkoff - A flag indicating whether to turn off the video before switching.\n   * @param {SwitchUserVideoAltOptions} options.parameters - The parameters required for switching the video.\n   *\n   * @returns {Promise<void>} A promise that resolves when the video switching is complete.\n   *\n   * @throws Will throw an error if there is an issue with switching the video.\n   */\n\n  async switchUserVideoAlt({\n    videoPreference,\n    checkoff,\n    parameters,\n  }: SwitchUserVideoAltOptions): Promise<void> {\n    let { getUpdatedAllParams } = parameters;\n    let parameters_ = getUpdatedAllParams();\n\n    let {\n      audioOnlyRoom,\n      frameRate,\n      vidCons,\n      showAlert,\n      hasCameraPermission,\n      updateVideoSwitching,\n      updateCurrentFacingMode,\n\n      // mediasfu functions\n      requestPermissionCamera,\n      streamSuccessVideo,\n      sleep,\n      checkMediaPermission,\n    } = parameters;\n\n    let { currentFacingMode, prevFacingMode } = parameters_;\n\n    try {\n      // Check if it's an audio-only room\n      if (audioOnlyRoom) {\n        showAlert?.({\n          message: 'You cannot turn on your camera in an audio-only event.',\n          type: 'danger',\n          duration: 3000,\n        });\n\n        return;\n      }\n\n      // If checkoff is not true, trigger a click on the video button to turn off the video\n      if (!checkoff) {\n        await this.ClickVideoService.clickVideo({ parameters });\n        updateVideoSwitching(true);\n        await sleep({ ms: 500 });\n        updateVideoSwitching(false);\n      }\n\n      // Check camera permission\n      if (!hasCameraPermission) {\n        if (checkMediaPermission) {\n          let statusCamera = await requestPermissionCamera();\n\n          if (statusCamera !== 'granted') {\n            showAlert?.({\n              message:\n                'Allow access to your camera or check if your camera is not being used by another application.',\n              type: 'danger',\n              duration: 3000,\n            });\n\n            return;\n          }\n        }\n      }\n\n      // Enumerate video devices\n      const videoDevices = await navigator.mediaDevices.enumerateDevices();\n\n      // Define media constraints based on preferences and options\n      let mediaConstraints: any = {};\n\n      if (vidCons && vidCons.width && vidCons.height) {\n        mediaConstraints = {\n          video: {\n            facingMode: { exact: videoPreference },\n            ...vidCons,\n            frameRate: { ideal: frameRate },\n          },\n          audio: false,\n        };\n      } else {\n        mediaConstraints = {\n          video: {\n            facingMode: { exact: videoPreference },\n            frameRate: { ideal: frameRate },\n          },\n          audio: false,\n        };\n      }\n\n      // Get user media with the defined constraints\n      await navigator.mediaDevices\n        .getUserMedia(mediaConstraints)\n        .then(async (stream: MediaStream) => {\n          await streamSuccessVideo({ stream, parameters });\n        })\n        .catch(async () => {\n          let videoDevicesFront = [];\n\n          // Filter video devices based on the preferred facing mode\n          if (videoPreference === 'user') {\n            videoDevicesFront = videoDevices.filter(\n              (device: MediaDeviceInfo) =>\n                device.label.includes('front') && device.kind === 'videoinput',\n            );\n          } else {\n            videoDevicesFront = videoDevices.filter(\n              (device: MediaDeviceInfo) =>\n                device.label.includes('back') && device.kind === 'videoinput',\n            );\n          }\n\n          if (videoDevicesFront.length > 0) {\n            videoDevicesFront.forEach((device: MediaDeviceInfo) => {\n              if (device.kind === 'videoinput') {\n                let videoDeviceId = device.deviceId;\n\n                // Update media constraints with the specific video device\n                if (vidCons && vidCons.width && vidCons.height) {\n                  mediaConstraints = {\n                    video: {\n                      deviceId: { exact: videoDeviceId },\n                      ...vidCons,\n                      frameRate: { ideal: frameRate },\n                    },\n                    audio: false,\n                  };\n                } else {\n                  mediaConstraints = {\n                    video: {\n                      deviceId: { exact: videoDeviceId },\n                      frameRate: { ideal: frameRate },\n                    },\n                    audio: false,\n                  };\n                }\n\n                // Try to get user media with the new constraints\n                navigator.mediaDevices\n                  .getUserMedia(mediaConstraints)\n                  .then(async (stream: MediaStream) => {\n                    await streamSuccessVideo({ stream, parameters });\n                  })\n                  .catch(() => {\n                    // If the current video device is the last one in the list, show the error; otherwise, try the next device\n                    if (\n                      videoDeviceId === videoDevicesFront[videoDevicesFront.length - 1].deviceId\n                    ) {\n                      currentFacingMode = prevFacingMode;\n                      updateCurrentFacingMode(currentFacingMode);\n\n                      showAlert?.({\n                        message:\n                          'Error switching; not accessible, might need to turn off your video and turn it back on after switching.',\n                        type: 'danger',\n                        duration: 3000,\n                      });\n                    }\n                  });\n              }\n            });\n          } else {\n            // Show error if no compatible video devices are found\n            currentFacingMode = prevFacingMode;\n            updateCurrentFacingMode(currentFacingMode);\n\n            showAlert?.({\n              message:\n                'Error switching; not accessible, might need to turn off your video and turn it back on after switching.',\n              type: 'danger',\n              duration: 3000,\n            });\n          }\n        });\n    } catch (error) {\n      // Handle any unexpected errors\n      const videoDevices = await navigator.mediaDevices.enumerateDevices();\n      let videoDevicesFront = [];\n      if (videoPreference === 'user') {\n        videoDevicesFront = videoDevices.filter(\n          (device: MediaDeviceInfo) =>\n            device.label.includes('front') && device.kind === 'videoinput',\n        );\n      } else {\n        videoDevicesFront = videoDevices.filter(\n          (device: MediaDeviceInfo) =>\n            device.label.includes('back') && device.kind === 'videoinput',\n        );\n      }\n\n      let mediaConstraints: any = {};\n\n      if (videoDevicesFront.length > 0) {\n        videoDevicesFront.forEach((device: MediaDeviceInfo) => {\n          if (device.kind === 'videoinput') {\n            let videoDeviceId = device.deviceId;\n\n            if (vidCons && vidCons.width && vidCons.height) {\n              mediaConstraints = {\n                video: {\n                  deviceId: { exact: videoDeviceId },\n                  ...vidCons,\n                  frameRate: { ideal: frameRate },\n                },\n                audio: false,\n              };\n            } else {\n              mediaConstraints = {\n                video: {\n                  deviceId: { exact: videoDeviceId },\n                  frameRate: { ideal: frameRate },\n                },\n                audio: false,\n              };\n            }\n\n            navigator.mediaDevices\n              .getUserMedia(mediaConstraints)\n              .then(async (stream: MediaStream) => {\n                await streamSuccessVideo({ stream, parameters });\n              })\n              .catch(() => {\n                // If current video device is the last one in the list, show the error; otherwise, try next device\n                if (videoDeviceId === videoDevicesFront[videoDevicesFront.length - 1].deviceId) {\n                  currentFacingMode = prevFacingMode;\n                  updateCurrentFacingMode(currentFacingMode);\n\n                  showAlert?.({\n                    message:\n                      'Error switching; not accessible, might need to turn off your video and turn it back on after switching.',\n                    type: 'danger',\n                    duration: 3000,\n                  });\n                }\n              });\n          }\n        });\n      } else {\n        currentFacingMode = prevFacingMode;\n        updateCurrentFacingMode(currentFacingMode);\n\n        showAlert?.({\n          message:\n            'Error switching; not accessible, might need to turn off your video and turn it back on after switching.',\n          type: 'danger',\n          duration: 3000,\n        });\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ClickVideo, ClickVideoParameters } from '../methods/stream-methods/click-video.service';\nimport {\n  ShowAlert,\n  VidCons,\n  RequestPermissionCameraType,\n  StreamSuccessVideoType,\n  SleepType,\n  StreamSuccessVideoParameters,\n} from '../@types/types';\n\nexport interface SwitchUserVideoParameters\n  extends StreamSuccessVideoParameters,\n    ClickVideoParameters {\n  audioOnlyRoom: boolean;\n  frameRate: number;\n  vidCons: VidCons;\n  prevVideoInputDevice: string;\n  userDefaultVideoInputDevice: string;\n  showAlert?: ShowAlert;\n  hasCameraPermission: boolean;\n  updateVideoSwitching: (state: boolean) => void;\n  updateUserDefaultVideoInputDevice: (deviceId: string) => void;\n\n  // media functions\n  requestPermissionCamera: RequestPermissionCameraType;\n  streamSuccessVideo: StreamSuccessVideoType;\n  sleep: SleepType;\n  checkMediaPermission: boolean;\n\n  getUpdatedAllParams: () => SwitchUserVideoParameters;\n  [key: string]: any;\n}\n\nexport interface SwitchUserVideoOptions {\n  videoPreference: string;\n  checkoff: boolean;\n  parameters: SwitchUserVideoParameters;\n}\n\n// Export the type definition for the function\nexport type SwitchUserVideoType = (options: SwitchUserVideoOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SwitchUserVideo {\n  constructor(private ClickVideoService: ClickVideo) {}\n\n  /**\n   * Switches the user's video input device based on the provided options.\n   *\n   * @param {SwitchUserVideoOptions} options - The options for switching the user's video.\n   * @param {string} options.videoPreference - The preferred video input device ID.\n   * @param {boolean} options.checkoff - Flag indicating whether to turn off the video.\n   * @param {Object} options.parameters - Additional parameters required for switching the video.\n   * @param {boolean} options.parameters.audioOnlyRoom - Indicates if the room is audio-only.\n   * @param {number} options.parameters.frameRate - The desired frame rate for the video.\n   * @param {Object} options.parameters.vidCons - Video constraints such as width and height.\n   * @param {string} options.parameters.prevVideoInputDevice - The previous video input device ID.\n   * @param {Function} options.parameters.showAlert - Function to show alerts to the user.\n   * @param {boolean} options.parameters.hasCameraPermission - Indicates if the user has camera permission.\n   * @param {Function} options.parameters.updateVideoSwitching - Function to update video switching state.\n   * @param {Function} options.parameters.updateUserDefaultVideoInputDevice - Function to update the default video input device.\n   * @param {Function} options.parameters.requestPermissionCamera - Function to request camera permission.\n   * @param {Function} options.parameters.streamSuccessVideo - Function to handle successful video stream.\n   * @param {Function} options.parameters.sleep - Function to pause execution for a specified duration.\n   * @param {Function} options.parameters.checkMediaPermission - Function to check media permissions.\n   *\n   * @returns {Promise<void>} A promise that resolves when the video input device has been switched.\n   *\n   * @throws Will throw an error if switching the video input device fails.\n   */\n  switchUserVideo = async ({\n    videoPreference,\n    checkoff,\n    parameters,\n  }: {\n    videoPreference: string;\n    checkoff: boolean;\n    parameters: any;\n  }): Promise<void> => {\n    let {\n      audioOnlyRoom,\n      frameRate,\n      vidCons,\n      prevVideoInputDevice,\n      userDefaultVideoInputDevice,\n      showAlert,\n      hasCameraPermission,\n      updateVideoSwitching,\n      updateUserDefaultVideoInputDevice,\n\n      // mediasfu functions\n      requestPermissionCamera,\n      streamSuccessVideo,\n      sleep,\n      checkMediaPermission,\n    } = parameters;\n\n    try {\n      // Check if it's an audio-only room\n      if (audioOnlyRoom) {\n        showAlert?.({\n          message: 'You cannot turn on your camera in an audio-only event.',\n          type: 'danger',\n          duration: 3000,\n        });\n\n        return;\n      }\n\n      // If checkoff is not true, trigger a click on the video button to turn off the video\n      if (!checkoff) {\n        await this.ClickVideoService.clickVideo({ parameters });\n        await updateVideoSwitching(true);\n        await sleep(500);\n        await updateVideoSwitching(false);\n      }\n\n      // Check camera permission\n      if (!hasCameraPermission) {\n        if (checkMediaPermission) {\n          let statusCamera = await requestPermissionCamera();\n          if (statusCamera !== 'granted') {\n            showAlert?.({\n              message:\n                'Allow access to your camera or check if your camera is not being used by another application.',\n              type: 'danger',\n              duration: 3000,\n            });\n\n            return;\n          }\n        }\n      }\n\n      let mediaConstraints: any = {};\n\n      if (vidCons && vidCons.width && vidCons.height) {\n        mediaConstraints = {\n          video: {\n            deviceId: { exact: videoPreference },\n            ...vidCons,\n            frameRate: { ideal: frameRate },\n          },\n          audio: false,\n        };\n      } else {\n        mediaConstraints = {\n          video: {\n            deviceId: { exact: videoPreference },\n            frameRate: { ideal: frameRate },\n          },\n          audio: false,\n        };\n      }\n\n      // Get user media with the defined constraints\n      await navigator.mediaDevices\n        .getUserMedia(mediaConstraints)\n        .then(async (stream: MediaStream) => {\n          await streamSuccessVideo({ stream, parameters });\n        })\n        .catch(async () => {\n          // Handle errors and revert to the previous video input device\n          userDefaultVideoInputDevice = prevVideoInputDevice;\n          updateUserDefaultVideoInputDevice(userDefaultVideoInputDevice);\n\n          showAlert?.({\n            message:\n              'Error switching; not accessible, might need to turn off your video and turn it back on after switching.',\n            type: 'danger',\n            duration: 3000,\n          });\n        });\n    } catch (error) {\n      // Handle unexpected errors and revert to the previous video input device\n      userDefaultVideoInputDevice = prevVideoInputDevice;\n      updateUserDefaultVideoInputDevice(userDefaultVideoInputDevice);\n\n      showAlert?.({\n        message:\n          'Error switching; not accessible, might need to turn off your video and turn it back on after switching.',\n        type: 'danger',\n        duration: 3000,\n      });\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ShowAlert,\n  StreamSuccessAudioSwitchType,\n  RequestPermissionAudioType,\n  StreamSuccessAudioSwitchParameters,\n} from '../@types/types';\n\nexport interface SwitchUserAudioParameters extends StreamSuccessAudioSwitchParameters {\n  userDefaultAudioInputDevice: string;\n  prevAudioInputDevice: string;\n  showAlert?: ShowAlert;\n  hasAudioPermission: boolean;\n  updateUserDefaultAudioInputDevice: (deviceId: string) => void;\n\n  // mediasfu functions\n  streamSuccessAudioSwitch: StreamSuccessAudioSwitchType;\n  requestPermissionAudio: RequestPermissionAudioType;\n  checkMediaPermission: boolean;\n\n  [key: string]: any;\n}\n\nexport interface SwitchUserAudioOptions {\n  audioPreference: string;\n  parameters: SwitchUserAudioParameters;\n}\n\n// Export the type definition for the function\nexport type SwitchUserAudioType = (options: SwitchUserAudioOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SwitchUserAudio {\n  /**\n   * Switches the user's audio input device based on the provided audio preference.\n   *\n   * @param {SwitchUserAudioOptions} options - The options for switching the user's audio input device.\n   * @param {string} options.audioPreference - The preferred audio input device ID.\n   * @param {Object} options.parameters - Additional parameters required for switching the audio input device.\n   * @param {string} options.parameters.prevAudioInputDevice - The previous audio input device ID.\n   * @param {Function} options.parameters.showAlert - Function to show alert messages.\n   * @param {boolean} options.parameters.hasAudioPermission - Flag indicating if the user has granted audio permission.\n   * @param {Function} options.parameters.updateUserDefaultAudioInputDevice - Function to update the user's default audio input device.\n   * @param {Function} options.parameters.streamSuccessAudioSwitch - Function to handle successful audio stream switch.\n   * @param {Function} options.parameters.requestPermissionAudio - Function to request audio permission from the user.\n   * @param {Function} options.parameters.checkMediaPermission - Function to check if media permission is granted.\n   *\n   * @returns {Promise<void>} A promise that resolves when the audio input device has been successfully switched.\n   *\n   * @throws Will throw an error if the audio input device cannot be accessed or if there is an unexpected error.\n   */\n  async switchUserAudio({ audioPreference, parameters }: SwitchUserAudioOptions): Promise<void> {\n    let {\n      userDefaultAudioInputDevice,\n      prevAudioInputDevice,\n      showAlert,\n      hasAudioPermission,\n      updateUserDefaultAudioInputDevice,\n\n      // media functions\n      streamSuccessAudioSwitch,\n      requestPermissionAudio,\n      checkMediaPermission,\n    } = parameters;\n\n    try {\n      // Check if audio permission is granted\n      if (!hasAudioPermission) {\n        if (checkMediaPermission) {\n          let statusMic = await requestPermissionAudio();\n          if (statusMic !== 'granted') {\n            showAlert?.({\n              message:\n                'Allow access to your microphone or check if your microphone is not being used by another application.',\n              type: 'danger',\n              duration: 3000,\n            });\n\n            return;\n          }\n        }\n      }\n\n      let mediaConstraints: MediaStreamConstraints = {\n        audio: {\n          deviceId: { exact: audioPreference },\n          echoCancellation: false,\n          noiseSuppression: false,\n          autoGainControl: false,\n        },\n        video: false,\n      };\n\n      // Get user media with the defined audio constraints\n      await navigator.mediaDevices\n        .getUserMedia(mediaConstraints)\n        .then(async (stream: MediaStream) => {\n          await streamSuccessAudioSwitch({ stream, parameters });\n        })\n        .catch(() => {\n          // Handle errors and revert to the previous audio input device\n          userDefaultAudioInputDevice = prevAudioInputDevice;\n          updateUserDefaultAudioInputDevice(userDefaultAudioInputDevice);\n\n          showAlert?.({\n            message: 'Error switching; the specified microphone could not be accessed.',\n            type: 'danger',\n            duration: 3000,\n          });\n        });\n    } catch (error) {\n      // Handle unexpected errors and revert to the previous audio input device\n      userDefaultAudioInputDevice = prevAudioInputDevice;\n      updateUserDefaultAudioInputDevice(userDefaultAudioInputDevice);\n\n      showAlert?.({\n        message: 'Error switching; the specified microphone could not be accessed.',\n        type: 'danger',\n        duration: 3000,\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { Message } from '../@types/types';\nexport interface ReceiveRoomMessagesOptions {\n  socket: Socket;\n  roomName: string;\n  updateMessages: (messages: Message[]) => void;\n}\n\n// Export the type definition for the function\nexport type ReceiveRoomMessagesType = (options: ReceiveRoomMessagesOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReceiveRoomMessages {\n  /**\n   * Asynchronously retrieves and updates messages for a specified room from the server.\n   *\n   * @param {object} options - The function parameters.\n   * @param {object} options.parameters - Additional parameters needed for the function.\n   * @param {string} options.parameters.roomName - The name of the room to retrieve messages for.\n   * @param {function} options.parameters.updateMessages - Function to update the messages array.\n   */\n  async receiveRoomMessages({\n    socket,\n    roomName,\n    updateMessages,\n  }: ReceiveRoomMessagesOptions): Promise<void> {\n    try {\n      // Retrieve messages from the server\n      await new Promise<void>((resolve, reject) => {\n        socket.emit('getMessage', { roomName }, async ({ messages_ }: { messages_: Message[] }) => {\n          try {\n            const updatedMessages = messages_;\n            updateMessages(updatedMessages);\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      });\n    } catch (error: any) {\n      // Handle errors if any\n      console.log('Error tuning messages:', error.message);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nexport interface FormatNumberOptions {\n  number: number;\n}\n\n// Export the type definition for the function\nexport type FormatNumberType = (options: FormatNumberOptions) => Promise<string | undefined>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormatNumber {\n  /**\n   * Formats a number into a string representation with appropriate suffixes (K, M, B).\n   *\n   * @param number - The number to format.\n   * @returns A promise that resolves to a formatted string or undefined if the input is falsy.\n   *\n   * @example\n   * ```typescript\n   * formatNumber(500); // \"500\"\n   * formatNumber(1500); // \"1.5K\"\n   * formatNumber(1500000); // \"1.5M\"\n   * formatNumber(1500000000); // \"1.5B\"\n   * ```\n   */\n\n  async formatNumber({ number }: FormatNumberOptions): Promise<string | undefined> {\n    if (number) {\n      if (number < 1e3) {\n        return number.toString();\n      } else if (number < 1e6) {\n        return (number / 1e3).toFixed(1) + 'K';\n      } else if (number < 1e9) {\n        return (number / 1e6).toFixed(1) + 'M';\n      } else if (number < 1e12) {\n        return (number / 1e9).toFixed(1) + 'B';\n      }\n    }\n    // Return undefined for falsy input values\n    return undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JoinConRoom } from '../../producers/producer-emits/join-con-room.service';\nimport { Socket } from 'socket.io-client';\nimport {\n  ReceiveAllPipedTransportsType,\n  ReceiveAllPipedTransportsParameters,\n  CreateDeviceClientType,\n} from '../../@types/types';\nimport { Device, RtpCapabilities } from 'mediasoup-client/lib/types';\n\nexport interface JoinConsumeRoomParameters extends ReceiveAllPipedTransportsParameters {\n  roomName: string;\n  islevel: string;\n  member: string;\n  device: Device | null;\n  updateDevice: (device: Device | null) => void;\n  receiveAllPipedTransports: ReceiveAllPipedTransportsType;\n  createDeviceClient: CreateDeviceClientType;\n\n  // mediasfu functions\n  [key: string]: any;\n}\nexport interface JoinConsumeRoomOptions {\n  remote_sock: Socket;\n  apiToken: string;\n  apiUserName: string;\n  parameters: JoinConsumeRoomParameters;\n}\n\ninterface JoinConsumeRoomResponse {\n  success: boolean;\n  rtpCapabilities?: RtpCapabilities;\n}\n\n// Export the type definition for the function\nexport type JoinConsumeRoomType = (\n  options: JoinConsumeRoomOptions,\n) => Promise<JoinConsumeRoomResponse>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JoinConsumeRoom {\n  constructor(private JoinConRoomService: JoinConRoom) {}\n\n  /**\n   * Joins a consumption room by sending a request to the server and handles the necessary setup.\n   * @param {Object} options - The options object containing necessary variables.\n   * @param {any} options.remote_sock - The remote socket information.\n   * @param {string} options.apiToken - The API token for authentication.\n   * @param {string} options.apiUserName - The API username for authentication.\n   * @param {any} options.parameters - Additional parameters required for the function.\n   * @returns {Promise<any>} - A promise that resolves with data related to the success of joining the room.\n   */\n  joinConsumeRoom = async ({\n    remote_sock,\n    apiToken,\n    apiUserName,\n    parameters,\n  }: JoinConsumeRoomOptions): Promise<JoinConsumeRoomResponse> => {\n    let {\n      roomName,\n      islevel,\n      member,\n      device,\n      updateDevice,\n\n      //Mediasfu functions\n      receiveAllPipedTransports,\n      createDeviceClient,\n    } = parameters;\n\n    try {\n      // Join the consumption room\n      const data: any = await this.JoinConRoomService.joinConRoom({\n        socket: remote_sock,\n        roomName,\n        islevel,\n        member,\n        sec: apiToken,\n        apiUserName,\n      });\n\n      if (data && data.success) {\n        // Setup media device if not already set\n        if (!device) {\n          if (data.rtpCapabilities) {\n            const device_ = await createDeviceClient({\n              rtpCapabilities: data.rtpCapabilities,\n            });\n\n            if (device_) {\n              updateDevice(device_);\n            }\n          }\n        }\n\n        // Receive all piped transports\n        await receiveAllPipedTransports({ nsock: remote_sock, parameters });\n      }\n\n      return data;\n    } catch (error) {\n      console.log('Error in joinConsumeRoom:', error);\n      throw new Error('Failed to join the consumption room or set up necessary components.');\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { SocketManager } from '../sockets/socket-manager.service';\nimport { NewPipeProducer } from './socket-receive-methods/new-pipe-producer.service';\nimport { ProducerClosed } from './socket-receive-methods/producer-closed.service';\nimport { JoinConsumeRoom } from './socket-receive-methods/join-consume-room.service';\nimport { Device } from 'mediasoup-client/lib/types';\nimport {\n  ReorderStreamsParameters,\n  ReorderStreamsType,\n  NewPipeProducerParameters,\n  NewPipeProducerType,\n  ProducerClosedType,\n  ProducerClosedParameters,\n  JoinConsumeRoomType,\n  JoinConsumeRoomParameters,\n  ConsumeSocket,\n} from '../@types/types';\n\nexport interface ConnectIpsParameters\n  extends ReorderStreamsParameters,\n    JoinConsumeRoomParameters,\n    ProducerClosedParameters,\n    NewPipeProducerParameters {\n  device: Device | null;\n  roomRecvIPs: string[];\n  updateRoomRecvIPs: (roomRecvIPs: string[]) => void;\n  updateConsume_sockets: (consume_sockets: ConsumeSocket[]) => void;\n\n  // mediasfu functions\n  reorderStreams: ReorderStreamsType;\n  getUpdatedAllParams: () => ConnectIpsParameters;\n  [key: string]: any;\n}\n\nexport interface ConnectIpsOptions {\n  consume_sockets: ConsumeSocket[];\n  remIP: string[];\n  apiUserName: string;\n  apiKey?: string;\n  apiToken: string;\n  newProducerMethod?: NewPipeProducerType;\n  closedProducerMethod?: ProducerClosedType;\n  joinConsumeRoomMethod?: JoinConsumeRoomType;\n  parameters: ConnectIpsParameters;\n}\n\n// Export the type definition for the function\nexport type ConnectIpsType = (\n  options: ConnectIpsOptions,\n) => Promise<[Record<string, any>[], string[]]>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectIps {\n  constructor(\n    private socketManagerService: SocketManager,\n    private newPipeProducerService: NewPipeProducer,\n    private producerClosedService: ProducerClosed,\n    private joinConsumeRoomService: JoinConsumeRoom,\n  ) {}\n\n  /**\n   * Connects to remote IPs and manages socket connections.\n   *\n   * @param {Object} options - The options for connecting IPs.\n   * @param {Record<string, any>[]} options.consume_sockets - The array of current socket connections.\n   * @param {string[]} options.remIP - The list of remote IPs to connect to.\n   * @param {string} options.apiUserName - The API username for authentication.\n   * @param {string} [options.apiKey] - The API key for authentication.\n   * @param {string} [options.apiToken] - The API token for authentication.\n   * @param {Function} [options.newProducerMethod=newPipeProducer] - The method to handle new pipe producer events.\n   * @param {Function} [options.closedProducerMethod=producerClosed] - The method to handle producer closed events.\n   * @param {Function} [options.joinConsumeRoomMethod=joinConsumeRoom] - The method to handle joining a consuming room.\n   * @param {Object} options.parameters - Additional parameters.\n   * @param {string[]} options.parameters.roomRecvIPs - The list of IPs that have been received in the room.\n   * @param {Function} options.parameters.updateRoomRecvIPs - The function to update the room received IPs.\n   * @param {Function} options.parameters.updateConsume_sockets - The function to update the consume sockets.\n   *\n   * @returns {Promise<[Record<string, any>[], string[]]>} A promise that resolves to an array containing the updated consume sockets and room received IPs.\n   *\n   * @throws Will throw an error if required parameters are missing or if there is an issue connecting to a remote IP.\n   */\n  connectIps = async ({\n    consume_sockets,\n    remIP,\n    apiUserName,\n    apiKey = '',\n    apiToken = '',\n    newProducerMethod = this.newPipeProducerService.newPipeProducer,\n    closedProducerMethod = this.producerClosedService.producerClosed,\n    joinConsumeRoomMethod = this.joinConsumeRoomService.joinConsumeRoom,\n    parameters,\n  }: ConnectIpsOptions): Promise<any> => {\n    try {\n      const { roomRecvIPs, updateRoomRecvIPs, updateConsume_sockets } = parameters;\n\n      if (!consume_sockets || !remIP || !apiUserName || (!apiKey && !apiToken)) {\n        console.log(\n          'Missing required parameters - consume_sockets, remIP, apiUserName, apiKey, apiToken',\n        );\n        return [consume_sockets, roomRecvIPs];\n      }\n\n      await Promise.all(\n        remIP.map(async (ip) => {\n          try {\n            // Check if the IP is already connected\n            const matching = consume_sockets.find(\n              (socketObj: any) => Object.keys(socketObj)[0] == ip,\n            );\n\n            if (matching || !ip || ip === '' || ip === null || ip === undefined) {\n              // Skip if the IP is already connected\n              return;\n            }\n\n            // Connect to the remote socket using socket.io-client\n            const remote_sock = await this.socketManagerService.connectSocket({\n              apiUserName,\n              apiKey,\n              apiToken,\n              link: `https://${ip}.mediasfu.com`,\n            });\n\n            // Handle successful connection to the remote socket\n            if (remote_sock.id) {\n              // Check if the IP is in the roomRecvIPs, if not, add it\n              if (!roomRecvIPs.includes(ip)) {\n                roomRecvIPs.push(ip);\n                updateRoomRecvIPs(roomRecvIPs);\n              }\n\n              // Handle new pipe producer event\n              remote_sock.on(\n                'new-pipe-producer',\n                async ({ producerId, islevel }: { producerId: string; islevel: string }) => {\n                  await newProducerMethod({ producerId, islevel, nsock: remote_sock, parameters });\n                },\n              );\n\n              // Handle producer closed event\n              remote_sock.on(\n                'producer-closed',\n                async ({ remoteProducerId }: { remoteProducerId: string }) => {\n                  await closedProducerMethod({ remoteProducerId, parameters });\n                },\n              );\n\n              // Handle new consuming room by joining the room\n              const data = await joinConsumeRoomMethod({\n                remote_sock,\n                apiToken,\n                apiUserName,\n                parameters,\n              });\n              if (!data.rtpCapabilities) {\n                return;\n              }\n\n              // Add the remote socket to the consume_sockets array\n              consume_sockets.push({ [ip]: remote_sock });\n              updateConsume_sockets(consume_sockets);\n            }\n          } catch (error) {\n            // Handle the error\n            console.log('connectIps error', error);\n          }\n        }),\n      );\n\n      return [consume_sockets, roomRecvIPs];\n    } catch (error) {\n      // Handle the error\n      console.log('connectIps error', error);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Poll, ShowAlert, PollUpdatedData } from '../../@types/types';\nexport interface PollUpdatedOptions {\n  data: PollUpdatedData;\n  polls: Poll[];\n  poll: Poll;\n  member: string;\n  islevel: string;\n  showAlert?: ShowAlert;\n  updatePolls: (polls: Poll[]) => void;\n  updatePoll: (poll: Poll) => void;\n  updateIsPollModalVisible: (isVisible: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type PollUpdatedType = (options: PollUpdatedOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PollUpdated {\n  /**\n   * Updates the poll state based on the provided data.\n   *\n   * @param {Object} options - The options for updating the poll.\n   * @param {any} options.data - The data containing poll information.\n   * @param {any[]} options.polls - The current list of polls.\n   * @param {any} options.poll - The current poll.\n   * @param {string} options.member - The member identifier.\n   * @param {string} options.islevel - The level of the member.\n   * @param {Function} options.showAlert - Function to show alerts.\n   * @param {Function} options.updatePolls - Function to update the list of polls.\n   * @param {Function} options.updatePoll - Function to update the current poll.\n   * @param {Function} options.updateIsPollModalVisible - Function to update the visibility of the poll modal.\n   * @returns {Promise<void>} A promise that resolves when the poll update is complete.\n   */\n\n  async pollUpdated({\n    data,\n    polls,\n    poll,\n    member,\n    islevel,\n    showAlert,\n    updatePolls,\n    updatePoll,\n    updateIsPollModalVisible,\n  }: PollUpdatedOptions): Promise<void> {\n    try {\n      if (data.polls) {\n        polls = data.polls;\n        updatePolls(data.polls);\n      } else {\n        polls = [data.poll];\n        updatePolls(polls);\n      }\n\n      let temp_poll = { id: '' };\n\n      if (poll) {\n        temp_poll = { ...poll };\n      }\n\n      if (data.status != 'ended') {\n        poll = data.poll;\n        updatePoll(data.poll);\n      }\n\n      if (data.status === 'started' && islevel !== '2') {\n        if (!poll.voters || (poll.voters && !poll.voters[member])) {\n          showAlert?.({ message: 'New poll started', type: 'success', duration: 3000 });\n          updateIsPollModalVisible(true);\n        }\n      } else if (data.status === 'ended') {\n        if (temp_poll.id === data.poll.id) {\n          showAlert?.({ message: 'Poll ended', type: 'danger', duration: 3000 });\n          // update the poll\n          updatePoll(data.poll);\n        }\n      }\n    } catch (error) {\n      // console.log(error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Poll, ShowAlert } from '../../@types/types';\nimport { Socket } from 'socket.io-client';\nexport interface HandleCreatePollOptions {\n  poll: Poll;\n  socket: Socket;\n  roomName: string;\n  showAlert?: ShowAlert;\n  updateIsPollModalVisible: (visible: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type HandleCreatePollType = (options: HandleCreatePollOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HandleCreatePoll {\n  /**\n   * Handles the creation of a poll.\n   *\n   * @param {Object} options - The options for creating the poll.\n   * @param {Poll} options.poll - The poll object containing the poll details.\n   * @param {Object} options.parameters - Additional parameters for creating the poll.\n   * @returns {Promise<void>} - A promise that resolves when the poll is created successfully.\n   */\n\n  async handleCreatePoll({\n    poll,\n    socket,\n    roomName,\n    showAlert,\n    updateIsPollModalVisible,\n  }: HandleCreatePollOptions): Promise<void> {\n    try {\n      socket.emit(\n        'createPoll',\n        { roomName, poll },\n        (response: { success: boolean; reason?: string }) => {\n          if (response.success) {\n            showAlert?.({ message: 'Poll created successfully', type: 'success' });\n            updateIsPollModalVisible(false);\n          } else {\n            showAlert?.({ message: response.reason || 'Failed to create poll', type: 'danger' });\n          }\n        },\n      );\n    } catch {\n      /* handle error */\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { ShowAlert } from '../../@types/types';\n\nexport interface HandleVotePollOptions {\n  pollId: string;\n  optionIndex: number;\n  socket: Socket;\n  showAlert?: ShowAlert;\n  member: string;\n  roomName: string;\n  updateIsPollModalVisible: (isVisible: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type HandleVotePollType = (options: HandleVotePollOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HandleVotePoll {\n  /**\n   * Handles the voting process for a poll.\n   *\n   * @param {Object} options - The options for handling the vote.\n   * @param {string} options.pollId - The ID of the poll.\n   * @param {number} options.optionIndex - The index of the selected option.\n   * @param {Socket} options.socket - The socket instance for communication.\n   * @param {Function} [options.showAlert] - Optional function to show alerts.\n   * @param {Object} options.member - The member who is voting.\n   * @param {string} options.roomName - The name of the room where the poll is conducted.\n   * @param {Function} options.updateIsPollModalVisible - Function to update the visibility of the poll modal.\n   * @returns {Promise<void>} A promise that resolves when the vote is handled.\n   *\n   * @throws Will log an error message if there is an issue submitting the vote.\n   */\n\n  async handleVotePoll({\n    pollId,\n    optionIndex,\n    socket,\n    showAlert,\n    member,\n    roomName,\n    updateIsPollModalVisible,\n  }: HandleVotePollOptions): Promise<void> {\n    try {\n      socket.emit(\n        'votePoll',\n        {\n          roomName,\n          poll_id: pollId,\n          member,\n          choice: optionIndex,\n        },\n        (response: { success: boolean; reason: string }) => {\n          if (response.success) {\n            showAlert?.({ message: 'Vote submitted successfully', type: 'success' });\n            updateIsPollModalVisible(false);\n          } else {\n            showAlert?.({ message: response.reason, type: 'danger' });\n          }\n        },\n      );\n    } catch (error) {\n      // console.log(error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { ShowAlert } from '../../@types/types';\n\nexport interface HandleEndPollOptions {\n  pollId: string;\n  socket: Socket;\n  showAlert?: ShowAlert;\n  roomName: string;\n  updateIsPollModalVisible: (visible: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type HandleEndPollType = (options: HandleEndPollOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HandleEndPoll {\n  /**\n   * Handles the end of a poll by emitting an \"endPoll\" event through the provided socket.\n   * Displays an alert based on the success or failure of the operation.\n   *\n   * @param {Object} options - The options for ending the poll.\n   * @param {string} options.pollId - The ID of the poll to end.\n   * @param {Socket} options.socket - The socket instance to emit the event.\n   * @param {Function} [options.showAlert] - Optional function to display alerts.\n   * @param {string} options.roomName - The name of the room where the poll is being conducted.\n   * @returns {Promise<void>} A promise that resolves when the poll end operation is complete.\n   */\n\n  async handleEndPoll({\n    pollId,\n    socket,\n    showAlert,\n    roomName,\n    updateIsPollModalVisible,\n  }: HandleEndPollOptions): Promise<void> {\n    try {\n      socket.emit(\n        'endPoll',\n        { roomName, poll_id: pollId },\n        (response: { success: boolean; reason?: string }) => {\n          if (response.success) {\n            showAlert?.({ message: 'Poll ended successfully', type: 'success' });\n            updateIsPollModalVisible(false);\n          } else {\n            showAlert?.({ message: response.reason || 'Failed to end poll', type: 'danger' });\n          }\n        },\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  BreakoutParticipant,\n  BreakoutRoomUpdatedData,\n  OnScreenChangesParameters,\n  OnScreenChangesType,\n  Participant,\n  RePortParameters,\n  RePortType,\n} from '../../@types/types';\n\nexport interface BreakoutRoomUpdatedParameters extends OnScreenChangesParameters, RePortParameters {\n  breakOutRoomStarted: boolean;\n  breakOutRoomEnded: boolean;\n  breakoutRooms: BreakoutParticipant[][];\n  hostNewRoom: number;\n  islevel: string;\n  participantsAll: Participant[];\n  participants: Participant[];\n  meetingDisplayType: string;\n  prevMeetingDisplayType: string;\n  updateBreakoutRooms: (rooms: BreakoutParticipant[][]) => void;\n  updateBreakOutRoomStarted: (started: boolean) => void;\n  updateBreakOutRoomEnded: (ended: boolean) => void;\n  updateHostNewRoom: (room: number) => void;\n  updateMeetingDisplayType: (type: string) => void;\n  updateParticipantsAll: (participants: Participant[]) => void;\n  updateParticipants: (participants: Participant[]) => void;\n\n  //mediasfu functions\n  onScreenChanges: OnScreenChangesType;\n  rePort: RePortType;\n\n  getUpdatedAllParams: () => BreakoutRoomUpdatedParameters;\n  [key: string]: any;\n}\n\nexport interface BreakoutRoomUpdatedOptions {\n  data: BreakoutRoomUpdatedData;\n  parameters: BreakoutRoomUpdatedParameters;\n}\n\n// Export the type definition for the function\nexport type BreakoutRoomUpdatedType = (options: BreakoutRoomUpdatedOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakoutRoomUpdated {\n  /**\n   * Updates the state of breakout rooms based on the provided data and parameters.\n   *\n   * @param {Object} options - The options object.\n   * @param {Object} options.data - The data object containing information about the breakout rooms.\n   * @param {Object} options.parameters - The parameters object containing various state update functions and other parameters.\n   * @param {boolean} options.parameters.breakOutRoomStarted - Indicates if the breakout room has started.\n   * @param {boolean} options.parameters.breakOutRoomEnded - Indicates if the breakout room has ended.\n   * @param {Array} options.parameters.breakoutRooms - The list of current breakout rooms.\n   * @param {number} options.parameters.hostNewRoom - The ID of the new room for the host.\n   * @param {string} options.parameters.islevel - The level of the breakout room.\n   * @param {Array} options.parameters.participantsAll - The list of all participants.\n   * @param {Array} options.parameters.participants - The list of participants who are not banned.\n   * @param {string} options.parameters.meetingDisplayType - The current display type of the meeting.\n   * @param {string} options.parameters.prevMeetingDisplayType - The previous display type of the meeting.\n   * @param {Function} options.parameters.updateBreakoutRooms - Function to update the breakout rooms.\n   * @param {Function} options.parameters.updateBreakOutRoomStarted - Function to update the breakout room started state.\n   * @param {Function} options.parameters.updateBreakOutRoomEnded - Function to update the breakout room ended state.\n   * @param {Function} options.parameters.updateHostNewRoom - Function to update the host's new room.\n   * @param {Function} options.parameters.updateMeetingDisplayType - Function to update the meeting display type.\n   * @param {Function} options.parameters.updateParticipantsAll - Function to update the list of all participants.\n   * @param {Function} options.parameters.updateParticipants - Function to update the list of participants who are not banned.\n   * @param {Function} options.parameters.onScreenChanges - Function to handle screen changes.\n   * @param {Function} options.parameters.rePort - Function to handle reporting.\n   *\n   * @returns {Promise<void>} A promise that resolves when the breakout room state has been updated.\n   *\n   * @throws Will throw an error if the update process fails.\n   */\n\n  breakoutRoomUpdated = async ({ data, parameters }: BreakoutRoomUpdatedOptions): Promise<void> => {\n    try {\n      parameters = parameters.getUpdatedAllParams();\n\n      let {\n        breakOutRoomStarted,\n        breakOutRoomEnded,\n        breakoutRooms,\n        islevel,\n        participantsAll,\n        participants,\n\n        updateBreakoutRooms,\n        updateBreakOutRoomStarted,\n        updateBreakOutRoomEnded,\n        updateHostNewRoom,\n        updateMeetingDisplayType,\n        meetingDisplayType,\n        prevMeetingDisplayType,\n        updateParticipantsAll,\n        updateParticipants,\n\n        //mediaSfu functions\n        onScreenChanges,\n        rePort,\n      } = parameters;\n\n      if (data.forHost) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        updateHostNewRoom(data.newRoom!);\n        await onScreenChanges({ changed: true, parameters });\n        return;\n      }\n\n      if (islevel == '2' && data.members) {\n        //filter out the participant that isBanned == true\n        participantsAll = data.members;\n        //remove every field other than isBanned and name from participantsAll\n        participantsAll = data.members.map((participant) => ({\n          isBanned: participant.isBanned,\n          name: participant.name,\n          audioID: participant.audioID,\n          videoID: participant.videoID,\n        }));\n        updateParticipantsAll(participantsAll);\n\n        participants = data.members.filter(\n          (participant: Participant) => participant.isBanned == false,\n        );\n        updateParticipants(participants);\n      }\n\n      breakoutRooms = data.breakoutRooms || [];\n      updateBreakoutRooms(breakoutRooms);\n\n      if (data.status == 'started' && (breakOutRoomStarted || !breakOutRoomEnded)) {\n        breakOutRoomStarted = true;\n        breakOutRoomEnded = false;\n        updateBreakOutRoomStarted(true);\n        updateBreakOutRoomEnded(false);\n        prevMeetingDisplayType = meetingDisplayType;\n        if (meetingDisplayType != 'all') {\n          meetingDisplayType = 'all';\n          updateMeetingDisplayType('all');\n        }\n        await onScreenChanges({ changed: true, parameters });\n        if (islevel == '2') {\n          await rePort({ restart: true, parameters });\n        }\n      } else if (data.status == 'ended') {\n        breakOutRoomEnded = true;\n        updateBreakOutRoomEnded(true);\n        if (meetingDisplayType != prevMeetingDisplayType) {\n          meetingDisplayType = prevMeetingDisplayType;\n          updateMeetingDisplayType(prevMeetingDisplayType);\n        }\n        await onScreenChanges({ changed: true, parameters });\n        if (islevel == '2') {\n          await rePort({ restart: true, parameters });\n        }\n      } else if (data.status == 'started' && breakOutRoomStarted) {\n        breakOutRoomStarted = true;\n        breakOutRoomEnded = false;\n        updateBreakOutRoomStarted(true);\n        updateBreakOutRoomEnded(false);\n        await onScreenChanges({ changed: true, parameters });\n        if (islevel == '2') {\n          await rePort({ restart: true, parameters });\n        }\n      }\n    } catch (error: any) {\n      // console.log('Error updating breakout room:', error.message);\n    }\n  };\n}\n","// start-meeting-progress-timer.service.ts\nimport { Injectable } from '@angular/core';\nexport interface StartMeetingProgressTimerParameters {\n  updateMeetingProgressTime: (formattedTime: string) => void;\n  validated: boolean;\n  roomName: string;\n\n  // mediasfu functions\n  getUpdatedAllParams: () => StartMeetingProgressTimerParameters;\n  [key: string]: any;\n}\n\nexport interface StartMeetingProgressTimerOptions {\n  startTime: number;\n  parameters: StartMeetingProgressTimerParameters;\n}\n\n// Export the type definition for the function\nexport type StartMeetingProgressTimerType = (options: StartMeetingProgressTimerOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StartMeetingProgressTimer {\n  private timeProgress: any;\n\n  /**\n   * Starts a timer to track the progress of a meeting.\n   *\n   * @param {Object} options - The options for starting the meeting progress timer.\n   * @param {number} options.startTime - The custom start time for the meeting progress timer.\n   * @param {Object} options.parameters - The parameters required for updating the meeting progress.\n   * @param {Function} options.parameters.updateMeetingProgressTime - Function to update the meeting progress time.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   *\n   * @returns {void}\n   */\n\n  startMeetingProgressTimer = ({\n    startTime,\n    parameters,\n  }: StartMeetingProgressTimerOptions): void => {\n    let { updateMeetingProgressTime, getUpdatedAllParams } = parameters;\n\n    const calculateElapsedTime = (startTime: number): number => {\n      const currentTime = Math.floor(new Date().getTime() / 1000);\n      return currentTime - startTime;\n    };\n\n    const padNumber = (number: number): string => {\n      return number.toString().padStart(2, '0');\n    };\n\n    const formatTime = (time: number): string => {\n      const hours = Math.floor(time / 3600);\n      const minutes = Math.floor((time % 3600) / 60);\n      const seconds = (time % 60).toFixed(0).padStart(2, '0');\n      return `${padNumber(hours)}:${padNumber(minutes)}:${padNumber(Number(seconds))}`;\n    };\n\n    let elapsedTime = calculateElapsedTime(startTime);\n\n    this.timeProgress = setInterval(async () => {\n      elapsedTime++;\n      const formattedTime = formatTime(elapsedTime);\n      updateMeetingProgressTime(formattedTime);\n\n      parameters = getUpdatedAllParams();\n\n      if (!parameters.validated || !parameters.roomName) {\n        clearInterval(this.timeProgress);\n        this.timeProgress = null;\n      }\n    }, 1000);\n  };\n\n  stopMeetingProgressTimer = (): void => {\n    if (this.timeProgress) {\n      clearInterval(this.timeProgress);\n      this.timeProgress = null;\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert } from '../../@types/types';\n\nexport interface CheckPauseStateOptions {\n  recordingMediaOptions: string; // \"video\" | \"audio\"\n  recordingVideoPausesLimit: number;\n  recordingAudioPausesLimit: number;\n  pauseRecordCount: number;\n  showAlert?: ShowAlert;\n}\n\n// Export the type definition for the function\nexport type CheckPauseStateType = (options: CheckPauseStateOptions) => Promise<boolean>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckPauseState {\n  /**\n   * Checks if the recording can be paused based on the current pause count and the allowed pause limits.\n   *\n   * @param {Object} options - The options for checking the pause state.\n   * @param {string} options.recordingMediaOptions - The type of media being recorded (\"video\" or \"audio\").\n   * @param {number} options.recordingVideoPausesLimit - The maximum number of pauses allowed for video recordings.\n   * @param {number} options.recordingAudioPausesLimit - The maximum number of pauses allowed for audio recordings.\n   * @param {number} options.pauseRecordCount - The current count of pauses that have been made.\n   * @param {Function} options.showAlert - A function to show an alert message if the pause limit is reached.\n   * @returns {Promise<boolean>} - A promise that resolves to `true` if the recording can be paused, otherwise `false`.\n   */\n\n  checkPauseState = async ({\n    recordingMediaOptions,\n    recordingVideoPausesLimit,\n    recordingAudioPausesLimit,\n    pauseRecordCount,\n    showAlert,\n  }: CheckPauseStateOptions): Promise<boolean> => {\n    // function to check if the user can pause recording\n    let ref_limit = 0;\n    if (recordingMediaOptions == 'video') {\n      ref_limit = recordingVideoPausesLimit;\n    } else {\n      ref_limit = recordingAudioPausesLimit;\n    }\n\n    if (pauseRecordCount < ref_limit) {\n      return true;\n    } else {\n      showAlert?.({\n        message: 'You have reached the limit of pauses - you can choose to stop recording.',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return false;\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nexport interface CheckResumeStateOptions {\n  recordingMediaOptions: string; // 'video' or 'audio'\n  recordingVideoPausesLimit: number;\n  recordingAudioPausesLimit: number;\n  pauseRecordCount: number;\n}\n\n// Export the type definition for the function\nexport type CheckResumeStateType = (options: CheckResumeStateOptions) => Promise<boolean>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckResumeState {\n  /**\n   * Checks if the recording can be resumed based on the media type and pause limits.\n   *\n   * @param {Object} options - The options for checking resume state.\n   * @param {string} options.recordingMediaOptions - The type of media being recorded (\"video\" or \"audio\").\n   * @param {number} options.recordingVideoPausesLimit - The maximum number of pauses allowed for video recording.\n   * @param {number} options.recordingAudioPausesLimit - The maximum number of pauses allowed for audio recording.\n   * @param {number} options.pauseRecordCount - The current number of pauses that have occurred.\n   * @returns {Promise<boolean>} - A promise that resolves to a boolean indicating whether the recording can be resumed.\n   */\n\n  checkResumeState = async ({\n    recordingMediaOptions,\n    recordingVideoPausesLimit,\n    recordingAudioPausesLimit,\n    pauseRecordCount,\n  }: CheckResumeStateOptions): Promise<boolean> => {\n    // function to check if the user can resume recording\n    let ref_limit = 0;\n    if (recordingMediaOptions == 'video') {\n      ref_limit = recordingVideoPausesLimit;\n    } else {\n      ref_limit = recordingAudioPausesLimit;\n    }\n\n    return pauseRecordCount <= ref_limit;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert } from '../../@types/types';\nexport interface RecordPauseTimerOptions {\n  stop?: boolean;\n  isTimerRunning: boolean;\n  canPauseResume: boolean;\n  showAlert?: ShowAlert;\n}\n\n// export the type definition for the function\nexport type RecordPauseTimerType = (options: RecordPauseTimerOptions) => boolean;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecordPauseTimer {\n  /**\n   * Controls the pause and resume functionality of a recording timer.\n   *\n   * @param {Object} options - The options for controlling the timer.\n   * @param {boolean} [options.stop=false] - Indicates whether to stop the timer.\n   * @param {Object} options.parameters - The parameters for the timer control.\n   * @param {boolean} options.parameters.isTimerRunning - Indicates if the timer is currently running.\n   * @param {boolean} options.parameters.canPauseResume - Indicates if the timer can be paused or resumed.\n   * @param {Function} [options.parameters.showAlert] - Optional function to show an alert message.\n   * @returns {boolean} - Returns true if the timer can be paused or resumed, otherwise false.\n   */\n\n  recordPauseTimer = ({\n    stop = false,\n    isTimerRunning,\n    canPauseResume,\n    showAlert,\n  }: RecordPauseTimerOptions): boolean => {\n    // Ensure the timer is running and pause/resume actions are allowed\n    if (isTimerRunning && canPauseResume) {\n      return true;\n    } else {\n      const message = stop\n        ? 'Can only stop after 15 seconds of starting or pausing or resuming recording'\n        : 'Can only pause or resume after 15 seconds of starting or pausing or resuming recording';\n      showAlert?.({\n        message,\n        type: 'danger',\n      });\n      return false;\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { CheckPauseState } from './check-pause-state.service';\nimport { CheckResumeState } from './check-resume-state.service';\nimport { RecordPauseTimer } from './record-pause-timer.service';\nimport { RecordResumeTimer, RecordResumeTimerParameters } from './record-resume-timer.service';\nimport { RePortParameters, RePortType, ShowAlert, UserRecordingParams } from '../../@types/types';\nimport { Socket } from 'socket.io-client';\n\nexport interface UpdateRecordingParameters extends RecordResumeTimerParameters, RePortParameters {\n  roomName: string;\n  userRecordingParams: UserRecordingParams;\n  socket: Socket;\n  updateIsRecordingModalVisible: (visible: boolean) => void;\n  confirmedToRecord: boolean;\n  showAlert?: ShowAlert;\n  recordingMediaOptions: string;\n  videoAlreadyOn: boolean;\n  audioAlreadyOn: boolean;\n  recordStarted: boolean;\n  recordPaused: boolean;\n  recordResumed: boolean;\n  recordStopped: boolean;\n  recordChangeSeconds: number;\n  pauseRecordCount: number;\n  startReport: boolean;\n  endReport: boolean;\n  canRecord: boolean;\n  canPauseResume: boolean;\n  updateCanPauseResume: (canPauseResume: boolean) => void;\n  updatePauseRecordCount: (count: number) => void;\n  updateClearedToRecord: (cleared: boolean) => void;\n  updateRecordPaused: (paused: boolean) => void;\n  updateRecordResumed: (resumed: boolean) => void;\n  updateStartReport: (start: boolean) => void;\n  updateEndReport: (end: boolean) => void;\n  updateCanRecord: (canRecord: boolean) => void;\n\n  // Mediasfu functions\n  rePort: RePortType;\n\n  getUpdatedAllParams: () => UpdateRecordingParameters;\n  [key: string]: any;\n}\n\nexport interface UpdateRecordingOptions {\n  parameters: UpdateRecordingParameters;\n}\n\n// Export the type definition for the function\nexport type UpdateRecordingType = (options: UpdateRecordingOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateRecording {\n  constructor(\n    private CheckPauseStateService: CheckPauseState,\n    private CheckResumeStateService: CheckResumeState,\n    private RecordPauseTimerService: RecordPauseTimer,\n    private RecordResumeTimerService: RecordResumeTimer,\n  ) {}\n\n  /**\n   * Updates the recording state based on the provided parameters.\n   *\n   * @param {UpdateRecordingOptions} parameters - The parameters for updating the recording state.\n   * @returns {Promise<void>} A promise that resolves when the recording state has been updated.\n   *\n   * @property {string} roomName - The name of the room where the recording is taking place.\n   * @property {any} userRecordingParams - Parameters related to the user's recording settings.\n   * @property {any} socket - The socket connection used for communication.\n   * @property {Function} updateIsRecordingModalVisible - Function to update the visibility of the recording modal.\n   * @property {boolean} confirmedToRecord - Indicates if the user has confirmed to start recording.\n   * @property {Function} showAlert - Function to show alert messages.\n   * @property {string} recordingMediaOptions - The media options for recording (e.g., \"video\", \"audio\").\n   * @property {boolean} videoAlreadyOn - Indicates if the video is already turned on.\n   * @property {boolean} audioAlreadyOn - Indicates if the audio is already turned on.\n   * @property {boolean} recordStarted - Indicates if the recording has started.\n   * @property {boolean} recordPaused - Indicates if the recording is paused.\n   * @property {boolean} recordResumed - Indicates if the recording has resumed.\n   * @property {boolean} recordStopped - Indicates if the recording has stopped.\n   * @property {number} recordChangeSeconds - The interval in seconds for changing the recording state.\n   * @property {number} pauseRecordCount - The count of pauses during the recording.\n   * @property {boolean} startReport - Indicates if the start report is active.\n   * @property {boolean} endReport - Indicates if the end report is active.\n   * @property {boolean} canRecord - Indicates if recording is allowed.\n   * @property {boolean} canPauseResume - Indicates if pausing and resuming the recording is allowed.\n   * @property {Function} updateCanPauseResume - Function to update the pause/resume state.\n   * @property {Function} updatePauseRecordCount - Function to update the pause record count.\n   * @property {Function} updateClearedToRecord - Function to update the cleared-to-record state.\n   * @property {Function} updateRecordPaused - Function to update the record paused state.\n   * @property {Function} updateRecordResumed - Function to update the record resumed state.\n   * @property {Function} updateStartReport - Function to update the start report state.\n   * @property {Function} updateEndReport - Function to update the end report state.\n   * @property {Function} updateCanRecord - Function to update the can record state.\n   * @property {Function} rePort - Function to handle reporting.\n   */\n\n  updateRecording = async ({ parameters }: UpdateRecordingOptions): Promise<void> => {\n    parameters = parameters.getUpdatedAllParams();\n\n    let {\n      roomName,\n      userRecordingParams,\n      socket,\n      updateIsRecordingModalVisible,\n      confirmedToRecord,\n      showAlert,\n      recordingMediaOptions,\n      videoAlreadyOn,\n      audioAlreadyOn,\n      recordStarted,\n      recordPaused,\n      recordResumed,\n      recordStopped,\n      recordChangeSeconds,\n      pauseRecordCount,\n      startReport,\n      endReport,\n      canRecord,\n\n      updateCanPauseResume,\n      updatePauseRecordCount,\n      updateClearedToRecord,\n      updateRecordPaused,\n      updateRecordResumed,\n      updateStartReport,\n      updateEndReport,\n      updateCanRecord,\n\n      //mediasfu functions\n      // checkPauseState,\n      // checkResumeState,\n      rePort,\n      // recordPauseTimer,\n      // recordResumeTimer,\n    } = parameters;\n\n    // Check if recording is confirmed before starting\n    if (recordStopped) {\n      showAlert?.({\n        message: 'Recording has already stopped',\n        type: 'danger',\n        duration: 3000,\n      });\n      return;\n    }\n\n    // Check for recordingMediaOptions for video\n    if (recordingMediaOptions === 'video' && !videoAlreadyOn) {\n      showAlert?.({\n        message: 'You must turn on your video before you can start recording',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n\n    // Check for recordingMediaOptions for audio\n    if (recordingMediaOptions === 'audio' && !audioAlreadyOn) {\n      showAlert?.({\n        message: 'You must turn on your audio before you can start recording',\n        type: 'danger',\n        duration: 3000,\n      });\n\n      return;\n    }\n\n    if (recordStarted && !recordPaused && !recordStopped) {\n      let proceed = false;\n\n      proceed = await this.CheckPauseStateService.checkPauseState({\n        recordingMediaOptions,\n        recordingVideoPausesLimit: parameters['recordingVideoPausesLimit'],\n        recordingAudioPausesLimit: parameters['recordingAudioPausesLimit'],\n        pauseRecordCount,\n        showAlert,\n      });\n\n      if (!proceed) {\n        return;\n      }\n\n      let record = this.RecordPauseTimerService.recordPauseTimer({\n        stop: false,\n        isTimerRunning: parameters.isTimerRunning,\n        canPauseResume: parameters.canPauseResume,\n        showAlert,\n      });\n\n      if (record) {\n        let action = 'pauseRecord';\n\n        await new Promise<void>((resolve) => {\n          socket.emit(\n            action,\n            { roomName },\n            async ({\n              success,\n              reason,\n              recordState,\n              pauseCount,\n            }: {\n              success: boolean;\n              reason: string;\n              recordState: string;\n              pauseCount: number;\n            }) => {\n              pauseRecordCount = pauseCount;\n              updatePauseRecordCount(pauseRecordCount);\n\n              if (success) {\n                startReport = false;\n                endReport = true;\n                recordPaused = true;\n                updateStartReport(startReport);\n                updateEndReport(endReport);\n                updateRecordPaused(recordPaused);\n\n                showAlert?.({\n                  message: 'Recording paused',\n                  type: 'success',\n                  duration: 3000,\n                });\n\n                // Set isRecordingModalVisible to false\n                updateIsRecordingModalVisible(false);\n                setTimeout(() => {\n                  updateCanPauseResume(true);\n                }, recordChangeSeconds);\n              } else {\n                let reasonMessage = `Recording Pause Failed: ${reason}; the current state is: ${recordState}`;\n\n                showAlert?.({\n                  message: reasonMessage,\n                  type: 'danger',\n                  duration: 3000,\n                });\n              }\n\n              resolve();\n            },\n          );\n        });\n      }\n    } else if (recordStarted && recordPaused && !recordStopped) {\n      if (!confirmedToRecord) {\n        showAlert?.({\n          message: 'You must click confirm before you can start recording',\n          type: 'danger',\n          duration: 3000,\n        });\n\n        return;\n      }\n\n      let proceed = false;\n\n      proceed = await this.CheckResumeStateService.checkResumeState({\n        recordingMediaOptions,\n        recordingVideoPausesLimit: parameters['recordingVideoPausesLimit'],\n        recordingAudioPausesLimit: parameters['recordingAudioPausesLimit'],\n        pauseRecordCount,\n      });\n\n      if (!proceed) {\n        return;\n      }\n\n      let resume = await this.RecordResumeTimerService.recordResumeTimer({ parameters });\n      if (resume) {\n        // Set clearedToRecord to true\n        updateClearedToRecord(true);\n\n        let action = 'startRecord';\n        if (recordStarted && recordPaused && !recordResumed && !recordStopped) {\n          action = 'resumeRecord';\n        } else {\n          action = 'startRecord';\n        }\n        action = 'resumeRecord';\n\n        await new Promise<void>((resolve) => {\n          socket.emit(\n            action,\n            { roomName, userRecordingParams },\n            async ({\n              success,\n              reason,\n            }: {\n              success: boolean;\n              reason: string;\n              recordState: string;\n            }) => {\n              if (success) {\n                recordPaused = false;\n                recordResumed = true;\n                updateRecordPaused(recordPaused);\n                updateRecordResumed(recordResumed);\n\n                if (action === 'startRecord') {\n                  await rePort({ parameters });\n                } else {\n                  recordResumed = true;\n                  await rePort({ restart: true, parameters });\n                }\n              } else {\n                showAlert?.({\n                  message: `Recording could not start - ${reason}`,\n                  type: 'danger',\n                  duration: 3000,\n                });\n\n                canRecord = true;\n                startReport = false;\n                endReport = true;\n\n                updateCanRecord(canRecord);\n                updateStartReport(startReport);\n                updateEndReport(endReport);\n              }\n\n              resolve();\n            },\n          );\n        });\n\n        // Set isRecordingModalVisible to false\n        updateIsRecordingModalVisible(false);\n\n        setTimeout(() => {\n          updateCanPauseResume(true);\n        }, recordChangeSeconds);\n      }\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { RecordPauseTimer } from './record-pause-timer.service';\nimport { ShowAlert } from '../../@types/types';\n\nexport interface StopRecordingParameters {\n  roomName: string;\n  socket: any;\n  showAlert?: ShowAlert;\n  startReport: boolean;\n  endReport: boolean;\n  recordStarted: boolean;\n  recordPaused: boolean;\n  recordStopped: boolean;\n  updateRecordPaused: (paused: boolean) => void;\n  updateRecordStopped: (stopped: boolean) => void;\n  updateStartReport: (startReport: boolean) => void;\n  updateEndReport: (endReport: boolean) => void;\n  updateShowRecordButtons: (show: boolean) => void;\n  whiteboardStarted: boolean;\n  whiteboardEnded: boolean;\n  recordingMediaOptions: string;\n\n  // mediasfu functions\n  captureCanvasStream: (options: { parameters: any; start?: boolean }) => void;\n\n  [key: string]: any;\n}\n\nexport interface StopRecordingOptions {\n  parameters: StopRecordingParameters;\n}\n\n// Export the type definition for the function\nexport type StopRecordingType = (options: StopRecordingOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StopRecording {\n  constructor(private RecordPauseTimerService: RecordPauseTimer) {}\n\n  async stopRecording({ parameters }: StopRecordingOptions): Promise<void> {\n    let {\n      roomName,\n      socket,\n      showAlert,\n      startReport,\n      endReport,\n      recordStarted,\n      recordPaused,\n      recordStopped,\n      updateRecordPaused,\n      updateRecordStopped,\n      updateStartReport,\n      updateEndReport,\n      updateShowRecordButtons,\n\n      whiteboardStarted,\n      whiteboardEnded,\n      recordingMediaOptions,\n\n      //mediasfu functions\n      captureCanvasStream,\n    } = parameters;\n\n    let recAttempt;\n\n    if (recordStarted && !recordStopped) {\n      let stop = await this.RecordPauseTimerService.recordPauseTimer({\n        stop: true,\n        isTimerRunning: parameters['isTimerRunning'],\n        canPauseResume: parameters['canPauseResume'],\n        showAlert: parameters.showAlert,\n      });\n\n      if (stop) {\n        let action = 'stopRecord';\n\n        await new Promise<void>((resolve) => {\n          socket.emit(\n            action,\n            { roomName },\n            ({\n              success,\n              reason,\n              recordState,\n            }: {\n              success: boolean;\n              reason: string;\n              recordState: string;\n            }) => {\n              if (success) {\n                startReport = false;\n                endReport = true;\n                recordPaused = false;\n                recordStopped = true;\n                recAttempt = true;\n\n                updateStartReport(startReport);\n                updateEndReport(endReport);\n                updateRecordPaused(recordPaused);\n                updateRecordStopped(recordStopped);\n                showAlert?.({ message: 'Recording Stopped', type: 'success' });\n                updateShowRecordButtons(false);\n              } else {\n                let reasonMessage = `Recording Stop Failed: ${reason}; the recording is currently ${recordState}`;\n                showAlert?.({ message: reasonMessage, type: 'danger' });\n                recAttempt = false;\n              }\n\n              resolve();\n            },\n          );\n        });\n\n        try {\n          if (recAttempt && whiteboardStarted && !whiteboardEnded) {\n            if (recordingMediaOptions === 'video') {\n              captureCanvasStream({ parameters, start: false });\n            }\n          }\n        } catch (error) {\n          console.log('Error capturing canvas stream:', error);\n        }\n      } else {\n        return;\n      }\n    } else {\n      showAlert?.({ message: 'Recording is not started yet or already stopped', type: 'danger' });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert } from '../../@types/types';\nexport interface UserWaitingOptions {\n  name: string;\n  showAlert?: ShowAlert;\n  totalReqWait: number;\n  updateTotalReqWait: (total: number) => void;\n}\n\n// Export the type definition for the function\nexport type UserWaitingType = (options: UserWaitingOptions) => Promise<void>;\n\n/**\n * @fileoverview Service to handle user waiting functionality.\n *\n * @description\n * This service provides methods to handle the logic when a user joins the waiting room.\n * It displays an alert/notification and updates the total number of requests waiting.\n */\n\n/**\n * Options for the userWaiting method.\n *\n * @interface UserWaitingOptions\n * @property {string} name - The name of the user joining the waiting room.\n * @property {(options: { message: string; type: string; duration: number }) => void} [showAlert] - Optional function to display an alert/notification.\n * @property {number} totalReqWait - The current total number of requests waiting.\n * @property {(total: number) => void} updateTotalReqWait - Function to update the total number of requests waiting.\n */\n\n/**\n * Service to handle user waiting functionality.\n *\n * @class\n * @name UserWaiting\n * @description\n * This service provides methods to handle the logic when a user joins the waiting room.\n * It displays an alert/notification and updates the total number of requests waiting.\n *\n * @example\n * const userWaitingService = new UserWaiting();\n * userWaitingService.userWaiting({\n *   name: 'John Doe',\n *   showAlert: (options) => console.log(options.message),\n *   totalReqWait: 5,\n *   updateTotalReqWait: (total) => console.log(`Total requests: ${total}`),\n * });\n */\n\n/**\n * Handles the logic when a user joins the waiting room.\n *\n * @method\n * @name userWaiting\n * @memberof UserWaiting\n * @async\n *\n * @param {UserWaitingOptions} options - The options for the user waiting method.\n * @returns {Promise<void>} A promise that resolves when the operation is complete.\n *\n * @example\n * const options = {\n *   name: 'John Doe',\n *   showAlert: (options) => console.log(options.message),\n *   totalReqWait: 5,\n *   updateTotalReqWait: (total) => console.log(`Total requests: ${total}`),\n * };\n * await userWaitingService.userWaiting(options);\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserWaiting {\n  userWaiting = async ({\n    name,\n    showAlert,\n    totalReqWait,\n    updateTotalReqWait,\n  }: UserWaitingOptions): Promise<void> => {\n    // Display an alert/notification about the user joining the waiting room\n    showAlert?.({\n      message: `${name} joined the waiting room.`,\n      type: 'success',\n      duration: 3000,\n    });\n\n    // Update the total number of requests waiting in the waiting room\n    const totalReqs = totalReqWait + 1;\n    updateTotalReqWait(totalReqs);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert } from '../../@types/types';\n\nexport interface PersonJoinedOptions {\n  showAlert?: ShowAlert;\n  name: string;\n}\n\n// Export the type definition for the function\nexport type PersonJoinedType = (options: PersonJoinedOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PersonJoined {\n  /**\n   * Handles the event when a person joins.\n   *\n   * @param {PersonJoinedOptions} options - The options for the person joined event.\n   * @param {string} options.name - The name of the person who joined.\n   * @param {Function} options.showAlert - A function to display an alert/notification.\n   * @returns {Promise<void>} A promise that resolves when the alert has been shown.\n   */\n  personJoined = ({ name, showAlert }: PersonJoinedOptions): void => {\n    // Display an alert/notification about the person joining the event\n    showAlert?.({\n      message: `${name} joined the event.`,\n      type: 'success',\n      duration: 3000,\n    });\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { WaitingRoomParticipant } from '../../@types/types';\nexport interface AllWaitingRoomMembersOptions {\n  waitingParticipants: WaitingRoomParticipant[];\n  updateWaitingRoomList: (participants: WaitingRoomParticipant[]) => void;\n  updateTotalReqWait: (totalReqs: number) => void;\n}\n\n// Export the type definition for the function\nexport type AllWaitingRoomMembersType = (options: AllWaitingRoomMembersOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AllWaitingRoomMembers {\n  /**\n   * Updates the waiting room participants list and the total count of waiting room participants.\n   *\n   * @param {Object} options - The options object.\n   * @param {Array} options.waitingParticipants - An array of participants currently in the waiting room.\n   * @param {Function} options.updateWaitingRoomList - A function to update the waiting room participants list.\n   * @param {Function} options.updateTotalReqWait - A function to update the total count of waiting room participants.\n   * @returns {Promise<void>} A promise that resolves when the updates are complete.\n   */\n  allWaitingRoomMembers = async ({\n    waitingParticipants,\n    updateWaitingRoomList,\n    updateTotalReqWait,\n  }: AllWaitingRoomMembersOptions): Promise<void> => {\n    // Calculate the total number of waiting room participants\n    const totalReqs = waitingParticipants.length;\n\n    // Update the waiting room participants list\n    updateWaitingRoomList(waitingParticipants);\n\n    // Update the total count of waiting room participants\n    updateTotalReqWait(totalReqs);\n  };\n}\n","import { Injectable } from '@angular/core';\nexport interface RecordParams {\n  recordingAudioPausesLimit: number;\n  recordingAudioPausesCount: number;\n  recordingAudioSupport: boolean;\n  recordingAudioPeopleLimit: number;\n  recordingAudioParticipantsTimeLimit: number;\n  recordingVideoPausesCount: number;\n  recordingVideoPausesLimit: number;\n  recordingVideoSupport: boolean;\n  recordingVideoPeopleLimit: number;\n  recordingVideoParticipantsTimeLimit: number;\n  recordingAllParticipantsSupport: boolean;\n  recordingVideoParticipantsSupport: boolean;\n  recordingAllParticipantsFullRoomSupport: boolean;\n  recordingVideoParticipantsFullRoomSupport: boolean;\n  recordingPreferredOrientation: string;\n  recordingSupportForOtherOrientation: boolean;\n  recordingMultiFormatsSupport: boolean;\n}\n\nexport interface RoomRecordParamsParameters {\n  updateRecordingAudioPausesLimit: (value: number) => void;\n  updateRecordingAudioPausesCount: (value: number) => void;\n  updateRecordingAudioSupport: (value: boolean) => void;\n  updateRecordingAudioPeopleLimit: (value: number) => void;\n  updateRecordingAudioParticipantsTimeLimit: (value: number) => void;\n  updateRecordingVideoPausesCount: (value: number) => void;\n  updateRecordingVideoPausesLimit: (value: number) => void;\n  updateRecordingVideoSupport: (value: boolean) => void;\n  updateRecordingVideoPeopleLimit: (value: number) => void;\n  updateRecordingVideoParticipantsTimeLimit: (value: number) => void;\n  updateRecordingAllParticipantsSupport: (value: boolean) => void;\n  updateRecordingVideoParticipantsSupport: (value: boolean) => void;\n  updateRecordingAllParticipantsFullRoomSupport: (value: boolean) => void;\n  updateRecordingVideoParticipantsFullRoomSupport: (value: boolean) => void;\n  updateRecordingPreferredOrientation: (value: string) => void;\n  updateRecordingSupportForOtherOrientation: (value: boolean) => void;\n  updateRecordingMultiFormatsSupport: (value: boolean) => void;\n\n  // mediasfu functions\n  [key: string]: any;\n}\nexport interface RoomRecordParamsOptions {\n  recordParams: RecordParams;\n  parameters: RoomRecordParamsParameters;\n}\n\n// Export the type definition for the function\nexport type RoomRecordParamsType = ({\n  recordParams,\n  parameters,\n}: RoomRecordParamsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoomRecordParams {\n  /**\n   * Updates various recording parameters based on the provided `recordParams`.\n   *\n   * @param {Object} params - The parameters object.\n   * @param {RecordParams} params.recordParams - The recording parameters to update.\n   * @param {Parameters} params.parameters - The functions to update each recording parameter.\n   * @param {Function} params.parameters.updateRecordingAudioPausesLimit - Function to update the audio pauses limit.\n   * @param {Function} params.parameters.updateRecordingAudioPausesCount - Function to update the audio pauses count.\n   * @param {Function} params.parameters.updateRecordingAudioSupport - Function to update the audio support.\n   * @param {Function} params.parameters.updateRecordingAudioPeopleLimit - Function to update the audio people limit.\n   * @param {Function} params.parameters.updateRecordingAudioParticipantsTimeLimit - Function to update the audio participants time limit.\n   * @param {Function} params.parameters.updateRecordingVideoPausesCount - Function to update the video pauses count.\n   * @param {Function} params.parameters.updateRecordingVideoPausesLimit - Function to update the video pauses limit.\n   * @param {Function} params.parameters.updateRecordingVideoSupport - Function to update the video support.\n   * @param {Function} params.parameters.updateRecordingVideoPeopleLimit - Function to update the video people limit.\n   * @param {Function} params.parameters.updateRecordingVideoParticipantsTimeLimit - Function to update the video participants time limit.\n   * @param {Function} params.parameters.updateRecordingAllParticipantsSupport - Function to update the all participants support.\n   * @param {Function} params.parameters.updateRecordingVideoParticipantsSupport - Function to update the video participants support.\n   * @param {Function} params.parameters.updateRecordingAllParticipantsFullRoomSupport - Function to update the all participants full room support.\n   * @param {Function} params.parameters.updateRecordingVideoParticipantsFullRoomSupport - Function to update the video participants full room support.\n   * @param {Function} params.parameters.updateRecordingPreferredOrientation - Function to update the preferred orientation.\n   * @param {Function} params.parameters.updateRecordingSupportForOtherOrientation - Function to update the support for other orientation.\n   * @param {Function} params.parameters.updateRecordingMultiFormatsSupport - Function to update the multi-formats support.\n   * @returns {Promise<void>} A promise that resolves when all parameters have been updated.\n   */\n  roomRecordParams = ({ recordParams, parameters }: RoomRecordParamsOptions): void => {\n    let {\n      updateRecordingAudioPausesLimit,\n      updateRecordingAudioPausesCount,\n      updateRecordingAudioSupport,\n      updateRecordingAudioPeopleLimit,\n      updateRecordingAudioParticipantsTimeLimit,\n      updateRecordingVideoPausesCount,\n      updateRecordingVideoPausesLimit,\n      updateRecordingVideoSupport,\n      updateRecordingVideoPeopleLimit,\n      updateRecordingVideoParticipantsTimeLimit,\n      updateRecordingAllParticipantsSupport,\n      updateRecordingVideoParticipantsSupport,\n      updateRecordingAllParticipantsFullRoomSupport,\n      updateRecordingVideoParticipantsFullRoomSupport,\n      updateRecordingPreferredOrientation,\n      updateRecordingSupportForOtherOrientation,\n      updateRecordingMultiFormatsSupport,\n    } = parameters;\n\n    // Update each recording parameter based on the provided recordParams\n    updateRecordingAudioPausesLimit(recordParams.recordingAudioPausesLimit);\n    updateRecordingAudioPausesCount(recordParams.recordingAudioPausesCount);\n    updateRecordingAudioSupport(recordParams.recordingAudioSupport);\n    updateRecordingAudioPeopleLimit(recordParams.recordingAudioPeopleLimit);\n    updateRecordingAudioParticipantsTimeLimit(recordParams.recordingAudioParticipantsTimeLimit);\n    updateRecordingVideoPausesCount(recordParams.recordingVideoPausesCount);\n    updateRecordingVideoPausesLimit(recordParams.recordingVideoPausesLimit);\n    updateRecordingVideoSupport(recordParams.recordingVideoSupport);\n    updateRecordingVideoPeopleLimit(recordParams.recordingVideoPeopleLimit);\n    updateRecordingVideoParticipantsTimeLimit(recordParams.recordingVideoParticipantsTimeLimit);\n    updateRecordingAllParticipantsSupport(recordParams.recordingAllParticipantsSupport);\n    updateRecordingVideoParticipantsSupport(recordParams.recordingVideoParticipantsSupport);\n    updateRecordingAllParticipantsFullRoomSupport(\n      recordParams.recordingAllParticipantsFullRoomSupport,\n    );\n    updateRecordingVideoParticipantsFullRoomSupport(\n      recordParams.recordingVideoParticipantsFullRoomSupport,\n    );\n    updateRecordingPreferredOrientation(recordParams.recordingPreferredOrientation);\n    updateRecordingSupportForOtherOrientation(recordParams.recordingSupportForOtherOrientation);\n    updateRecordingMultiFormatsSupport(recordParams.recordingMultiFormatsSupport);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Participant, ReorderStreamsType, ReorderStreamsParameters } from '../../@types/types';\n\nexport interface BanParticipantParameters extends ReorderStreamsParameters {\n  activeNames: string[];\n  dispActiveNames: string[];\n  participants: Participant[];\n  updateParticipants: (participants: Participant[]) => void;\n\n  // mediasfu functions\n  reorderStreams: ReorderStreamsType;\n  [key: string]: any;\n}\n\nexport interface BanParticipantOptions {\n  name: string;\n  parameters: BanParticipantParameters;\n}\n\n// Export the type definition for the function\nexport type BanParticipantType = (options: BanParticipantOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BanParticipant {\n  /**\n   * Bans a participant from the session by removing them from the active and display names arrays,\n   * updating the participants list, and reordering the streams.\n   *\n   * @param {BanParticipantOptions} options - The options for banning a participant.\n   * @param {string} options.name - The name of the participant to be banned.\n   * @param {Object} options.parameters - The parameters required for banning the participant.\n   * @param {string[]} options.parameters.activeNames - The array of active participant names.\n   * @param {string[]} options.parameters.dispActiveNames - The array of display participant names.\n   * @param {Object[]} options.parameters.participants - The array of participant objects.\n   * @param {Function} options.parameters.updateParticipants - The function to update the participants array.\n   * @param {Function} options.parameters.reorderStreams - The function to reorder the streams.\n   *\n   * @returns {Promise<void>} A promise that resolves when the participant has been banned and streams reordered.\n   */\n  banParticipant = async ({ name, parameters }: BanParticipantOptions): Promise<void> => {\n    const { activeNames, dispActiveNames, participants, updateParticipants, reorderStreams } =\n      parameters;\n\n    // Check if the participant is in the active or display names array\n    if (activeNames.includes(name) || dispActiveNames.includes(name)) {\n      // Filter out the banned participant from the participants array\n      const updatedParticipants = participants.filter(\n        (participant: Participant) => participant.name !== name,\n      );\n\n      // Update the participants array\n      updateParticipants(updatedParticipants);\n\n      // Reorder streams after participant removal\n      await reorderStreams({ add: false, screenChanged: true, parameters });\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { CoHostResponsibility, EventType, ShowAlert } from '../../@types/types';\nexport interface UpdatedCoHostOptions {\n  coHost: string;\n  coHostResponsibility: CoHostResponsibility[];\n  showAlert?: ShowAlert;\n  eventType: EventType;\n  islevel: string;\n  member: string;\n  youAreCoHost: boolean;\n  updateCoHost: (coHost: string) => void;\n  updateCoHostResponsibility: (responsibility: CoHostResponsibility[]) => void;\n  updateYouAreCoHost: (youAreCoHost: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type UpdatedCoHostType = (options: UpdatedCoHostOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdatedCoHost {\n  /**\n   * Updates the co-host information, responsibility, and user's co-host status based on the provided options.\n   *\n   * @param options - The options for updating the co-host.\n   * @param options.coHost - The co-host to be updated.\n   * @param options.coHostResponsibility - The responsibility of the co-host.\n   * @param options.showAlert - A function to show alerts.\n   * @param options.eventType - The type of event triggering the update.\n   * @param options.islevel - The level of the event.\n   * @param options.member - The member to be checked against the co-host.\n   * @param options.youAreCoHost - The current co-host status of the user.\n   * @param options.updateCoHost - A function to update the co-host.\n   * @param options.updateCoHostResponsibility - A function to update the co-host's responsibility.\n   * @param options.updateYouAreCoHost - A function to update the user's co-host status.\n   *\n   * @returns A promise that resolves when the co-host information has been updated.\n   */\n  updatedCoHost = async ({\n    coHost,\n    coHostResponsibility,\n    showAlert,\n    eventType,\n    islevel,\n    member,\n    youAreCoHost,\n    updateCoHost,\n    updateCoHostResponsibility,\n    updateYouAreCoHost,\n  }: UpdatedCoHostOptions): Promise<void> => {\n    // Update co-host information, responsibility, and user's co-host status\n    if (eventType !== 'broadcast' && eventType !== 'chat') {\n      // Only update the co-host if the event type is not broadcast or chat\n      updateCoHost(coHost);\n      updateCoHostResponsibility(coHostResponsibility);\n\n      if (member === coHost) {\n        if (!youAreCoHost) {\n          updateYouAreCoHost(true);\n\n          showAlert?.({\n            message: 'You are now a co-host.',\n            type: 'success',\n            duration: 3000,\n          });\n        }\n      } else {\n        updateYouAreCoHost(false);\n      }\n    } else {\n      if (islevel !== '2') {\n        updateYouAreCoHost(true);\n      }\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Request, WaitingRoomParticipant } from '../../@types/types';\nexport interface ParticipantRequestedOptions {\n  userRequest: Request;\n\n  requestList: Request[];\n  waitingRoomList: WaitingRoomParticipant[];\n  updateTotalReqWait: (count: number) => void;\n  updateRequestList: (list: Request[]) => void;\n}\n\n// Export the type definition for the function\nexport type ParticipantRequestedType = (options: ParticipantRequestedOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ParticipantRequested {\n  /**\n   * Handles a participant's request by adding it to the request list and updating the total count of requests and waiting room participants.\n   *\n   * @param {ParticipantRequestedOptions} options - The options for handling the participant's request.\n   * @param {UserRequest} options.userRequest - The user request to be added to the request list.\n   * @param {UserRequest[]} options.requestList - The current list of user requests.\n   * @param {UserRequest[]} options.waitingRoomList - The current list of participants in the waiting room.\n   * @param {Function} options.updateTotalReqWait - Function to update the total count of requests and waiting room participants.\n   * @param {Function} options.updateRequestList - Function to update the request list.\n   * @returns {Promise<void>} A promise that resolves when the participant's request has been handled.\n   */\n  participantRequested = async ({\n    userRequest,\n    requestList,\n    waitingRoomList,\n    updateTotalReqWait,\n    updateRequestList,\n  }: ParticipantRequestedOptions): Promise<void> => {\n    // Add the user request to the request list\n    const updatedRequestList = [...requestList, userRequest];\n    updateRequestList(updatedRequestList);\n\n    // Update the total count of requests and waiting room participants\n    const reqCount = updatedRequestList.length + waitingRoomList.length;\n    updateTotalReqWait(reqCount);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Participant } from '../../@types/types';\n\nexport interface ScreenProducerIdOptions {\n  producerId: string;\n  screenId: string;\n  membersReceived: boolean;\n  shareScreenStarted: boolean;\n  deferScreenReceived: boolean;\n  participants: Participant[];\n  updateScreenId: (id: string) => void;\n  updateShareScreenStarted: (started: boolean) => void;\n  updateDeferScreenReceived: (received: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type ScreenProducerIdType = (options: ScreenProducerIdOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScreenProducerId {\n  /**\n   * Handles the screen producer id.\n   *\n   * @param producerId - The id of the producer.\n   * @param screenId - The id of the screen.\n   * @param membersReceived - Whether the members data has been received.\n   * @param shareScreenStarted - Whether the screen sharing has started.\n   * @param deferScreenReceived - Whether the screen sharing has been deferred.\n   * @param participants - The list of participants.\n   * @param updateScreenId - Function to update the screen id.\n   * @param updateShareScreenStarted - Function to update the screen sharing status.\n   * @param updateDeferScreenReceived - Function to update the screen sharing defer status.\n   */\n  screenProducerId = ({\n    producerId,\n    screenId,\n    membersReceived,\n    shareScreenStarted,\n    deferScreenReceived,\n    participants,\n    updateScreenId,\n    updateShareScreenStarted,\n    updateDeferScreenReceived,\n  }: ScreenProducerIdOptions): void => {\n    // Check if members data has been received with the screenId participant in it\n    let host = participants.find(\n      (participant: Participant) =>\n        participant.ScreenID === screenId && participant.ScreenOn === true,\n    );\n\n    // Operations to update the UI\n    if (host && membersReceived) {\n      screenId = producerId;\n      shareScreenStarted = true;\n      deferScreenReceived = false;\n\n      updateScreenId(screenId);\n      updateShareScreenStarted(shareScreenStarted);\n      updateDeferScreenReceived(deferScreenReceived);\n    } else {\n      deferScreenReceived = true;\n      screenId = producerId;\n\n      updateScreenId(screenId);\n      updateDeferScreenReceived(deferScreenReceived);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Settings } from '../../@types/types';\nexport interface UpdateMediaSettingsOptions {\n  settings: Settings;\n  updateAudioSetting: (value: string) => void;\n  updateVideoSetting: (value: string) => void;\n  updateScreenshareSetting: (value: string) => void;\n  updateChatSetting: (value: string) => void;\n}\n\n// Export the type definition for the function\nexport type UpdateMediaSettingsType = (options: UpdateMediaSettingsOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateMediaSettings {\n  /**\n   * Updates the media settings by invoking the provided update functions for each setting.\n   *\n   * @param {Object} options - The options for updating the media settings.\n   * @param {Settings} options.settings - The media settings to update.\n   * @param {Function} options.updateAudioSetting - Function to update the audio setting.\n   * @param {Function} options.updateVideoSetting - Function to update the video setting.\n   * @param {Function} options.updateScreenshareSetting - Function to update the screenshare setting.\n   * @param {Function} options.updateChatSetting - Function to update the chat setting.\n   * @returns {void} A promise that resolves when the media settings have been updated.\n   * @memberof UpdateMediaSettings\n   */\n\n  updateMediaSettings = ({\n    settings,\n    updateAudioSetting,\n    updateVideoSetting,\n    updateScreenshareSetting,\n    updateChatSetting,\n  }: UpdateMediaSettingsOptions): void => {\n    const [audioSetting, videoSetting, screenshareSetting, chatSetting] = settings;\n\n    // Update audio setting\n    updateAudioSetting(audioSetting);\n    // Update video setting\n    updateVideoSetting(videoSetting);\n    // Update screenshare setting\n    updateScreenshareSetting(screenshareSetting);\n    // Update chat setting\n    updateChatSetting(chatSetting);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Participant,\n  PrepopulateUserMediaType,\n  ReorderStreamsType,\n  ReUpdateInterParameters,\n  ReUpdateInterType,\n  ReorderStreamsParameters,\n  PrepopulateUserMediaParameters,\n} from '../../@types/types';\n\nexport interface ProducerMediaPausedParameters\n  extends PrepopulateUserMediaParameters,\n    ReorderStreamsParameters,\n    ReUpdateInterParameters {\n  activeSounds: string[];\n  meetingDisplayType: string;\n  meetingVideoOptimized: boolean;\n  participants: Participant[];\n  oldSoundIds: string[];\n  shared: boolean;\n  shareScreenStarted: boolean;\n  updateMainWindow: boolean;\n  hostLabel: string;\n  islevel: string;\n  updateActiveSounds: (activeSounds: string[]) => void;\n  updateUpdateMainWindow: (updateMainWindow: boolean) => void;\n\n  // mediasfu functions\n  reorderStreams: ReorderStreamsType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  reUpdateInter: ReUpdateInterType;\n\n  getUpdatedAllParams: () => ProducerMediaPausedParameters;\n  [key: string]: any;\n}\n\nexport interface ProducerMediaPausedOptions {\n  producerId: string;\n  kind: 'audio' | 'video' | 'screenshare' | 'screen';\n  name: string;\n  parameters: ProducerMediaPausedParameters;\n}\n\n// Export the type definition for the function\nexport type ProducerMediaPausedType = (options: ProducerMediaPausedOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProducerMediaPaused {\n  /**\n   * Handles the event when media is paused for a producer.\n   *\n   * @param {ProducerMediaPausedOptions} options - The options for the producer media paused event.\n   * @param {string} options.producerId - The ID of the producer.\n   * @param {string} options.kind - The kind of media (e.g., \"audio\", \"video\").\n   * @param {string} options.name - The name of the producer.\n   * @param {Parameters} options.parameters - The parameters for the event.\n   *\n   * @returns {Promise<void>} A promise that resolves when the media paused handling is complete.\n   *\n   * @description\n   * This function handles the event when media is paused for a producer. It performs the following tasks:\n   * - Updates the parameters.\n   * - Iterates through participants and updates the UI based on their muted status and other conditions.\n   * - Handles meeting display type and optimizes the UI accordingly.\n   * - Manages audio media by updating the relevant participant's state.\n   */\n  producerMediaPaused = async ({\n    producerId,\n    kind,\n    name,\n    parameters,\n  }: ProducerMediaPausedOptions): Promise<void> => {\n    parameters = parameters.getUpdatedAllParams();\n\n    let {\n      activeSounds,\n      meetingDisplayType,\n      meetingVideoOptimized,\n      participants,\n      oldSoundIds,\n      shared,\n      shareScreenStarted,\n      updateMainWindow,\n      hostLabel,\n      islevel,\n      updateActiveSounds,\n      updateUpdateMainWindow,\n      reorderStreams,\n      prepopulateUserMedia,\n      reUpdateInter,\n    } = parameters;\n\n    await Promise.all(\n      participants.map(async (participant: any) => {\n        if (participant.muted) {\n          try {\n            if (\n              participant.islevel == '2' &&\n              !participant.videoID &&\n              !shared &&\n              !shareScreenStarted &&\n              islevel != '2'\n            ) {\n              updateMainWindow = true;\n              updateUpdateMainWindow(updateMainWindow);\n              await prepopulateUserMedia({ name: hostLabel, parameters });\n              updateMainWindow = false;\n              updateUpdateMainWindow(updateMainWindow);\n            }\n          } catch {\n            /* handle error */\n          }\n\n          if (shareScreenStarted || shared) {\n            if (activeSounds.includes(participant.name)) {\n              activeSounds = activeSounds.filter(\n                (audioStream: any) => audioStream != participant.name,\n              );\n              updateActiveSounds(activeSounds);\n            }\n            await reUpdateInter({ name: participant.name, add: false, force: true, parameters });\n          }\n        }\n      }),\n    );\n\n    let checker = false;\n    if (\n      meetingDisplayType == 'media' ||\n      (meetingDisplayType == 'video' && !meetingVideoOptimized)\n    ) {\n      const participant = participants.find((obj: any) => obj.name == name);\n      checker = !!participant?.videoID;\n      if (!checker && !shareScreenStarted && !shared) {\n        await reorderStreams({ add: false, screenChanged: true, parameters });\n      }\n    }\n\n    if (kind == 'audio') {\n      try {\n        const participant =\n          participants.find((obj: any) => obj.audioID == producerId) ||\n          participants.find((obj: any) => obj.name == name);\n        if (\n          participant &&\n          ((participant.name && oldSoundIds.includes(participant.name)) ||\n            (name && oldSoundIds.includes(name)))\n        ) {\n          reUpdateInter({\n            name: participant.name ?? '',\n            add: false,\n            force: true,\n            parameters,\n          });\n        }\n      } catch {\n        /* handle error */\n      }\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Participant,\n  PrepopulateUserMediaParameters,\n  PrepopulateUserMediaType,\n  ReorderStreamsParameters,\n  ReorderStreamsType,\n} from '../../@types/types';\n\nexport interface ProducerMediaResumedParameters\n  extends PrepopulateUserMediaParameters,\n    ReorderStreamsParameters {\n  meetingDisplayType: string;\n  participants: Participant[];\n  shared: boolean;\n  shareScreenStarted: boolean;\n  mainScreenFilled: boolean;\n  hostLabel: string;\n  updateUpdateMainWindow: (updateMainWindow: boolean) => void;\n\n  // mediasfu functions\n  reorderStreams: ReorderStreamsType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n\n  getUpdatedAllParams: () => ProducerMediaResumedParameters;\n  [key: string]: any;\n}\n\nexport interface ProducerMediaResumedOptions {\n  name: string;\n  kind: 'audio';\n  parameters: ProducerMediaResumedParameters;\n}\n\n// Export the type definition for the function\nexport type ProducerMediaResumedType = (options: ProducerMediaResumedOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProducerMediaResumed {\n  /**\n   * Resumes media for a specific participant in a meeting.\n   *\n   * @param {ProducerMediaResumedOptions} options - The options for resuming media.\n   * @param {string} options.name - The name of the participant whose media is to be resumed.\n   * @param {Object} options.parameters - The parameters related to the meeting and participants.\n   * @param {string} options.parameters.meetingDisplayType - The type of meeting display.\n   * @param {Array} options.parameters.participants - The list of participants in the meeting.\n   * @param {boolean} options.parameters.shared - Indicates if the screen is being shared.\n   * @param {boolean} options.parameters.shareScreenStarted - Indicates if screen sharing has started.\n   * @param {boolean} options.parameters.mainScreenFilled - Indicates if the main screen is filled.\n   * @param {string} options.parameters.hostLabel - The label of the host.\n   * @param {Function} options.parameters.updateUpdateMainWindow - Function to update the main window.\n   * @param {Function} options.parameters.reorderStreams - Function to reorder the streams.\n   * @param {Function} options.parameters.prepopulateUserMedia - Function to prepopulate user media.\n   *\n   * @returns {Promise<void>} A promise that resolves when the media has been resumed.\n   */\n  producerMediaResumed = async ({\n    name,\n    parameters,\n  }: ProducerMediaResumedOptions): Promise<void> => {\n    parameters = parameters.getUpdatedAllParams();\n\n    let {\n      meetingDisplayType,\n      participants,\n      shared,\n      shareScreenStarted,\n      updateMainWindow,\n      mainScreenFilled,\n      hostLabel,\n      updateUpdateMainWindow,\n      reorderStreams,\n      prepopulateUserMedia,\n    } = parameters;\n\n    // Update to resume the audio only of a participant\n    // name is the name of the participant\n    // kind is the kind of media (always audio)\n\n    // Operations to update UI to optimize interest levels\n    const participant = participants.find((obj: any) => obj.name == name);\n\n    if (!mainScreenFilled && participant?.islevel == '2') {\n      updateMainWindow = true;\n      updateUpdateMainWindow(updateMainWindow);\n      await prepopulateUserMedia({ name: hostLabel, parameters });\n      updateMainWindow = false;\n      updateUpdateMainWindow(updateMainWindow);\n    }\n\n    let checker;\n    if (meetingDisplayType == 'media') {\n      checker = participant?.videoID != null && participant.videoID !== '';\n\n      if (!checker && !(shareScreenStarted || shared)) {\n        await reorderStreams({ add: false, screenChanged: true, parameters });\n      }\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CloseAndResizeParameters,\n  CloseAndResizeType,\n  PrepopulateUserMediaParameters,\n  PrepopulateUserMediaType,\n  ReorderStreamsParameters,\n  ReorderStreamsType,\n  Transport,\n} from '../../@types/types';\n\nexport interface ProducerMediaClosedParameters\n  extends CloseAndResizeParameters,\n    PrepopulateUserMediaParameters,\n    ReorderStreamsParameters {\n  consumerTransports: Transport[];\n  updateConsumerTransports: (transports: Transport[]) => void;\n  hostLabel: string;\n  shared: boolean;\n  updateShared: (shared: boolean) => void;\n  updateShareScreenStarted: (started: boolean) => void;\n  updateScreenId: (screenId: string) => void;\n  updateShareEnded: (ended: boolean) => void;\n\n  // mediasfu functions\n  closeAndResize: CloseAndResizeType;\n  prepopulateUserMedia: PrepopulateUserMediaType;\n  reorderStreams: ReorderStreamsType;\n\n  getUpdatedAllParams: () => ProducerMediaClosedParameters;\n  [key: string]: any;\n}\n\nexport interface ProducerMediaClosedOptions {\n  producerId: string;\n  kind: 'video' | 'screen' | 'audio' | 'screenshare';\n  parameters: ProducerMediaClosedParameters;\n}\n\n// Export the type definition for the function\nexport type ProducerMediaClosedType = (options: ProducerMediaClosedOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProducerMediaClosed {\n  /**\n   * Handles the closure of a media producer.\n   *\n   * @param {ProducerMediaClosedOptions} options - The options for closing the media producer.\n   * @param {string} options.producerId - The ID of the producer to close.\n   * @param {string} options.kind - The kind of media (e.g., \"screenshare\" or \"screen\").\n   * @param {Parameters} options.parameters - The parameters object containing various methods and properties.\n   *\n   * @returns {Promise<void>} - A promise that resolves when the producer has been closed and necessary updates are made.\n   *\n   * @remarks\n   * This function performs the following steps:\n   * 1. Retrieves updated parameters.\n   * 2. Finds the transport associated with the producer to close.\n   * 3. Closes the consumer transport and consumer if found.\n   * 4. Updates the consumer transports list.\n   * 5. Calls `closeAndResize` with the necessary parameters.\n   * 6. If the producer kind is \"screenshare\" or \"screen\", updates shared state and calls various update methods.\n   */\n  producerMediaClosed = async ({\n    producerId,\n    kind,\n    parameters,\n  }: ProducerMediaClosedOptions): Promise<void> => {\n    parameters = parameters.getUpdatedAllParams();\n\n    const {\n      consumerTransports,\n      updateConsumerTransports,\n      hostLabel,\n      shared,\n      updateShared,\n      updateShareScreenStarted,\n      updateScreenId,\n      updateShareEnded,\n      closeAndResize,\n      prepopulateUserMedia,\n      reorderStreams,\n    } = parameters;\n\n    const producerToClose = consumerTransports.find(\n      (transportData: any) => transportData.producerId === producerId,\n    );\n\n    if (producerToClose) {\n      try {\n        await producerToClose['consumerTransport'].close();\n      } catch (error) {\n        console.error('Error closing consumer transport:', error);\n      }\n\n      try {\n        producerToClose.consumer.close();\n      } catch (error) {\n        console.error('Error closing consumer:', error);\n      }\n\n      const updatedConsumerTransports = consumerTransports.filter(\n        (transportData: any) => transportData.producerId !== producerId,\n      );\n      updateConsumerTransports(updatedConsumerTransports);\n\n      await closeAndResize({ producerId, kind, parameters });\n    } else {\n      if (kind === 'screenshare' || kind === 'screen') {\n        if (shared) {\n          updateShared(false);\n        } else {\n          updateShareScreenStarted(false);\n          updateScreenId('');\n        }\n        updateShareEnded(true);\n        await prepopulateUserMedia({ name: hostLabel, parameters });\n        await reorderStreams({ add: false, screenChanged: true, parameters });\n      }\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  OnScreenChangesType,\n  StopShareScreenType,\n  DisconnectSendTransportVideoType,\n  DisconnectSendTransportAudioType,\n  DisconnectSendTransportScreenType,\n  OnScreenChangesParameters,\n  StopShareScreenParameters,\n  DisconnectSendTransportVideoParameters,\n  DisconnectSendTransportAudioParameters,\n  DisconnectSendTransportScreenParameters,\n} from '../../@types/types';\nexport interface ControlMediaHostParameters\n  extends OnScreenChangesParameters,\n    StopShareScreenParameters,\n    DisconnectSendTransportVideoParameters,\n    DisconnectSendTransportAudioParameters,\n    DisconnectSendTransportScreenParameters {\n  updateAdminRestrictSetting: (value: boolean) => void;\n  localStream: MediaStream | null;\n  updateLocalStream: (stream: MediaStream | null) => void;\n  updateAudioAlreadyOn: (value: boolean) => void;\n  localStreamScreen: MediaStream | null;\n  updateLocalStreamScreen: (stream: MediaStream | null) => void;\n  localStreamVideo: MediaStream | null;\n  updateLocalStreamVideo: (stream: MediaStream | null) => void;\n\n  updateScreenAlreadyOn: (value: boolean) => void;\n  updateVideoAlreadyOn: (value: boolean) => void;\n  updateChatAlreadyOn: (value: boolean) => void;\n\n  // mediasfu functions\n  onScreenChanges: OnScreenChangesType;\n  stopShareScreen: StopShareScreenType;\n  disconnectSendTransportVideo: DisconnectSendTransportVideoType;\n  disconnectSendTransportAudio: DisconnectSendTransportAudioType;\n  disconnectSendTransportScreen: DisconnectSendTransportScreenType;\n\n  getUpdatedAllParams: () => ControlMediaHostParameters;\n  [key: string]: any;\n}\n\nexport interface ControlMediaHostOptions {\n  type: 'audio' | 'video' | 'screenshare' | 'chat' | 'all';\n  parameters: ControlMediaHostParameters;\n}\n\n// Export the type definition for the function\nexport type ControlMediaHostType = (options: ControlMediaHostOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ControlMediaHost {\n  /**\n   * Controls the media (audio, video, screenshare, chat) of a participant as a host.\n   *\n   * @param {object} options - The function parameters.\n   * @param {string} options.type - The type of media to control ('audio', 'video', 'screenshare', 'chat', 'all').\n   * @param {object} options.parameters - Additional parameters needed for the function.\n   * @param {boolean} options.parameters.adminRestrictSetting - The setting to restrict host control.\n   * @param {function} options.parameters.updateAdminRestrictSetting - Function to update the adminRestrictSetting.\n   * @param {MediaStream} options.parameters.localStream - The local audio and video stream.\n   * @param {function} options.parameters.updateLocalStream - Function to update the local audio and video stream.\n   * @param {boolean} options.parameters.audioAlreadyOn - Indicates whether audio is currently on.\n   * @param {function} options.parameters.updateAudioAlreadyOn - Function to update the audioAlreadyOn status.\n   * @param {MediaStream} options.parameters.localStreamScreen - The local screenshare stream.\n   * @param {function} options.parameters.updateLocalStreamScreen - Function to update the local screenshare stream.\n   * @param {MediaStream} options.parameters.localStreamVideo - The local video stream.\n   * @param {function} options.parameters.updateLocalStreamVideo - Function to update the local video stream.\n   * @param {boolean} options.parameters.screenAlreadyOn - Indicates whether screenshare is currently on.\n   * @param {function} options.parameters.updateScreenAlreadyOn - Function to update the screenAlreadyOn status.\n   * @param {boolean} options.parameters.videoAlreadyOn - Indicates whether video is currently on.\n   * @param {function} options.parameters.updateVideoAlreadyOn - Function to update the videoAlreadyOn status.\n   * @param {boolean} options.parameters.chatAlreadyOn - Indicates whether chat is currently on.\n   * @param {function} options.parameters.updateChatAlreadyOn - Function to update the chatAlreadyOn status.\n   * @param {function} options.parameters.onScreenChanges - Function to handle changes in screen status.\n   * @param {function} options.parameters.stopShareScreen - Function to stop sharing the screen.\n   * @param {function} options.parameters.disconnectSendTransportVideo - Function to disconnect video send transport.\n   * @param {function} options.parameters.disconnectSendTransportAudio - Function to disconnect audio send transport.\n   * @param {function} options.parameters.disconnectSendTransportScreen - Function to disconnect screenshare send transport.\n   */\n  controlMediaHost = async ({ type, parameters }: ControlMediaHostOptions): Promise<void> => {\n    let {\n      updateAdminRestrictSetting,\n      updateLocalStream,\n      updateAudioAlreadyOn,\n      updateLocalStreamScreen,\n      updateLocalStreamVideo,\n      updateScreenAlreadyOn,\n      updateVideoAlreadyOn,\n      updateChatAlreadyOn,\n      onScreenChanges,\n      stopShareScreen,\n      disconnectSendTransportVideo,\n      disconnectSendTransportAudio,\n      disconnectSendTransportScreen,\n    } = parameters;\n\n    let { localStream, localStreamScreen, localStreamVideo } = parameters.getUpdatedAllParams();\n\n    try {\n      updateAdminRestrictSetting(true);\n\n      if (type === 'audio') {\n        if (localStream) {\n          localStream.getAudioTracks()[0].enabled = false;\n        }\n        updateLocalStream(localStream);\n        await disconnectSendTransportAudio({ parameters });\n        updateAudioAlreadyOn(false);\n      } else if (type === 'video') {\n        try {\n          if (localStream) {\n            localStream.getVideoTracks()[0].enabled = false;\n          }\n          updateLocalStream(localStream);\n          await disconnectSendTransportVideo({ parameters });\n          await onScreenChanges({ changed: true, parameters });\n          updateVideoAlreadyOn(false);\n        } catch {\n          /* handle error */\n        }\n        try {\n          if (localStreamVideo) {\n            localStreamVideo.getVideoTracks()[0].enabled = false;\n            updateLocalStreamVideo(localStreamVideo);\n            await disconnectSendTransportVideo({ parameters });\n            await onScreenChanges({ changed: true, parameters });\n            updateVideoAlreadyOn(false);\n          }\n        } catch (error) {\n          onScreenChanges({ changed: true, parameters });\n        }\n      } else if (type === 'screenshare') {\n        if (localStreamScreen) {\n          localStreamScreen.getVideoTracks()[0].enabled = false;\n        }\n        updateLocalStreamScreen(localStreamScreen);\n        await disconnectSendTransportScreen({ parameters });\n        await stopShareScreen({ parameters });\n        updateScreenAlreadyOn(false);\n      } else if (type === 'chat') {\n        updateChatAlreadyOn(false);\n      } else if (type === 'all') {\n        try {\n          if (localStream) {\n            localStream.getAudioTracks()[0].enabled = false;\n          }\n          updateLocalStream(localStream);\n          await disconnectSendTransportAudio({ parameters });\n          updateAudioAlreadyOn(false);\n        } catch {\n          /* handle error */\n        }\n\n        try {\n          if (localStreamScreen) {\n            localStreamScreen.getVideoTracks()[0].enabled = false;\n          }\n          updateLocalStreamScreen(localStreamScreen);\n          await disconnectSendTransportScreen({ parameters });\n          await stopShareScreen({ parameters });\n          updateScreenAlreadyOn(false);\n        } catch {\n          /* handle error */\n        }\n\n        try {\n          if (localStream) {\n            localStream.getVideoTracks()[0].enabled = false;\n          }\n          updateLocalStream(localStream);\n          await disconnectSendTransportVideo({ parameters });\n          await onScreenChanges({ changed: true, parameters });\n          updateVideoAlreadyOn(false);\n        } catch {\n          /* handle error */\n        }\n        try {\n          if (localStreamVideo) {\n            localStreamVideo.getVideoTracks()[0].enabled = false;\n          }\n          updateLocalStreamVideo(localStreamVideo);\n          await disconnectSendTransportVideo({ parameters });\n          await onScreenChanges({ changed: true, parameters });\n          updateVideoAlreadyOn(false);\n        } catch (error) {\n          onScreenChanges({ changed: true, parameters });\n        }\n      }\n    } catch (error) {\n      console.error('Error in controlMediaHost:', error);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { EventType, ShowAlert } from '../../@types/types';\n\nexport interface MeetingEndedOptions {\n  showAlert?: ShowAlert;\n  redirectURL?: string;\n  onWeb: boolean;\n  eventType: EventType;\n  updateValidated?: (isValid: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type MeetingEndedType = (options: MeetingEndedOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MeetingEnded {\n  /**\n   * Handles the end of a meeting by showing an alert and redirecting the user.\n   *\n   * @param {MeetingEndedOptions} options - The options for handling the meeting end.\n   * @param {Function} options.showAlert - Function to show an alert message.\n   * @param {string} options.redirectURL - URL to redirect to after the meeting ends.\n   * @param {boolean} options.onWeb - Flag indicating if the application is running on the web.\n   * @param {string} options.eventType - Type of the event that triggered the meeting end.\n   *\n   * @returns {Promise<void>} A promise that resolves when the meeting end handling is complete.\n   */\n  meetingEnded = async ({\n    showAlert,\n    redirectURL,\n    onWeb,\n    eventType,\n  }: MeetingEndedOptions): Promise<void> => {\n    // Show an alert that the meeting has ended and wait for 2 seconds before redirecting to the home page\n    if (eventType !== 'chat') {\n      showAlert?.({\n        message: 'The event has ended. You will be redirected to the home page in 2 seconds.',\n        type: 'danger',\n        duration: 2000,\n      });\n    }\n\n    if (onWeb && redirectURL) {\n      setTimeout(() => {\n        window.location.href = redirectURL;\n      }, 2000);\n    } else {\n      // setTimeout(() => {\n      //   updateValidated(false);\n      // }, 2000);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\n\nexport interface DisconnectUserSelfOptions {\n  member: string;\n  roomName: string;\n  socket: Socket;\n}\n\n// Export the type definition for the function\nexport type DisconnectUserSelfType = (options: DisconnectUserSelfOptions) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class DisconnectUserSelf {\n  /**\n   * Disconnects the user from the specified room and bans them.\n   *\n   * @param {DisconnectUserSelfOptions} options - The options for disconnecting the user.\n   * @param {Object} options.member - The member object representing the user to disconnect.\n   * @param {string} options.roomName - The name of the room from which the user will be disconnected.\n   * @param {Socket} options.socket - The socket instance used to emit the disconnection request.\n   * @returns {Promise<void>} A promise that resolves when the disconnection request has been emitted.\n   */\n  disconnectUserSelf = async ({\n    member,\n    roomName,\n    socket,\n  }: DisconnectUserSelfOptions): Promise<void> => {\n    // Update that the user needs to be disconnected; this is initiated by the host when banning a user\n    socket.emit('disconnectUser', { member, roomName, ban: true });\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { EventType, Message, Participant } from '../../@types/types';\n\nexport interface ReceiveMessageOptions {\n  message: Message;\n  messages: Message[];\n  participantsAll: Participant[];\n  member: string;\n  eventType: EventType;\n  islevel: string;\n  coHost: string;\n  updateMessages: (messages: Message[]) => void;\n  updateShowMessagesBadge: (showBadge: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type ReceiveMessageType = (options: ReceiveMessageOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReceiveMessage {\n  /**\n   * Receives and processes a message, updating the messages array and handling\n   * various message types and events.\n   *\n   * @param {ReceiveMessageOptions} options - The options for receiving the message.\n   * @param {Object} options.message - The message object containing sender, receivers, content, timestamp, and group.\n   * @param {Function} options.getUpdatedAllParams - Function to get updated parameters.\n   * @param {Array} options.messages - Array of current messages.\n   * @param {Array} options.participantsAll - Array of all participants.\n   * @param {string} options.member - The current member.\n   * @param {string} options.eventType - The type of event (e.g., \"broadcast\", \"chat\").\n   * @param {string} options.islevel - The level of the current member.\n   * @param {string} options.coHost - The co-host of the event.\n   * @param {Function} options.updateMessages - Function to update the messages array.\n   * @param {Function} options.updateShowMessagesBadge - Function to update the visibility of the messages badge.\n   *\n   * @returns {Promise<void>} A promise that resolves when the message has been processed.\n   */\n\n  receiveMessage = async ({\n    message,\n    messages,\n    participantsAll,\n    member,\n    eventType,\n    islevel,\n    coHost,\n    updateMessages,\n    updateShowMessagesBadge,\n  }: ReceiveMessageOptions): Promise<void> => {\n    // Add the received message to the messages array\n    const { sender, receivers, message: content, timestamp, group } = message;\n    let oldMessages = messages;\n    messages = [...messages, { sender, receivers, message: content, timestamp, group }];\n\n    // Filter out messages with banned senders in the participants array\n    if (eventType !== 'broadcast' && eventType !== 'chat') {\n      messages = messages.filter((message: Message) =>\n        participantsAll.some(\n          (participant: any) => participant.name === message.sender && !participant.isBanned,\n        ),\n      );\n    } else {\n      messages = messages.filter((message: Message) => {\n        const participant = participantsAll.find(\n          (participant: any) => participant.name === message.sender,\n        );\n        return !participant || !participant.isBanned;\n      });\n    }\n    updateMessages(messages);\n\n    // Separate group and direct messages\n    const oldGroupMessages = oldMessages.filter((message: Message) => message.group);\n    const oldDirectMessages = oldMessages.filter((message: Message) => !message.group);\n\n    // Render and update counts for group messages\n    const groupMessages = messages.filter((message: Message) => message.group);\n\n    if (eventType !== 'broadcast' && eventType !== 'chat') {\n      // Check if oldGroupMessages length is different from groupMessages length\n      if (oldGroupMessages.length !== groupMessages.length) {\n        // Identify new messages\n        const newGroupMessages = groupMessages.filter(\n          (message: Message) =>\n            !oldGroupMessages.some(\n              (oldMessage: Message) => oldMessage.timestamp === message.timestamp,\n            ),\n        );\n\n        // Check if newGroupMessages sender is the member or receivers include the member\n        const newGroupMessages2 = newGroupMessages.filter(\n          (message: Message) => message.sender === member || message.receivers.includes(member),\n        );\n\n        // Check if member is the sender of any newGroupMessages\n        const newGroupMessages3 = newGroupMessages2.filter(\n          (message: Message) => message.sender === member,\n        );\n\n        // Check if member is the receiver of any newGroupMessages\n        if (newGroupMessages.length > 0 && newGroupMessages.length !== newGroupMessages3.length) {\n          updateShowMessagesBadge(true);\n        }\n      }\n    }\n\n    // Render and update counts for direct messages\n    const directMessages = messages.filter((message: Message) => !message.group);\n\n    if (eventType !== 'broadcast' && eventType !== 'chat') {\n      // Check if oldDirectMessages length is different from directMessages length\n      if (oldDirectMessages.length !== directMessages.length) {\n        // Identify new direct messages\n        const newDirectMessages = directMessages.filter(\n          (message: Message) =>\n            !oldDirectMessages.some(\n              (oldMessage: Message) => oldMessage.timestamp === message.timestamp,\n            ),\n        );\n\n        // Check if newDirectMessages sender is the member or receivers include the member\n        const newDirectMessages2 = newDirectMessages.filter(\n          (message: Message) => message.sender === member || message.receivers.includes(member),\n        );\n\n        // Check if member is the sender of any newDirectMessages\n        const newDirectMessages3 = newDirectMessages2.filter(\n          (message: Message) => message.sender === member,\n        );\n\n        if (\n          (newDirectMessages.length > 0 && newDirectMessages2.length > 0) ||\n          (newDirectMessages.length > 0 && islevel === '2') ||\n          coHost === member\n        ) {\n          if (islevel === '2' || coHost === member) {\n            if (newDirectMessages.length !== newDirectMessages3.length) {\n              updateShowMessagesBadge(true);\n            }\n          } else {\n            if (\n              newDirectMessages2.length > 0 &&\n              newDirectMessages.length !== newDirectMessages3.length\n            ) {\n              updateShowMessagesBadge(true);\n            }\n          }\n        }\n      }\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { EventType, ShowAlert } from '../../@types/types';\n\nexport interface MeetingTimeRemainingOptions {\n  timeRemaining: number;\n  showAlert?: ShowAlert;\n  eventType: EventType;\n}\n\n// Export the type definition for the function\nexport type MeetingTimeRemainingType = (options: MeetingTimeRemainingOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MeetingTimeRemaining {\n  /**\n   * Handles the remaining time for a meeting and shows an alert if the event type is not 'chat'.\n   *\n   * @param {Object} options - The options for the meeting time remaining.\n   * @param {number} options.timeRemaining - The remaining time in milliseconds.\n   * @param {Function} options.showAlert - The function to show an alert message.\n   * @param {string} options.eventType - The type of the event.\n   * @returns {Promise<void>} A promise that resolves when the operation is complete.\n   */\n  meetingTimeRemaining = async ({\n    timeRemaining,\n    showAlert,\n    eventType,\n  }: MeetingTimeRemainingOptions): Promise<void> => {\n    // Convert time from milliseconds to readable format of minutes and seconds\n    const minutes = Math.floor(timeRemaining / 60000);\n    const seconds = Math.floor((timeRemaining % 60000) / 1000);\n    const timeRemainingString = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n\n    // Show alert with time remaining if eventType is not 'chat'\n    if (eventType !== 'chat') {\n      showAlert?.({\n        message: `The event will end in ${timeRemainingString} minutes.`,\n        type: 'success',\n        duration: 3000,\n      });\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nexport interface MeetingStillThereOptions {\n  updateIsConfirmHereModalVisible: (isVisible: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type MeetingStillThereType = (options: MeetingStillThereOptions) => Promise<void>;\n@Injectable({\n  providedIn: 'root',\n})\nexport class MeetingStillThere {\n  /**\n   * Handles the \"still there?\" meeting check by updating the visibility of the confirmation modal.\n   *\n   * @param {Object} options - The options for the meeting still there check.\n   * @param {Function} options.updateIsConfirmHereModalVisible - Function to update the visibility of the \"still there?\" modal.\n   * @returns {Promise<void>} A promise that resolves when the modal visibility is updated.\n   */\n  meetingStillThere = ({ updateIsConfirmHereModalVisible }: MeetingStillThereOptions): void => {\n    // Update the visibility of the \"still there?\" modal\n    updateIsConfirmHereModalVisible(true);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\n\nexport interface StartRecordsOptions {\n  roomName: string;\n  member: string;\n  socket: Socket;\n}\n\n// Export the type definition for the function\nexport type StartRecordsType = (options: StartRecordsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StartRecords {\n  /**\n   * Starts recording the room.\n   *\n   * @param {Object} options - The options for starting the recording.\n   * @param {string} options.roomName - The name of the room to start recording.\n   * @param {string} options.member - The member starting the recording.\n   * @param {Socket} options.socket - The socket instance for communication.\n   *\n   * @returns {Promise<void>} A promise that resolves when the recording is started.\n   */\n  startRecords = async ({ roomName, member, socket }: StartRecordsOptions): Promise<void> => {\n    // Send the 'startRecording' event to the server with roomName and member information\n    socket.emit('startRecordIng', { roomName, member }, ({ success }: { success: boolean }) => {\n      // Handle the success or failure of starting recording (if needed)\n      if (success) {\n        console.log('Recording started successfully');\n      } else {\n        console.log('Recording failed to start');\n      }\n    });\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'socket.io-client';\n\nexport interface ReInitiateRecordingOptions {\n  roomName: string;\n  member: string;\n  socket: Socket;\n  adminRestrictSetting: boolean;\n}\n\n// Export the type definition for the function\nexport type ReInitiateRecordingType = (options: ReInitiateRecordingOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReInitiateRecording {\n  /**\n   * Re-initiates recording based on specific conditions.\n   * @async\n   * @function\n   * @param {ReInitiateRecordingOptions} options - The options for re-initiating recording.\n   * @param {string} options.roomName - The name of the room to re-initiate recording.\n   * @param {string} options.member - The member re-initiating the recording.\n   * @param {Socket} options.socket - The socket instance for communication.\n   * @param {boolean} options.adminRestrictSetting - Indicates whether the admin restrict setting is enabled.\n   * @returns {Promise<void>} A promise that resolves when the recording is re-initiated.\n   */\n\n  reInitiateRecording = async ({\n    roomName,\n    member,\n    socket,\n    adminRestrictSetting,\n  }: ReInitiateRecordingOptions): Promise<void> => {\n    if (!adminRestrictSetting) {\n      await new Promise<void>((resolve, reject) => {\n        socket.emit('startRecordIng', { roomName, member }, ({ success }: { success: boolean }) => {\n          if (success) {\n            resolve();\n          } else {\n            reject(new Error('Failed to re-initiate recording.'));\n          }\n        });\n      });\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  ConnectIpsType,\n  ConnectIpsParameters,\n  AltDomains,\n  ConsumeSocket,\n} from '../../@types/types';\nimport { RtpCapabilities } from 'mediasoup-client/lib/types';\n\nexport interface GetDomainsParameters extends ConnectIpsParameters {\n  roomRecvIPs: string[];\n  rtpCapabilities: RtpCapabilities | null;\n  consume_sockets: ConsumeSocket[];\n\n  // mediasfu functions\n  connectIps: ConnectIpsType;\n  getUpdatedAllParams: () => GetDomainsParameters;\n\n  [key: string]: any;\n}\n\nexport interface GetDomainsOptions {\n  domains: string[];\n  alt_domains: AltDomains;\n  apiUserName: string;\n  apiKey: string;\n  apiToken: string;\n  parameters: GetDomainsParameters;\n}\n\n// Export the type definition for the function\nexport type GetDomainsType = (options: GetDomainsOptions) => Promise<void>;\n\n/**\n * Service to handle domain-related operations.\n *\n * @class\n * @name GetDomains\n * @description This service provides a method to retrieve and process domains.\n *\n * @method\n * @name getDomains\n * @async\n * @param {Object} options - The options for retrieving domains.\n * @param {string[]} options.domains - The list of domains to process.\n * @param {Object} options.alt_domains - An object mapping domains to alternative domains.\n * @param {string} options.apiUserName - The API username for authentication.\n * @param {string} options.apiKey - The API key for authentication.\n * @param {string} options.apiToken - The API token for authentication.\n * @param {Object} options.parameters - Additional parameters for the operation.\n * @param {string[]} options.parameters.roomRecvIPs - The list of IPs currently in the room.\n * @param {Function} options.parameters.getUpdatedAllParams - A function to get updated parameters.\n * @param {Function} options.parameters.connectIps - A function to connect IPs.\n * @returns {Promise<void>} A promise that resolves when the operation is complete.\n * @throws {Error} Throws an error if the domain retrieval fails.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetDomains {\n  getDomains = async ({\n    domains,\n    alt_domains,\n    apiUserName,\n    apiKey,\n    apiToken,\n    parameters,\n  }: GetDomainsOptions): Promise<void> => {\n    const { roomRecvIPs, connectIps } = parameters;\n\n    const ipsToConnect: string[] = [];\n\n    let updatedConsumeSockets = parameters.getUpdatedAllParams().consume_sockets;\n\n    try {\n      for (const domain of domains) {\n        const ipToCheck = alt_domains[domain] || domain;\n        // Check if the IP is already in roomRecvIPs\n        if (!roomRecvIPs.includes(ipToCheck)) {\n          ipsToConnect.push(ipToCheck);\n        }\n      }\n\n      const [,] = await connectIps({\n        consume_sockets: updatedConsumeSockets,\n        remIP: ipsToConnect,\n        parameters,\n        apiUserName,\n        apiKey,\n        apiToken,\n      });\n\n      // Handle sockets_ and ips_ if needed\n    } catch (error) {\n      console.error('Error in getDomains: ', error);\n      throw new Error('Failed to retrieve domains.');\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ConnectIpsType,\n  GetDomainsType,\n  ConnectIpsParameters,\n  GetDomainsParameters,\n  AltDomains,\n  Participant,\n  ConsumeSocket,\n} from '../../@types/types';\n\nexport interface UpdateConsumingDomainsParameters\n  extends ConnectIpsParameters,\n    GetDomainsParameters {\n  participants: Participant[];\n  consume_sockets: ConsumeSocket[];\n\n  // mediasfu functions\n  connectIps: ConnectIpsType;\n  getDomains: GetDomainsType;\n\n  getUpdatedAllParams: () => UpdateConsumingDomainsParameters;\n  [key: string]: any;\n}\n\nexport interface UpdateConsumingDomainsOptions {\n  domains: string[];\n  alt_domains: AltDomains;\n  apiUserName: string;\n  apiKey: string;\n  apiToken: string;\n  parameters: UpdateConsumingDomainsParameters;\n}\n\n// Export the type definition for the function\nexport type UpdateConsumingDomainsType = (options: UpdateConsumingDomainsOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateConsumingDomains {\n  /**\n   * Updates the consuming domains based on the provided options.\n   *\n   * @param {Object} options - The options for updating the consuming domains.\n   * @param {Array<string>} options.domains - The consuming domains to update.\n   * @param {Object} options.alt_domains - The alternative consuming domains to update.\n   * @param {string} options.apiUserName - The API username for the consuming domains.\n   * @param {string} options.apiKey - The API key for the consuming domains.\n   * @param {string} options.apiToken - The API token for the consuming domains.\n   * @param {Object} options.parameters - The parameters for updating the consuming domains.\n   * @param {Array<Participant>} options.parameters.participants - The participants to update consuming domains for.\n   * @param {Array<ConsumeSocket>} options.parameters.consume_sockets - The consume sockets to update consuming domains for.\n   * @param {Function} options.parameters.getDomains - Function to get the consuming domains.\n   * @param {Function} options.parameters.connectIps - Function to connect IPs.\n   * @param {Function} options.parameters.getUpdatedAllParams - Function to get updated parameters.\n   *\n   * @returns {Promise<void>} A promise that resolves when the consuming domains have been updated.\n   *\n   * @throws Will log an error message if an error occurs during the update process.\n   */\n  updateConsumingDomains = async ({\n    domains,\n    alt_domains,\n    parameters,\n    apiUserName,\n    apiKey,\n    apiToken,\n  }: UpdateConsumingDomainsOptions): Promise<void> => {\n    let { participants, getDomains, consume_sockets, connectIps } = parameters;\n\n    parameters = parameters.getUpdatedAllParams();\n    consume_sockets = parameters.consume_sockets;\n\n    console.log('Updating consuming domains...');\n\n    try {\n      // Check if participants array is not empty\n      if (participants.length > 0) {\n        // Check if alt_domains has keys and remove duplicates\n        if (Object.keys(alt_domains).length > 0) {\n          console.log('Getting domains...');\n          await getDomains({ domains, alt_domains, apiUserName, apiKey, apiToken, parameters });\n        } else {\n          await connectIps({\n            consume_sockets,\n            remIP: domains,\n            parameters,\n            apiUserName,\n            apiKey,\n            apiToken,\n          });\n        }\n      }\n    } catch (error) {\n      console.log('Error in updateConsumingDomains: ', error);\n      // throw new Error('Failed to update consuming domains.');\n    }\n  };\n}\n","import { Injectable, Input, OnInit } from '@angular/core';\nexport interface SoundPlayerOptions {\n  soundUrl: string;\n}\n\n// Export the type definition for the function\nexport type SoundPlayerType = (options: SoundPlayerOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\n\n/**\n * Plays a sound from a given URL.\n * @class\n * @implements {OnInit}\n * @param {string} soundUrl - The URL of the sound to play.\n * @returns {void}\n * @example\n * const soundUrl = 'https://example.com/sound.mp3';\n * const soundPlayer = new SoundPlayer();\n * soundPlayer.playSound({ soundUrl });\n */\nexport class SoundPlayer implements OnInit {\n  @Input() soundUrl: string | undefined;\n\n  ngOnInit(): void {\n    const shouldPlaySound = true;\n\n    if (shouldPlaySound) {\n      if (this.soundUrl) {\n        this.playSound({ soundUrl: this.soundUrl });\n      } else {\n        console.log('Sound URL is not defined');\n      }\n    }\n  }\n\n  playSound({ soundUrl }: SoundPlayerOptions): void {\n    const audio = new Audio(soundUrl);\n    audio.play().catch((error) => console.error('Error playing sound:', error));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SoundPlayer } from '../../methods/utils/sound-player.service';\n\nimport { EventType, UserRecordingParams } from '../../@types/types';\n\nexport interface RecordingNoticeParameters {\n  islevel: string;\n  userRecordingParams: UserRecordingParams;\n  recordElapsedTime: number;\n  recordStartTime: number;\n  recordStarted: boolean;\n  recordPaused: boolean;\n  canLaunchRecord: boolean;\n  stopLaunchRecord: boolean;\n  recordStopped: boolean;\n  isTimerRunning: boolean;\n  canPauseResume: boolean;\n  eventType: EventType;\n\n  updateRecordingProgressTime: (time: string) => void;\n  updateShowRecordButtons: (show: boolean) => void;\n  updateUserRecordingParams: (params: UserRecordingParams) => void;\n  updateRecordingMediaOptions: (options: string) => void;\n  updateRecordingAudioOptions: (options: string) => void;\n  updateRecordingVideoOptions: (options: string) => void;\n  updateRecordingVideoType: (type: string) => void;\n  updateRecordingVideoOptimized: (optimized: boolean) => void;\n  updateRecordingDisplayType: (type: 'video' | 'media' | 'all') => void;\n  updateRecordingAddHLS: (addHLS: boolean) => void;\n  updateRecordingNameTags: (nameTags: boolean) => void;\n  updateRecordingBackgroundColor: (color: string) => void;\n  updateRecordingNameTagsColor: (color: string) => void;\n  updateRecordingOrientationVideo: (orientation: string) => void;\n  updateRecordingAddText: (addText: boolean) => void;\n  updateRecordingCustomText: (text: string) => void;\n  updateRecordingCustomTextPosition: (position: string) => void;\n  updateRecordingCustomTextColor: (color: string) => void;\n  updatePauseRecordCount: (count: number) => void;\n  updateRecordElapsedTime: (time: number) => void;\n  updateRecordStarted: (started: boolean) => void;\n  updateRecordPaused: (paused: boolean) => void;\n  updateCanLaunchRecord: (canLaunch: boolean) => void;\n  updateStopLaunchRecord: (stop: boolean) => void;\n  updateRecordStopped: (stopped: boolean) => void;\n  updateIsTimerRunning: (running: boolean) => void;\n  updateCanPauseResume: (canPause: boolean) => void;\n  updateRecordStartTime: (startTime: number) => void;\n  updateRecordState: (state: string) => void;\n\n  // mediasfu functions\n  [key: string]: any;\n}\n\nexport interface RecordingNoticeOptions {\n  state: string;\n  userRecordingParam: UserRecordingParams | null;\n  pauseCount: number;\n  timeDone: number;\n  parameters: RecordingNoticeParameters;\n}\n\n// Export the type definition for the function\nexport type RecordingNoticeType = (options: RecordingNoticeOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecordingNotice {\n  constructor(private SoundPlayerService: SoundPlayer) {}\n\n  /**\n   * Handles the recording notice state and updates various recording parameters accordingly.\n   *\n   * @param {Object} options - The options object.\n   * @param {string} options.state - The current state of the recording (e.g., \"pause\", \"stop\").\n   * @param {Object} options.userRecordingParam - The user recording parameters.\n   * @param {number} options.pauseCount - The count of pauses during the recording.\n   * @param {number} options.timeDone - The elapsed time of the recording.\n   * @param {Object} options.parameters - The parameters object containing various update functions and state variables.\n   * @param {string} options.parameters.islevel - The level of the recording.\n   * @param {Object} options.parameters.userRecordingParams - The user recording parameters.\n   * @param {number} options.parameters.pauseRecordCount - The count of pauses during the recording.\n   * @param {number} options.parameters.recordElapsedTime - The elapsed time of the recording.\n   * @param {number} options.parameters.recordStartTime - The start time of the recording.\n   * @param {boolean} options.parameters.recordStarted - Indicates if the recording has started.\n   * @param {boolean} options.parameters.recordPaused - Indicates if the recording is paused.\n   * @param {boolean} options.parameters.canLaunchRecord - Indicates if the recording can be launched.\n   * @param {boolean} options.parameters.stopLaunchRecord - Indicates if the recording launch should be stopped.\n   * @param {boolean} options.parameters.recordStopped - Indicates if the recording is stopped.\n   * @param {boolean} options.parameters.isTimerRunning - Indicates if the timer is running.\n   * @param {boolean} options.parameters.canPauseResume - Indicates if the recording can be paused or resumed.\n   * @param {string} options.parameters.eventType - The type of event triggering the recording notice.\n   * @param {Function} options.parameters.updateRecordingProgressTime - Function to update the recording progress time.\n   * @param {Function} options.parameters.updateShowRecordButtons - Function to update the visibility of record buttons.\n   * @param {Function} options.parameters.updateUserRecordingParams - Function to update user recording parameters.\n   * @param {Function} options.parameters.updateRecordingMediaOptions - Function to update recording media options.\n   * @param {Function} options.parameters.updateRecordingAudioOptions - Function to update recording audio options.\n   * @param {Function} options.parameters.updateRecordingVideoOptions - Function to update recording video options.\n   * @param {Function} options.parameters.updateRecordingVideoType - Function to update recording video type.\n   * @param {Function} options.parameters.updateRecordingVideoOptimized - Function to update recording video optimization.\n   * @param {Function} options.parameters.updateRecordingDisplayType - Function to update recording display type.\n   * @param {Function} options.parameters.updateRecordingAddHLS - Function to update HLS addition in recording.\n   * @param {Function} options.parameters.updateRecordingNameTags - Function to update recording name tags.\n   * @param {Function} options.parameters.updateRecordingBackgroundColor - Function to update recording background color.\n   * @param {Function} options.parameters.updateRecordingNameTagsColor - Function to update recording name tags color.\n   * @param {Function} options.parameters.updateRecordingOrientationVideo - Function to update recording orientation video.\n   * @param {Function} options.parameters.updateRecordingAddText - Function to update recording text addition.\n   * @param {Function} options.parameters.updateRecordingCustomText - Function to update custom text in recording.\n   * @param {Function} options.parameters.updateRecordingCustomTextPosition - Function to update custom text position.\n   * @param {Function} options.parameters.updateRecordingCustomTextColor - Function to update custom text color.\n   * @param {Function} options.parameters.updatePauseRecordCount - Function to update pause record count.\n   * @param {Function} options.parameters.updateRecordElapsedTime - Function to update record elapsed time.\n   * @param {Function} options.parameters.updateRecordStartTime - Function to update record start time.\n   * @param {Function} options.parameters.updateRecordStarted - Function to update record started status.\n   * @param {Function} options.parameters.updateRecordPaused - Function to update record paused status.\n   * @param {Function} options.parameters.updateCanLaunchRecord - Function to update can launch record status.\n   * @param {Function} options.parameters.updateStopLaunchRecord - Function to update stop launch record status.\n   * @param {Function} options.parameters.updateRecordStopped - Function to update record stopped status.\n   * @param {Function} options.parameters.updateIsTimerRunning - Function to update timer running status.\n   * @param {Function} options.parameters.updateCanPauseResume - Function to update can pause/resume status.\n   * @param {Function} options.parameters.updateRecordState - Function to update the record state.\n   *\n   * @returns {Promise<void>} A promise that resolves when the recording notice handling is complete.\n   *\n   * @throws {Error} Throws an error if handling the recording state and status fails.\n   */\n  RecordingNotice = async ({\n    state,\n    userRecordingParam,\n    pauseCount,\n    timeDone,\n    parameters,\n  }: RecordingNoticeOptions): Promise<void> => {\n    let {\n      islevel,\n      userRecordingParams,\n      pauseRecordCount,\n      recordElapsedTime,\n      recordStartTime,\n      recordStarted,\n      recordPaused,\n      canLaunchRecord,\n      stopLaunchRecord,\n      recordStopped,\n      isTimerRunning,\n      canPauseResume,\n      eventType,\n\n      updateRecordingProgressTime,\n      updateShowRecordButtons,\n      updateUserRecordingParams,\n      updateRecordingMediaOptions,\n      updateRecordingAudioOptions,\n      updateRecordingVideoOptions,\n      updateRecordingVideoType,\n      updateRecordingVideoOptimized,\n      updateRecordingDisplayType,\n      updateRecordingAddHLS,\n      updateRecordingNameTags,\n      updateRecordingBackgroundColor,\n      updateRecordingNameTagsColor,\n      updateRecordingOrientationVideo,\n      updateRecordingAddText,\n      updateRecordingCustomText,\n      updateRecordingCustomTextPosition,\n      updateRecordingCustomTextColor,\n      updatePauseRecordCount,\n      updateRecordElapsedTime,\n      updateRecordStartTime,\n      updateRecordStarted,\n      updateRecordPaused,\n      updateCanLaunchRecord,\n      updateStopLaunchRecord,\n      updateRecordStopped,\n      updateIsTimerRunning,\n      updateCanPauseResume,\n      updateRecordState,\n    } = parameters;\n\n    try {\n      if (islevel !== '2') {\n        if (state === 'pause') {\n          updateRecordStarted(true);\n          updateRecordPaused(true);\n          updateRecordState('yellow');\n          eventType !== 'broadcast' &&\n            this.SoundPlayerService.playSound({\n              soundUrl: 'https://www.mediasfu.com/sounds/record-paused.mp3',\n            });\n        } else if (state === 'stop') {\n          updateRecordStarted(true);\n          updateRecordStopped(true);\n          updateRecordState('green');\n          eventType !== 'broadcast' &&\n            this.SoundPlayerService.playSound({\n              soundUrl: 'https://www.mediasfu.com/sounds/record-stopped.mp3',\n            });\n        } else {\n          updateRecordState('red');\n          updateRecordStarted(true);\n          updateRecordPaused(false);\n          eventType !== 'broadcast' &&\n            this.SoundPlayerService.playSound({\n              soundUrl: 'https://www.mediasfu.com/sounds/record-progress.mp3',\n            });\n        }\n      } else {\n        if (state === 'pause') {\n          updateRecordState('yellow');\n          if (userRecordingParam) {\n            userRecordingParams.mainSpecs = userRecordingParam.mainSpecs;\n            userRecordingParams.dispSpecs = userRecordingParam.dispSpecs;\n            userRecordingParams.textSpecs = userRecordingParam.textSpecs;\n\n            updateUserRecordingParams(userRecordingParams);\n            updateRecordingMediaOptions(userRecordingParams.mainSpecs.mediaOptions);\n            updateRecordingAudioOptions(userRecordingParams.mainSpecs.audioOptions);\n            updateRecordingVideoOptions(userRecordingParams.mainSpecs.videoOptions);\n            updateRecordingVideoType(userRecordingParams.mainSpecs.videoType);\n            updateRecordingVideoOptimized(userRecordingParams.mainSpecs.videoOptimized);\n            updateRecordingDisplayType(userRecordingParams.mainSpecs.recordingDisplayType);\n            updateRecordingAddHLS(userRecordingParams.mainSpecs.addHLS);\n            updateRecordingNameTags(userRecordingParams.dispSpecs.nameTags);\n            updateRecordingBackgroundColor(userRecordingParams.dispSpecs.backgroundColor);\n            updateRecordingNameTagsColor(userRecordingParams.dispSpecs.nameTagsColor);\n            updateRecordingOrientationVideo(userRecordingParams.dispSpecs.orientationVideo);\n            updateRecordingAddText(userRecordingParams.textSpecs?.addText ?? false);\n            updateRecordingCustomText(userRecordingParams.textSpecs?.customText ?? '');\n            updateRecordingCustomTextPosition(\n              userRecordingParams.textSpecs?.customTextPosition ?? '',\n            );\n            updateRecordingCustomTextColor(userRecordingParams.textSpecs?.customTextColor ?? '');\n\n            pauseRecordCount = pauseCount;\n            updatePauseRecordCount(pauseRecordCount);\n\n            recordElapsedTime = timeDone;\n            recordElapsedTime = Math.floor(recordElapsedTime / 1000);\n            recordStartTime = Math.floor(Date.now() / 1000) - recordElapsedTime;\n            updateRecordStartTime(recordStartTime);\n            updateRecordElapsedTime(recordElapsedTime);\n\n            recordStarted = true;\n            recordPaused = true;\n            canLaunchRecord = false;\n            recordStopped = false;\n\n            updateRecordStarted(recordStarted);\n            updateRecordPaused(recordPaused);\n            updateCanLaunchRecord(canLaunchRecord);\n            updateRecordStopped(recordStopped);\n            updateShowRecordButtons(true);\n\n            isTimerRunning = false;\n            canPauseResume = true;\n\n            updateIsTimerRunning(isTimerRunning);\n            updateCanPauseResume(canPauseResume);\n\n            const formattedTime = this.formatElapsedTime(recordElapsedTime);\n            updateRecordingProgressTime(formattedTime);\n          }\n          this.SoundPlayerService.playSound({\n            soundUrl: 'https://www.mediasfu.com/sounds/record-paused.mp3',\n          });\n        } else if (state === 'stop') {\n          updateRecordStarted(true);\n          updateRecordStopped(true);\n          canLaunchRecord = false;\n          stopLaunchRecord = true;\n\n          updateRecordStarted(recordStarted);\n          updateRecordStopped(recordStopped);\n          updateCanLaunchRecord(canLaunchRecord);\n          updateStopLaunchRecord(stopLaunchRecord);\n          updateShowRecordButtons(false);\n\n          updateRecordState('green');\n          this.SoundPlayerService.playSound({\n            soundUrl: 'https://www.mediasfu.com/sounds/record-stopped.mp3',\n          });\n        } else {\n          updateRecordState('red');\n          updateRecordStarted(true);\n          updateRecordPaused(false);\n          this.SoundPlayerService.playSound({\n            soundUrl: 'https://www.mediasfu.com/sounds/record-progress.mp3',\n          });\n        }\n      }\n    } catch (error) {\n      console.log('Error in RecordingNotice: ', error);\n      // throw new Error(\"Failed to handle recording state and status.\");\n    }\n  };\n\n  private formatElapsedTime = (recordElapsedTime: number): string => {\n    const hours = Math.floor(recordElapsedTime / 3600);\n    const minutes = Math.floor((recordElapsedTime % 3600) / 60);\n    const seconds = recordElapsedTime % 60;\n\n    return `${this.padNumber(hours)}:${this.padNumber(minutes)}:${this.padNumber(seconds)}`;\n  };\n\n  private padNumber = (number: number): string => {\n    return number.toString().padStart(2, '0');\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert } from '../../@types/types';\n\nexport interface TimeLeftRecordingOptions {\n  timeLeft: number;\n  showAlert?: ShowAlert;\n}\n\n// Export the type definition for the function\nexport type TimeLeftRecordingType = (options: TimeLeftRecordingOptions) => void;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TimeLeftRecording {\n  /**\n   * Displays an alert message indicating the remaining time left for recording.\n   *\n   * @param {TimeLeftRecordingOptions} options - The options for the time left recording.\n   * @param {number} options.timeLeft - The amount of time left in seconds.\n   * @param {Function} options.showAlert - The function to display the alert message.\n   *\n   * @throws {Error} If there is an issue displaying the alert message.\n   */\n  timeLeftRecording = ({ timeLeft, showAlert }: TimeLeftRecordingOptions): void => {\n    try {\n      // Display alert message\n\n      showAlert?.({\n        message: `The recording will stop in less than ${timeLeft} seconds.`,\n        duration: 3000,\n        type: 'danger',\n      });\n    } catch (error) {\n      console.log('Error in timeLeftRecording: ', error);\n      // throw new Error(\"Failed to display the time left alert message.\");\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert } from '../../@types/types';\n\nexport interface StoppedRecordingOptions {\n  state: string;\n  reason: string;\n  showAlert?: ShowAlert;\n}\n\n// Export the type definition for the function\nexport type StoppedRecordingType = (options: StoppedRecordingOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoppedRecording {\n  /**\n   * Displays an alert message when the recording has stopped.\n   *\n   * @param {Object} options - The options for displaying the alert message.\n   * @param {string} options.state - The state of the recording.\n   * @param {string} options.reason - The reason for stopping the recording.\n   * @param {Function} options.showAlert - Function to show alerts.\n   * @returns {Promise<void>} A promise that resolves when the alert message is displayed.\n   */\n  stoppedRecording = async ({\n    state,\n    reason,\n    showAlert,\n  }: StoppedRecordingOptions): Promise<void> => {\n    try {\n      if (state === 'stop') {\n        showAlert?.({\n          message: `The recording has stopped - ${reason}.`,\n          duration: 3000,\n          type: 'danger',\n        });\n      }\n    } catch (error) {\n      console.error('Error in stoppedRecording: ', error);\n      // throw new Error(\"Failed to display the recording stopped alert message.\");\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert, Request, RequestResponse } from '../../@types/types';\n\nexport interface HostRequestResponseOptions {\n  requestResponse: RequestResponse;\n\n  showAlert?: ShowAlert;\n  requestList: Request[];\n  updateRequestList: (requestList: Request[]) => void;\n  updateMicAction: (action: boolean) => void;\n  updateVideoAction: (action: boolean) => void;\n  updateScreenAction: (action: boolean) => void;\n  updateChatAction: (action: boolean) => void;\n  updateAudioRequestState: (state: string | null) => void;\n  updateVideoRequestState: (state: string | null) => void;\n  updateScreenRequestState: (state: string | null) => void;\n  updateChatRequestState: (state: string | null) => void;\n  updateAudioRequestTime: (time: number) => void;\n  updateVideoRequestTime: (time: number) => void;\n  updateScreenRequestTime: (time: number) => void;\n  updateChatRequestTime: (time: number) => void;\n  updateRequestIntervalSeconds: number;\n}\n\n// Export the type definition for the function\nexport type HostRequestResponseType = (options: HostRequestResponseOptions) => Promise<void>;\n\n/**\n * Service to handle host request responses.\n *\n * @example\n * ```typescript\n * const hostRequestResponseService = new HostRequestResponse();\n * await hostRequestResponseService.hostRequestResponse({\n *   requestResponse: { id: '1', type: 'fa-microphone', name: 'John Doe', username: 'johndoe', action: 'accepted' },\n *   showAlert: (alert) => console.log(alert),\n *   requestList: [],\n *   updateRequestList: (list) => console.log(list),\n *   updateMicAction: (state) => console.log(state),\n *   updateVideoAction: (state) => console.log(state),\n *   updateScreenAction: (state) => console.log(state),\n *   updateChatAction: (state) => console.log(state),\n *   updateAudioRequestState: (state) => console.log(state),\n *   updateVideoRequestState: (state) => console.log(state),\n *   updateScreenRequestState: (state) => console.log(state),\n *   updateChatRequestState: (state) => console.log(state),\n *   updateAudioRequestTime: (time) => console.log(time),\n *   updateVideoRequestTime: (time) => console.log(time),\n *   updateScreenRequestTime: (time) => console.log(time),\n *   updateChatRequestTime: (time) => console.log(time),\n *   updateRequestIntervalSeconds: 30,\n * });\n * ```\n *\n * @typedef {Object} HostRequestResponseOptions\n * @property {Object} requestResponse - The request response object.\n * @property {Function} showAlert - Function to show alert messages.\n * @property {Array} requestList - List of current requests.\n * @property {Function} updateRequestList - Function to update the request list.\n * @property {Function} updateMicAction - Function to update microphone action state.\n * @property {Function} updateVideoAction - Function to update video action state.\n * @property {Function} updateScreenAction - Function to update screen action state.\n * @property {Function} updateChatAction - Function to update chat action state.\n * @property {Function} updateAudioRequestState - Function to update audio request state.\n * @property {Function} updateVideoRequestState - Function to update video request state.\n * @property {Function} updateScreenRequestState - Function to update screen request state.\n * @property {Function} updateChatRequestState - Function to update chat request state.\n * @property {Function} updateAudioRequestTime - Function to update audio request time.\n * @property {Function} updateVideoRequestTime - Function to update video request time.\n * @property {Function} updateScreenRequestTime - Function to update screen request time.\n * @property {Function} updateChatRequestTime - Function to update chat request time.\n * @property {number} updateRequestIntervalSeconds - Interval in seconds to update request time.\n *\n * @class\n * @classdesc This service handles the responses to host requests, updating the state and showing alerts based on the response.\n *\n * @method hostRequestResponse\n * @async\n * @param {HostRequestResponseOptions} options - The options for handling the host request response.\n * @returns {Promise<void>} A promise that resolves when the request response has been handled.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HostRequestResponse {\n  hostRequestResponse = async ({\n    requestResponse,\n    showAlert,\n    requestList,\n    updateRequestList,\n    updateMicAction,\n    updateVideoAction,\n    updateScreenAction,\n    updateChatAction,\n    updateAudioRequestState,\n    updateVideoRequestState,\n    updateScreenRequestState,\n    updateChatRequestState,\n    updateAudioRequestTime,\n    updateVideoRequestTime,\n    updateScreenRequestTime,\n    updateChatRequestTime,\n    updateRequestIntervalSeconds,\n  }: HostRequestResponseOptions): Promise<void> => {\n    // Filter out the request from the list\n    const filteredRequests = requestList.filter(\n      (request) =>\n        request.id !== requestResponse.id &&\n        request.icon !== requestResponse.type &&\n        request.name !== requestResponse.name &&\n        request.username !== requestResponse.username,\n    );\n    updateRequestList(filteredRequests);\n\n    const requestType = requestResponse.type;\n\n    // Handle accepted actions\n    if (requestResponse.action === 'accepted') {\n      switch (requestType) {\n        case 'fa-microphone':\n          showAlert?.({\n            message: 'Unmute request was accepted; click the mic button again to begin.',\n            type: 'success',\n            duration: 10000,\n          });\n          updateMicAction(true);\n          updateAudioRequestState('accepted');\n          break;\n        case 'fa-video':\n          showAlert?.({\n            message: 'Video request was accepted; click the video button again to begin.',\n            type: 'success',\n            duration: 10000,\n          });\n          updateVideoAction(true);\n          updateVideoRequestState('accepted');\n          break;\n        case 'fa-desktop':\n          showAlert?.({\n            message: 'Screenshare request was accepted; click the screen button again to begin.',\n            type: 'success',\n            duration: 10000,\n          });\n          updateScreenAction(true);\n          updateScreenRequestState('accepted');\n          break;\n        case 'fa-comments':\n          showAlert?.({\n            message: 'Chat request was accepted; click the chat button again to begin.',\n            type: 'success',\n            duration: 10000,\n          });\n          updateChatAction(true);\n          updateChatRequestState('accepted');\n          break;\n      }\n    } else {\n      // Handle rejected actions\n      let timerDate: Date;\n      switch (requestType) {\n        case 'fa-microphone':\n          showAlert?.({\n            message: 'Unmute request was not accepted',\n            type: 'danger',\n            duration: 10000,\n          });\n          updateAudioRequestState('rejected');\n          timerDate = new Date();\n          timerDate.setSeconds(timerDate.getSeconds() + updateRequestIntervalSeconds);\n          updateAudioRequestTime(timerDate.getTime());\n          break;\n        case 'fa-video':\n          showAlert?.({\n            message: 'Video request was not accepted',\n            type: 'danger',\n            duration: 10000,\n          });\n          updateVideoRequestState('rejected');\n          timerDate = new Date();\n          timerDate.setSeconds(timerDate.getSeconds() + updateRequestIntervalSeconds);\n          updateVideoRequestTime(timerDate.getTime());\n          break;\n        case 'fa-desktop':\n          showAlert?.({\n            message: 'Screenshare request was not accepted',\n            type: 'danger',\n            duration: 10000,\n          });\n          updateScreenRequestState('rejected');\n          timerDate = new Date();\n          timerDate.setSeconds(timerDate.getSeconds() + updateRequestIntervalSeconds);\n          updateScreenRequestTime(timerDate.getTime());\n          break;\n        case 'fa-comments':\n          showAlert?.({\n            message: 'Chat request was not accepted',\n            type: 'danger',\n            duration: 10000,\n          });\n          updateChatRequestState('rejected');\n          timerDate = new Date();\n          timerDate.setSeconds(timerDate.getSeconds() + updateRequestIntervalSeconds);\n          updateChatRequestTime(timerDate.getTime());\n          break;\n      }\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Participant,\n  Request,\n  ReorderStreamsType,\n  ReorderStreamsParameters,\n  SleepType,\n  ConnectIpsParameters,\n  OnScreenChangesParameters,\n  OnScreenChangesType,\n  ConnectIpsType,\n  ConsumeSocket,\n  CoHostResponsibility,\n  WaitingRoomParticipant,\n} from '../../@types/types';\n\nexport interface AllMembersParameters\n  extends ReorderStreamsParameters,\n    ConnectIpsParameters,\n    OnScreenChangesParameters {\n  participantsAll: Participant[];\n  participants: Participant[];\n  dispActiveNames: string[];\n  requestList: Request[];\n  coHost: string;\n  coHostResponsibility: CoHostResponsibility[];\n  lock_screen: boolean;\n  firstAll: boolean;\n  membersReceived: boolean;\n  roomRecvIPs: string[];\n  deferScreenReceived: boolean;\n  screenId?: string;\n  shareScreenStarted: boolean;\n  meetingDisplayType: string;\n  hostFirstSwitch: boolean;\n  waitingRoomList: WaitingRoomParticipant[];\n  islevel: string;\n\n  updateParticipantsAll: (participantsAll: Participant[]) => void;\n  updateParticipants: (participants: Participant[]) => void;\n  updateRequestList: (requestList: Request[]) => void;\n  updateCoHost: (coHost: string) => void;\n  updateCoHostResponsibility: (coHostRes: CoHostResponsibility[]) => void;\n  updateFirstAll: (firstAll: boolean) => void;\n  updateMembersReceived: (membersReceived: boolean) => void;\n  updateDeferScreenReceived: (deferScreenReceived: boolean) => void;\n  updateShareScreenStarted: (shareScreenStarted: boolean) => void;\n  updateHostFirstSwitch: (hostFirstSwitch: boolean) => void;\n  updateConsume_sockets: (sockets: ConsumeSocket[]) => void;\n  updateRoomRecvIPs: (ips: string[]) => void;\n  updateIsLoadingModalVisible: (visible: boolean) => void;\n  updateTotalReqWait: (total: number) => void;\n\n  // mediasfu functions\n  onScreenChanges: OnScreenChangesType;\n  connectIps: ConnectIpsType;\n  sleep: SleepType;\n  reorderStreams: ReorderStreamsType;\n\n  getUpdatedAllParams: () => AllMembersParameters;\n  [key: string]: any;\n}\n\nexport interface AllMembersOptions {\n  members: Participant[];\n  requestss: Request[];\n  coHoste: string;\n  coHostRes: CoHostResponsibility[];\n  parameters: AllMembersParameters;\n  consume_sockets: ConsumeSocket[];\n  apiUserName: string;\n  apiKey: string;\n  apiToken: string;\n}\n\n// Export the type definition for the function\nexport type AllMembersType = (options: AllMembersOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AllMembers {\n  /**\n   * allMembers - A method for handling various tasks related to participant management and UI updates.\n   * @param {Object} params - The parameters passed to the allMembers method.\n   * @param {Array} params.members - The array of participant members.\n   * @param {Array} params.requestss - The array of requests.\n   * @param {boolean} params.coHoste - The co-host state.\n   * @param {boolean} params.coHostRes - The co-host responsibility state.\n   * @param {Object} params.parameters - The object containing parameters for the allMembers method.\n   * @param {Array} params.consume_sockets - The array of consume sockets.\n   * @param {string} params.apiUserName - The API username.\n   * @param {string} params.apiKey - The API key.\n   * @param {string} params.apiToken - The API token.\n   * @returns {void} - No return value.\n   */\n\n  allMembers = async ({\n    members,\n    requestss,\n    coHoste,\n    coHostRes,\n    parameters,\n    consume_sockets,\n    apiUserName,\n    apiKey,\n    apiToken,\n  }: AllMembersOptions): Promise<void> => {\n    let {\n      participantsAll,\n      participants,\n      dispActiveNames,\n      requestList,\n      coHost,\n      coHostResponsibility,\n      lock_screen,\n      firstAll,\n      membersReceived,\n      roomRecvIPs,\n      deferScreenReceived,\n      screenId,\n      shareScreenStarted,\n      meetingDisplayType,\n      hostFirstSwitch,\n      waitingRoomList,\n      islevel,\n      updateParticipantsAll,\n      updateParticipants,\n      updateRequestList,\n      updateCoHost,\n      updateCoHostResponsibility,\n      updateFirstAll,\n      updateMembersReceived,\n      updateDeferScreenReceived,\n      updateShareScreenStarted,\n      updateHostFirstSwitch,\n      updateConsume_sockets,\n      updateRoomRecvIPs,\n      updateIsLoadingModalVisible,\n      updateTotalReqWait,\n\n      onScreenChanges,\n      connectIps,\n      reorderStreams,\n      sleep,\n    } = parameters;\n\n    // Filter out the participant that isBanned == true or isSuspended == true\n    participantsAll = members.map((participant) => ({\n      isBanned: participant.isBanned,\n      isSuspended: participant.isSuspended,\n      name: participant.name,\n      audioID: participant.audioID,\n      videoID: participant.videoID,\n    }));\n    updateParticipantsAll(participantsAll);\n\n    participants = members.filter(\n      (participant) => !participant.isBanned && !participant.isSuspended,\n    );\n    updateParticipants(participants);\n\n    // Check if dispActiveNames is not empty and contains the name of the participant that is not in the participants array\n    if (dispActiveNames.length > 0) {\n      let dispActiveNames_ = dispActiveNames.filter(\n        (name: string) => !participants.map((participant: any) => participant.name).includes(name),\n      );\n      if (dispActiveNames_.length > 0) {\n        await reorderStreams({ add: false, screenChanged: true, parameters });\n      }\n    }\n\n    // Operations to update the UI; make sure we are connected to the server before updating the UI\n    if (!membersReceived) {\n      if (roomRecvIPs.length < 1) {\n        // Keep checking every 0.01s\n        let checkIPs = setInterval(async () => {\n          if (roomRecvIPs.length > 0) {\n            clearInterval(checkIPs);\n\n            if (deferScreenReceived && screenId != null) {\n              shareScreenStarted = true;\n              updateShareScreenStarted(shareScreenStarted);\n            }\n\n            const [sockets_, ips_] = await connectIps({\n              consume_sockets,\n              remIP: roomRecvIPs,\n              parameters,\n              apiUserName,\n              apiKey,\n              apiToken,\n            });\n\n            if (sockets_ && ips_) {\n              updateConsume_sockets(sockets_);\n              updateRoomRecvIPs(ips_);\n            }\n\n            membersReceived = true;\n            updateMembersReceived(membersReceived);\n\n            await sleep({ ms: 250 });\n            updateIsLoadingModalVisible(false);\n            deferScreenReceived = false;\n            updateDeferScreenReceived(deferScreenReceived);\n          }\n        }, 10);\n      } else {\n        const [sockets_, ips_] = await connectIps({\n          consume_sockets,\n          remIP: roomRecvIPs,\n          parameters,\n          apiUserName,\n          apiKey,\n          apiToken,\n        });\n\n        if (sockets_ && ips_) {\n          updateConsume_sockets(sockets_);\n          updateRoomRecvIPs(ips_);\n        }\n        membersReceived = true;\n        updateMembersReceived(membersReceived);\n\n        if (deferScreenReceived && screenId != null) {\n          shareScreenStarted = true;\n          updateShareScreenStarted(shareScreenStarted);\n        }\n\n        await sleep({ ms: 250 });\n        updateIsLoadingModalVisible(false);\n        deferScreenReceived = false;\n        updateDeferScreenReceived(deferScreenReceived);\n      }\n    } else {\n      if (screenId != null) {\n        let host = participants.find(\n          (participant: any) => participant.ScreenID == screenId && participant.ScreenOn == true,\n        );\n        if (deferScreenReceived && screenId != null && host) {\n          shareScreenStarted = true;\n          updateShareScreenStarted(shareScreenStarted);\n        }\n      }\n    }\n\n    // Return requests for only ids that are in the participants array and update the count badge\n    requestList = requestss.filter((request) =>\n      participants.some((participant: any) => participant.id == request.id),\n    );\n    updateRequestList(requestList);\n\n    updateTotalReqWait(requestList.length + waitingRoomList.length);\n\n    if (coHoste !== undefined && coHoste !== null) {\n      coHost = coHoste;\n    }\n    updateCoHost(coHost);\n    if (coHostRes) {\n      coHostResponsibility = coHostRes;\n    }\n    updateCoHostResponsibility(coHostResponsibility);\n\n    try {\n      if (!lock_screen && !firstAll) {\n        await onScreenChanges({ parameters });\n\n        if (meetingDisplayType != 'all') {\n          firstAll = true;\n          updateFirstAll(firstAll);\n        }\n      } else {\n        if (islevel == '2') {\n          if (!hostFirstSwitch) {\n            await onScreenChanges({ parameters });\n            hostFirstSwitch = true; // Get self display\n            updateHostFirstSwitch(hostFirstSwitch);\n          }\n        }\n      }\n    } catch (error) {\n      console.log('allMembers OnScreen', error);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  Participant,\n  CoHostResponsibility,\n  OnScreenChangesType,\n  OnScreenChangesParameters,\n  Request,\n  ConnectIpsParameters,\n  ReorderStreamsParameters,\n  ConnectIpsType,\n  SleepType,\n  ReorderStreamsType,\n  Settings,\n  ConsumeSocket,\n} from '../../@types/types';\nexport interface AllMembersRestParameters\n  extends OnScreenChangesParameters,\n    ConnectIpsParameters,\n    ReorderStreamsParameters {\n  participantsAll: Participant[];\n  participants: Participant[];\n  dispActiveNames: string[];\n  requestList: Request[];\n  coHost: string;\n  coHostResponsibility: CoHostResponsibility[];\n  lock_screen: boolean;\n  firstAll: boolean;\n  membersReceived: boolean;\n  roomRecvIPs: string[];\n  deferScreenReceived: boolean;\n  screenId?: string;\n  shareScreenStarted: boolean;\n  meetingDisplayType: string;\n  audioSetting: string;\n  videoSetting: string;\n  screenshareSetting: string;\n  chatSetting: string;\n\n  updateParticipantsAll: (participantsAll: Participant[]) => void;\n  updateParticipants: (participants: Participant[]) => void;\n  updateRequestList: (requestList: Request[]) => void;\n  updateCoHost: (coHost: string) => void;\n  updateCoHostResponsibility: (coHostResponsibility: CoHostResponsibility[]) => void;\n  updateFirstAll: (firstAll: boolean) => void;\n  updateMembersReceived: (membersReceived: boolean) => void;\n  updateDeferScreenReceived: (deferScreenReceived: boolean) => void;\n  updateShareScreenStarted: (shareScreenStarted: boolean) => void;\n  updateAudioSetting: (audioSetting: string) => void;\n  updateVideoSetting: (videoSetting: string) => void;\n  updateScreenshareSetting: (screenshareSetting: string) => void;\n  updateChatSetting: (chatSetting: string) => void;\n  updateConsume_sockets: (consume_sockets: ConsumeSocket[]) => void;\n  updateRoomRecvIPs: (ips: string[]) => void;\n  updateIsLoadingModalVisible: (visible: boolean) => void;\n\n  // mediasfu functions\n  onScreenChanges: OnScreenChangesType;\n  connectIps: ConnectIpsType;\n  sleep: SleepType;\n  reorderStreams: ReorderStreamsType;\n\n  getUpdatedAllParams: () => AllMembersRestParameters;\n  [key: string]: any;\n}\n\nexport interface AllMembersRestOptions {\n  members: Participant[];\n  settings: Settings;\n  coHoste?: string;\n  coHostRes?: CoHostResponsibility[];\n  parameters: AllMembersRestParameters;\n  consume_sockets: ConsumeSocket[];\n  apiUserName: string;\n  apiKey: string;\n  apiToken: string;\n}\n\n// Export the type definition for the function\nexport type AllMembersRestType = (options: AllMembersRestOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AllMembersRest {\n  /**\n   * Handles various tasks related to participant management and UI updates.\n   * @param {Object} params - The parameters passed to the allMembersRest method.\n   * @param {Array} params.members - The array of participant members.\n   * @param {Array} params.settings - The array of settings.\n   * @param {boolean} params.coHoste - The co-host state.\n   * @param {boolean} params.coHostRes - The co-host responsibility state.\n   * @param {Object} params.parameters - The object containing parameters for the allMembersRest method.\n   * @param {Array} params.consume_sockets - The array of consume sockets.\n   * @param {string} params.apiUserName - The API username.\n   * @param {string} params.apiKey - The API key.\n   * @param {string} params.apiToken - The API token.\n   * @returns {void} - No return value.\n   */\n  async allMembersRest({\n    members,\n    settings,\n    coHoste,\n    coHostRes,\n    parameters,\n    consume_sockets,\n    apiUserName,\n    apiKey,\n    apiToken,\n  }: AllMembersRestOptions): Promise<void> {\n    let {\n      participantsAll,\n      participants,\n      dispActiveNames,\n      requestList,\n      coHost,\n      coHostResponsibility,\n      lock_screen,\n      firstAll,\n      membersReceived,\n      roomRecvIPs,\n      deferScreenReceived,\n      screenId,\n      shareScreenStarted,\n      meetingDisplayType,\n      audioSetting,\n      videoSetting,\n      screenshareSetting,\n      chatSetting,\n      updateParticipantsAll,\n      updateParticipants,\n      updateRequestList,\n      updateCoHost,\n      updateCoHostResponsibility,\n      updateFirstAll,\n      updateMembersReceived,\n      updateDeferScreenReceived,\n      updateShareScreenStarted,\n      updateAudioSetting,\n      updateVideoSetting,\n      updateScreenshareSetting,\n      updateChatSetting,\n      updateConsume_sockets,\n      updateRoomRecvIPs,\n      updateIsLoadingModalVisible,\n\n      onScreenChanges,\n      connectIps,\n      reorderStreams,\n      sleep,\n    } = parameters;\n\n    // Filter out the participant that isBanned == true or isSuspended == true\n    participantsAll = members.map((participant) => ({\n      isBanned: participant.isBanned,\n      isSuspended: participant.isSuspended,\n      name: participant.name,\n      audioID: participant.audioID,\n      videoID: participant.videoID,\n    }));\n    updateParticipantsAll(participantsAll);\n\n    participants = members.filter(\n      (participant) => !participant.isBanned && !participant.isSuspended,\n    );\n    updateParticipants(participants);\n\n    // Check if dispActiveNames is not empty and contains the name of the participant that is not in the participants array\n    if (dispActiveNames.length > 0) {\n      let dispActiveNames_ = dispActiveNames.filter(\n        (name: string) => !participants.map((participant: any) => participant.name).includes(name),\n      );\n      if (dispActiveNames_.length > 0 && membersReceived) {\n        await reorderStreams({ add: false, screenChanged: true, parameters });\n      }\n    }\n\n    // Operations to update the UI; make sure we are connected to the server before updating the UI\n    if (!membersReceived) {\n      if (roomRecvIPs.length < 1) {\n        // Keep checking every 0.01s\n        let checkIPs = setInterval(async () => {\n          if (roomRecvIPs.length > 0) {\n            clearInterval(checkIPs);\n\n            if (deferScreenReceived && screenId != null) {\n              shareScreenStarted = true;\n              updateShareScreenStarted(shareScreenStarted);\n            }\n\n            const [sockets_, ips_] = await connectIps({\n              consume_sockets,\n              remIP: roomRecvIPs,\n              parameters,\n              apiUserName,\n              apiKey,\n              apiToken,\n            });\n\n            if (sockets_ && ips_) {\n              updateConsume_sockets(sockets_);\n              updateRoomRecvIPs(ips_);\n            }\n\n            membersReceived = true;\n            updateMembersReceived(membersReceived);\n\n            await sleep({ ms: 250 });\n            updateIsLoadingModalVisible(false);\n            deferScreenReceived = false;\n            updateDeferScreenReceived(deferScreenReceived);\n          }\n        }, 10);\n      } else {\n        const [sockets_, ips_] = await connectIps({\n          consume_sockets,\n          remIP: roomRecvIPs,\n          parameters,\n          apiUserName,\n          apiKey,\n          apiToken,\n        });\n\n        if (sockets_ && ips_) {\n          updateConsume_sockets(sockets_);\n          updateRoomRecvIPs(ips_);\n        }\n        membersReceived = true;\n        updateMembersReceived(membersReceived);\n\n        if (deferScreenReceived && screenId != null) {\n          shareScreenStarted = true;\n          updateShareScreenStarted(shareScreenStarted);\n        }\n\n        await sleep({ ms: 250 });\n        updateIsLoadingModalVisible(false);\n        deferScreenReceived = false;\n        updateDeferScreenReceived(deferScreenReceived);\n      }\n    } else {\n      if (screenId != null) {\n        let host = participants.find(\n          (participant: any) => participant.ScreenID == screenId && participant.ScreenOn == true,\n        );\n        if (deferScreenReceived && screenId != null && host) {\n          shareScreenStarted = true;\n          updateShareScreenStarted(shareScreenStarted);\n        }\n      }\n    }\n\n    // Return requests for only ids that are in the participants array and update the count badge\n    let requests = requestList;\n    requestList = requests.filter((request: any) =>\n      participants.some((participant: any) => participant.id == request.id),\n    );\n    updateRequestList(requestList);\n\n    if (coHoste !== undefined && coHoste !== null) {\n      coHost = coHoste;\n    }\n    if (coHost !== undefined && coHost !== null) {\n      updateCoHost(coHost);\n    }\n    if (coHostRes !== undefined && coHostRes !== null) {\n      coHostResponsibility = coHostRes;\n    }\n    updateCoHostResponsibility(coHostResponsibility);\n\n    try {\n      if (!lock_screen && !firstAll) {\n        await onScreenChanges({ parameters });\n\n        if (meetingDisplayType != 'all') {\n          firstAll = true;\n          updateFirstAll(firstAll);\n        }\n      }\n    } catch (error) {\n      console.log('allMembersRest OnScreen', error);\n    }\n\n    try {\n      if (membersReceived) {\n        audioSetting = settings[0];\n        videoSetting = settings[1];\n        screenshareSetting = settings[2];\n        chatSetting = settings[3];\n\n        updateAudioSetting(audioSetting);\n        updateVideoSetting(videoSetting);\n        updateScreenshareSetting(screenshareSetting);\n        updateChatSetting(chatSetting);\n      }\n    } catch (error) {\n      console.log('allMembersRest Settings', error);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ShowAlert } from '../../@types/types';\n\nexport interface DisconnectOptions {\n  showAlert?: ShowAlert;\n  redirectURL?: string;\n  onWeb: boolean;\n  updateValidated?: (isValidated: boolean) => void;\n}\n\n// Export the type definition for the function\nexport type DisconnectType = (options: DisconnectOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Disconnect {\n  /**\n   * Handles the disconnection logic by either redirecting to a specified URL or showing an alert.\n   *\n   * @param {DisconnectOptions} options - The options for handling disconnection.\n   * @param {Function} options.showAlert - Function to display an alert message.\n   * @param {string} options.redirectURL - URL to redirect to if on the web.\n   * @param {boolean} options.onWeb - Flag indicating if the operation is on the web.\n   * @returns {Promise<void>} A promise that resolves when the disconnection handling is complete.\n   */\n  disconnect = async ({ showAlert, redirectURL, onWeb }: DisconnectOptions): Promise<void> => {\n    // Redirect to the specified URL on the web\n    if (onWeb && redirectURL) {\n      window.location.href = redirectURL;\n    } else {\n      // Display an alert and update the validated state\n      if (showAlert) {\n        showAlert({\n          message: 'You have been disconnected from the session.',\n          type: 'danger',\n          duration: 2000,\n        });\n      }\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n// canvas.service.ts\nimport { Injectable } from '@angular/core';\nimport { Producer } from 'mediasoup-client/lib/types';\nimport {\n  ConnectSendTransportScreenType,\n  CreateSendTransportType,\n  DisconnectSendTransportScreenType,\n  SleepType,\n  CreateSendTransportParameters,\n  DisconnectSendTransportScreenParameters,\n  ConnectSendTransportScreenParameters,\n} from '../../@types/types';\nexport interface CaptureCanvasStreamParameters\n  extends CreateSendTransportParameters,\n    DisconnectSendTransportScreenParameters,\n    ConnectSendTransportScreenParameters {\n  canvasWhiteboard: HTMLCanvasElement | null;\n  canvasStream: MediaStream | null;\n  updateCanvasStream: (stream: MediaStream | null) => void;\n  screenProducer: Producer | null;\n  transportCreated: boolean;\n  updateScreenProducer: (producer: Producer | null) => void;\n\n  // mediasfu functions\n  sleep: SleepType;\n  createSendTransport: CreateSendTransportType;\n  connectSendTransportScreen: ConnectSendTransportScreenType;\n  disconnectSendTransportScreen: DisconnectSendTransportScreenType;\n\n  getUpdatedAllParams: () => CaptureCanvasStreamParameters;\n  [key: string]: any;\n}\n\nexport interface CaptureCanvasStreamOptions {\n  parameters: CaptureCanvasStreamParameters;\n  start?: boolean;\n}\n\n// Export the type definition for the function\nexport type CaptureCanvasStreamType = (options: CaptureCanvasStreamOptions) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CaptureCanvasStream {\n  /**\n   * Capture the canvas stream.\n   * @param {Object} parameters - The parameters object.\n   * @param {boolean} [start=true] - Indicates whether to start capturing the stream.\n   * @returns {Promise<void>} - A promise that resolves when the canvas stream is captured.\n   */\n  captureCanvasStream = async ({\n    parameters,\n    start = true,\n  }: CaptureCanvasStreamOptions): Promise<void> => {\n    try {\n      parameters = parameters.getUpdatedAllParams();\n\n      let {\n        canvasWhiteboard,\n        canvasStream,\n        updateCanvasStream,\n        screenProducer,\n        transportCreated,\n        updateScreenProducer,\n        sleep,\n        createSendTransport,\n        connectSendTransportScreen,\n        disconnectSendTransportScreen,\n      } = parameters;\n\n      if (start && !canvasStream) {\n        // Wait for canvasWhiteboard to be available\n        let attempts = 0;\n        const maxAttempts = 20; // 2 seconds / 100ms intervals\n        while (!canvasWhiteboard && attempts < maxAttempts) {\n          await new Promise((resolve) => setTimeout(resolve, 100));\n          parameters = parameters.getUpdatedAllParams();\n          canvasWhiteboard = parameters.canvasWhiteboard;\n          attempts++;\n        }\n\n        if (!canvasWhiteboard) {\n          throw new Error('Canvas whiteboard not available.');\n        }\n        const stream = canvasWhiteboard!.captureStream(30);\n        canvasStream = stream;\n        updateCanvasStream(stream);\n\n        if (!transportCreated) {\n          await createSendTransport({ option: 'screen', parameters });\n        } else {\n          try {\n            screenProducer!.close();\n            updateScreenProducer(null);\n            await sleep({ ms: 500 });\n          } catch {\n            /* handle error */\n          }\n\n          await connectSendTransportScreen({ stream, parameters });\n        }\n      } else {\n        if (!start && canvasStream) {\n          canvasStream.getTracks().forEach((track: MediaStreamTrack) => track.stop());\n          canvasStream = null;\n          updateCanvasStream(null);\n          disconnectSendTransportScreen({ parameters });\n        }\n      }\n    } catch (error) {\n      console.log('Error in captureCanvasStream:', error);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Participant,\n  Stream,\n  ProcessConsumerTransportsAudioType,\n  ProcessConsumerTransportsAudioParameters,\n  Transport,\n  BreakoutParticipant,\n  EventType,\n} from '../@types/types';\n\nexport interface ResumePauseAudioStreamsParameters\n  extends ProcessConsumerTransportsAudioParameters {\n  breakoutRooms: BreakoutParticipant[][];\n  ref_participants: Participant[];\n  allAudioStreams: (Stream | Participant)[];\n  participants: Participant[];\n  islevel: string;\n  eventType: EventType;\n  consumerTransports: Transport[];\n  limitedBreakRoom: BreakoutParticipant[];\n  hostNewRoom: number;\n  member: string;\n  updateLimitedBreakRoom: (limitedBreakRoom: BreakoutParticipant[]) => void;\n\n  // mediasfu functions\n  processConsumerTransportsAudio: ProcessConsumerTransportsAudioType;\n  getUpdatedAllParams: () => ResumePauseAudioStreamsParameters;\n  [key: string]: any;\n}\n\nexport interface ResumePauseAudioStreamsOptions {\n  breakRoom?: number;\n  inBreakRoom?: boolean;\n  parameters: ResumePauseAudioStreamsParameters;\n}\n\n// Export the type definition for the function\nexport type ResumePauseAudioStreamsType = (\n  options: ResumePauseAudioStreamsOptions,\n) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResumePauseAudioStreams {\n  /**\n   * Resumes or pauses audio streams based on the provided options.\n   *\n   * @param {ResumePauseAudioStreamsOptions} options - The options for resuming or pausing audio streams.\n   * @param {number} [options.breakRoom=-1] - The ID of the break room.\n   * @param {boolean} [options.inBreakRoom=false] - Indicates if the participant is in a break room.\n   * @param {Parameters} options.parameters - The parameters required for processing audio streams.\n   *\n   * @returns {Promise<void>} A promise that resolves when the audio streams have been processed.\n   *\n   * @throws Will log an error message if there is an issue processing the audio streams.\n   */\n\n  resumePauseAudioStreams = async ({\n    breakRoom = -1,\n    inBreakRoom = false,\n    parameters,\n  }: ResumePauseAudioStreamsOptions): Promise<void> => {\n    let { getUpdatedAllParams } = parameters;\n    parameters = getUpdatedAllParams();\n\n    let {\n      breakoutRooms,\n      ref_participants,\n      allAudioStreams,\n      participants,\n      islevel,\n      eventType,\n      consumerTransports,\n      hostNewRoom,\n      member,\n\n      updateLimitedBreakRoom,\n      processConsumerTransportsAudio,\n    } = parameters;\n\n    let room: BreakoutParticipant[] = [];\n    let currentStreams: (Stream | Participant)[] = [];\n    // Determine the room based on breakout status\n    if (inBreakRoom && breakRoom !== -1) {\n      room = breakoutRooms[breakRoom];\n    } else {\n      room = ref_participants.filter(\n        (participant) =>\n          !breakoutRooms\n            .flat()\n            .map((obj) => obj.name)\n            .includes(participant.name),\n      );\n    }\n\n    updateLimitedBreakRoom(room);\n\n    try {\n      let addHostAudio = false;\n\n      if (islevel !== '2' && eventType === 'conference') {\n        const roomMember = breakoutRooms.find((r) => r.find((p) => p.name === member));\n        let memberBreakRoom = -1;\n        if (roomMember) {\n          memberBreakRoom = breakoutRooms.indexOf(roomMember);\n        }\n\n        if (\n          (inBreakRoom && breakRoom !== hostNewRoom) ||\n          (!inBreakRoom && hostNewRoom !== -1 && hostNewRoom !== memberBreakRoom)\n        ) {\n          const host = participants.find((obj) => obj.islevel === '2');\n          // Remove the host from the room\n          room = room.filter((participant) => participant.name !== host?.name);\n        } else {\n          if (\n            (inBreakRoom && breakRoom === hostNewRoom) ||\n            (!inBreakRoom && hostNewRoom === -1) ||\n            (!inBreakRoom && hostNewRoom === memberBreakRoom && memberBreakRoom !== -1)\n          ) {\n            addHostAudio = true;\n          }\n        }\n      }\n\n      for (let participant of room) {\n        let streams = allAudioStreams.filter((stream) => {\n          if (\n            (Object.prototype.hasOwnProperty.call(stream, 'producerId') && stream.producerId) ||\n            (Object.prototype.hasOwnProperty.call(stream, 'audioID') && stream.audioID)\n          ) {\n            let producerId = stream.producerId || stream.audioID;\n            let matchingParticipant = ref_participants.find((obj) => obj.audioID == producerId);\n            return matchingParticipant && matchingParticipant.name == participant.name;\n          }\n          // Return false if the stream doesn't meet the criteria\n          return false;\n        });\n\n        currentStreams.push(...streams);\n      }\n\n      // If webinar, add the host audio stream if it is not in the currentStreams\n      if (islevel !== '2' && (eventType === 'webinar' || addHostAudio)) {\n        const host = participants.find((obj) => obj.islevel === '2');\n        const hostStream = allAudioStreams.find((obj) => obj.producerId === host?.audioID);\n        if (hostStream && !currentStreams.includes(hostStream)) {\n          currentStreams.push(hostStream);\n          if (host?.name && !room.map((obj) => obj.name).includes(host.name)) {\n            room.push({ name: host?.name || '', breakRoom: -1 });\n          }\n          updateLimitedBreakRoom(room);\n        }\n      }\n\n      await processConsumerTransportsAudio({\n        consumerTransports,\n        lStreams: currentStreams,\n        parameters,\n      });\n    } catch (error) {\n      console.log('Error in resumePauseAudioStreams:', error);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Stream, Transport, Participant, SleepType } from '../@types/types';\n\nexport interface ProcessConsumerTransportsAudioParameters {\n  // mediasfu functions\n  sleep: SleepType;\n  [key: string]: any;\n}\n\nexport interface ProcessConsumerTransportsAudioOptions {\n  consumerTransports: Transport[];\n  lStreams: (Stream | Participant)[];\n  parameters: ProcessConsumerTransportsAudioParameters;\n}\n\n// Export the type definition for the function\nexport type ProcessConsumerTransportsAudioType = (\n  options: ProcessConsumerTransportsAudioOptions,\n) => Promise<void>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProcessConsumerTransportsAudio {\n  /**\n   * Processes consumer transports for audio streams by pausing and resuming them based on their current state and the provided streams.\n   *\n   * @param {Object} options - The options for processing consumer transports.\n   * @param {Array} options.consumerTransports - The list of consumer transports to process.\n   * @param {Array} options.lStreams - The list of local streams to check against.\n   * @param {Object} options.parameters - Additional parameters for processing.\n   * @param {Function} options.parameters.sleep - A function to pause execution for a specified duration.\n   *\n   * @returns {Promise<void>} A promise that resolves when the processing is complete.\n   *\n   * @throws Will throw an error if there is an issue processing the consumer transports.\n   */\n  processConsumerTransportsAudio = async ({\n    consumerTransports,\n    lStreams,\n    parameters,\n  }: ProcessConsumerTransportsAudioOptions): Promise<void> => {\n    try {\n      const { sleep } = parameters;\n\n      // Function to check if the producerId is valid\n      const isValidProducerId = (\n        producerId: string,\n        ...streamArrays: (Stream | Participant)[][]\n      ): boolean => {\n        return (\n          producerId !== null &&\n          producerId !== '' &&\n          streamArrays.some((streamArray) => {\n            return (\n              streamArray.length > 0 &&\n              streamArray.some((stream) => stream?.producerId === producerId)\n            );\n          })\n        );\n      };\n\n      // Get paused consumer transports that are audio\n      const consumerTransportsToResume = consumerTransports.filter(\n        (transport) =>\n          isValidProducerId(transport.producerId, lStreams) &&\n          transport.consumer?.paused === true &&\n          transport.consumer.kind === 'audio',\n      );\n\n      // Get unpaused consumer transports that are audio\n      const consumerTransportsToPause = consumerTransports.filter(\n        (transport) =>\n          transport.producerId &&\n          transport.producerId !== null &&\n          transport.producerId !== '' &&\n          !lStreams.some((stream) => stream.producerId === transport.producerId) &&\n          transport.consumer &&\n          transport.consumer.kind &&\n          transport.consumer.paused !== true &&\n          transport.consumer.kind === 'audio',\n      );\n\n      await sleep({ ms: 100 });\n\n      // Emit consumer.pause() for each transport to pause\n      for (const transport of consumerTransportsToPause) {\n        transport.consumer.pause();\n        transport.socket_.emit(\n          'consumer-pause',\n          { serverConsumerId: transport.serverConsumerTransportId },\n          async () => {\n            // Do something after the consumer is paused\n          },\n        );\n      }\n\n      // Emit consumer.resume() for each transport to resume\n      for (const transport of consumerTransportsToResume) {\n        transport.socket_.emit(\n          'consumer-resume',\n          { serverConsumerId: transport.serverConsumerTransportId },\n          async ({ resumed }: { resumed: boolean }) => {\n            if (resumed) {\n              transport.consumer.resume();\n            }\n          },\n        );\n      }\n    } catch (error: any) {\n      console.log(`Error in processConsumerTransportsAudio: ${error.message}`);\n    }\n  };\n}\n","import { Component, Input, Inject } from '@angular/core';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@Component({\n  selector: 'app-menu-widget',\n  standalone: true,\n  template: `\n    <div style=\"position: relative; display: inline-block;\">\n      <fa-icon [icon]=\"icon\" size=\"lg\" [ngStyle]=\"{ color: iconColor }\"></fa-icon>\n      <div\n        style=\"\n      position: absolute;\n      top: -8px;\n      right: -8px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    \"\n      >\n        <div\n          style=\"\n        background-color: red;\n        border-radius: 8px;\n        padding: 4px 8px;\n        min-width: 16px; /* Ensure a minimum width for consistent circular shape */\n        min-height: 16px; /* Ensure a minimum height for consistent circular shape */\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      \"\n          *ngIf=\"showBadge\"\n        >\n          <span style=\"color: white; font-size: 8px; font-weight: bold;\">\n            {{ badgeValue }}\n          </span>\n        </div>\n      </div>\n    </div>\n  `,\n  imports: [CommonModule, FontAwesomeModule],\n})\nexport class MenuWidget {\n  @Input() icon!: IconDefinition;\n  @Input() iconColor = 'black';\n  @Input() badgeValue!: number;\n  @Input() showBadge = false;\n\n  constructor(\n    @Inject('icon') icon: IconDefinition,\n    @Inject('iconColor') iconColor: string,\n    @Inject('badgeValue') badgeValue: number,\n    @Inject('showBadge') showBadge: boolean,\n  ) {\n    this.icon = icon;\n    this.iconColor = iconColor;\n    this.badgeValue = badgeValue;\n    this.showBadge = showBadge;\n  }\n}\n","import { Component, Input, Inject } from '@angular/core';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@Component({\n  selector: 'app-message-widget',\n  standalone: true,\n  template: `\n    <div style=\"position: relative; display: inline-block;\">\n      <fa-icon [icon]=\"icon\" size=\"lg\" [ngStyle]=\"{ color: iconColor }\"></fa-icon>\n      <div\n        style=\"\n      position: absolute;\n      top: -8px;\n      right: -8px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    \"\n      >\n        <div\n          style=\"\n        background-color: red;\n        border-radius: 8px;\n        padding: 4px 8px;\n        min-width: 16px; /* Ensure a minimum width for consistent circular shape */\n        min-height: 16px; /* Ensure a minimum height for consistent circular shape */\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      \"\n          *ngIf=\"showBadge\"\n        >\n          <span style=\"color: white; font-size: 8px; font-weight: bold;\">\n            {{ badgeValue }}\n          </span>\n        </div>\n      </div>\n    </div>\n  `,\n  imports: [CommonModule, FontAwesomeModule],\n})\nexport class MessageWidget {\n  @Input() icon!: IconDefinition;\n  @Input() iconColor = 'black';\n  @Input() badgeValue!: number;\n  @Input() showBadge = false;\n\n  constructor(\n    @Inject('icon') icon: IconDefinition,\n    @Inject('iconColor') iconColor: string,\n    @Inject('badgeValue') badgeValue: number,\n    @Inject('showBadge') showBadge: boolean,\n  ) {\n    this.icon = icon;\n    this.iconColor = iconColor;\n    this.badgeValue = badgeValue;\n    this.showBadge = showBadge;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlButtonsAltComponent } from '../control-buttons-alt-component/control-buttons-alt-component.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\ninterface RecordButton {\n  icon?: IconDefinition;\n  active?: boolean;\n  onPress?: () => void;\n  activeColor?: string;\n  inActiveColor?: string;\n  text?: string;\n}\n\n@Component({\n  selector: 'app-menu-record-widget',\n  standalone: true,\n  template: `\n    <app-control-buttons-alt-component\n      [buttons]=\"buttons\"\n      [direction]=\"direction\"\n      [showAspect]=\"true\"\n    ></app-control-buttons-alt-component>\n  `,\n  imports: [CommonModule, FontAwesomeModule, ControlButtonsAltComponent],\n})\nexport class MenuRecordWidget {\n  buttons: RecordButton[] = [];\n  direction: 'horizontal' | 'vertical' = 'horizontal';\n\n  constructor(\n    @Inject('buttons') buttons: RecordButton[],\n    @Inject('direction') direction: 'horizontal' | 'vertical',\n  ) {\n    this.buttons = buttons;\n    this.direction = direction;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-record-timer-widget',\n  standalone: true,\n  template: `\n    <div style=\"background-color: transparent; border-width: 0; padding: 0; margin: 2;\">\n      <span style=\"background-color: transparent; border-width: 0; padding: 0; margin: 0;\">\n        {{ recordingProgressTime }}\n      </span>\n    </div>\n  `,\n  imports: [CommonModule],\n})\nexport class RecordTimerWidget {\n  recordingProgressTime = '';\n\n  constructor(@Inject('recordingProgressTime') recordingProgressTime: string) {\n    this.recordingProgressTime = recordingProgressTime;\n  }\n}\n","import { Component, Input, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\n@Component({\n  selector: 'app-menu-participants-widget',\n  standalone: true,\n  template: `\n    <div\n      style=\"background-color: transparent; border-width: 0; padding: 0; margin: 5px; display: flex; flex-direction: row; align-items: center; justify-content: center;\"\n    >\n      <fa-icon [icon]=\"icon\" size=\"lg\" [ngStyle]=\"{ color: iconColor }\"></fa-icon>\n      <span style=\"background-color: transparent; border-width: 0; padding: 0; margin: 0;\">\n        {{ participantsCounter }}\n      </span>\n    </div>\n  `,\n  imports: [CommonModule, FontAwesomeModule],\n})\nexport class MenuParticipantsWidget {\n  @Input() icon!: IconDefinition;\n  @Input() iconColor = 'black';\n  @Input() participantsCounter!: number;\n\n  constructor(\n    @Inject('icon') icon: IconDefinition,\n    @Inject('iconColor') iconColor: string,\n    @Inject('participantsCounter') participantsCounter: number,\n  ) {\n    this.icon = icon;\n    this.iconColor = iconColor;\n    this.participantsCounter = participantsCounter;\n  }\n}\n","import { Component, Input, Inject, Optional } from '@angular/core';\nimport { faDesktop, faBan } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@Component({\n  selector: 'app-screen-share-button',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  template: `\n    <div style=\"position: relative; display: inline-block;\">\n      <!-- Desktop icon, change color based on disabled state -->\n      <fa-icon [icon]=\"faDesktop\" size=\"lg\" [style.color]=\"computedDisabled ? 'black' : 'green'\">\n      </fa-icon>\n\n      <!-- Red Ban icon on top if disabled -->\n      <fa-icon\n        *ngIf=\"computedDisabled\"\n        [icon]=\"faBan\"\n        size=\"lg\"\n        style=\"color: red; position: absolute; top: 0; right: 0;\"\n      >\n      </fa-icon>\n    </div>\n  `,\n})\nexport class ScreenShareWidget {\n  @Input() disabled = false; // Input to toggle disabled state\n\n  faDesktop = faDesktop;\n  faBan = faBan;\n\n  computedDisabled: boolean;\n\n  constructor(@Optional() @Inject('disabled') private injectedDisabled: boolean) {\n    // Use the injected value if provided, otherwise fall back to the @Input value\n    this.computedDisabled = this.injectedDisabled != null ? this.injectedDisabled : this.disabled;\n  }\n\n  ngOnChanges() {\n    // Update computedDisabled whenever the Input changes\n    if (this.injectedDisabled == null) {\n      this.computedDisabled = this.disabled;\n    }\n  }\n}\n","import {\n  Component,\n  HostListener,\n  Injector,\n  ChangeDetectorRef,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { Socket } from 'socket.io-client';\nimport {\n  faPlayCircle,\n  faPauseCircle,\n  faStopCircle,\n  faDotCircle,\n  faRecordVinyl,\n  faCog,\n  faUsers,\n  faClock,\n  faUserPlus,\n  faTools,\n  faDesktop,\n  faPoll,\n  faUserFriends,\n  faChalkboardTeacher,\n  faMicrophone,\n  faMicrophoneSlash,\n  faVideo,\n  faVideoSlash,\n  faShareAlt,\n  faSync,\n  faPhone,\n  faBars,\n  faComments,\n  faChartBar,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { initialValuesState } from '../../methods/utils/initial-values.util';\n\nimport { MainAspectComponent } from '../display-components/main-aspect-component/main-aspect-component.component';\nimport { LoadingModal } from '../display-components/loading-modal/loading-modal.component';\nimport { ControlButtonsComponent } from '../display-components/control-buttons-component/control-buttons-component.component';\nimport { ControlButtonsAltComponent } from '../display-components/control-buttons-alt-component/control-buttons-alt-component.component';\nimport { ControlButtonsComponentTouch } from '../display-components/control-buttons-component-touch/control-buttons-component-touch.component';\nimport { OtherGridComponent } from '../display-components/other-grid-component/other-grid-component.component';\nimport { MainScreenComponent } from '../display-components/main-screen-component/main-screen-component.component';\nimport { MainGridComponent } from '../display-components/main-grid-component/main-grid-component.component';\nimport { SubAspectComponent } from '../display-components/sub-aspect-component/sub-aspect-component.component';\nimport { MainContainerComponent } from '../display-components/main-container-component/main-container-component.component';\nimport { AlertComponent } from '../display-components/alert-component/alert.component.component';\nimport { MenuModal } from '../menu-components/menu-modal/menu-modal.component';\nimport { RecordingModal } from '../recording-components/recording-modal/recording-modal.component';\nimport { RequestsModal } from '../requests-components/requests-modal/requests-modal.component';\nimport { WaitingRoomModal } from '../waiting-components/waiting-room-modal.component';\nimport { DisplaySettingsModal } from '../display-settings-components/display-settings-modal.component';\nimport { EventSettingsModal } from '../event-settings-components/event-settings-modal/event-settings-modal.component';\nimport { CoHostModal } from '../co-host-components/co-host-modal/co-host-modal.component';\nimport { ParticipantsModal } from '../participants-components/participants-modal/participants-modal.component';\nimport { MessagesModal } from '../message-components/messages-modal/messages-modal.component';\nimport { MediaSettingsModal } from '../media-settings-components/media-settings-modal/media-settings-modal.component';\nimport { ConfirmExitModal } from '../exit-components/confirm-exit-modal/confirm-exit-modal.component';\nimport { ConfirmHereModal } from '../misc-components/confirm-here-modal/confirm-here-modal.component';\nimport { ShareEventModal } from '../misc-components/share-event-modal/share-event-modal.component';\nimport {\n  WelcomePage,\n  WelcomePageOptions,\n} from '../misc-components/welcome-page/welcome-page.component';\n\nimport { PollModal } from '../polls-components/poll-modal/poll-modal.component';\nimport { BackgroundModal } from '../background-components/background-modal/background-modal.component';\nimport { BreakoutRoomsModal } from '../breakout-components/breakout-rooms-modal.component';\nimport { ConfigureWhiteboardModal } from '../whiteboard-components/configure-whiteboard-modal/configure-whiteboard-modal.component';\nimport { Whiteboard } from '../whiteboard-components/whiteboard/whiteboard.component';\nimport { Screenboard } from '../screenboard-components/screenboard/screenboard.component';\nimport { ScreenboardModal } from '../screenboard-components/screenboard-modal/screenboard-modal.component';\n// pagination and display of media (samples)\nimport { Pagination } from '../display-components/pagination/pagination.component';\nimport { FlexibleGrid } from '../display-components/flexible-grid/flexible-grid.component';\nimport { FlexibleVideo } from '../display-components/flexible-video/flexible-video.component';\nimport { AudioGrid } from '../display-components/audio-grid/audio-grid.component';\n\nimport { MenuWidget } from '../display-components/control-widgets/menu-widget.component';\nimport { MessageWidget } from '../display-components/control-widgets/message-widget.component';\nimport { MenuRecordWidget } from '../display-components/control-widgets/menu-record-widget.component';\nimport { RecordTimerWidget } from '../display-components/control-widgets/record-timer-widget.component';\nimport { MenuParticipantsWidget } from '../display-components/control-widgets/menu-participants-widget.component';\nimport { ScreenShareWidget } from '../display-components/control-widgets/screenshare-widget.component';\n\nimport {\n  ButtonTouch,\n  ResponseJoinRoom,\n  CoHostResponsibility,\n  EventType,\n  Participant,\n  ConsumeSocket,\n  MeetingRoomParams,\n  VidCons,\n  HParamsType,\n  VParamsType,\n  ScreenParamsType,\n  AParamsType,\n  UserRecordingParams,\n  Stream,\n  AudioDecibels,\n  ScreenState,\n  GridSizes,\n  CustomMediaComponent,\n  Message,\n  WaitingRoomParticipant,\n  ComponentSizes,\n  Transport as TransportType,\n  Shape,\n  Poll,\n  BreakoutParticipant,\n  WhiteboardUser,\n  Request,\n  AllMembersData,\n  AllMembersRestData,\n  BreakoutRoomUpdatedData,\n  AllWaitingRoomMembersData,\n  MainButtonAlt,\n  MainCustomButton,\n  RecordParams,\n  SeedData,\n  UpdatedCoHostData,\n  Settings,\n  UpdateConsumingDomainsData,\n  RecordingNoticeData,\n  HostRequestResponseData,\n  PollUpdatedData,\n  PreJoinPageOptions,\n} from '../../@types/types';\n\n//import methods for control (samples)\n// Import methods for control (samples)\nimport { LaunchMenuModal } from '../../methods/menu-methods/launch-menu-modal.service';\nimport { LaunchRecording } from '../../methods/recording-methods/launch-recording.service';\nimport { StartRecording } from '../../methods/recording-methods/start-recording.service';\nimport { ConfirmRecording } from '../../methods/recording-methods/confirm-recording.service';\nimport { LaunchWaiting } from '../../methods/waiting-methods/launch-waiting.service';\nimport { launchCoHost } from '../../methods/co-host-methods/launch-co-host.service';\nimport { LaunchMediaSettings } from '../../methods/media-settings-methods/launch-media-settings.service';\nimport { LaunchDisplaySettings } from '../../methods/display-settings-methods/launch-display-settings.service';\nimport { LaunchSettings } from '../../methods/settings-methods/launch-settings.service';\nimport { LaunchRequests } from '../../methods/requests-methods/launch-requests.service';\nimport { LaunchParticipants } from '../../methods/participants-methods/launch-participants.service';\nimport { LaunchMessages } from '../../methods/message-methods/launch-messages.service';\nimport { LaunchConfirmExit } from '../../methods/exit-methods/launch-confirm-exit.service';\n\nimport { LaunchPoll } from '../../methods/polls-methods/launch-poll.service';\nimport { LaunchBreakoutRooms } from '../../methods/breakout-room-methods/launch-breakout-rooms.service';\nimport { LaunchConfigureWhiteboard } from '../../methods/whiteboard-methods/launch-configure-whiteboard.service';\n\n// mediasfu functions -- examples\nimport { SocketManager } from '../../sockets/socket-manager.service';\nimport { JoinRoomClient } from '../../producer-client/producer-client-emits/join-room-client.service';\nimport { UpdateRoomParametersClient } from '../../producer-client/producer-client-emits/update-room-parameters-client.service';\nimport { CreateDeviceClient } from '../../producer-client/producer-client-emits/create-device-client.service';\n\nimport { SwitchVideoAlt } from '../../methods/stream-methods/switch-video-alt.service';\nimport { ClickVideo } from '../../methods/stream-methods/click-video.service';\nimport { ClickAudio } from '../../methods/stream-methods/click-audio.service';\nimport { ClickScreenShare } from '../../methods/stream-methods/click-screen-share.service';\nimport { StreamSuccessVideo } from '../../consumers/stream-success-video.service';\nimport { StreamSuccessAudio } from '../../consumers/stream-success-audio.service';\nimport { StreamSuccessScreen } from '../../consumers/stream-success-screen.service';\nimport { StreamSuccessAudioSwitch } from '../../consumers/stream-success-audio-switch.service';\nimport { CheckPermission } from '../../consumers/check-permission.service';\n\n// mediasfu functions\nimport { UpdateMiniCardsGrid } from '../../consumers/update-mini-cards-grid.service';\nimport { MixStreams } from '../../consumers/mix-streams.service';\nimport { DispStreams } from '../../consumers/disp-streams.service';\nimport { StopShareScreen } from '../../consumers/stop-share-screen.service';\nimport { CheckScreenShare } from '../../consumers/check-screen-share.service';\nimport { StartShareScreen } from '../../consumers/start-share-screen.service';\nimport { RequestScreenShare } from '../../consumers/request-screen-share.service';\nimport { ReorderStreams } from '../../consumers/reorder-streams.service';\nimport { PrepopulateUserMedia } from '../../consumers/prepopulate-user-media.service';\nimport { GetVideos } from '../../consumers/get-videos.service';\nimport { RePort } from '../../consumers/re-port.service';\nimport { Trigger } from '../../consumers/trigger.service';\nimport { ConsumerResume } from '../../consumers/consumer-resume.service';\nimport { ConnectSendTransportAudio } from '../../consumers/connect-send-transport-audio.service';\nimport { ConnectSendTransportVideo } from '../../consumers/connect-send-transport-video.service';\nimport { ConnectSendTransportScreen } from '../../consumers/connect-send-transport-screen.service';\nimport { ProcessConsumerTransports } from '../../consumers/process-consumer-transports.service';\nimport { ResumePauseStreams } from '../../consumers/resume-pause-streams.service';\nimport { Readjust } from '../../consumers/readjust.service';\nimport { CheckGrid } from '../../consumers/check-grid.service';\nimport { GetEstimate } from '../../consumers/get-estimate.service';\nimport { CalculateRowsAndColumns } from '../../consumers/calculate-rows-and-columns.service';\nimport { AddVideosGrid } from '../../consumers/add-videos-grid.service';\nimport { OnScreenChanges } from '../../consumers/on-screen-changes.service';\nimport { sleep } from '../../methods/utils/sleep.util';\nimport { ChangeVids } from '../../consumers/change-vids.service';\nimport { CompareActiveNames } from '../../consumers/compare-active-names.service';\nimport { CompareScreenStates } from '../../consumers/compare-screen-states.service';\nimport { CreateSendTransport } from '../../consumers/create-send-transport.service';\nimport { ResumeSendTransportAudio } from '../../consumers/resume-send-transport-audio.service';\nimport { ReceiveAllPipedTransports } from '../../consumers/receive-all-piped-transports.service';\nimport { DisconnectSendTransportVideo } from '../../consumers/disconnect-send-transport-video.service';\nimport { DisconnectSendTransportAudio } from '../../consumers/disconnect-send-transport-audio.service';\nimport { DisconnectSendTransportScreen } from '../../consumers/disconnect-send-transport-screen.service';\nimport { ConnectSendTransport } from '../../consumers/connect-send-transport.service';\nimport { GetPipedProducersAlt } from '../../consumers/get-piped-producers-alt.service';\nimport { SignalNewConsumerTransport } from '../../consumers/signal-new-consumer-transport.service';\nimport { ConnectRecvTransport } from '../../consumers/connect-recv-transport.service';\nimport { ReUpdateInter } from '../../consumers/re-update-inter.service';\nimport { UpdateParticipantAudioDecibels } from '../../consumers/update-participant-audio-decibels.service';\nimport { CloseAndResize } from '../../consumers/close-and-resize.service';\nimport { AutoAdjust } from '../../consumers/auto-adjust.service';\nimport { SwitchUserVideoAlt } from '../../consumers/switch-user-video-alt.service';\nimport { SwitchUserVideo } from '../../consumers/switch-user-video.service';\nimport { SwitchUserAudio } from '../../consumers/switch-user-audio.service';\nimport { ReceiveRoomMessages } from '../../consumers/receive-room-messages.service';\nimport { FormatNumber } from '../../methods/utils/format-number.service';\nimport { ConnectIps } from '../../consumers/connect-ips.service';\n\nimport { PollUpdated } from '../../methods/polls-methods/poll-updated.service';\nimport { HandleCreatePoll } from '../../methods/polls-methods/handle-create-poll.service';\nimport { HandleVotePoll } from '../../methods/polls-methods/handle-vote-poll.service';\nimport { HandleEndPoll } from '../../methods/polls-methods/handle-end-poll.service';\n\nimport { BreakoutRoomUpdated } from '../../methods/breakout-room-methods/breakout-room-updated.service';\n\nimport { StartMeetingProgressTimer } from '../../methods/utils/meeting-timer/start-meeting-progress-timer.service';\nimport { UpdateRecording } from '../../methods/recording-methods/update-recording.service';\nimport { StopRecording } from '../../methods/recording-methods/stop-recording.service';\n\nimport { UserWaiting } from '../../producers/socket-receive-methods/user-waiting.service';\nimport { PersonJoined } from '../../producers/socket-receive-methods/person-joined.service';\nimport { AllWaitingRoomMembers } from '../../producers/socket-receive-methods/all-waiting-room-members.service';\nimport { RoomRecordParams } from '../../producers/socket-receive-methods/room-record-params.service';\nimport { BanParticipant } from '../../producers/socket-receive-methods/ban-participant.service';\nimport { UpdatedCoHost } from '../../producers/socket-receive-methods/updated-co-host.service';\nimport { ParticipantRequested } from '../../producers/socket-receive-methods/participant-requested.service';\nimport { ScreenProducerId } from '../../producers/socket-receive-methods/screen-producer-id.service';\nimport { UpdateMediaSettings } from '../../producers/socket-receive-methods/update-media-settings.service';\nimport { ProducerMediaPaused } from '../../producers/socket-receive-methods/producer-media-paused.service';\nimport { ProducerMediaResumed } from '../../producers/socket-receive-methods/producer-media-resumed.service';\nimport { ProducerMediaClosed } from '../../producers/socket-receive-methods/producer-media-closed.service';\nimport { ControlMediaHost } from '../../producers/socket-receive-methods/control-media-host.service';\nimport { MeetingEnded } from '../../producers/socket-receive-methods/meeting-ended.service';\nimport { DisconnectUserSelf } from '../../producers/socket-receive-methods/disconnect-user-self.service';\nimport { ReceiveMessage } from '../../producers/socket-receive-methods/receive-message.service';\nimport { MeetingTimeRemaining } from '../../producers/socket-receive-methods/meeting-time-remaining.service';\nimport { MeetingStillThere } from '../../producers/socket-receive-methods/meeting-still-there.service';\nimport { StartRecords } from '../../producers/socket-receive-methods/start-records.service';\nimport { ReInitiateRecording } from '../../producers/socket-receive-methods/re-initiate-recording.service';\nimport { GetDomains } from '../../producers/socket-receive-methods/get-domains.service';\nimport { UpdateConsumingDomains } from '../../producers/socket-receive-methods/update-consuming-domains.service';\nimport { RecordingNotice } from '../../producers/socket-receive-methods/recording-notice.service';\nimport { TimeLeftRecording } from '../../producers/socket-receive-methods/time-left-recording.service';\nimport { StoppedRecording } from '../../producers/socket-receive-methods/stopped-recording.service';\nimport { HostRequestResponse } from '../../producers/socket-receive-methods/host-request-response.service';\nimport { AllMembers } from '../../producers/socket-receive-methods/all-members.service';\nimport { AllMembersRest } from '../../producers/socket-receive-methods/all-members-rest.service';\nimport { Disconnect } from '../../producers/socket-receive-methods/disconnect.service';\n\nimport { CaptureCanvasStream } from '../../methods/whiteboard-methods/capture-canvas-stream.service';\nimport { ResumePauseAudioStreams } from '../../consumers/resume-pause-audio-streams.service';\nimport { ProcessConsumerTransportsAudio } from '../../consumers/process-consumer-transports-audio.service';\n\nimport {\n  Device,\n  Producer,\n  ProducerOptions,\n  RtpCapabilities,\n  Transport,\n} from 'mediasoup-client/lib/types';\nimport { SelfieSegmentation } from '@mediapipe/selfie_segmentation';\n\n/**\n * Options for configuring the MediasfuGeneric component.\n *\n * @typedef {Object} MediasfuGenericOptions\n * @property {(options: PreJoinPageOptions | WelcomePageOptions) => HTMLElement} [PrejoinPage] - A function that returns an HTMLElement for the pre-join page.\n * @property {{ apiUserName: string; apiKey: string }} [credentials] - Credentials for API access, including username and API key.\n * @property {boolean} [useLocalUIMode] - Flag to determine if the local UI mode should be used.\n * @property {SeedData} [seedData] - Data used for seeding the component.\n * @property {boolean} [useSeed] - Flag to determine if seed data should be used.\n * @property {string} [imgSrc] - Source URL for an image to be used in the component.\n */\nexport type MediasfuGenericOptions = {\n  PrejoinPage?: (options: PreJoinPageOptions | WelcomePageOptions) => HTMLElement;\n  credentials?: { apiUserName: string; apiKey: string };\n  useLocalUIMode?: boolean;\n  seedData?: SeedData;\n  useSeed?: boolean;\n  imgSrc?: string;\n};\n\n@Component({\n  selector: 'app-mediasfu-generic',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    CommonModule,\n    BreakoutRoomsModal,\n    BackgroundModal,\n    CoHostModal,\n    AlertComponent,\n    AudioGrid,\n    ControlButtonsAltComponent,\n    ControlButtonsComponentTouch,\n    ControlButtonsComponent,\n    FlexibleGrid,\n    FlexibleVideo,\n    LoadingModal,\n    Pagination,\n    SubAspectComponent,\n    DisplaySettingsModal,\n    EventSettingsModal,\n    ConfirmExitModal,\n    MediaSettingsModal,\n    MenuModal,\n    MessagesModal,\n    ConfirmHereModal,\n    ShareEventModal,\n    WelcomePage,\n    ParticipantsModal,\n    PollModal,\n    RecordingModal,\n    RequestsModal,\n    MainAspectComponent,\n    MainContainerComponent,\n    MainGridComponent,\n    MainScreenComponent,\n    OtherGridComponent,\n    Screenboard,\n    ScreenboardModal,\n    Whiteboard,\n    ConfigureWhiteboardModal,\n    WaitingRoomModal,\n    MenuWidget,\n    MessageWidget,\n    MenuRecordWidget,\n    RecordTimerWidget,\n    MenuParticipantsWidget,\n    ScreenShareWidget,\n  ],\n  template: `\n    <div\n      class=\"MediaSFU\"\n      [ngStyle]=\"{\n        height: '100vh',\n        width: '100vw',\n        maxWidth: '100vw',\n        maxHeight: '100vh',\n        overflow: 'hidden'\n      }\"\n    >\n      <ng-container *ngIf=\"!validated.value; else mainContent\">\n        <ng-container\n          *ngComponentOutlet=\"\n            PrejoinPageComponent.component;\n            injector: PrejoinPageComponent.injector\n          \"\n        >\n        </ng-container>\n      </ng-container>\n\n      <ng-template #mainContent>\n        <app-main-container-component>\n          <app-main-aspect-component\n            [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n            [defaultFraction]=\"1 - controlHeight.value\"\n            [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n            [updateIsWideScreen]=\"updateIsWideScreen\"\n            [updateIsMediumScreen]=\"updateIsMediumScreen\"\n            [updateIsSmallScreen]=\"updateIsSmallScreen\"\n          >\n            <app-main-screen-component\n              [doStack]=\"true\"\n              [mainSize]=\"mainHeightWidth.value\"\n              [defaultFraction]=\"1 - controlHeight.value\"\n              [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n              [updateComponentSizes]=\"updateComponentSizes\"\n            >\n              <app-main-grid-component\n                [height]=\"componentSizes.value.mainHeight\"\n                [width]=\"componentSizes.value.mainWidth\"\n                [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                [mainSize]=\"mainHeightWidth.value\"\n                [showAspect]=\"mainHeightWidth.value > 0\"\n                [timeBackgroundColor]=\"recordState.value\"\n                [meetingProgressTime]=\"meetingProgressTime.value\"\n              >\n                <app-flexible-video\n                  [customWidth]=\"componentSizes.value.mainWidth\"\n                  [customHeight]=\"componentSizes.value.mainHeight\"\n                  [rows]=\"1\"\n                  [columns]=\"1\"\n                  [componentsToRender]=\"mainGridStream.value\"\n                  [showAspect]=\"\n                    mainGridStream.value.length > 0 &&\n                    !(whiteboardStarted.value && !whiteboardEnded.value)\n                  \"\n                  [localStreamScreen]=\"localStreamScreen.value!\"\n                  [annotateScreenStream]=\"annotateScreenStream.value\"\n                  [Screenboard]=\"shared.value ? ScreenboardWidget : undefined\"\n                >\n                </app-flexible-video>\n                <app-whiteboard\n                  [customWidth]=\"componentSizes.value.mainWidth\"\n                  [customHeight]=\"componentSizes.value.mainHeight\"\n                  [parameters]=\"mediaSFUParameters\"\n                  [showAspect]=\"whiteboardStarted.value && !whiteboardEnded.value\"\n                ></app-whiteboard>\n                <app-control-buttons-component-touch\n                  [buttons]=\"controlBroadcastButtons\"\n                  [position]=\"'right'\"\n                  [location]=\"'bottom'\"\n                  [direction]=\"'vertical'\"\n                  [showAspect]=\"eventType.value === 'broadcast'\"\n                ></app-control-buttons-component-touch>\n                <app-control-buttons-component-touch\n                  [buttons]=\"recordButton\"\n                  [direction]=\"'horizontal'\"\n                  [showAspect]=\"\n                    eventType.value === 'broadcast' &&\n                    !showRecordButtons.value &&\n                    islevel.value === '2'\n                  \"\n                  [location]=\"'bottom'\"\n                  [position]=\"'middle'\"\n                ></app-control-buttons-component-touch>\n                <app-control-buttons-component-touch\n                  [buttons]=\"recordButtons\"\n                  [direction]=\"'horizontal'\"\n                  [showAspect]=\"\n                    eventType.value === 'broadcast' &&\n                    showRecordButtons.value &&\n                    islevel.value === '2'\n                  \"\n                  [location]=\"'bottom'\"\n                  [position]=\"'middle'\"\n                ></app-control-buttons-component-touch>\n              </app-main-grid-component>\n\n              <app-other-grid-component\n                [height]=\"componentSizes.value.otherHeight\"\n                [width]=\"componentSizes.value.otherWidth\"\n                [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                [showAspect]=\"mainHeightWidth.value !== 100\"\n                [timeBackgroundColor]=\"recordState.value\"\n                [showTimer]=\"mainHeightWidth.value === 0\"\n                [meetingProgressTime]=\"meetingProgressTime.value\"\n              >\n                <div\n                  *ngIf=\"doPaginate.value\"\n                  [ngStyle]=\"{\n                    width:\n                      paginationDirection.value == 'horizontal'\n                        ? componentSizes.value.otherWidth\n                        : paginationHeightWidth.value,\n                    height:\n                      paginationDirection.value == 'horizontal'\n                        ? paginationHeightWidth.value\n                        : componentSizes.value.otherHeight,\n                    display: doPaginate.value ? 'flex' : 'none',\n                    'flex-direction': paginationDirection.value == 'horizontal' ? 'row' : 'column',\n                    'justify-content': 'center',\n                    'align-items': 'center',\n                    padding: '0',\n                    margin: '0'\n                  }\"\n                >\n                  <app-pagination\n                    [totalPages]=\"numberPages.value\"\n                    [currentUserPage]=\"currentUserPage.value\"\n                    [showAspect]=\"doPaginate.value\"\n                    [paginationHeight]=\"paginationHeightWidth.value\"\n                    [direction]=\"paginationDirection.value\"\n                    [parameters]=\"mediaSFUParameters\"\n                  ></app-pagination>\n                </div>\n\n                <app-audio-grid [componentsToRender]=\"audioOnlyStreams.value\"></app-audio-grid>\n                <app-control-buttons-component-touch\n                  [buttons]=\"controlChatButtons\"\n                  [position]=\"'right'\"\n                  [location]=\"'bottom'\"\n                  [direction]=\"'vertical'\"\n                  [showAspect]=\"eventType.value === 'chat'\"\n                ></app-control-buttons-component-touch>\n                <app-flexible-grid\n                  [customWidth]=\"gridSizes.value.gridWidth!\"\n                  [customHeight]=\"gridSizes.value.gridHeight!\"\n                  [rows]=\"gridRows.value\"\n                  [columns]=\"gridCols.value\"\n                  [componentsToRender]=\"otherGridStreams.value[0]\"\n                  [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                ></app-flexible-grid>\n                <app-flexible-grid\n                  [customWidth]=\"gridSizes.value.altGridWidth!\"\n                  [customHeight]=\"gridSizes.value.altGridHeight!\"\n                  [rows]=\"altGridRows.value\"\n                  [columns]=\"altGridCols.value\"\n                  [componentsToRender]=\"otherGridStreams.value[1]\"\n                  [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                ></app-flexible-grid>\n              </app-other-grid-component>\n            </app-main-screen-component>\n          </app-main-aspect-component>\n\n          <app-sub-aspect-component\n            [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n            [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n            [defaultFractionSub]=\"controlHeight.value\"\n          >\n            <app-control-buttons-component\n              [buttons]=\"controlButtons\"\n              [buttonColor]=\"'black'\"\n              [buttonBackgroundColor]=\"{\n                default: 'transparent',\n                pressed: 'transparent'\n              }\"\n              [alignment]=\"'space-between'\"\n              [vertical]=\"false\"\n              [buttonsContainerStyle]=\"{\n                marginTop: '0',\n                marginBottom: '0',\n                backgroundColor: 'transparent'\n              }\"\n            ></app-control-buttons-component>\n          </app-sub-aspect-component>\n        </app-main-container-component>\n      </ng-template>\n\n      <app-menu-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isVisible]=\"isMenuModalVisible.value\"\n        [onClose]=\"onCloseMenuModal\"\n        [customButtons]=\"customMenuButtons\"\n        [roomName]=\"roomName.value\"\n        [adminPasscode]=\"adminPasscode.value\"\n        [islevel]=\"islevel.value\"\n      ></app-menu-modal>\n\n      <app-event-settings-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isEventSettingsModalVisible]=\"isSettingsModalVisible.value\"\n        [onEventSettingsClose]=\"onEventSettingsClose\"\n        [audioSetting]=\"audioSetting.value\"\n        [videoSetting]=\"videoSetting.value\"\n        [screenshareSetting]=\"screenshareSetting.value\"\n        [chatSetting]=\"chatSetting.value\"\n        [updateAudioSetting]=\"updateAudioSetting\"\n        [updateVideoSetting]=\"updateVideoSetting\"\n        [updateScreenshareSetting]=\"updateScreenshareSetting\"\n        [updateChatSetting]=\"updateChatSetting\"\n        [updateIsSettingsModalVisible]=\"updateIsSettingsModalVisible\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [showAlert]=\"showAlert\"\n      ></app-event-settings-modal>\n\n      <app-requests-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isRequestsModalVisible]=\"isRequestsModalVisible.value\"\n        [onRequestClose]=\"onRequestClose\"\n        [requestCounter]=\"requestCounter.value\"\n        [onRequestFilterChange]=\"onRequestFilterChange\"\n        [updateRequestList]=\"updateRequestList\"\n        [requestList]=\"filteredRequestList.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-requests-modal>\n\n      <app-waiting-room-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isWaitingModalVisible]=\"isWaitingModalVisible.value\"\n        [onWaitingRoomClose]=\"onWaitingRoomClose\"\n        [waitingRoomCounter]=\"waitingRoomCounter.value\"\n        [onWaitingRoomFilterChange]=\"onWaitingRoomFilterChange\"\n        [waitingRoomList]=\"filteredWaitingRoomList.value\"\n        [updateWaitingList]=\"updateWaitingRoomList\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [parameters]=\"{\n                      filteredWaitingRoomList: waitingRoomList.value,\n                      getUpdatedAllParams: getUpdatedAllParams,\n                    }\"\n      ></app-waiting-room-modal>\n\n      <app-co-host-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isCoHostModalVisible]=\"isCoHostModalVisible.value\"\n        [onCoHostClose]=\"onCoHostClose\"\n        [coHostResponsibility]=\"coHostResponsibility.value\"\n        [participants]=\"participants.value\"\n        [currentCohost]=\"coHost.value\"\n        [roomName]=\"roomName.value\"\n        [showAlert]=\"showAlert\"\n        [updateCoHostResponsibility]=\"updateCoHostResponsibility\"\n        [updateCoHost]=\"updateCoHost\"\n        [updateIsCoHostModalVisible]=\"updateIsCoHostModalVisible\"\n        [socket]=\"socket.value\"\n      ></app-co-host-modal>\n\n      <app-media-settings-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isMediaSettingsModalVisible]=\"isMediaSettingsModalVisible.value\"\n        [onMediaSettingsClose]=\"onMediaSettingsClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-media-settings-modal>\n\n      <app-participants-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isParticipantsModalVisible]=\"isParticipantsModalVisible.value\"\n        [onParticipantsClose]=\"onParticipantsClose\"\n        [participantsCounter]=\"participantsCounter.value\"\n        [onParticipantsFilterChange]=\"onParticipantsFilterChange\"\n        [parameters]=\"{\n              updateParticipants: updateParticipants,\n              filteredParticipants: filteredParticipants.value,\n              updateIsParticipantsModalVisible: updateIsParticipantsModalVisible,\n              updateDirectMessageDetails: updateDirectMessageDetails,\n              updateStartDirectMessage: updateStartDirectMessage,\n              updateIsMessagesModalVisible: updateIsMessagesModalVisible,\n              showAlert: showAlert,\n              participants: filteredParticipants.value,\n              roomName: roomName.value,\n              islevel: islevel.value,\n              member: member.value,\n              coHostResponsibility: coHostResponsibility.value,\n              coHost: coHost.value,\n              eventType: eventType.value,\n              startDirectMessage: startDirectMessage.value,\n              directMessageDetails: directMessageDetails.value,\n              socket: socket.value,\n              getUpdatedAllParams: getUpdatedAllParams,\n            }\"\n      ></app-participants-modal>\n\n      <app-display-settings-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isDisplaySettingsModalVisible]=\"isDisplaySettingsModalVisible.value\"\n        [onDisplaySettingsClose]=\"onDisplaySettingsClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-display-settings-modal>\n\n      <app-recording-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isRecordingModalVisible]=\"isRecordingModalVisible.value\"\n        [onClose]=\"onRecordingClose\"\n        [startRecording]=\"startRecording.startRecording\"\n        [confirmRecording]=\"confirmRecording.confirmRecording\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-recording-modal>\n\n      <app-messages-modal\n        [backgroundColor]=\"\n          eventType.value === 'webinar' || eventType.value === 'conference'\n            ? '#f5f5f5'\n            : 'rgba(255, 255, 255, 0.25)'\n        \"\n        [isMessagesModalVisible]=\"isMessagesModalVisible.value\"\n        [onMessagesClose]=\"onMessagesClose\"\n        [messages]=\"messages.value\"\n        [eventType]=\"eventType.value\"\n        [member]=\"member.value\"\n        [islevel]=\"islevel.value\"\n        [coHostResponsibility]=\"coHostResponsibility.value\"\n        [coHost]=\"coHost.value\"\n        [startDirectMessage]=\"startDirectMessage.value\"\n        [directMessageDetails]=\"directMessageDetails.value\"\n        [updateStartDirectMessage]=\"updateStartDirectMessage\"\n        [updateDirectMessageDetails]=\"updateDirectMessageDetails\"\n        [showAlert]=\"showAlert\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [chatSetting]=\"chatSetting.value\"\n      ></app-messages-modal>\n\n      <app-confirm-exit-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isConfirmExitModalVisible]=\"isConfirmExitModalVisible.value\"\n        [onConfirmExitClose]=\"onConfirmExitClose\"\n        [position]=\"'topRight'\"\n        [member]=\"member.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [islevel]=\"islevel.value\"\n      ></app-confirm-exit-modal>\n\n      <app-confirm-here-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isConfirmHereModalVisible]=\"isConfirmHereModalVisible.value\"\n        [onConfirmHereClose]=\"onConfirmHereClose\"\n        [member]=\"member.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n      ></app-confirm-here-modal>\n\n      <app-share-event-modal\n        [isShareEventModalVisible]=\"isShareEventModalVisible.value\"\n        [onShareEventClose]=\"onShareEventClose\"\n        [roomName]=\"roomName.value\"\n        [islevel]=\"islevel.value\"\n        [adminPasscode]=\"adminPasscode.value\"\n        [eventType]=\"eventType.value\"\n      ></app-share-event-modal>\n\n      <app-poll-modal\n        [isPollModalVisible]=\"isPollModalVisible.value\"\n        [onClose]=\"onPollClose\"\n        [member]=\"member.value\"\n        [islevel]=\"islevel.value\"\n        [polls]=\"polls.value\"\n        [poll]=\"poll.value\"\n        [socket]=\"socket.value\"\n        [roomName]=\"roomName.value\"\n        [showAlert]=\"showAlert\"\n        [updateIsPollModalVisible]=\"updateIsPollModalVisible\"\n        [handleCreatePoll]=\"handleCreatePoll.handleCreatePoll\"\n        [handleEndPoll]=\"handleEndPoll.handleEndPoll\"\n        [handleVotePoll]=\"handleVotePoll.handleVotePoll\"\n      ></app-poll-modal>\n\n      <app-background-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isBackgroundModalVisible.value\"\n        [onClose]=\"onBackgroundClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-background-modal>\n\n      <app-breakout-rooms-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isBreakoutRoomsModalVisible.value\"\n        [onBreakoutRoomsClose]=\"onBreakoutRoomsClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-breakout-rooms-modal>\n\n      <app-configure-whiteboard-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isConfigureWhiteboardModalVisible.value\"\n        [onConfigureWhiteboardClose]=\"onConfigureWhiteboardClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-configure-whiteboard-modal>\n\n      <app-screenboard-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isScreenboardModalVisible.value\"\n        [onClose]=\"onScreenboardClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-screenboard-modal>\n\n      <app-alert-component\n        [visible]=\"alertVisible.value\"\n        [message]=\"alertMessage.value\"\n        [type]=\"alertType.value\"\n        [duration]=\"alertDuration.value\"\n        [onHide]=\"onAlertHide\"\n        textColor=\"#ffffff\"\n      ></app-alert-component>\n\n      <app-loading-modal\n        [isVisible]=\"isLoadingModalVisible.value\"\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        displayColor=\"black\"\n      ></app-loading-modal>\n    </div>\n  `,\n  styles: [\n    `\n      .MediaSFU {\n        /* Add any component-specific styles here */\n      }\n    `,\n  ],\n  providers: [CookieService],\n})\nexport class MediasfuGeneric implements OnInit, OnDestroy {\n  @Input()\n  PrejoinPage: any = WelcomePage;\n  @Input() credentials: { apiUserName: string; apiKey: string } = { apiUserName: '', apiKey: '' };\n  @Input() useLocalUIMode = false;\n  @Input() seedData?: SeedData;\n  @Input() useSeed = false;\n  @Input() imgSrc = 'https://mediasfu.com/images/logo192.png';\n\n  title = 'MediaSFU-Generic';\n\n  private mainHeightWidthSubscription: Subscription | undefined;\n  private validatedSubscription: Subscription | undefined;\n  private islevelSubscription: Subscription | undefined;\n  private coHostSubscription: Subscription | undefined;\n  private buttonSubscriptions: Subscription[] = [];\n  private ScreenboardSubscription: Subscription | undefined;\n  private recordingSubscription: Subscription | undefined;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private injector: Injector,\n    public updateMiniCardsGrid: UpdateMiniCardsGrid,\n    public mixStreams: MixStreams,\n    public dispStreams: DispStreams,\n    public stopShareScreen: StopShareScreen,\n    public checkScreenShare: CheckScreenShare,\n    public startShareScreen: StartShareScreen,\n    public requestScreenShare: RequestScreenShare,\n    public reorderStreams: ReorderStreams,\n    public prepopulateUserMedia: PrepopulateUserMedia,\n    public getVideos: GetVideos,\n    public rePort: RePort,\n    public trigger: Trigger,\n    public consumerResume: ConsumerResume,\n    public connectSendTransport: ConnectSendTransport,\n    public connectSendTransportAudio: ConnectSendTransportAudio,\n    public connectSendTransportVideo: ConnectSendTransportVideo,\n    public connectSendTransportScreen: ConnectSendTransportScreen,\n    public processConsumerTransports: ProcessConsumerTransports,\n    public resumePauseStreams: ResumePauseStreams,\n    public readjust: Readjust,\n    public checkGrid: CheckGrid,\n    public getEstimate: GetEstimate,\n    public calculateRowsAndColumns: CalculateRowsAndColumns,\n    public addVideosGrid: AddVideosGrid,\n    public onScreenChanges: OnScreenChanges,\n    public changeVids: ChangeVids,\n    public compareActiveNames: CompareActiveNames,\n    public compareScreenStates: CompareScreenStates,\n    public createSendTransport: CreateSendTransport,\n    public resumeSendTransportAudio: ResumeSendTransportAudio,\n    public receiveAllPipedTransports: ReceiveAllPipedTransports,\n    public disconnectSendTransportVideo: DisconnectSendTransportVideo,\n    public disconnectSendTransportAudio: DisconnectSendTransportAudio,\n    public disconnectSendTransportScreen: DisconnectSendTransportScreen,\n    public getPipedProducersAlt: GetPipedProducersAlt,\n    public signalNewConsumerTransport: SignalNewConsumerTransport,\n    public connectRecvTransport: ConnectRecvTransport,\n    public reUpdateInter: ReUpdateInter,\n    public updateParticipantAudioDecibels: UpdateParticipantAudioDecibels,\n    public closeAndResize: CloseAndResize,\n    public autoAdjust: AutoAdjust,\n    public switchUserVideoAlt: SwitchUserVideoAlt,\n    public switchUserVideo: SwitchUserVideo,\n    public switchUserAudio: SwitchUserAudio,\n    public getDomains: GetDomains,\n    public formatNumber: FormatNumber,\n    public connectIps: ConnectIps,\n    public createDeviceClient: CreateDeviceClient,\n    public handleCreatePoll: HandleCreatePoll,\n    public handleEndPoll: HandleEndPoll,\n    public handleVotePoll: HandleVotePoll,\n    public captureCanvasStream: CaptureCanvasStream,\n    public resumePauseAudioStreams: ResumePauseAudioStreams,\n    public processConsumerTransportsAudio: ProcessConsumerTransportsAudio,\n\n    public launchMenuModal: LaunchMenuModal,\n    public launchRecording: LaunchRecording,\n    public startRecording: StartRecording,\n    public confirmRecording: ConfirmRecording,\n    public launchWaiting: LaunchWaiting,\n    public launchCoHost: launchCoHost,\n    public launchMediaSettings: LaunchMediaSettings,\n    public launchDisplaySettings: LaunchDisplaySettings,\n    public launchSettings: LaunchSettings,\n    public launchRequests: LaunchRequests,\n    public launchParticipants: LaunchParticipants,\n    public launchMessages: LaunchMessages,\n    public launchConfirmExit: LaunchConfirmExit,\n    public launchPoll: LaunchPoll,\n    public launchBreakoutRooms: LaunchBreakoutRooms,\n    public launchConfigureWhiteboard: LaunchConfigureWhiteboard,\n    public startMeetingProgressTimer: StartMeetingProgressTimer,\n    public updateRecording: UpdateRecording,\n    public stopRecording: StopRecording,\n    public userWaiting: UserWaiting,\n    public personJoined: PersonJoined,\n    public allWaitingRoomMembers: AllWaitingRoomMembers,\n    public roomRecordParams: RoomRecordParams,\n    public banParticipant: BanParticipant,\n    public updatedCoHost: UpdatedCoHost,\n    public participantRequested: ParticipantRequested,\n    public screenProducerId: ScreenProducerId,\n    public updateMediaSettings: UpdateMediaSettings,\n    public producerMediaPaused: ProducerMediaPaused,\n    public producerMediaResumed: ProducerMediaResumed,\n    public producerMediaClosed: ProducerMediaClosed,\n    public controlMediaHost: ControlMediaHost,\n    public meetingEnded: MeetingEnded,\n    public disconnectUserSelf: DisconnectUserSelf,\n    public receiveMessage: ReceiveMessage,\n    public meetingTimeRemaining: MeetingTimeRemaining,\n    public meetingStillThere: MeetingStillThere,\n    public startRecords: StartRecords,\n    public reInitiateRecording: ReInitiateRecording,\n    public recordingNotice: RecordingNotice,\n    public timeLeftRecording: TimeLeftRecording,\n    public stoppedRecording: StoppedRecording,\n    public hostRequestResponse: HostRequestResponse,\n    public allMembers: AllMembers,\n    public allMembersRest: AllMembersRest,\n    public disconnect: Disconnect,\n    public pollUpdated: PollUpdated,\n    public breakoutRoomUpdated: BreakoutRoomUpdated,\n    public socketManager: SocketManager,\n    public joinRoomClient: JoinRoomClient,\n    public updateRoomParametersClient: UpdateRoomParametersClient,\n    public clickVideo: ClickVideo,\n    public clickAudio: ClickAudio,\n    public clickScreenShare: ClickScreenShare,\n    public switchVideoAlt: SwitchVideoAlt,\n    public streamSuccessVideo: StreamSuccessVideo,\n    public streamSuccessAudio: StreamSuccessAudio,\n    public streamSuccessScreen: StreamSuccessScreen,\n    public streamSuccessAudioSwitch: StreamSuccessAudioSwitch,\n    public checkPermission: CheckPermission,\n    public updateConsumingDomains: UpdateConsumingDomains,\n    public receiveRoomMessages: ReceiveRoomMessages,\n  ) {}\n\n  createInjector(inputs: any) {\n    const inj = Injector.create({\n      providers: Object.keys(inputs).map((key) => ({ provide: key, useValue: inputs[key] })),\n      parent: this.injector,\n    });\n\n    return inj;\n  }\n\n  // Initial values\n  mediaSFUFunctions = () => {\n    return {\n      updateMiniCardsGrid:\n        this.updateMiniCardsGrid?.updateMiniCardsGrid ||\n        (() => {\n          console.log('none');\n        }),\n      mixStreams:\n        this.mixStreams?.mixStreams ||\n        (() => {\n          console.log('none');\n        }),\n      dispStreams:\n        this.dispStreams?.dispStreams ||\n        (() => {\n          console.log('none');\n        }),\n      stopShareScreen:\n        this.stopShareScreen?.stopShareScreen ||\n        (() => {\n          console.log('none');\n        }),\n      checkScreenShare:\n        this.checkScreenShare?.checkScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      startShareScreen:\n        this.startShareScreen?.startShareScreen ||\n        (() => {\n          console.log('none');\n        }),\n      requestScreenShare:\n        this.requestScreenShare?.requestScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      reorderStreams:\n        this.reorderStreams?.reorderStreams ||\n        (() => {\n          console.log('none');\n        }),\n      prepopulateUserMedia:\n        this.prepopulateUserMedia?.prepopulateUserMedia ||\n        (() => {\n          console.log('none');\n        }),\n      getVideos:\n        this.getVideos?.getVideos ||\n        (() => {\n          console.log('none');\n        }),\n      rePort:\n        this.rePort?.rePort ||\n        (() => {\n          console.log('none');\n        }),\n      trigger:\n        this.trigger?.trigger ||\n        (() => {\n          console.log('none');\n        }),\n      consumerResume:\n        this.consumerResume?.consumerResume ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransport:\n        this.connectSendTransport?.connectSendTransport ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportAudio:\n        this.connectSendTransportAudio?.connectSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportVideo:\n        this.connectSendTransportVideo?.connectSendTransportVideo ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportScreen:\n        this.connectSendTransportScreen?.connectSendTransportScreen ||\n        (() => {\n          console.log('none');\n        }),\n      processConsumerTransports:\n        this.processConsumerTransports?.processConsumerTransports ||\n        (() => {\n          console.log('none');\n        }),\n      resumePauseStreams:\n        this.resumePauseStreams?.resumePauseStreams ||\n        (() => {\n          console.log('none');\n        }),\n      readjust:\n        this.readjust?.readjust ||\n        (() => {\n          console.log('none');\n        }),\n      checkGrid:\n        this.checkGrid?.checkGrid ||\n        (() => {\n          console.log('none');\n        }),\n      getEstimate:\n        this.getEstimate?.getEstimate ||\n        (() => {\n          console.log('none');\n        }),\n      calculateRowsAndColumns:\n        this.calculateRowsAndColumns?.calculateRowsAndColumns ||\n        (() => {\n          console.log('none');\n        }),\n      addVideosGrid:\n        this.addVideosGrid?.addVideosGrid ||\n        (() => {\n          console.log('none');\n        }),\n      onScreenChanges:\n        this.onScreenChanges?.onScreenChanges ||\n        (() => {\n          console.log('none');\n        }),\n      sleep:\n        sleep ||\n        (() => {\n          console.log('none');\n        }),\n      changeVids:\n        this.changeVids?.changeVids ||\n        (() => {\n          console.log('none');\n        }),\n      compareActiveNames:\n        this.compareActiveNames?.compareActiveNames ||\n        (() => {\n          console.log('none');\n        }),\n      compareScreenStates:\n        this.compareScreenStates?.compareScreenStates ||\n        (() => {\n          console.log('none');\n        }),\n      createSendTransport:\n        this.createSendTransport?.createSendTransport ||\n        (() => {\n          console.log('none');\n        }),\n      resumeSendTransportAudio:\n        this.resumeSendTransportAudio?.resumeSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      receiveAllPipedTransports:\n        this.receiveAllPipedTransports?.receiveAllPipedTransports ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportVideo:\n        this.disconnectSendTransportVideo?.disconnectSendTransportVideo ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportAudio:\n        this.disconnectSendTransportAudio?.disconnectSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportScreen:\n        this.disconnectSendTransportScreen?.disconnectSendTransportScreen ||\n        (() => {\n          console.log('none');\n        }),\n      getPipedProducersAlt:\n        this.getPipedProducersAlt?.getPipedProducersAlt ||\n        (() => {\n          console.log('none');\n        }),\n      signalNewConsumerTransport:\n        this.signalNewConsumerTransport?.signalNewConsumerTransport ||\n        (() => {\n          console.log('none');\n        }),\n      connectRecvTransport:\n        this.connectRecvTransport?.connectRecvTransport ||\n        (() => {\n          console.log('none');\n        }),\n      reUpdateInter:\n        this.reUpdateInter?.reUpdateInter ||\n        (() => {\n          console.log('none');\n        }),\n      updateParticipantAudioDecibels:\n        this.updateParticipantAudioDecibels?.updateParticipantAudioDecibels ||\n        (() => {\n          console.log('none');\n        }),\n      closeAndResize:\n        this.closeAndResize?.closeAndResize ||\n        (() => {\n          console.log('none');\n        }),\n      autoAdjust:\n        this.autoAdjust?.autoAdjust ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserVideoAlt:\n        this.switchUserVideoAlt?.switchUserVideoAlt ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserVideo:\n        this.switchUserVideo?.switchUserVideo ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserAudio:\n        this.switchUserAudio?.switchUserAudio ||\n        (() => {\n          console.log('none');\n        }),\n      getDomains:\n        this.getDomains?.getDomains ||\n        (() => {\n          console.log('none');\n        }),\n      formatNumber:\n        this.formatNumber?.formatNumber ||\n        (() => {\n          console.log('none');\n        }),\n      connectIps:\n        this.connectIps?.connectIps ||\n        (() => {\n          console.log('none');\n        }),\n      createDeviceClient:\n        this.createDeviceClient?.createDeviceClient ||\n        (() => {\n          console.log('none');\n        }),\n      handleCreatePoll:\n        this.handleCreatePoll?.handleCreatePoll ||\n        (() => {\n          console.log('none');\n        }),\n      handleEndPoll:\n        this.handleEndPoll?.handleEndPoll ||\n        (() => {\n          console.log('none');\n        }),\n      handleVotePoll:\n        this.handleVotePoll?.handleVotePoll ||\n        (() => {\n          console.log('none');\n        }),\n      captureCanvasStream:\n        this.captureCanvasStream?.captureCanvasStream ||\n        (() => {\n          console.log('none');\n        }),\n      resumePauseAudioStreams:\n        this.resumePauseAudioStreams?.resumePauseAudioStreams ||\n        (() => {\n          console.log('none');\n        }),\n      processConsumerTransportsAudio:\n        this.processConsumerTransportsAudio?.processConsumerTransportsAudio ||\n        (() => {\n          console.log('none');\n        }),\n      checkPermission:\n        this.checkPermission?.checkPermission ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessVideo:\n        this.streamSuccessVideo?.streamSuccessVideo ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessAudio:\n        this.streamSuccessAudio?.streamSuccessAudio ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessScreen:\n        this.streamSuccessScreen?.streamSuccessScreen ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessAudioSwitch:\n        this.streamSuccessAudioSwitch?.streamSuccessAudioSwitch ||\n        (() => {\n          console.log('none');\n        }),\n      clickVideo:\n        this.clickVideo?.clickVideo ||\n        (() => {\n          console.log('none');\n        }),\n      clickAudio:\n        this.clickAudio?.clickAudio ||\n        (() => {\n          console.log('none');\n        }),\n      clickScreenShare:\n        this.clickScreenShare?.clickScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      switchVideoAlt:\n        this.switchVideoAlt?.switchVideoAlt ||\n        (() => {\n          console.log('none');\n        }),\n      requestPermissionCamera:\n        this.requestPermissionCamera ||\n        (() => {\n          console.log('none');\n        }),\n      requestPermissionAudio:\n        this.requestPermissionAudio ||\n        (() => {\n          console.log('none');\n        }),\n    };\n  };\n\n  validated = new BehaviorSubject<boolean>(false);\n  localUIMode = new BehaviorSubject<boolean>(false);\n  socket = new BehaviorSubject<Socket>({} as Socket);\n  roomData = new BehaviorSubject<ResponseJoinRoom | null>(null);\n  device = new BehaviorSubject<Device | null>(null);\n  apiKey = new BehaviorSubject<string>(\n    '021193742c935c4434d25d7592362575fcb6d6590b6c38334a2f3e06c83af758',\n  );\n  apiUserName = new BehaviorSubject<string>('abcdefgh');\n  apiToken = new BehaviorSubject<string>('');\n  link = new BehaviorSubject<string>('');\n\n  roomName = new BehaviorSubject<string>('');\n  member = new BehaviorSubject<string>('');\n  adminPasscode = new BehaviorSubject<string>('');\n  islevel = new BehaviorSubject<string>('1');\n  coHost = new BehaviorSubject<string>('No coHost');\n  coHostResponsibility = new BehaviorSubject<CoHostResponsibility[]>([\n    { name: 'participants', value: false, dedicated: false },\n    { name: 'media', value: false, dedicated: false },\n    { name: 'waiting', value: false, dedicated: false },\n    { name: 'chat', value: false, dedicated: false },\n  ]);\n  youAreCoHost = new BehaviorSubject<boolean>(false);\n  youAreHost = new BehaviorSubject<boolean>(false);\n  confirmedToRecord = new BehaviorSubject<boolean>(false);\n  meetingDisplayType = new BehaviorSubject<string>('media');\n  meetingVideoOptimized = new BehaviorSubject<boolean>(false);\n  eventType = new BehaviorSubject<EventType>('webinar');\n  participants = new BehaviorSubject<Participant[]>([]);\n  filteredParticipants = new BehaviorSubject<Participant[]>([]);\n  participantsCounter = new BehaviorSubject<number>(0);\n  participantsFilter = new BehaviorSubject<string>('');\n\n  consume_sockets = new BehaviorSubject<ConsumeSocket[]>([]);\n  rtpCapabilities = new BehaviorSubject<RtpCapabilities | null>(null);\n  roomRecvIPs = new BehaviorSubject<string[]>([]);\n  meetingRoomParams = new BehaviorSubject<MeetingRoomParams | null>(null);\n  itemPageLimit = new BehaviorSubject<number>(4);\n  audioOnlyRoom = new BehaviorSubject<boolean>(false);\n  addForBasic = new BehaviorSubject<boolean>(false);\n  screenPageLimit = new BehaviorSubject<number>(4);\n  shareScreenStarted = new BehaviorSubject<boolean>(false);\n  shared = new BehaviorSubject<boolean>(false);\n  targetOrientation = new BehaviorSubject<string>('landscape');\n  targetResolution = new BehaviorSubject<string>('sd');\n  targetResolutionHost = new BehaviorSubject<string>('sd');\n  vidCons = new BehaviorSubject<VidCons>({ width: 640, height: 360 });\n  frameRate = new BehaviorSubject<number>(10);\n  hParams = new BehaviorSubject<HParamsType>({} as HParamsType);\n  vParams = new BehaviorSubject<VParamsType>({} as VParamsType);\n  screenParams = new BehaviorSubject<ScreenParamsType>({} as ScreenParamsType);\n  aParams = new BehaviorSubject<AParamsType>({} as AParamsType);\n\n  recordingAudioPausesLimit = new BehaviorSubject<number>(0);\n  recordingAudioPausesCount = new BehaviorSubject<number>(0);\n  recordingAudioSupport = new BehaviorSubject<boolean>(false);\n  recordingAudioPeopleLimit = new BehaviorSubject<number>(0);\n  recordingAudioParticipantsTimeLimit = new BehaviorSubject<number>(0);\n  recordingVideoPausesCount = new BehaviorSubject<number>(0);\n  recordingVideoPausesLimit = new BehaviorSubject<number>(0);\n  recordingVideoSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoPeopleLimit = new BehaviorSubject<number>(0);\n  recordingVideoParticipantsTimeLimit = new BehaviorSubject<number>(0);\n  recordingAllParticipantsSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoParticipantsSupport = new BehaviorSubject<boolean>(false);\n  recordingAllParticipantsFullRoomSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoParticipantsFullRoomSupport = new BehaviorSubject<boolean>(false);\n  recordingPreferredOrientation = new BehaviorSubject<string>('landscape');\n  recordingSupportForOtherOrientation = new BehaviorSubject<boolean>(false);\n  recordingMultiFormatsSupport = new BehaviorSubject<boolean>(false);\n\n  userRecordingParams = new BehaviorSubject<UserRecordingParams>({\n    mainSpecs: {\n      mediaOptions: 'video', // 'audio', 'video'\n      audioOptions: 'all', // 'all', 'onScreen', 'host'\n      videoOptions: 'all', // 'all', 'mainScreen'\n      videoType: 'fullDisplay', // 'all', 'bestDisplay', 'fullDisplay'\n      videoOptimized: false, // true, false\n      recordingDisplayType: 'media', // 'media', 'video', 'all'\n      addHLS: false, // true, false\n    },\n    dispSpecs: {\n      nameTags: true, // true, false\n      backgroundColor: '#000000', // '#000000', '#ffffff'\n      nameTagsColor: '#ffffff', // '#000000', '#ffffff'\n      orientationVideo: 'portrait', // 'landscape', 'portrait', 'all'\n    },\n  });\n\n  canRecord = new BehaviorSubject<boolean>(false);\n  startReport = new BehaviorSubject<boolean>(false);\n  endReport = new BehaviorSubject<boolean>(false);\n  recordTimerInterval = new BehaviorSubject<NodeJS.Timeout | null>(null);\n  recordStartTime = new BehaviorSubject<number>(0);\n  recordElapsedTime = new BehaviorSubject<number>(0);\n  isTimerRunning = new BehaviorSubject<boolean>(false);\n  canPauseResume = new BehaviorSubject<boolean>(false);\n  recordChangeSeconds = new BehaviorSubject<number>(15000);\n  pauseLimit = new BehaviorSubject<number>(0);\n  pauseRecordCount = new BehaviorSubject<number>(0);\n  canLaunchRecord = new BehaviorSubject<boolean>(true);\n  stopLaunchRecord = new BehaviorSubject<boolean>(false);\n\n  participantsAll = new BehaviorSubject<Participant[]>([]);\n\n  firstAll = new BehaviorSubject<boolean>(false);\n  updateMainWindow = new BehaviorSubject<boolean>(false);\n  first_round = new BehaviorSubject<boolean>(false);\n  landScaped = new BehaviorSubject<boolean>(false);\n  lock_screen = new BehaviorSubject<boolean>(false);\n  screenId = new BehaviorSubject<string>('');\n  allVideoStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  newLimitedStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  newLimitedStreamsIDs = new BehaviorSubject<string[]>([]);\n  activeSounds = new BehaviorSubject<string[]>([]);\n  screenShareIDStream = new BehaviorSubject<string>('');\n  screenShareNameStream = new BehaviorSubject<string>('');\n  adminIDStream = new BehaviorSubject<string>('');\n  adminNameStream = new BehaviorSubject<string>('');\n  youYouStream = new BehaviorSubject<(Participant | Stream)[]>([]);\n  youYouStreamIDs = new BehaviorSubject<string[]>([]);\n  localStream = new BehaviorSubject<MediaStream | null>(null);\n  recordStarted = new BehaviorSubject<boolean>(false);\n  recordResumed = new BehaviorSubject<boolean>(false);\n  recordPaused = new BehaviorSubject<boolean>(false);\n  recordStopped = new BehaviorSubject<boolean>(false);\n  adminRestrictSetting = new BehaviorSubject<boolean>(false);\n  videoRequestState = new BehaviorSubject<string | null>(null);\n  videoRequestTime = new BehaviorSubject<number>(0);\n  videoAction = new BehaviorSubject<boolean>(false);\n  localStreamVideo = new BehaviorSubject<MediaStream | null>(null);\n  userDefaultVideoInputDevice = new BehaviorSubject<string>('');\n  currentFacingMode = new BehaviorSubject<string>('user');\n  prevFacingMode = new BehaviorSubject<string>('user');\n  defVideoID = new BehaviorSubject<string>('');\n  allowed = new BehaviorSubject<boolean>(false);\n  dispActiveNames = new BehaviorSubject<string[]>([]);\n  p_dispActiveNames = new BehaviorSubject<string[]>([]);\n  activeNames = new BehaviorSubject<string[]>([]);\n  prevActiveNames = new BehaviorSubject<string[]>([]);\n  p_activeNames = new BehaviorSubject<string[]>([]);\n  membersReceived = new BehaviorSubject<boolean>(false);\n  deferScreenReceived = new BehaviorSubject<boolean>(false);\n  hostFirstSwitch = new BehaviorSubject<boolean>(false);\n  micAction = new BehaviorSubject<boolean>(false);\n  screenAction = new BehaviorSubject<boolean>(false);\n  chatAction = new BehaviorSubject<boolean>(false);\n  audioRequestState = new BehaviorSubject<string | null>(null);\n  screenRequestState = new BehaviorSubject<string | null>(null);\n  chatRequestState = new BehaviorSubject<string | null>(null);\n  audioRequestTime = new BehaviorSubject<number>(0);\n  screenRequestTime = new BehaviorSubject<number>(0);\n  chatRequestTime = new BehaviorSubject<number>(0);\n  updateRequestIntervalSeconds = new BehaviorSubject<number>(240);\n  oldSoundIds = new BehaviorSubject<string[]>([]);\n  hostLabel = new BehaviorSubject<string>('Host');\n  mainScreenFilled = new BehaviorSubject<boolean>(false);\n  localStreamScreen = new BehaviorSubject<MediaStream | null>(null);\n  screenAlreadyOn = new BehaviorSubject<boolean>(false);\n  chatAlreadyOn = new BehaviorSubject<boolean>(false);\n  redirectURL = new BehaviorSubject<string>('');\n  oldAllStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  adminVidID = new BehaviorSubject<string>('');\n  streamNames = new BehaviorSubject<Stream[]>([]);\n  non_alVideoStreams = new BehaviorSubject<Participant[]>([]);\n  sortAudioLoudness = new BehaviorSubject<boolean>(false);\n  audioDecibels = new BehaviorSubject<AudioDecibels[]>([]);\n  mixed_alVideoStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  non_alVideoStreams_muted = new BehaviorSubject<Participant[]>([]);\n  paginatedStreams = new BehaviorSubject<(Participant | Stream)[][]>([]);\n  localStreamAudio = new BehaviorSubject<MediaStream | null>(null);\n  defAudioID = new BehaviorSubject<string>('');\n  userDefaultAudioInputDevice = new BehaviorSubject<string>('');\n  userDefaultAudioOutputDevice = new BehaviorSubject<string>('');\n  prevAudioInputDevice = new BehaviorSubject<string>('');\n  prevVideoInputDevice = new BehaviorSubject<string>('');\n  audioPaused = new BehaviorSubject<boolean>(false);\n  mainScreenPerson = new BehaviorSubject<string>('');\n  adminOnMainScreen = new BehaviorSubject<boolean>(false);\n  screenStates = new BehaviorSubject<ScreenState[]>([\n    {\n      mainScreenPerson: '',\n      mainScreenProducerId: '',\n      mainScreenFilled: false,\n      adminOnMainScreen: false,\n    },\n  ]);\n  prevScreenStates = new BehaviorSubject<ScreenState[]>([\n    {\n      mainScreenPerson: '',\n      mainScreenProducerId: '',\n      mainScreenFilled: false,\n      adminOnMainScreen: false,\n    },\n  ]);\n  updateDateState = new BehaviorSubject<number | null>(null);\n  lastUpdate = new BehaviorSubject<number | null>(null);\n  nForReadjustRecord = new BehaviorSubject<number>(0);\n  fixedPageLimit = new BehaviorSubject<number>(4);\n  removeAltGrid = new BehaviorSubject<boolean>(false);\n  nForReadjust = new BehaviorSubject<number>(0);\n  reorderInterval = new BehaviorSubject<number>(30000);\n  fastReorderInterval = new BehaviorSubject<number>(10000);\n  lastReorderTime = new BehaviorSubject<number>(0);\n  audStreamNames = new BehaviorSubject<Stream[]>([]);\n  currentUserPage = new BehaviorSubject<number>(0);\n  mainHeightWidth = new BehaviorSubject<number>(\n    this.eventType.value == 'webinar' ? 67 : this.eventType.value == 'broadcast' ? 100 : 0,\n  );\n  prevMainHeightWidth = new BehaviorSubject<number>(this.mainHeightWidth.value);\n  prevDoPaginate = new BehaviorSubject<boolean>(false);\n  doPaginate = new BehaviorSubject<boolean>(false);\n  shareEnded = new BehaviorSubject<boolean>(false);\n  lStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  chatRefStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  controlHeight = new BehaviorSubject<number>(\n    this.eventType.value === 'webinar' || this.eventType.value === 'conference' ? 0 : 0.06,\n  );\n  isWideScreen = new BehaviorSubject<boolean>(false);\n  isMediumScreen = new BehaviorSubject<boolean>(false);\n  isSmallScreen = new BehaviorSubject<boolean>(false);\n  addGrid = new BehaviorSubject<boolean>(false);\n  addAltGrid = new BehaviorSubject<boolean>(false);\n  gridRows = new BehaviorSubject<number>(0);\n  gridCols = new BehaviorSubject<number>(0);\n  altGridRows = new BehaviorSubject<number>(0);\n  altGridCols = new BehaviorSubject<number>(0);\n  numberPages = new BehaviorSubject<number>(0);\n  currentStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  showMiniView = new BehaviorSubject<boolean>(false);\n  nStream = new BehaviorSubject<MediaStream | null>(null);\n  defer_receive = new BehaviorSubject<boolean>(false);\n  allAudioStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  remoteScreenStream = new BehaviorSubject<Stream[]>([]);\n  screenProducer = new BehaviorSubject<Producer | null>(null);\n  gotAllVids = new BehaviorSubject<boolean>(false);\n  paginationHeightWidth = new BehaviorSubject<number>(40);\n  paginationDirection = new BehaviorSubject<'horizontal' | 'vertical'>('horizontal');\n  gridSizes = new BehaviorSubject<GridSizes>({\n    gridWidth: 0,\n    gridHeight: 0,\n    altGridWidth: 0,\n    altGridHeight: 0,\n  });\n  screenForceFullDisplay = new BehaviorSubject<boolean>(false);\n  mainGridStream = new BehaviorSubject<CustomMediaComponent[]>([]);\n  otherGridStreams = new BehaviorSubject<CustomMediaComponent[][]>([]);\n  audioOnlyStreams = new BehaviorSubject<CustomMediaComponent[]>([]);\n  videoInputs = new BehaviorSubject<MediaDeviceInfo[]>([]);\n  audioInputs = new BehaviorSubject<MediaDeviceInfo[]>([]);\n  meetingProgressTime = new BehaviorSubject<string>('00:00:00');\n  meetingElapsedTime = new BehaviorSubject<number>(0);\n  ref_participants = new BehaviorSubject<Participant[]>([]);\n\n  updateValidated = (value: boolean) => {\n    this.validated.next(value);\n  };\n\n  updateSocket = (value: Socket) => {\n    this.socket.next(value);\n  };\n\n  updateDevice = (value: Device | null) => {\n    this.device.next(value);\n  };\n\n  updateRoomData = (value: ResponseJoinRoom | null) => {\n    this.roomData.next(value);\n  };\n\n  updateApiKey = (value: string) => {\n    this.apiKey.next(value);\n  };\n\n  updateApiUserName = (value: string) => {\n    this.apiUserName.next(value);\n  };\n\n  updateApiToken = (value: string) => {\n    this.apiToken.next(value);\n  };\n\n  updateLink = (value: string) => {\n    this.link.next(value);\n  };\n\n  updateRoomName = (value: string) => {\n    this.roomName.next(value);\n  };\n\n  updateMember = (value: string) => {\n    this.member.next(value);\n  };\n\n  updateAdminPasscode = (value: string) => {\n    this.adminPasscode.next(value);\n  };\n\n  updateIslevel = (value: string) => {\n    this.islevel.next(value);\n  };\n\n  updateCoHost = (value: string) => {\n    this.coHost.next(value);\n  };\n\n  updateCoHostResponsibility = (value: CoHostResponsibility[]) => {\n    this.coHostResponsibility.next(value);\n  };\n\n  updateYouAreCoHost = (value: boolean) => {\n    this.youAreCoHost.next(value);\n  };\n\n  updateYouAreHost = (value: boolean) => {\n    this.youAreHost.next(value);\n  };\n\n  updateConfirmedToRecord = (value: boolean) => {\n    this.confirmedToRecord.next(value);\n  };\n\n  updateMeetingDisplayType = (value: string) => {\n    this.meetingDisplayType.next(value);\n  };\n\n  updateMeetingVideoOptimized = (value: boolean) => {\n    this.meetingVideoOptimized.next(value);\n  };\n\n  updateEventType = (value: EventType) => {\n    this.eventType.next(value);\n    if (value != 'none') {\n      try {\n        setTimeout(() => {\n          this.handleResize();\n        }, 2000);\n      } catch {\n        /* handle error */\n      }\n    }\n  };\n\n  updateParticipants = (value: Participant[]) => {\n    this.participants.next(value);\n    this.participantsCounter.next(value.length);\n    this.filteredParticipants.next(this.participants.value);\n  };\n\n  updateFilteredParticipants = (value: Participant[]) => {\n    this.filteredParticipants.next(value);\n  };\n\n  updateParticipantsCounter = (value: number) => {\n    this.participantsCounter.next(value);\n  };\n\n  updateParticipantsFilter = (value: string) => {\n    this.participantsFilter.next(value);\n  };\n\n  updateConsume_sockets = (value: ConsumeSocket[]) => {\n    this.consume_sockets.next(value);\n  };\n\n  updateRtpCapabilities = (value: RtpCapabilities | null) => {\n    this.rtpCapabilities.next(value);\n  };\n\n  updateRoomRecvIPs = (value: string[]) => {\n    this.roomRecvIPs.next(value);\n  };\n\n  updateMeetingRoomParams = (value: MeetingRoomParams | null) => {\n    this.meetingRoomParams.next(value);\n  };\n\n  updateItemPageLimit = (value: number) => {\n    this.itemPageLimit.next(value);\n  };\n\n  updateAudioOnlyRoom = (value: boolean) => {\n    this.audioOnlyRoom.next(value);\n  };\n\n  updateAddForBasic = (value: boolean) => {\n    this.addForBasic.next(value);\n  };\n\n  updateScreenPageLimit = (value: number) => {\n    this.screenPageLimit.next(value);\n  };\n\n  updateShareScreenStarted = (value: boolean) => {\n    this.shareScreenStarted.next(value);\n  };\n\n  updateShared = (value: boolean) => {\n    this.shared.next(value);\n    this.screenShareActive.next(value);\n    if (value) {\n      setTimeout(async () => {\n        window.dispatchEvent(new Event('resize'));\n      }, 2000);\n    }\n  };\n\n  updateTargetOrientation = (value: string) => {\n    this.targetOrientation.next(value);\n  };\n\n  updateTargetResolution = (value: string) => {\n    this.targetResolution.next(value);\n  };\n\n  updateTargetResolutionHost = (value: string) => {\n    this.targetResolutionHost.next(value);\n  };\n\n  updateVidCons = (value: VidCons) => {\n    this.vidCons.next(value);\n  };\n\n  updateFrameRate = (value: number) => {\n    this.frameRate.next(value);\n  };\n\n  updateHParams = (value: HParamsType) => {\n    this.hParams.next(value);\n  };\n\n  updateVParams = (value: VParamsType) => {\n    this.vParams.next(value);\n  };\n\n  updateScreenParams = (value: ScreenParamsType) => {\n    this.screenParams.next(value);\n  };\n\n  updateAParams = (value: AParamsType) => {\n    this.aParams.next(value);\n  };\n\n  updateRecordingAudioPausesLimit = (value: number) => {\n    this.recordingAudioPausesLimit.next(value);\n  };\n\n  updateRecordingAudioPausesCount = (value: number) => {\n    this.recordingAudioPausesCount.next(value);\n  };\n\n  updateRecordingAudioSupport = (value: boolean) => {\n    this.recordingAudioSupport.next(value);\n  };\n\n  updateRecordingAudioPeopleLimit = (value: number) => {\n    this.recordingAudioPeopleLimit.next(value);\n  };\n\n  updateRecordingAudioParticipantsTimeLimit = (value: number) => {\n    this.recordingAudioParticipantsTimeLimit.next(value);\n  };\n\n  updateRecordingVideoPausesCount = (value: number) => {\n    this.recordingVideoPausesCount.next(value);\n  };\n\n  updateRecordingVideoPausesLimit = (value: number) => {\n    this.recordingVideoPausesLimit.next(value);\n  };\n\n  updateRecordingVideoSupport = (value: boolean) => {\n    this.recordingVideoSupport.next(value);\n  };\n\n  updateRecordingVideoPeopleLimit = (value: number) => {\n    this.recordingVideoPeopleLimit.next(value);\n  };\n\n  updateRecordingVideoParticipantsTimeLimit = (value: number) => {\n    this.recordingVideoParticipantsTimeLimit.next(value);\n  };\n\n  updateRecordingAllParticipantsSupport = (value: boolean) => {\n    this.recordingAllParticipantsSupport.next(value);\n  };\n\n  updateRecordingVideoParticipantsSupport = (value: boolean) => {\n    this.recordingVideoParticipantsSupport.next(value);\n  };\n\n  updateRecordingAllParticipantsFullRoomSupport = (value: boolean) => {\n    this.recordingAllParticipantsFullRoomSupport.next(value);\n  };\n\n  updateRecordingVideoParticipantsFullRoomSupport = (value: boolean) => {\n    this.recordingVideoParticipantsFullRoomSupport.next(value);\n  };\n\n  updateRecordingPreferredOrientation = (value: string) => {\n    this.recordingPreferredOrientation.next(value);\n  };\n\n  updateRecordingSupportForOtherOrientation = (value: boolean) => {\n    this.recordingSupportForOtherOrientation.next(value);\n  };\n\n  updateRecordingMultiFormatsSupport = (value: boolean) => {\n    this.recordingMultiFormatsSupport.next(value);\n  };\n\n  updateUserRecordingParams = (value: UserRecordingParams) => {\n    this.userRecordingParams.next(value);\n  };\n\n  updateCanRecord = (value: boolean) => {\n    this.canRecord.next(value);\n  };\n\n  updateStartReport = (value: boolean) => {\n    this.startReport.next(value);\n  };\n\n  updateEndReport = (value: boolean) => {\n    this.endReport.next(value);\n  };\n\n  updateRecordTimerInterval = (value: NodeJS.Timeout | null) => {\n    this.recordTimerInterval.next(value);\n  };\n\n  updateRecordStartTime = (value: number) => {\n    this.recordStartTime.next(value);\n  };\n\n  updateRecordElapsedTime = (value: number) => {\n    this.recordElapsedTime.next(value);\n  };\n\n  updateIsTimerRunning = (value: boolean) => {\n    this.isTimerRunning.next(value);\n  };\n\n  updateCanPauseResume = (value: boolean) => {\n    this.canPauseResume.next(value);\n  };\n\n  updateRecordChangeSeconds = (value: number) => {\n    this.recordChangeSeconds.next(value);\n  };\n\n  updatePauseLimit = (value: number) => {\n    this.pauseLimit.next(value);\n  };\n\n  updatePauseRecordCount = (value: number) => {\n    this.pauseRecordCount.next(value);\n  };\n\n  updateCanLaunchRecord = (value: boolean) => {\n    this.canLaunchRecord.next(value);\n  };\n\n  updateStopLaunchRecord = (value: boolean) => {\n    this.stopLaunchRecord.next(value);\n  };\n\n  updateParticipantsAll = (value: Participant[]) => {\n    this.participantsAll.next(value);\n  };\n\n  updateFirstAll = (value: boolean) => {\n    this.firstAll.next(value);\n  };\n\n  updateUpdateMainWindow = (value: boolean) => {\n    this.updateMainWindow.next(value);\n  };\n\n  updateFirst_round = (value: boolean) => {\n    this.first_round.next(value);\n  };\n\n  updateLandScaped = (value: boolean) => {\n    this.landScaped.next(value);\n  };\n\n  updateLock_screen = (value: boolean) => {\n    this.lock_screen.next(value);\n  };\n\n  updateScreenId = (value: string) => {\n    this.screenId.next(value);\n  };\n\n  updateAllVideoStreams = (value: (Participant | Stream)[]) => {\n    this.allVideoStreams.next(value);\n  };\n\n  updateNewLimitedStreams = (value: (Participant | Stream)[]) => {\n    this.newLimitedStreams.next(value);\n  };\n\n  updateNewLimitedStreamsIDs = (value: string[]) => {\n    this.newLimitedStreamsIDs.next(value);\n  };\n\n  updateActiveSounds = (value: string[]) => {\n    this.activeSounds.next(value);\n  };\n\n  updateScreenShareIDStream = (value: string) => {\n    this.screenShareIDStream.next(value);\n  };\n\n  updateScreenShareNameStream = (value: string) => {\n    this.screenShareNameStream.next(value);\n  };\n\n  updateAdminIDStream = (value: string) => {\n    this.adminIDStream.next(value);\n  };\n\n  updateAdminNameStream = (value: string) => {\n    this.adminNameStream.next(value);\n  };\n\n  updateYouYouStream = (value: (Participant | Stream)[]) => {\n    this.youYouStream.next(value);\n  };\n\n  updateYouYouStreamIDs = (value: string[]) => {\n    this.youYouStreamIDs.next(value);\n  };\n\n  updateLocalStream = (value: MediaStream | null) => {\n    this.localStream.next(value);\n  };\n\n  updateRecordStarted = (value: boolean) => {\n    this.recordStarted.next(value);\n  };\n\n  updateRecordResumed = (value: boolean) => {\n    this.recordResumed.next(value);\n  };\n\n  updateRecordPaused = (value: boolean) => {\n    this.recordPaused.next(value);\n  };\n\n  updateRecordStopped = (value: boolean) => {\n    this.recordStopped.next(value);\n  };\n\n  updateAdminRestrictSetting = (value: boolean) => {\n    this.adminRestrictSetting.next(value);\n  };\n\n  updateVideoRequestState = (value: string | null) => {\n    this.videoRequestState.next(value);\n  };\n\n  updateVideoRequestTime = (value: number) => {\n    this.videoRequestTime.next(value);\n  };\n\n  updateVideoAction = (value: boolean) => {\n    this.videoAction.next(value);\n  };\n\n  updateLocalStreamVideo = (value: MediaStream | null) => {\n    this.localStreamVideo.next(value);\n  };\n\n  updateUserDefaultVideoInputDevice = (value: string) => {\n    this.userDefaultVideoInputDevice.next(value);\n  };\n\n  updateCurrentFacingMode = (value: string) => {\n    this.currentFacingMode.next(value);\n  };\n\n  updatePrevFacingMode = (value: string) => {\n    this.prevFacingMode.next(value);\n  };\n\n  updateDefVideoID = (value: string) => {\n    this.defVideoID.next(value);\n  };\n\n  updateAllowed = (value: boolean) => {\n    this.allowed.next(value);\n  };\n\n  updateDispActiveNames = (value: string[]) => {\n    this.dispActiveNames.next(value);\n  };\n\n  updateP_dispActiveNames = (value: string[]) => {\n    this.p_dispActiveNames.next(value);\n  };\n\n  updateActiveNames = (value: string[]) => {\n    this.activeNames.next(value);\n  };\n\n  updatePrevActiveNames = (value: string[]) => {\n    this.prevActiveNames.next(value);\n  };\n\n  updateP_activeNames = (value: string[]) => {\n    this.p_activeNames.next(value);\n  };\n\n  updateMembersReceived = (value: boolean) => {\n    this.membersReceived.next(value);\n  };\n\n  updateDeferScreenReceived = (value: boolean) => {\n    this.deferScreenReceived.next(value);\n  };\n\n  updateHostFirstSwitch = (value: boolean) => {\n    this.hostFirstSwitch.next(value);\n  };\n\n  updateMicAction = (value: boolean) => {\n    this.micAction.next(value);\n  };\n\n  updateScreenAction = (value: boolean) => {\n    this.screenAction.next(value);\n  };\n\n  updateChatAction = (value: boolean) => {\n    this.chatAction.next(value);\n  };\n\n  updateAudioRequestState = (value: string | null) => {\n    this.audioRequestState.next(value);\n  };\n\n  updateScreenRequestState = (value: string | null) => {\n    this.screenRequestState.next(value);\n  };\n\n  updateChatRequestState = (value: string | null) => {\n    this.chatRequestState.next(value);\n  };\n\n  updateAudioRequestTime = (value: number) => {\n    this.audioRequestTime.next(value);\n  };\n\n  updateScreenRequestTime = (value: number) => {\n    this.screenRequestTime.next(value);\n  };\n\n  updateChatRequestTime = (value: number) => {\n    this.chatRequestTime.next(value);\n  };\n\n  updateOldSoundIds = (value: string[]) => {\n    this.oldSoundIds.next(value);\n  };\n\n  updateHostLabel = (value: string) => {\n    this.hostLabel.next(value);\n  };\n\n  updateMainScreenFilled = (value: boolean) => {\n    this.mainScreenFilled.next(value);\n  };\n\n  updateLocalStreamScreen = (value: MediaStream | null) => {\n    this.localStreamScreen.next(value);\n  };\n\n  updateScreenAlreadyOn = (value: boolean) => {\n    this.screenAlreadyOn.next(value);\n  };\n\n  updateChatAlreadyOn = (value: boolean) => {\n    this.chatAlreadyOn.next(value);\n  };\n\n  updateRedirectURL = (value: string) => {\n    this.redirectURL.next(value);\n  };\n\n  updateOldAllStreams = (value: (Participant | Stream)[]) => {\n    this.oldAllStreams.next(value);\n  };\n\n  updateAdminVidID = (value: string) => {\n    this.adminVidID.next(value);\n  };\n\n  updateStreamNames = (value: Stream[]) => {\n    this.streamNames.next(value);\n  };\n\n  updateNon_alVideoStreams = (value: Participant[]) => {\n    this.non_alVideoStreams.next(value);\n  };\n\n  updateSortAudioLoudness = (value: boolean) => {\n    this.sortAudioLoudness.next(value);\n  };\n\n  updateAudioDecibels = (value: AudioDecibels[]) => {\n    this.audioDecibels.next(value);\n  };\n\n  updateMixed_alVideoStreams = (value: (Participant | Stream)[]) => {\n    this.mixed_alVideoStreams.next(value);\n  };\n\n  updateNon_alVideoStreams_muted = (value: Participant[]) => {\n    this.non_alVideoStreams_muted.next(value);\n  };\n\n  updatePaginatedStreams = (value: (Participant | Stream)[][]) => {\n    this.paginatedStreams.next(value);\n  };\n\n  updateLocalStreamAudio = (value: MediaStream | null) => {\n    this.localStreamAudio.next(value);\n  };\n\n  updateDefAudioID = (value: string) => {\n    this.defAudioID.next(value);\n  };\n\n  updateUserDefaultAudioInputDevice = (value: string) => {\n    this.userDefaultAudioInputDevice.next(value);\n  };\n\n  updateUserDefaultAudioOutputDevice = (value: string) => {\n    this.userDefaultAudioOutputDevice.next(value);\n  };\n\n  updatePrevAudioInputDevice = (value: string) => {\n    this.prevAudioInputDevice.next(value);\n  };\n\n  updatePrevVideoInputDevice = (value: string) => {\n    this.prevVideoInputDevice.next(value);\n  };\n\n  updateAudioPaused = (value: boolean) => {\n    this.audioPaused.next(value);\n  };\n\n  updateMainScreenPerson = (value: string) => {\n    this.mainScreenPerson.next(value);\n  };\n\n  updateAdminOnMainScreen = (value: boolean) => {\n    this.adminOnMainScreen.next(value);\n  };\n\n  updateScreenStates = (value: ScreenState[]) => {\n    this.screenStates.next(value);\n  };\n\n  updatePrevScreenStates = (value: ScreenState[]) => {\n    this.prevScreenStates.next(value);\n  };\n\n  updateUpdateDateState = (value: number | null) => {\n    this.updateDateState.next(value);\n  };\n\n  updateLastUpdate = (value: number | null) => {\n    this.lastUpdate.next(value);\n  };\n\n  updateNForReadjustRecord = (value: number) => {\n    this.nForReadjustRecord.next(value);\n  };\n\n  updateFixedPageLimit = (value: number) => {\n    this.fixedPageLimit.next(value);\n  };\n\n  updateRemoveAltGrid = (value: boolean) => {\n    this.removeAltGrid.next(value);\n  };\n\n  updateNForReadjust = (value: number) => {\n    this.nForReadjust.next(value);\n  };\n\n  updateLastReorderTime = (value: number) => {\n    this.lastReorderTime.next(value);\n  };\n\n  updateAudStreamNames = (value: Stream[]) => {\n    this.audStreamNames.next(value);\n  };\n\n  updateCurrentUserPage = (value: number) => {\n    this.currentUserPage.next(value);\n  };\n\n  updateMainHeightWidth = (value: number) => {\n    this.mainHeightWidth.next(value);\n  };\n\n  updatePrevMainHeightWidth = (value: number) => {\n    this.prevMainHeightWidth.next(value);\n  };\n\n  updatePrevDoPaginate = (value: boolean) => {\n    this.prevDoPaginate.next(value);\n  };\n\n  updateDoPaginate = (value: boolean) => {\n    this.doPaginate.next(value);\n  };\n\n  updateShareEnded = (value: boolean) => {\n    this.shareEnded.next(value);\n  };\n\n  updateLStreams = (value: (Participant | Stream)[]) => {\n    this.lStreams.next(value);\n  };\n\n  updateChatRefStreams = (value: (Participant | Stream)[]) => {\n    this.chatRefStreams.next(value);\n  };\n\n  updateControlHeight = (value: number) => {\n    this.controlHeight.next(value);\n  };\n\n  updateIsWideScreen = (value: boolean) => {\n    this.isWideScreen.next(value);\n  };\n\n  updateIsMediumScreen = (value: boolean) => {\n    this.isMediumScreen.next(value);\n  };\n\n  updateIsSmallScreen = (value: boolean) => {\n    this.isSmallScreen.next(value);\n  };\n\n  updateAddGrid = (value: boolean) => {\n    this.addGrid.next(value);\n  };\n\n  updateAddAltGrid = (value: boolean) => {\n    this.addAltGrid.next(value);\n  };\n\n  updateGridRows = (value: number) => {\n    this.gridRows.next(value);\n  };\n\n  updateGridCols = (value: number) => {\n    this.gridCols.next(value);\n  };\n\n  updateAltGridRows = (value: number) => {\n    this.altGridRows.next(value);\n  };\n\n  updateAltGridCols = (value: number) => {\n    this.altGridCols.next(value);\n  };\n\n  updateNumberPages = (value: number) => {\n    this.numberPages.next(value);\n  };\n\n  updateCurrentStreams = (value: (Participant | Stream)[]) => {\n    this.currentStreams.next(value);\n  };\n\n  updateShowMiniView = (value: boolean) => {\n    this.showMiniView.next(value);\n  };\n\n  updateNStream = (value: MediaStream | null) => {\n    this.nStream.next(value);\n  };\n\n  updateDefer_receive = (value: boolean) => {\n    this.defer_receive.next(value);\n  };\n\n  updateAllAudioStreams = (value: (Participant | Stream)[]) => {\n    this.allAudioStreams.next(value);\n  };\n\n  updateRemoteScreenStream = (value: Stream[]) => {\n    this.remoteScreenStream.next(value);\n  };\n\n  updateScreenProducer = (value: Producer | null) => {\n    this.screenProducer.next(value);\n  };\n\n  updateGotAllVids = (value: boolean) => {\n    this.gotAllVids.next(value);\n  };\n\n  updatePaginationHeightWidth = (value: number) => {\n    this.paginationHeightWidth.next(value);\n  };\n\n  updatePaginationDirection = (value: 'horizontal' | 'vertical') => {\n    this.paginationDirection.next(value);\n  };\n\n  updateGridSizes = (value: GridSizes) => {\n    this.gridSizes.next(value);\n  };\n\n  updateScreenForceFullDisplay = (value: boolean) => {\n    this.screenForceFullDisplay.next(value);\n  };\n\n  updateMainGridStream = (value: CustomMediaComponent[]) => {\n    this.mainGridStream.next(value);\n  };\n\n  updateOtherGridStreams = (value: CustomMediaComponent[][]) => {\n    this.otherGridStreams.next(value);\n  };\n\n  updateAudioOnlyStreams = (value: CustomMediaComponent[]) => {\n    this.audioOnlyStreams.next(value);\n  };\n\n  updateVideoInputs = (value: MediaDeviceInfo[]) => {\n    this.videoInputs.next(value);\n  };\n\n  updateAudioInputs = (value: MediaDeviceInfo[]) => {\n    this.audioInputs.next(value);\n  };\n\n  updateMeetingProgressTime = (value: string) => {\n    this.meetingProgressTime.next(value);\n  };\n\n  updateMeetingElapsedTime = (value: number) => {\n    this.meetingElapsedTime.next(value);\n  };\n\n  updateRef_participants = (value: Participant[]) => {\n    this.ref_participants.next(value);\n  };\n\n  // Messages\n  messages = new BehaviorSubject<Message[]>([]);\n  startDirectMessage = new BehaviorSubject<boolean>(false);\n  directMessageDetails = new BehaviorSubject<Participant | null>(null);\n  showMessagesBadge = new BehaviorSubject<boolean>(false);\n\n  // Event Settings\n  audioSetting = new BehaviorSubject<string>('allow');\n  videoSetting = new BehaviorSubject<string>('allow');\n  screenshareSetting = new BehaviorSubject<string>('allow');\n  chatSetting = new BehaviorSubject<string>('allow');\n\n  // Display Settings\n  displayOption = new BehaviorSubject<string>('media');\n  autoWave = new BehaviorSubject<boolean>(true);\n  forceFullDisplay = new BehaviorSubject<boolean>(true);\n  prevForceFullDisplay = new BehaviorSubject<boolean>(false);\n  prevMeetingDisplayType = new BehaviorSubject<string>('video');\n\n  // Waiting Room\n  waitingRoomFilter = new BehaviorSubject<string>('');\n  waitingRoomList = new BehaviorSubject<WaitingRoomParticipant[]>(\n    this.useSeed && this.seedData?.waitingList ? this.seedData.waitingList : [],\n  );\n  waitingRoomCounter = new BehaviorSubject<number>(0);\n  filteredWaitingRoomList = new BehaviorSubject<WaitingRoomParticipant[]>(\n    this.useSeed && this.seedData?.waitingList ? this.seedData.waitingList : [],\n  );\n\n  // Requests\n  requestFilter = new BehaviorSubject<string>('');\n  requestList = new BehaviorSubject<Request[]>(\n    this.useSeed && this.seedData?.requests ? this.seedData.requests : [],\n  );\n  requestCounter = new BehaviorSubject<number>(0);\n  filteredRequestList = new BehaviorSubject<Request[]>(\n    this.useSeed && this.seedData?.requests ? this.seedData.requests : [],\n  );\n\n  // Total Requests and Waiting Room\n  totalReqWait = new BehaviorSubject<number>(0);\n\n  // Alerts\n  alertVisible = new BehaviorSubject<boolean>(false);\n  alertMessage = new BehaviorSubject<string>('');\n  alertType = new BehaviorSubject<'success' | 'danger'>('success');\n  alertDuration = new BehaviorSubject<number>(3000);\n\n  // Progress Timer\n  progressTimerVisible = new BehaviorSubject<boolean>(true);\n  progressTimerValue = new BehaviorSubject<number>(0);\n\n  // Menu Modals\n  isMenuModalVisible = new BehaviorSubject<boolean>(false);\n  isRecordingModalVisible = new BehaviorSubject<boolean>(false);\n  isSettingsModalVisible = new BehaviorSubject<boolean>(false);\n  isRequestsModalVisible = new BehaviorSubject<boolean>(false);\n  isWaitingModalVisible = new BehaviorSubject<boolean>(false);\n  isCoHostModalVisible = new BehaviorSubject<boolean>(false);\n  isMediaSettingsModalVisible = new BehaviorSubject<boolean>(false);\n  isDisplaySettingsModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Other Modals\n  isParticipantsModalVisible = new BehaviorSubject<boolean>(false);\n  isMessagesModalVisible = new BehaviorSubject<boolean>(false);\n  isConfirmExitModalVisible = new BehaviorSubject<boolean>(false);\n  isConfirmHereModalVisible = new BehaviorSubject<boolean>(false);\n  isShareEventModalVisible = new BehaviorSubject<boolean>(false);\n  isLoadingModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Recording Options\n  recordingMediaOptions = new BehaviorSubject<string>('video');\n  recordingAudioOptions = new BehaviorSubject<string>('all');\n  recordingVideoOptions = new BehaviorSubject<string>('all');\n  recordingVideoType = new BehaviorSubject<string>('fullDisplay');\n  recordingVideoOptimized = new BehaviorSubject<boolean>(false);\n  recordingDisplayType = new BehaviorSubject<'video' | 'media' | 'all'>('video');\n  recordingAddHLS = new BehaviorSubject<boolean>(true);\n  recordingNameTags = new BehaviorSubject<boolean>(true);\n  recordingBackgroundColor = new BehaviorSubject<string>('#83c0e9');\n  recordingNameTagsColor = new BehaviorSubject<string>('#ffffff');\n  recordingAddText = new BehaviorSubject<boolean>(false);\n  recordingCustomText = new BehaviorSubject<string>('Add Text');\n  recordingCustomTextPosition = new BehaviorSubject<string>('top');\n  recordingCustomTextColor = new BehaviorSubject<string>('#ffffff');\n  recordingOrientationVideo = new BehaviorSubject<string>('landscape');\n  clearedToResume = new BehaviorSubject<boolean>(true);\n  clearedToRecord = new BehaviorSubject<boolean>(true);\n  recordState = new BehaviorSubject<string>('green');\n  showRecordButtons = new BehaviorSubject<boolean>(false);\n  recordingProgressTime = new BehaviorSubject<string>('00:00:00');\n  audioSwitching = new BehaviorSubject<boolean>(false);\n  videoSwitching = new BehaviorSubject<boolean>(false);\n\n  // Media States\n  videoAlreadyOn = new BehaviorSubject<boolean>(false);\n  audioAlreadyOn = new BehaviorSubject<boolean>(false);\n\n  componentSizes = new BehaviorSubject<ComponentSizes>({\n    mainHeight: 0,\n    otherHeight: 0,\n    mainWidth: 0,\n    otherWidth: 0,\n  });\n\n  // Permissions\n  hasCameraPermission = new BehaviorSubject<boolean>(false);\n  hasAudioPermission = new BehaviorSubject<boolean>(false);\n\n  // Transports\n  transportCreated = new BehaviorSubject<boolean>(false);\n  transportCreatedVideo = new BehaviorSubject<boolean>(false);\n  transportCreatedAudio = new BehaviorSubject<boolean>(false);\n  transportCreatedScreen = new BehaviorSubject<boolean>(false);\n  producerTransport = new BehaviorSubject<Transport | null>(null);\n  videoProducer = new BehaviorSubject<Producer | null>(null);\n  params = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  videoParams = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  audioParams = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  audioProducer = new BehaviorSubject<Producer | null>(null);\n  consumerTransports = new BehaviorSubject<TransportType[]>([]);\n  consumingTransports = new BehaviorSubject<string[]>([]);\n\n  // Polls\n  polls = new BehaviorSubject<Poll[]>(\n    this.useSeed && this.seedData?.polls ? this.seedData.polls : [],\n  );\n  poll = new BehaviorSubject<Poll | null>(null);\n  isPollModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Background\n  customImage = new BehaviorSubject<string>('');\n  selectedImage = new BehaviorSubject<string>('');\n  segmentVideo = new BehaviorSubject<MediaStream | null>(null);\n  selfieSegmentation = new BehaviorSubject<SelfieSegmentation | null>(null);\n  pauseSegmentation = new BehaviorSubject<boolean>(false);\n  processedStream = new BehaviorSubject<MediaStream | null>(null);\n  keepBackground = new BehaviorSubject<boolean>(false);\n  backgroundHasChanged = new BehaviorSubject<boolean>(false);\n  virtualStream = new BehaviorSubject<MediaStream | null>(null);\n  mainCanvas = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  prevKeepBackground = new BehaviorSubject<boolean>(false);\n  appliedBackground = new BehaviorSubject<boolean>(false);\n  isBackgroundModalVisible = new BehaviorSubject<boolean>(false);\n  autoClickBackground = new BehaviorSubject<boolean>(false);\n\n  // Breakout Rooms\n  breakoutRooms = new BehaviorSubject<BreakoutParticipant[][]>(\n    this.useSeed && this.seedData?.breakoutRooms ? this.seedData.breakoutRooms : [],\n  );\n  currentRoomIndex = new BehaviorSubject<number>(0);\n  canStartBreakout = new BehaviorSubject<boolean>(false);\n  breakOutRoomStarted = new BehaviorSubject<boolean>(false);\n  breakOutRoomEnded = new BehaviorSubject<boolean>(false);\n  hostNewRoom = new BehaviorSubject<number>(-1);\n  limitedBreakRoom = new BehaviorSubject<BreakoutParticipant[]>([]);\n  mainRoomsLength = new BehaviorSubject<number>(0);\n  memberRoom = new BehaviorSubject<number>(-1);\n  isBreakoutRoomsModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Whiteboard\n  whiteboardUsers = new BehaviorSubject<WhiteboardUser[]>(\n    this.useSeed && this.seedData?.whiteboardUsers ? this.seedData.whiteboardUsers : [],\n  );\n  currentWhiteboardIndex = new BehaviorSubject<number>(0);\n  canStartWhiteboard = new BehaviorSubject<boolean>(false);\n  whiteboardStarted = new BehaviorSubject<boolean>(false);\n  whiteboardEnded = new BehaviorSubject<boolean>(false);\n  whiteboardLimit = new BehaviorSubject<number>(4);\n  isWhiteboardModalVisible = new BehaviorSubject<boolean>(false);\n  isConfigureWhiteboardModalVisible = new BehaviorSubject<boolean>(false);\n  shapes = new BehaviorSubject<Shape[]>([]);\n  useImageBackground = new BehaviorSubject<boolean>(true);\n  redoStack = new BehaviorSubject<Shape[]>([]);\n  undoStack = new BehaviorSubject<string[]>([]);\n  canvasStream = new BehaviorSubject<MediaStream | null>(null);\n  canvasWhiteboard = new BehaviorSubject<HTMLCanvasElement | null>(null);\n\n  // Screenboard\n  canvasScreenboard = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  processedScreenStream = new BehaviorSubject<MediaStream | null>(null);\n  annotateScreenStream = new BehaviorSubject<boolean>(false);\n  mainScreenCanvas = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  isScreenboardModalVisible = new BehaviorSubject<boolean>(false);\n\n  //state variables for the control buttons\n  micActive = new BehaviorSubject<boolean>(\n    this.audioAlreadyOn.value ? this.audioAlreadyOn.value : false,\n  );\n  videoActive = new BehaviorSubject<boolean>(\n    this.videoAlreadyOn.value ? this.videoAlreadyOn.value : false,\n  );\n  screenShareActive = new BehaviorSubject<boolean>(false);\n  endCallActive = new BehaviorSubject<boolean>(false);\n  participantsActive = new BehaviorSubject<boolean>(false);\n  menuActive = new BehaviorSubject<boolean>(false);\n  commentsActive = new BehaviorSubject<boolean>(false);\n\n  // Update functions\n  updateMessages = (value: Message[]) => {\n    this.messages.next(value);\n  };\n\n  updateStartDirectMessage = (value: boolean) => {\n    this.startDirectMessage.next(value);\n  };\n\n  updateDirectMessageDetails = (value: Participant | null) => {\n    this.directMessageDetails.next(value);\n  };\n\n  updateShowMessagesBadge = (value: boolean) => {\n    this.showMessagesBadge.next(value);\n  };\n\n  updateAudioSetting = (value: string) => {\n    this.audioSetting.next(value);\n  };\n\n  updateVideoSetting = (value: string) => {\n    this.videoSetting.next(value);\n  };\n\n  updateScreenshareSetting = (value: string) => {\n    this.screenshareSetting.next(value);\n  };\n\n  updateChatSetting = (value: string) => {\n    this.chatSetting.next(value);\n  };\n\n  updateDisplayOption = (value: string) => {\n    this.displayOption.next(value);\n  };\n\n  updateAutoWave = (value: boolean) => {\n    this.autoWave.next(value);\n  };\n\n  updateForceFullDisplay = (value: boolean) => {\n    this.forceFullDisplay.next(value);\n  };\n\n  updatePrevForceFullDisplay = (value: boolean) => {\n    this.prevForceFullDisplay.next(value);\n  };\n\n  updatePrevMeetingDisplayType = (value: string) => {\n    this.prevMeetingDisplayType.next(value);\n  };\n\n  updateWaitingRoomCounter = (value: number) => {\n    this.waitingRoomCounter.next(value);\n  };\n\n  updateWaitingRoomFilter = (value: string) => {\n    this.waitingRoomFilter.next(value);\n  };\n\n  updateWaitingRoomList = (value: WaitingRoomParticipant[]) => {\n    this.waitingRoomList.next(value);\n    this.filteredWaitingRoomList.next(value);\n    this.waitingRoomCounter.next(value.length);\n  };\n\n  onWaitingRoomFilterChange = (value: string) => {\n    if (value !== '' && value.length > 0) {\n      const filteredWaitingRoom = this.waitingRoomList\n        .getValue()\n        .filter((waitingRoom: WaitingRoomParticipant) => {\n          return waitingRoom.name.toLowerCase().includes(value.toLowerCase());\n        });\n      this.filteredWaitingRoomList.next(filteredWaitingRoom);\n      this.waitingRoomCounter.next(filteredWaitingRoom.length);\n    } else {\n      this.filteredWaitingRoomList.next(this.waitingRoomList.getValue());\n      this.waitingRoomCounter.next(this.waitingRoomList.getValue().length);\n    }\n  };\n\n  onWaitingRoomClose = () => {\n    this.updateIsWaitingModalVisible(false);\n  };\n\n  updateRequestCounter = (value: number) => {\n    this.requestCounter.next(value);\n  };\n\n  updateRequestFilter = (value: string) => {\n    this.requestFilter.next(value);\n  };\n\n  updateRequestList = (value: Request[]) => {\n    this.requestList.next(value);\n    this.filteredRequestList.next(value);\n    this.requestCounter.next(value.length);\n  };\n\n  onRequestFilterChange = (value: string) => {\n    if (value !== '' && value.length > 0) {\n      const filteredRequest = this.requestList.getValue().filter((request: Request) => {\n        return request?.name?.toLowerCase().includes(value.toLowerCase());\n      });\n      this.filteredRequestList.next(filteredRequest);\n      this.requestCounter.next(filteredRequest.length);\n    } else {\n      this.filteredRequestList.next(this.requestList.getValue());\n      this.requestCounter.next(this.requestList.getValue().length);\n    }\n  };\n\n  onRequestClose = () => {\n    this.updateIsRequestsModalVisible(false);\n  };\n\n  updateTotalReqWait = (value: number) => {\n    this.totalReqWait.next(value);\n  };\n\n  updateAlertVisible = (value: boolean) => {\n    this.alertVisible.next(value);\n  };\n\n  updateAlertMessage = (value: string) => {\n    this.alertMessage.next(value);\n  };\n\n  updateAlertType = (value: 'success' | 'danger') => {\n    this.alertType.next(value);\n  };\n\n  updateAlertDuration = (value: number) => {\n    this.alertDuration.next(value);\n  };\n\n  updateProgressTimerVisible = (value: boolean) => {\n    this.progressTimerVisible.next(value);\n  };\n\n  updateProgressTimerValue = (value: number) => {\n    this.progressTimerValue.next(value);\n  };\n\n  updateIsMenuModalVisible = (value: boolean) => {\n    this.isMenuModalVisible.next(value);\n  };\n\n  updateIsRecordingModalVisible = (value: boolean) => {\n    this.isRecordingModalVisible.next(value);\n    if (value) {\n      this.updateConfirmedToRecord(false);\n    } else {\n      if (\n        this.clearedToRecord.getValue() &&\n        this.clearedToResume.getValue() &&\n        this.recordStarted.getValue()\n      ) {\n        this.updateShowRecordButtons(true);\n      }\n    }\n  };\n\n  updateIsSettingsModalVisible = (value: boolean) => {\n    this.isSettingsModalVisible.next(value);\n  };\n\n  updateIsRequestsModalVisible = (value: boolean) => {\n    this.isRequestsModalVisible.next(value);\n  };\n\n  updateIsWaitingModalVisible = (value: boolean) => {\n    this.isWaitingModalVisible.next(value);\n  };\n\n  updateIsCoHostModalVisible = (value: boolean) => {\n    this.isCoHostModalVisible.next(value);\n  };\n\n  updateIsMediaSettingsModalVisible = (value: boolean) => {\n    this.isMediaSettingsModalVisible.next(value);\n  };\n\n  updateIsDisplaySettingsModalVisible = (value: boolean) => {\n    this.isDisplaySettingsModalVisible.next(value);\n  };\n\n  updateIsParticipantsModalVisible = (value: boolean) => {\n    this.isParticipantsModalVisible.next(value);\n  };\n\n  updateIsMessagesModalVisible = (value: boolean) => {\n    this.isMessagesModalVisible.next(value);\n    if (!value) {\n      this.updateShowMessagesBadge(false);\n    }\n  };\n\n  updateIsConfirmExitModalVisible = (value: boolean) => {\n    this.isConfirmExitModalVisible.next(value);\n  };\n\n  updateIsConfirmHereModalVisible = (value: boolean) => {\n    this.isConfirmHereModalVisible.next(value);\n  };\n\n  updateIsLoadingModalVisible = (value: boolean) => {\n    this.isLoadingModalVisible.next(value);\n  };\n\n  updateIsShareEventModalVisible = (value: boolean) => {\n    this.isShareEventModalVisible.next(value);\n  };\n\n  updateRecordingMediaOptions = (value: string) => {\n    this.recordingMediaOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAudioOptions = (value: string) => {\n    this.recordingAudioOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoOptions = (value: string) => {\n    this.recordingVideoOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoType = (value: string) => {\n    this.recordingVideoType.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoOptimized = (value: boolean) => {\n    this.recordingVideoOptimized.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingDisplayType = (value: 'video' | 'media' | 'all') => {\n    this.recordingDisplayType.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAddHLS = (value: boolean) => {\n    this.recordingAddHLS.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAddText = (value: boolean) => {\n    this.recordingAddText.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomText = (value: string) => {\n    this.recordingCustomText.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomTextPosition = (value: string) => {\n    this.recordingCustomTextPosition.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomTextColor = (value: string) => {\n    this.recordingCustomTextColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingNameTags = (value: boolean) => {\n    this.recordingNameTags.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingBackgroundColor = (value: string) => {\n    this.recordingBackgroundColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingNameTagsColor = (value: string) => {\n    this.recordingNameTagsColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingOrientationVideo = (value: string) => {\n    this.recordingOrientationVideo.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateClearedToResume = (value: boolean) => {\n    this.clearedToResume.next(value);\n  };\n\n  updateClearedToRecord = (value: boolean) => {\n    this.clearedToRecord.next(value);\n  };\n\n  updateRecordState = (value: string) => {\n    if (this.recordStarted.value && !this.recordStopped.value) {\n      if (!this.recordPaused.value) {\n        this.recordState.next('red');\n      } else {\n        this.recordState.next('yellow');\n      }\n    } else {\n      this.recordState.next(value);\n    }\n    this.recordState.next(value);\n  };\n\n  updateShowRecordButtons = (value: boolean) => {\n    this.showRecordButtons.next(value);\n  };\n\n  updateRecordingProgressTime = (value: string) => {\n    this.recordingProgressTime.next(value);\n    this.updateRecordTimerWidget();\n  };\n\n  updateAudioSwitching = (value: boolean) => {\n    this.audioSwitching.next(value);\n  };\n\n  updateVideoSwitching = (value: boolean) => {\n    this.videoSwitching.next(value);\n  };\n\n  updateVideoAlreadyOn = (value: boolean) => {\n    this.videoAlreadyOn.next(value);\n    this.videoActive.next(value);\n  };\n\n  updateAudioAlreadyOn = (value: boolean) => {\n    this.audioAlreadyOn.next(value);\n    this.micActive.next(value);\n  };\n\n  updateComponentSizes = (sizes: ComponentSizes) => {\n    this.componentSizes.next(sizes);\n  };\n\n  updateHasCameraPermission = (value: boolean) => {\n    this.hasCameraPermission.next(value);\n  };\n\n  updateHasAudioPermission = (value: boolean) => {\n    this.hasAudioPermission.next(value);\n  };\n\n  requestPermissionCamera(): Promise<string> {\n    // Implement the request permission logic here\n    return Promise.resolve('granted');\n  }\n\n  requestPermissionAudio(): Promise<string> {\n    // Implement the request permission logic here\n    return Promise.resolve('granted');\n  }\n\n  updateTransportCreated = (value: boolean) => {\n    this.transportCreated.next(value);\n  };\n\n  updateTransportCreatedVideo = (value: boolean) => {\n    this.transportCreatedVideo.next(value);\n  };\n\n  updateTransportCreatedAudio = (value: boolean) => {\n    this.transportCreatedAudio.next(value);\n  };\n\n  updateTransportCreatedScreen = (value: boolean) => {\n    this.transportCreatedScreen.next(value);\n  };\n\n  updateProducerTransport = (value: Transport | null) => {\n    this.producerTransport.next(value);\n  };\n\n  updateVideoProducer = (value: Producer | null) => {\n    this.videoProducer.next(value);\n  };\n\n  updateParams = (value: ProducerOptions) => {\n    this.params.next(value);\n  };\n\n  updateVideoParams = (value: ProducerOptions) => {\n    this.videoParams.next(value);\n  };\n\n  updateAudioParams = (value: ProducerOptions) => {\n    this.audioParams.next(value);\n  };\n\n  updateAudioProducer = (value: Producer | null) => {\n    this.audioProducer.next(value);\n  };\n\n  updateConsumerTransports = (value: TransportType[]) => {\n    this.consumerTransports.next(value);\n  };\n\n  updateConsumingTransports = (value: string[]) => {\n    this.consumingTransports.next(value);\n  };\n\n  updatePolls = (value: Poll[]) => {\n    this.polls.next(value);\n  };\n\n  updatePoll = (value: Poll | null) => {\n    this.poll.next(value);\n  };\n\n  updateIsPollModalVisible = (value: boolean) => {\n    this.isPollModalVisible.next(value);\n  };\n\n  updateCustomImage = (value: string) => {\n    this.customImage.next(value);\n  };\n\n  updateSelectedImage = (value: string) => {\n    this.selectedImage.next(value);\n  };\n\n  updateSegmentVideo = (value: MediaStream | null) => {\n    this.segmentVideo.next(value);\n  };\n\n  updateSelfieSegmentation = (value: SelfieSegmentation | null) => {\n    this.selfieSegmentation.next(value);\n  };\n\n  updatePauseSegmentation = (value: boolean) => {\n    this.pauseSegmentation.next(value);\n  };\n\n  updateProcessedStream = (value: MediaStream | null) => {\n    this.processedStream.next(value);\n  };\n\n  updateKeepBackground = (value: boolean) => {\n    this.keepBackground.next(value);\n  };\n\n  updateBackgroundHasChanged = (value: boolean) => {\n    this.backgroundHasChanged.next(value);\n  };\n\n  updateVirtualStream = (value: MediaStream | null) => {\n    this.virtualStream.next(value);\n  };\n\n  updateMainCanvas = (value: HTMLCanvasElement | null) => {\n    this.mainCanvas.next(value);\n  };\n\n  updatePrevKeepBackground = (value: boolean) => {\n    this.prevKeepBackground.next(value);\n  };\n\n  updateAppliedBackground = (value: boolean) => {\n    this.appliedBackground.next(value);\n  };\n\n  updateIsBackgroundModalVisible = (value: boolean) => {\n    this.isBackgroundModalVisible.next(value);\n  };\n\n  updateAutoClickBackground = (value: boolean) => {\n    this.autoClickBackground.next(value);\n  };\n\n  updateBreakoutRooms = (value: BreakoutParticipant[][]) => {\n    this.breakoutRooms.next(value);\n  };\n\n  updateCurrentRoomIndex = (value: number) => {\n    this.currentRoomIndex.next(value);\n  };\n\n  updateCanStartBreakout = (value: boolean) => {\n    this.canStartBreakout.next(value);\n  };\n\n  updateBreakOutRoomStarted = (value: boolean) => {\n    this.breakOutRoomStarted.next(value);\n  };\n\n  updateBreakOutRoomEnded = (value: boolean) => {\n    this.breakOutRoomEnded.next(value);\n  };\n\n  updateHostNewRoom = (value: number) => {\n    this.hostNewRoom.next(value);\n  };\n\n  updateLimitedBreakRoom = (value: BreakoutParticipant[]) => {\n    this.limitedBreakRoom.next(value);\n  };\n\n  updateMainRoomsLength = (value: number) => {\n    this.mainRoomsLength.next(value);\n  };\n\n  updateMemberRoom = (value: number) => {\n    this.memberRoom.next(value);\n  };\n\n  updateIsBreakoutRoomsModalVisible = (value: boolean) => {\n    this.isBreakoutRoomsModalVisible.next(value);\n  };\n\n  updateWhiteboardUsers = (value: WhiteboardUser[]) => {\n    this.whiteboardUsers.next(value);\n  };\n\n  updateCurrentWhiteboardIndex = (value: number) => {\n    this.currentWhiteboardIndex.next(value);\n  };\n\n  updateCanStartWhiteboard = (value: boolean) => {\n    this.canStartWhiteboard.next(value);\n  };\n\n  updateWhiteboardStarted = (value: boolean) => {\n    this.whiteboardStarted.next(value);\n  };\n\n  updateWhiteboardEnded = (value: boolean) => {\n    this.whiteboardEnded.next(value);\n  };\n\n  updateWhiteboardLimit = (value: number) => {\n    this.whiteboardLimit.next(value);\n  };\n\n  updateIsWhiteboardModalVisible = (value: boolean) => {\n    this.isWhiteboardModalVisible.next(value);\n  };\n\n  updateIsConfigureWhiteboardModalVisible = (value: boolean) => {\n    this.isConfigureWhiteboardModalVisible.next(value);\n  };\n\n  updateShapes = (value: Shape[]) => {\n    this.shapes.next(value);\n  };\n\n  updateUseImageBackground = (value: boolean) => {\n    this.useImageBackground.next(value);\n  };\n\n  updateRedoStack = (value: Shape[]) => {\n    this.redoStack.next(value);\n  };\n\n  updateUndoStack = (value: string[]) => {\n    this.undoStack.next(value);\n  };\n\n  updateCanvasStream = (value: MediaStream | null) => {\n    this.canvasStream.next(value);\n  };\n\n  updateCanvasWhiteboard = (value: HTMLCanvasElement | null) => {\n    this.canvasWhiteboard.next(value);\n  };\n\n  updateCanvasScreenboard = (value: HTMLCanvasElement | null) => {\n    this.canvasScreenboard.next(value);\n  };\n\n  updateProcessedScreenStream = (value: MediaStream | null) => {\n    this.processedScreenStream.next(value);\n  };\n\n  updateAnnotateScreenStream = (value: boolean) => {\n    this.annotateScreenStream.next(value);\n  };\n\n  updateMainScreenCanvas = (value: HTMLCanvasElement | null) => {\n    this.mainScreenCanvas.next(value);\n  };\n\n  updateIsScreenboardModalVisible = (value: boolean) => {\n    this.isScreenboardModalVisible.next(value);\n  };\n\n  checkOrientation = () => {\n    const isPortrait = window.matchMedia('(orientation: portrait)').matches;\n    return isPortrait ? 'portrait' : 'landscape';\n  };\n\n  showAlert = ({\n    message,\n    type,\n    duration = 3000,\n  }: {\n    message: string;\n    type: 'success' | 'danger';\n    duration?: number;\n  }) => {\n    this.updateAlertMessage(message);\n    this.updateAlertType(type);\n    this.updateAlertDuration(duration);\n    this.updateAlertVisible(true);\n  };\n\n  getAllParams() {\n    return {\n      localUIMode: this.localUIMode.value, // Local UI mode\n\n      // Room Details\n      roomName: this.roomName.value,\n      member: this.member.value,\n      adminPasscode: this.adminPasscode.value,\n      youAreCoHost: this.youAreCoHost.value,\n      youAreHost: this.youAreHost.value,\n      islevel: this.islevel.value,\n      confirmedToRecord: this.confirmedToRecord.value,\n      meetingDisplayType: this.meetingDisplayType.value,\n      meetingVideoOptimized: this.meetingVideoOptimized.value,\n      eventType: this.eventType.value,\n      participants: this.participants.value,\n      filteredParticipants: this.filteredParticipants.value,\n      participantsCounter: this.participantsCounter.value,\n      participantsFilter: this.participantsFilter.value,\n\n      // More room details - media\n      consume_sockets: this.consume_sockets.value,\n      rtpCapabilities: this.rtpCapabilities.value,\n      roomRecvIPs: this.roomRecvIPs.value,\n      meetingRoomParams: this.meetingRoomParams.value,\n      itemPageLimit: this.itemPageLimit.value,\n      audioOnlyRoom: this.audioOnlyRoom.value,\n      addForBasic: this.addForBasic.value,\n      screenPageLimit: this.screenPageLimit.value,\n      shareScreenStarted: this.shareScreenStarted.value,\n      shared: this.shared.value,\n      targetOrientation: this.targetOrientation.value,\n      targetResolution: this.targetResolution.value,\n      targetResolutionHost: this.targetResolutionHost.value,\n      vidCons: this.vidCons.value,\n      frameRate: this.frameRate.value,\n      hParams: this.hParams.value,\n      vParams: this.vParams.value,\n      screenParams: this.screenParams.value,\n      aParams: this.aParams.value,\n\n      // More room details - recording\n      recordingAudioPausesLimit: this.recordingAudioPausesLimit.value,\n      recordingAudioPausesCount: this.recordingAudioPausesCount.value,\n      recordingAudioSupport: this.recordingAudioSupport.value,\n      recordingAudioPeopleLimit: this.recordingAudioPeopleLimit.value,\n      recordingAudioParticipantsTimeLimit: this.recordingAudioParticipantsTimeLimit.value,\n      recordingVideoPausesCount: this.recordingVideoPausesCount.value,\n      recordingVideoPausesLimit: this.recordingVideoPausesLimit.value,\n      recordingVideoSupport: this.recordingVideoSupport.value,\n      recordingVideoPeopleLimit: this.recordingVideoPeopleLimit.value,\n      recordingVideoParticipantsTimeLimit: this.recordingVideoParticipantsTimeLimit.value,\n      recordingAllParticipantsSupport: this.recordingAllParticipantsSupport.value,\n      recordingVideoParticipantsSupport: this.recordingVideoParticipantsSupport.value,\n      recordingAllParticipantsFullRoomSupport: this.recordingAllParticipantsFullRoomSupport.value,\n      recordingVideoParticipantsFullRoomSupport:\n        this.recordingVideoParticipantsFullRoomSupport.value,\n      recordingPreferredOrientation: this.recordingPreferredOrientation.value,\n      recordingSupportForOtherOrientation: this.recordingSupportForOtherOrientation.value,\n      recordingMultiFormatsSupport: this.recordingMultiFormatsSupport.value,\n\n      userRecordingParams: this.userRecordingParams.value,\n      canRecord: this.canRecord.value,\n      startReport: this.startReport.value,\n      endReport: this.endReport.value,\n      recordStartTime: this.recordStartTime.value,\n      recordElapsedTime: this.recordElapsedTime.value,\n      isTimerRunning: this.isTimerRunning.value,\n      canPauseResume: this.canPauseResume.value,\n      recordChangeSeconds: this.recordChangeSeconds.value,\n      pauseLimit: this.pauseLimit.value,\n      pauseRecordCount: this.pauseRecordCount.value,\n      canLaunchRecord: this.canLaunchRecord.value,\n      stopLaunchRecord: this.stopLaunchRecord.value,\n\n      participantsAll: this.participantsAll.value,\n\n      firstAll: this.firstAll.value,\n      updateMainWindow: this.updateMainWindow.value,\n      first_round: this.first_round.value,\n      landScaped: this.landScaped.value,\n      lock_screen: this.lock_screen.value,\n      screenId: this.screenId.value,\n      allVideoStreams: this.allVideoStreams.value,\n      newLimitedStreams: this.newLimitedStreams.value,\n      newLimitedStreamsIDs: this.newLimitedStreamsIDs.value,\n      activeSounds: this.activeSounds.value,\n      screenShareIDStream: this.screenShareIDStream.value,\n      screenShareNameStream: this.screenShareNameStream.value,\n      adminIDStream: this.adminIDStream.value,\n      adminNameStream: this.adminNameStream.value,\n      youYouStream: this.youYouStream.value,\n      youYouStreamIDs: this.youYouStreamIDs.value,\n      localStream: this.localStream.value,\n      recordStarted: this.recordStarted.value,\n      recordResumed: this.recordResumed.value,\n      recordPaused: this.recordPaused.value,\n      recordStopped: this.recordStopped.value,\n      adminRestrictSetting: this.adminRestrictSetting.value,\n      videoRequestState: this.videoRequestState.value,\n      videoRequestTime: this.videoRequestTime.value,\n      videoAction: this.videoAction.value,\n      localStreamVideo: this.localStreamVideo.value,\n      userDefaultVideoInputDevice: this.userDefaultVideoInputDevice.value,\n      currentFacingMode: this.currentFacingMode.value,\n      prevFacingMode: this.prevFacingMode.value,\n      defVideoID: this.defVideoID.value,\n      allowed: this.allowed.value,\n      dispActiveNames: this.dispActiveNames.value,\n      p_dispActiveNames: this.p_dispActiveNames.value,\n      activeNames: this.activeNames.value,\n      prevActiveNames: this.prevActiveNames.value,\n      p_activeNames: this.p_activeNames.value,\n      membersReceived: this.membersReceived.value,\n      deferScreenReceived: this.deferScreenReceived.value,\n      hostFirstSwitch: this.hostFirstSwitch.value,\n      micAction: this.micAction.value,\n      screenAction: this.screenAction.value,\n      chatAction: this.chatAction.value,\n      audioRequestState: this.audioRequestState.value,\n      screenRequestState: this.screenRequestState.value,\n      chatRequestState: this.chatRequestState.value,\n      audioRequestTime: this.audioRequestTime.value,\n      screenRequestTime: this.screenRequestTime.value,\n      chatRequestTime: this.chatRequestTime.value,\n      updateRequestIntervalSeconds: this.updateRequestIntervalSeconds.value,\n      oldSoundIds: this.oldSoundIds.value,\n      hostLabel: this.hostLabel.value,\n      mainScreenFilled: this.mainScreenFilled.value,\n      localStreamScreen: this.localStreamScreen.value,\n      screenAlreadyOn: this.screenAlreadyOn.value,\n      chatAlreadyOn: this.chatAlreadyOn.value,\n      redirectURL: this.redirectURL.value,\n      oldAllStreams: this.oldAllStreams.value,\n      adminVidID: this.adminVidID.value,\n      streamNames: this.streamNames.value,\n      non_alVideoStreams: this.non_alVideoStreams.value,\n      sortAudioLoudness: this.sortAudioLoudness.value,\n      audioDecibels: this.audioDecibels.value,\n      mixed_alVideoStreams: this.mixed_alVideoStreams.value,\n      non_alVideoStreams_muted: this.non_alVideoStreams_muted.value,\n      paginatedStreams: this.paginatedStreams.value,\n      localStreamAudio: this.localStreamAudio.value,\n      defAudioID: this.defAudioID.value,\n      userDefaultAudioInputDevice: this.userDefaultAudioInputDevice.value,\n      userDefaultAudioOutputDevice: this.userDefaultAudioOutputDevice.value,\n      prevAudioInputDevice: this.prevAudioInputDevice.value,\n      prevVideoInputDevice: this.prevVideoInputDevice.value,\n      audioPaused: this.audioPaused.value,\n      mainScreenPerson: this.mainScreenPerson.value,\n      adminOnMainScreen: this.adminOnMainScreen.value,\n      screenStates: this.screenStates.value,\n      prevScreenStates: this.prevScreenStates.value,\n      updateDateState: this.updateDateState.value,\n      lastUpdate: this.lastUpdate.value,\n      nForReadjustRecord: this.nForReadjustRecord.value,\n      fixedPageLimit: this.fixedPageLimit.value,\n      removeAltGrid: this.removeAltGrid.value,\n      nForReadjust: this.nForReadjust.value,\n      lastReorderTime: this.lastReorderTime.value,\n      reorderInterval: this.reorderInterval.value,\n      fastReorderInterval: this.fastReorderInterval.value,\n      audStreamNames: this.audStreamNames.value,\n      currentUserPage: this.currentUserPage.value,\n      mainHeightWidth: this.mainHeightWidth.value,\n      prevMainHeightWidth: this.prevMainHeightWidth.value,\n      prevDoPaginate: this.prevDoPaginate.value,\n      doPaginate: this.doPaginate.value,\n      shareEnded: this.shareEnded.value,\n      lStreams: this.lStreams.value,\n      chatRefStreams: this.chatRefStreams.value,\n      controlHeight: this.controlHeight.value,\n      isWideScreen: this.isWideScreen.value,\n      isMediumScreen: this.isMediumScreen.value,\n      isSmallScreen: this.isSmallScreen.value,\n      addGrid: this.addGrid.value,\n      addAltGrid: this.addAltGrid.value,\n      gridRows: this.gridRows.value,\n      gridCols: this.gridCols.value,\n      altGridRows: this.altGridRows.value,\n      altGridCols: this.altGridCols.value,\n      numberPages: this.numberPages.value,\n      currentStreams: this.currentStreams.value,\n      showMiniView: this.showMiniView.value,\n      nStream: this.nStream.value,\n      defer_receive: this.defer_receive.value,\n      allAudioStreams: this.allAudioStreams.value,\n      screenProducer: this.screenProducer.value,\n      remoteScreenStream: this.remoteScreenStream.value,\n      gotAllVids: this.gotAllVids.value,\n      paginationHeightWidth: this.paginationHeightWidth.value,\n      paginationDirection: this.paginationDirection.value,\n      gridSizes: this.gridSizes.value,\n      screenForceFullDisplay: this.screenForceFullDisplay.value,\n      mainGridStream: this.mainGridStream.value,\n      otherGridStreams: this.otherGridStreams.value,\n      audioOnlyStreams: this.audioOnlyStreams.value,\n      videoInputs: this.videoInputs.value,\n      audioInputs: this.audioInputs.value,\n      meetingProgressTime: this.meetingProgressTime.value,\n      meetingElapsedTime: this.meetingElapsedTime.value,\n\n      ref_participants: this.ref_participants.value,\n\n      messages: this.messages.value,\n      startDirectMessage: this.startDirectMessage.value,\n      directMessageDetails: this.directMessageDetails.value,\n      coHost: this.coHost.value,\n      coHostResponsibility: this.coHostResponsibility.value,\n\n      // Event settings\n      audioSetting: this.audioSetting.value,\n      videoSetting: this.videoSetting.value,\n      screenshareSetting: this.screenshareSetting.value,\n      chatSetting: this.chatSetting.value,\n\n      // Display settings\n      autoWave: this.autoWave.value,\n      forceFullDisplay: this.forceFullDisplay.value,\n      prevForceFullDisplay: this.prevForceFullDisplay.value,\n      prevMeetingDisplayType: this.prevMeetingDisplayType.value,\n\n      // Waiting room\n      waitingRoomFilter: this.waitingRoomFilter.value,\n      waitingRoomList: this.waitingRoomList.value,\n      waitingRoomCounter: this.waitingRoomCounter.value,\n      filteredWaitingRoomList: this.filteredWaitingRoomList.value,\n\n      // Requests\n      requestFilter: this.requestFilter.value,\n      requestList: this.requestList.value,\n      requestCounter: this.requestCounter.value,\n      filteredRequestList: this.filteredRequestList.value,\n\n      // Total requests and waiting room\n      totalReqWait: this.totalReqWait.value,\n\n      // Alerts\n      alertVisible: this.alertVisible.value,\n      alertMessage: this.alertMessage.value,\n      alertType: this.alertType.value,\n      alertDuration: this.alertDuration.value,\n\n      // Progress Timer\n      progressTimerVisible: this.progressTimerVisible.value,\n      progressTimerValue: this.progressTimerValue.value,\n\n      // Menu modals\n      isMenuModalVisible: this.isMenuModalVisible.value,\n      isRecordingModalVisible: this.isRecordingModalVisible.value,\n      isSettingsModalVisible: this.isSettingsModalVisible.value,\n      isRequestsModalVisible: this.isRequestsModalVisible.value,\n      isWaitingModalVisible: this.isWaitingModalVisible.value,\n      isCoHostModalVisible: this.isCoHostModalVisible.value,\n      isMediaSettingsModalVisible: this.isMediaSettingsModalVisible.value,\n      isDisplaySettingsModalVisible: this.isDisplaySettingsModalVisible.value,\n\n      // Other Modals\n      isParticipantsModalVisible: this.isParticipantsModalVisible.value,\n      isMessagesModalVisible: this.isMessagesModalVisible.value,\n      isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n      isConfirmHereModalVisible: this.isConfirmHereModalVisible.value,\n      isLoadingModalVisible: this.isLoadingModalVisible.value,\n\n      // Recording Options\n      recordingMediaOptions: this.recordingMediaOptions.value,\n      recordingAudioOptions: this.recordingAudioOptions.value,\n      recordingVideoOptions: this.recordingVideoOptions.value,\n      recordingVideoType: this.recordingVideoType.value,\n      recordingVideoOptimized: this.recordingVideoOptimized.value,\n      recordingDisplayType: this.recordingDisplayType.value,\n      recordingAddHLS: this.recordingAddHLS.value,\n      recordingAddText: this.recordingAddText.value,\n      recordingCustomText: this.recordingCustomText.value,\n      recordingCustomTextPosition: this.recordingCustomTextPosition.value,\n      recordingCustomTextColor: this.recordingCustomTextColor.value,\n      recordingNameTags: this.recordingNameTags.value,\n      recordingBackgroundColor: this.recordingBackgroundColor.value,\n      recordingNameTagsColor: this.recordingNameTagsColor.value,\n      recordingOrientationVideo: this.recordingOrientationVideo.value,\n      clearedToResume: this.clearedToResume.value,\n      clearedToRecord: this.clearedToRecord.value,\n      recordState: this.recordState.value,\n      showRecordButtons: this.showRecordButtons.value,\n      recordingProgressTime: this.recordingProgressTime.value,\n      audioSwitching: this.audioSwitching.value,\n      videoSwitching: this.videoSwitching.value,\n\n      // Media states\n      videoAlreadyOn: this.videoAlreadyOn.value,\n      audioAlreadyOn: this.audioAlreadyOn.value,\n      componentSizes: this.componentSizes.value,\n\n      // Permissions\n      hasCameraPermission: this.hasCameraPermission.value,\n      hasAudioPermission: this.hasAudioPermission.value,\n\n      // Transports\n      transportCreated: this.transportCreated.value,\n      transportCreatedVideo: this.transportCreatedVideo.value,\n      transportCreatedAudio: this.transportCreatedAudio.value,\n      transportCreatedScreen: this.transportCreatedScreen.value,\n      producerTransport: this.producerTransport.value,\n      videoProducer: this.videoProducer.value,\n      params: this.params.value,\n      videoParams: this.videoParams.value,\n      audioParams: this.audioParams.value,\n      audioProducer: this.audioProducer.value,\n      consumerTransports: this.consumerTransports.value,\n      consumingTransports: this.consumingTransports.value,\n\n      // Polls\n      polls: this.polls.value,\n      poll: this.poll.value,\n      isPollModalVisible: this.isPollModalVisible.value,\n\n      // Background\n      customImage: this.customImage.value,\n      selectedImage: this.selectedImage.value,\n      segmentVideo: this.segmentVideo.value,\n      selfieSegmentation: this.selfieSegmentation.value,\n      pauseSegmentation: this.pauseSegmentation.value,\n      processedStream: this.processedStream.value,\n      keepBackground: this.keepBackground.value,\n      backgroundHasChanged: this.backgroundHasChanged.value,\n      virtualStream: this.virtualStream.value,\n      mainCanvas: this.mainCanvas.value,\n      prevKeepBackground: this.prevKeepBackground.value,\n      appliedBackground: this.appliedBackground.value,\n      isBackgroundModalVisible: this.isBackgroundModalVisible.value,\n      autoClickBackground: this.autoClickBackground.value,\n\n      // Breakout rooms\n      breakoutRooms: this.breakoutRooms.value,\n      currentRoomIndex: this.currentRoomIndex.value,\n      canStartBreakout: this.canStartBreakout.value,\n      breakOutRoomStarted: this.breakOutRoomStarted.value,\n      breakOutRoomEnded: this.breakOutRoomEnded.value,\n      hostNewRoom: this.hostNewRoom.value,\n      limitedBreakRoom: this.limitedBreakRoom.value,\n      mainRoomsLength: this.mainRoomsLength.value,\n      memberRoom: this.memberRoom.value,\n      isBreakoutRoomsModalVisible: this.isBreakoutRoomsModalVisible.value,\n\n      // Whiteboard\n      whiteboardUsers: this.whiteboardUsers.value,\n      currentWhiteboardIndex: this.currentWhiteboardIndex.value,\n      canStartWhiteboard: this.canStartWhiteboard.value,\n      whiteboardStarted: this.whiteboardStarted.value,\n      whiteboardEnded: this.whiteboardEnded.value,\n      whiteboardLimit: this.whiteboardLimit.value,\n      isWhiteboardModalVisible: this.isWhiteboardModalVisible.value,\n      isConfigureWhiteboardModalVisible: this.isConfigureWhiteboardModalVisible.value,\n      shapes: this.shapes.value,\n      useImageBackground: this.useImageBackground.value,\n      redoStack: this.redoStack.value,\n      undoStack: this.undoStack.value,\n      canvasStream: this.canvasStream.value,\n      canvasWhiteboard: this.canvasWhiteboard.value,\n\n      // Screenboard\n      canvasScreenboard: this.canvasScreenboard.value,\n      processedScreenStream: this.processedScreenStream.value,\n      annotateScreenStream: this.annotateScreenStream.value,\n      mainScreenCanvas: this.mainScreenCanvas.value,\n      isScreenboardModalVisible: this.isScreenboardModalVisible.value,\n\n      validated: this.validated.value,\n      device: this.device.value,\n      socket: this.socket.value,\n      checkMediaPermission: false,\n      onWeb: true,\n\n      // Update functions\n      updateRoomName: this.updateRoomName.bind(this),\n      updateMember: this.updateMember.bind(this),\n      updateAdminPasscode: this.updateAdminPasscode.bind(this),\n      updateYouAreCoHost: this.updateYouAreCoHost.bind(this),\n      updateYouAreHost: this.updateYouAreHost.bind(this),\n      updateIslevel: this.updateIslevel.bind(this),\n      updateCoHost: this.updateCoHost.bind(this),\n      updateCoHostResponsibility: this.updateCoHostResponsibility.bind(this),\n      updateConfirmedToRecord: this.updateConfirmedToRecord.bind(this),\n      updateMeetingDisplayType: this.updateMeetingDisplayType.bind(this),\n      updateMeetingVideoOptimized: this.updateMeetingVideoOptimized.bind(this),\n      updateEventType: this.updateEventType.bind(this),\n      updateParticipants: this.updateParticipants.bind(this),\n      updateParticipantsCounter: this.updateParticipantsCounter.bind(this),\n      updateParticipantsFilter: this.updateParticipantsFilter.bind(this),\n\n      // More update functions for media details\n      updateConsume_sockets: this.updateConsume_sockets.bind(this),\n      updateRtpCapabilities: this.updateRtpCapabilities.bind(this),\n      updateRoomRecvIPs: this.updateRoomRecvIPs.bind(this),\n      updateMeetingRoomParams: this.updateMeetingRoomParams.bind(this),\n      updateItemPageLimit: this.updateItemPageLimit.bind(this),\n      updateAudioOnlyRoom: this.updateAudioOnlyRoom.bind(this),\n      updateAddForBasic: this.updateAddForBasic.bind(this),\n      updateScreenPageLimit: this.updateScreenPageLimit.bind(this),\n      updateShareScreenStarted: this.updateShareScreenStarted.bind(this),\n      updateShared: this.updateShared.bind(this),\n      updateTargetOrientation: this.updateTargetOrientation.bind(this),\n      updateTargetResolution: this.updateTargetResolution.bind(this),\n      updateTargetResolutionHost: this.updateTargetResolutionHost.bind(this),\n      updateVidCons: this.updateVidCons.bind(this),\n      updateFrameRate: this.updateFrameRate.bind(this),\n      updateHParams: this.updateHParams.bind(this),\n      updateVParams: this.updateVParams.bind(this),\n      updateScreenParams: this.updateScreenParams.bind(this),\n      updateAParams: this.updateAParams.bind(this),\n\n      // More update functions for recording details\n      updateRecordingAudioPausesLimit: this.updateRecordingAudioPausesLimit.bind(this),\n      updateRecordingAudioPausesCount: this.updateRecordingAudioPausesCount.bind(this),\n      updateRecordingAudioSupport: this.updateRecordingAudioSupport.bind(this),\n      updateRecordingAudioPeopleLimit: this.updateRecordingAudioPeopleLimit.bind(this),\n      updateRecordingAudioParticipantsTimeLimit:\n        this.updateRecordingAudioParticipantsTimeLimit.bind(this),\n      updateRecordingVideoPausesCount: this.updateRecordingVideoPausesCount.bind(this),\n      updateRecordingVideoPausesLimit: this.updateRecordingVideoPausesLimit.bind(this),\n      updateRecordingVideoSupport: this.updateRecordingVideoSupport.bind(this),\n      updateRecordingVideoPeopleLimit: this.updateRecordingVideoPeopleLimit.bind(this),\n      updateRecordingVideoParticipantsTimeLimit:\n        this.updateRecordingVideoParticipantsTimeLimit.bind(this),\n      updateRecordingAllParticipantsSupport: this.updateRecordingAllParticipantsSupport.bind(this),\n      updateRecordingVideoParticipantsSupport:\n        this.updateRecordingVideoParticipantsSupport.bind(this),\n      updateRecordingAllParticipantsFullRoomSupport:\n        this.updateRecordingAllParticipantsFullRoomSupport.bind(this),\n      updateRecordingVideoParticipantsFullRoomSupport:\n        this.updateRecordingVideoParticipantsFullRoomSupport.bind(this),\n      updateRecordingPreferredOrientation: this.updateRecordingPreferredOrientation.bind(this),\n      updateRecordingSupportForOtherOrientation:\n        this.updateRecordingSupportForOtherOrientation.bind(this),\n      updateRecordingMultiFormatsSupport: this.updateRecordingMultiFormatsSupport.bind(this),\n\n      updateUserRecordingParams: this.updateUserRecordingParams.bind(this),\n      updateCanRecord: this.updateCanRecord.bind(this),\n      updateStartReport: this.updateStartReport.bind(this),\n      updateEndReport: this.updateEndReport.bind(this),\n      updateRecordTimerInterval: this.updateRecordTimerInterval.bind(this),\n      updateRecordStartTime: this.updateRecordStartTime.bind(this),\n      updateRecordElapsedTime: this.updateRecordElapsedTime.bind(this),\n      updateIsTimerRunning: this.updateIsTimerRunning.bind(this),\n      updateCanPauseResume: this.updateCanPauseResume.bind(this),\n      updateRecordChangeSeconds: this.updateRecordChangeSeconds.bind(this),\n      updatePauseLimit: this.updatePauseLimit.bind(this),\n      updatePauseRecordCount: this.updatePauseRecordCount.bind(this),\n      updateCanLaunchRecord: this.updateCanLaunchRecord.bind(this),\n      updateStopLaunchRecord: this.updateStopLaunchRecord.bind(this),\n\n      updateParticipantsAll: this.updateParticipantsAll.bind(this),\n\n      updateFirstAll: this.updateFirstAll.bind(this),\n      updateUpdateMainWindow: this.updateUpdateMainWindow.bind(this),\n      updateFirst_round: this.updateFirst_round.bind(this),\n      updateLandScaped: this.updateLandScaped.bind(this),\n      updateLock_screen: this.updateLock_screen.bind(this),\n      updateScreenId: this.updateScreenId.bind(this),\n      updateAllVideoStreams: this.updateAllVideoStreams.bind(this),\n      updateNewLimitedStreams: this.updateNewLimitedStreams.bind(this),\n      updateNewLimitedStreamsIDs: this.updateNewLimitedStreamsIDs.bind(this),\n      updateActiveSounds: this.updateActiveSounds.bind(this),\n      updateScreenShareIDStream: this.updateScreenShareIDStream.bind(this),\n      updateScreenShareNameStream: this.updateScreenShareNameStream.bind(this),\n      updateAdminIDStream: this.updateAdminIDStream.bind(this),\n      updateAdminNameStream: this.updateAdminNameStream.bind(this),\n      updateYouYouStream: this.updateYouYouStream.bind(this),\n      updateYouYouStreamIDs: this.updateYouYouStreamIDs.bind(this),\n      updateLocalStream: this.updateLocalStream.bind(this),\n      updateRecordStarted: this.updateRecordStarted.bind(this),\n      updateRecordResumed: this.updateRecordResumed.bind(this),\n      updateRecordPaused: this.updateRecordPaused.bind(this),\n      updateRecordStopped: this.updateRecordStopped.bind(this),\n      updateAdminRestrictSetting: this.updateAdminRestrictSetting.bind(this),\n      updateVideoRequestState: this.updateVideoRequestState.bind(this),\n      updateVideoRequestTime: this.updateVideoRequestTime.bind(this),\n      updateVideoAction: this.updateVideoAction.bind(this),\n      updateLocalStreamVideo: this.updateLocalStreamVideo.bind(this),\n      updateUserDefaultVideoInputDevice: this.updateUserDefaultVideoInputDevice.bind(this),\n      updateCurrentFacingMode: this.updateCurrentFacingMode.bind(this),\n      updatePrevFacingMode: this.updatePrevFacingMode.bind(this),\n      updateDefVideoID: this.updateDefVideoID.bind(this),\n      updateAllowed: this.updateAllowed.bind(this),\n      updateDispActiveNames: this.updateDispActiveNames.bind(this),\n      updateP_dispActiveNames: this.updateP_dispActiveNames.bind(this),\n      updateActiveNames: this.updateActiveNames.bind(this),\n      updatePrevActiveNames: this.updatePrevActiveNames.bind(this),\n      updateP_activeNames: this.updateP_activeNames.bind(this),\n      updateMembersReceived: this.updateMembersReceived.bind(this),\n      updateDeferScreenReceived: this.updateDeferScreenReceived.bind(this),\n      updateHostFirstSwitch: this.updateHostFirstSwitch.bind(this),\n      updateMicAction: this.updateMicAction.bind(this),\n      updateScreenAction: this.updateScreenAction.bind(this),\n      updateChatAction: this.updateChatAction.bind(this),\n      updateAudioRequestState: this.updateAudioRequestState.bind(this),\n      updateScreenRequestState: this.updateScreenRequestState.bind(this),\n      updateChatRequestState: this.updateChatRequestState.bind(this),\n      updateAudioRequestTime: this.updateAudioRequestTime.bind(this),\n      updateScreenRequestTime: this.updateScreenRequestTime.bind(this),\n      updateChatRequestTime: this.updateChatRequestTime.bind(this),\n      updateOldSoundIds: this.updateOldSoundIds.bind(this),\n      updateHostLabel: this.updateHostLabel.bind(this),\n      updateMainScreenFilled: this.updateMainScreenFilled.bind(this),\n      updateLocalStreamScreen: this.updateLocalStreamScreen.bind(this),\n      updateScreenAlreadyOn: this.updateScreenAlreadyOn.bind(this),\n      updateChatAlreadyOn: this.updateChatAlreadyOn.bind(this),\n      updateRedirectURL: this.updateRedirectURL.bind(this),\n      updateOldAllStreams: this.updateOldAllStreams.bind(this),\n      updateAdminVidID: this.updateAdminVidID.bind(this),\n      updateStreamNames: this.updateStreamNames.bind(this),\n      updateNon_alVideoStreams: this.updateNon_alVideoStreams.bind(this),\n      updateSortAudioLoudness: this.updateSortAudioLoudness.bind(this),\n      updateAudioDecibels: this.updateAudioDecibels.bind(this),\n      updateMixed_alVideoStreams: this.updateMixed_alVideoStreams.bind(this),\n      updateNon_alVideoStreams_muted: this.updateNon_alVideoStreams_muted.bind(this),\n      updatePaginatedStreams: this.updatePaginatedStreams.bind(this),\n      updateLocalStreamAudio: this.updateLocalStreamAudio.bind(this),\n      updateDefAudioID: this.updateDefAudioID.bind(this),\n      updateUserDefaultAudioInputDevice: this.updateUserDefaultAudioInputDevice.bind(this),\n      updateUserDefaultAudioOutputDevice: this.updateUserDefaultAudioOutputDevice.bind(this),\n      updatePrevAudioInputDevice: this.updatePrevAudioInputDevice.bind(this),\n      updatePrevVideoInputDevice: this.updatePrevVideoInputDevice.bind(this),\n      updateAudioPaused: this.updateAudioPaused.bind(this),\n      updateMainScreenPerson: this.updateMainScreenPerson.bind(this),\n      updateAdminOnMainScreen: this.updateAdminOnMainScreen.bind(this),\n      updateScreenStates: this.updateScreenStates.bind(this),\n      updatePrevScreenStates: this.updatePrevScreenStates.bind(this),\n      updateUpdateDateState: this.updateUpdateDateState.bind(this),\n      updateLastUpdate: this.updateLastUpdate.bind(this),\n      updateNForReadjustRecord: this.updateNForReadjustRecord.bind(this),\n      updateFixedPageLimit: this.updateFixedPageLimit.bind(this),\n      updateRemoveAltGrid: this.updateRemoveAltGrid.bind(this),\n      updateNForReadjust: this.updateNForReadjust.bind(this),\n      updateLastReorderTime: this.updateLastReorderTime.bind(this),\n      updateAudStreamNames: this.updateAudStreamNames.bind(this),\n      updateCurrentUserPage: this.updateCurrentUserPage.bind(this),\n      updateMainHeightWidth: this.updateMainHeightWidth.bind(this),\n      updatePrevMainHeightWidth: this.updatePrevMainHeightWidth.bind(this),\n      updatePrevDoPaginate: this.updatePrevDoPaginate.bind(this),\n      updateDoPaginate: this.updateDoPaginate.bind(this),\n      updateShareEnded: this.updateShareEnded.bind(this),\n      updateLStreams: this.updateLStreams.bind(this),\n      updateChatRefStreams: this.updateChatRefStreams.bind(this),\n      updateControlHeight: this.updateControlHeight.bind(this),\n      updateIsWideScreen: this.updateIsWideScreen.bind(this),\n      updateIsMediumScreen: this.updateIsMediumScreen.bind(this),\n      updateIsSmallScreen: this.updateIsSmallScreen.bind(this),\n      updateAddGrid: this.updateAddGrid.bind(this),\n      updateAddAltGrid: this.updateAddAltGrid.bind(this),\n      updateGridRows: this.updateGridRows.bind(this),\n      updateGridCols: this.updateGridCols.bind(this),\n      updateAltGridRows: this.updateAltGridRows.bind(this),\n      updateAltGridCols: this.updateAltGridCols.bind(this),\n      updateNumberPages: this.updateNumberPages.bind(this),\n      updateCurrentStreams: this.updateCurrentStreams.bind(this),\n      updateShowMiniView: this.updateShowMiniView.bind(this),\n      updateNStream: this.updateNStream.bind(this),\n      updateDefer_receive: this.updateDefer_receive.bind(this),\n      updateAllAudioStreams: this.updateAllAudioStreams.bind(this),\n      updateRemoteScreenStream: this.updateRemoteScreenStream.bind(this),\n      updateScreenProducer: this.updateScreenProducer.bind(this),\n      updateGotAllVids: this.updateGotAllVids.bind(this),\n      updatePaginationHeightWidth: this.updatePaginationHeightWidth.bind(this),\n      updatePaginationDirection: this.updatePaginationDirection.bind(this),\n      updateGridSizes: this.updateGridSizes.bind(this),\n      updateScreenForceFullDisplay: this.updateScreenForceFullDisplay.bind(this),\n      updateMainGridStream: this.updateMainGridStream.bind(this),\n      updateOtherGridStreams: this.updateOtherGridStreams.bind(this),\n      updateAudioOnlyStreams: this.updateAudioOnlyStreams.bind(this),\n      updateVideoInputs: this.updateVideoInputs.bind(this),\n      updateAudioInputs: this.updateAudioInputs.bind(this),\n      updateMeetingProgressTime: this.updateMeetingProgressTime.bind(this),\n      updateMeetingElapsedTime: this.updateMeetingElapsedTime.bind(this),\n      updateRef_participants: this.updateRef_participants.bind(this),\n\n      updateMessages: this.updateMessages.bind(this),\n      updateStartDirectMessage: this.updateStartDirectMessage.bind(this),\n      updateDirectMessageDetails: this.updateDirectMessageDetails.bind(this),\n      updateShowMessagesBadge: this.updateShowMessagesBadge.bind(this),\n\n      // Event settings\n      updateAudioSetting: this.updateAudioSetting.bind(this),\n      updateVideoSetting: this.updateVideoSetting.bind(this),\n      updateScreenshareSetting: this.updateScreenshareSetting.bind(this),\n      updateChatSetting: this.updateChatSetting.bind(this),\n\n      // Display settings\n      updateAutoWave: this.updateAutoWave.bind(this),\n      updateForceFullDisplay: this.updateForceFullDisplay.bind(this),\n      updatePrevForceFullDisplay: this.updatePrevForceFullDisplay.bind(this),\n      updatePrevMeetingDisplayType: this.updatePrevMeetingDisplayType.bind(this),\n\n      // Waiting room\n      updateWaitingRoomFilter: this.updateWaitingRoomFilter.bind(this),\n      updateWaitingRoomList: this.updateWaitingRoomList.bind(this),\n      updateWaitingRoomCounter: this.updateWaitingRoomCounter.bind(this),\n\n      // Requests\n      updateRequestFilter: this.updateRequestFilter.bind(this),\n      updateRequestList: this.updateRequestList.bind(this),\n      updateRequestCounter: this.updateRequestCounter.bind(this),\n\n      // Total requests and waiting room\n      updateTotalReqWait: this.updateTotalReqWait.bind(this),\n\n      // Menu modals\n      updateIsMenuModalVisible: this.updateIsMenuModalVisible.bind(this),\n      updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n      updateIsSettingsModalVisible: this.updateIsSettingsModalVisible.bind(this),\n      updateIsRequestsModalVisible: this.updateIsRequestsModalVisible.bind(this),\n      updateIsWaitingModalVisible: this.updateIsWaitingModalVisible.bind(this),\n      updateIsCoHostModalVisible: this.updateIsCoHostModalVisible.bind(this),\n      updateIsMediaSettingsModalVisible: this.updateIsMediaSettingsModalVisible.bind(this),\n      updateIsDisplaySettingsModalVisible: this.updateIsDisplaySettingsModalVisible.bind(this),\n\n      // Other modals\n      updateIsParticipantsModalVisible: this.updateIsParticipantsModalVisible.bind(this),\n      updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n      updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n      updateIsConfirmHereModalVisible: this.updateIsConfirmHereModalVisible.bind(this),\n      updateIsLoadingModalVisible: this.updateIsLoadingModalVisible.bind(this),\n\n      // Recording Options\n      updateRecordingMediaOptions: this.updateRecordingMediaOptions.bind(this),\n      updateRecordingAudioOptions: this.updateRecordingAudioOptions.bind(this),\n      updateRecordingVideoOptions: this.updateRecordingVideoOptions.bind(this),\n      updateRecordingVideoType: this.updateRecordingVideoType.bind(this),\n      updateRecordingVideoOptimized: this.updateRecordingVideoOptimized.bind(this),\n      updateRecordingDisplayType: this.updateRecordingDisplayType.bind(this),\n      updateRecordingAddHLS: this.updateRecordingAddHLS.bind(this),\n      updateRecordingAddText: this.updateRecordingAddText.bind(this),\n      updateRecordingCustomText: this.updateRecordingCustomText.bind(this),\n      updateRecordingCustomTextPosition: this.updateRecordingCustomTextPosition.bind(this),\n      updateRecordingCustomTextColor: this.updateRecordingCustomTextColor.bind(this),\n      updateRecordingNameTags: this.updateRecordingNameTags.bind(this),\n      updateRecordingBackgroundColor: this.updateRecordingBackgroundColor.bind(this),\n      updateRecordingNameTagsColor: this.updateRecordingNameTagsColor.bind(this),\n      updateRecordingOrientationVideo: this.updateRecordingOrientationVideo.bind(this),\n      updateClearedToResume: this.updateClearedToResume.bind(this),\n      updateClearedToRecord: this.updateClearedToRecord.bind(this),\n      updateRecordState: this.updateRecordState.bind(this),\n      updateShowRecordButtons: this.updateShowRecordButtons.bind(this),\n      updateRecordingProgressTime: this.updateRecordingProgressTime.bind(this),\n      updateAudioSwitching: this.updateAudioSwitching.bind(this),\n      updateVideoSwitching: this.updateVideoSwitching.bind(this),\n\n      // Media states\n      updateVideoAlreadyOn: this.updateVideoAlreadyOn.bind(this),\n      updateAudioAlreadyOn: this.updateAudioAlreadyOn.bind(this),\n      updateComponentSizes: this.updateComponentSizes.bind(this),\n\n      // Permissions\n      updateHasCameraPermission: this.updateHasCameraPermission.bind(this),\n      updateHasAudioPermission: this.updateHasAudioPermission.bind(this),\n\n      // Transports\n      updateTransportCreated: this.updateTransportCreated.bind(this),\n      updateTransportCreatedVideo: this.updateTransportCreatedVideo.bind(this),\n      updateTransportCreatedAudio: this.updateTransportCreatedAudio.bind(this),\n      updateTransportCreatedScreen: this.updateTransportCreatedScreen.bind(this),\n      updateProducerTransport: this.updateProducerTransport.bind(this),\n      updateVideoProducer: this.updateVideoProducer.bind(this),\n      updateParams: this.updateParams.bind(this),\n      updateVideoParams: this.updateVideoParams.bind(this),\n      updateAudioParams: this.updateAudioParams.bind(this),\n      updateAudioProducer: this.updateAudioProducer.bind(this),\n      updateConsumerTransports: this.updateConsumerTransports.bind(this),\n      updateConsumingTransports: this.updateConsumingTransports.bind(this),\n\n      // Polls\n      updatePolls: this.updatePolls.bind(this),\n      updatePoll: this.updatePoll.bind(this),\n      updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n\n      // Background\n      updateCustomImage: this.updateCustomImage.bind(this),\n      updateSelectedImage: this.updateSelectedImage.bind(this),\n      updateSegmentVideo: this.updateSegmentVideo.bind(this),\n      updateSelfieSegmentation: this.updateSelfieSegmentation.bind(this),\n      updatePauseSegmentation: this.updatePauseSegmentation.bind(this),\n      updateProcessedStream: this.updateProcessedStream.bind(this),\n      updateKeepBackground: this.updateKeepBackground.bind(this),\n      updateBackgroundHasChanged: this.updateBackgroundHasChanged.bind(this),\n      updateVirtualStream: this.updateVirtualStream.bind(this),\n      updateMainCanvas: this.updateMainCanvas.bind(this),\n      updatePrevKeepBackground: this.updatePrevKeepBackground.bind(this),\n      updateAppliedBackground: this.updateAppliedBackground.bind(this),\n      updateIsBackgroundModalVisible: this.updateIsBackgroundModalVisible.bind(this),\n      updateAutoClickBackground: this.updateAutoClickBackground.bind(this),\n\n      // Breakout rooms\n      updateBreakoutRooms: this.updateBreakoutRooms.bind(this),\n      updateCurrentRoomIndex: this.updateCurrentRoomIndex.bind(this),\n      updateCanStartBreakout: this.updateCanStartBreakout.bind(this),\n      updateBreakOutRoomStarted: this.updateBreakOutRoomStarted.bind(this),\n      updateBreakOutRoomEnded: this.updateBreakOutRoomEnded.bind(this),\n      updateHostNewRoom: this.updateHostNewRoom.bind(this),\n      updateLimitedBreakRoom: this.updateLimitedBreakRoom.bind(this),\n      updateMainRoomsLength: this.updateMainRoomsLength.bind(this),\n      updateMemberRoom: this.updateMemberRoom.bind(this),\n      updateIsBreakoutRoomsModalVisible: this.updateIsBreakoutRoomsModalVisible.bind(this),\n\n      // Whiteboard\n      updateWhiteboardUsers: this.updateWhiteboardUsers.bind(this),\n      updateCurrentWhiteboardIndex: this.updateCurrentWhiteboardIndex.bind(this),\n      updateCanStartWhiteboard: this.updateCanStartWhiteboard.bind(this),\n      updateWhiteboardStarted: this.updateWhiteboardStarted.bind(this),\n      updateWhiteboardEnded: this.updateWhiteboardEnded.bind(this),\n      updateWhiteboardLimit: this.updateWhiteboardLimit.bind(this),\n      updateIsWhiteboardModalVisible: this.updateIsWhiteboardModalVisible.bind(this),\n      updateIsConfigureWhiteboardModalVisible:\n        this.updateIsConfigureWhiteboardModalVisible.bind(this),\n      updateShapes: this.updateShapes.bind(this),\n      updateUseImageBackground: this.updateUseImageBackground.bind(this),\n      updateRedoStack: this.updateRedoStack.bind(this),\n      updateUndoStack: this.updateUndoStack.bind(this),\n      updateCanvasStream: this.updateCanvasStream.bind(this),\n      updateCanvasWhiteboard: this.updateCanvasWhiteboard.bind(this),\n\n      // Screenboard\n      updateCanvasScreenboard: this.updateCanvasScreenboard.bind(this),\n      updateProcessedScreenStream: this.updateProcessedScreenStream.bind(this),\n      updateAnnotateScreenStream: this.updateAnnotateScreenStream.bind(this),\n      updateMainScreenCanvas: this.updateMainScreenCanvas.bind(this),\n      updateIsScreenboardModalVisible: this.updateIsScreenboardModalVisible.bind(this),\n\n      // Other functions\n      checkOrientation: this.checkOrientation.bind(this),\n\n      updateDevice: this.updateDevice.bind(this),\n      updateSocket: this.updateSocket.bind(this),\n      updateValidated: this.updateValidated.bind(this),\n\n      showAlert: this.showAlert.bind(this),\n      getUpdatedAllParams: () => {\n        return {\n          ...this.getAllParams(),\n          ...this.mediaSFUFunctions(),\n        };\n      },\n    };\n  }\n\n  mediaSFUParameters = {\n    ...this.getAllParams(),\n    ...this.mediaSFUFunctions(),\n  };\n\n  getUpdatedAllParams = () => {\n    return {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n  };\n\n  updateButtonState(buttonType: string, value: boolean) {\n    this.controlButtons = this.controlButtons.map((button) => {\n      if (buttonType === 'micActive' && button.icon === this.faMicrophoneSlash) {\n        return { ...button, active: value };\n      }\n      if (buttonType === 'videoActive' && button.icon === this.faVideoSlash) {\n        return { ...button, active: value };\n      }\n      if (buttonType === 'screenShareActive' && button.icon === this.faDesktop) {\n        if (button.alternateIconComponent) {\n          const updatedInjector = this.createInjector({\n            disabled: !value,\n          });\n          return {\n            ...button,\n            active: true,\n            alternateIconComponent: { ...this.screenShareWidget, injector: updatedInjector },\n          }; //always default to true for active\n        } else {\n          return { ...button, active: true }; //always default to true for active\n        }\n      }\n      if (buttonType === 'endCallActive' && button.icon === this.faPhone) {\n        return { ...button, active: value };\n      }\n      if (buttonType === 'participantsActive' && button.icon === this.faUsers) {\n        return { ...button, active: value };\n      }\n      if (\n        buttonType === 'showMessagesBadge' &&\n        button.customName &&\n        button.customName === 'Messages'\n      ) {\n        const updatedInjector = this.createInjector({\n          icon: this.faComments,\n          badgeValue: value ? '*' : '',\n          iconColor: 'black',\n          showBadge: value,\n        });\n        return { ...button, customComponent: { ...this.messageWidget, injector: updatedInjector } };\n      }\n      if (buttonType === 'showMenuBadge' && button.customName && button.customName === 'Menu') {\n        const updatedInjector = this.createInjector({\n          icon: this.faBars,\n          badgeValue: this.totalReqWait.value,\n          iconColor: 'black',\n          showBadge: true,\n        });\n        return { ...button, customComponent: { ...this.menuWidget, injector: updatedInjector } };\n      }\n\n      return button;\n    });\n\n    this.cdr.detectChanges();\n  }\n\n  PrejoinPageComponent: any = {\n    component: this.PrejoinPage,\n    injector: null,\n  };\n\n  updatePrejoinPageComponent = () => {\n    const PrejoinComp = {\n      component: this.PrejoinPage,\n      injector: this.createInjector({\n        parameters: {\n          showAlert:\n            this.showAlert ||\n            (() => {\n              console.log('showAlert not defined');\n            }),\n          updateIsLoadingModalVisible: this.updateIsLoadingModalVisible,\n          connectSocket: this.socketManager.connectSocket,\n          updateSocket: this.updateSocket,\n          updateValidated: this.updateValidated,\n          updateApiUserName: this.updateApiUserName,\n          updateApiToken: this.updateApiToken,\n          updateLink: this.updateLink,\n          updateRoomName: this.updateRoomName,\n          updateMember: this.updateMember,\n        },\n        credentials: this.credentials,\n      }),\n    };\n\n    this.PrejoinPageComponent = { ...PrejoinComp };\n\n    this.cdr.detectChanges();\n  };\n\n  ngOnInit() {\n    if (this.PrejoinPage) {\n      this.updatePrejoinPageComponent();\n    }\n\n    this.setupResizeListener();\n    if (this.validated) {\n      this.connectAndAddSocketMethods();\n    }\n\n    this.mainHeightWidthSubscription = this.mainHeightWidth.subscribe(() => {\n      this.updateMainVideoSize();\n    });\n\n    this.recordingSubscription = combineLatest([\n      this.recordPaused,\n      this.recordStarted,\n      this.recordStopped,\n      this.recordResumed,\n      this.recordingProgressTime,\n      this.showRecordButtons,\n      this.islevel,\n    ]).subscribe(\n      ([\n        recordPaused,\n        recordStarted,\n        recordStopped,\n        recordResumed,\n        recordingProgressTime,\n        showRecordButtons,\n        islevel,\n      ]) => {\n        if (\n          recordPaused ||\n          recordStarted ||\n          recordStopped ||\n          recordResumed ||\n          recordingProgressTime ||\n          showRecordButtons ||\n          islevel\n        ) {\n          this.updateRecordButtons();\n        }\n      },\n    );\n\n    this.ScreenboardSubscription = combineLatest([\n      this.shared,\n      this.componentSizes,\n      this.annotateScreenStream,\n    ]).subscribe(([shared, componentSizes]) => {\n      this.ScreenboardWidget = {\n        component: Screenboard,\n        inputs: {\n          customWidth: componentSizes.mainWidth,\n          customHeight: componentSizes.mainHeight,\n          parameters: this.mediaSFUParameters,\n          showAspect: shared,\n        },\n      };\n    });\n    this.validatedSubscription = this.validated.subscribe((validated) => {\n      if (validated) {\n        this.handleValidated();\n      }\n    });\n    this.islevelSubscription = this.islevel.subscribe((islevel) => {\n      if (islevel) {\n        this.updateCustomMenuButtons();\n        this.updateControlBroadcastButtons();\n        this.updateControlChatButtons();\n      }\n    });\n    this.coHostSubscription = combineLatest([this.coHost, this.coHostResponsibility]).subscribe(\n      ([coHost, coHostResponsibility]) => {\n        if (coHost || coHostResponsibility) {\n          this.updateCustomMenuButtons();\n          this.updateControlBroadcastButtons();\n          this.updateControlChatButtons();\n        }\n      },\n    );\n\n    // Subscribe to changes in BehaviorSubject and update the buttons accordingly\n    this.buttonSubscriptions.push(\n      this.micActive.subscribe((value) => {\n        this.updateButtonState('micActive', value);\n        this.updateControlBroadcastButtons();\n        this.updateControlChatButtons();\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.videoActive.subscribe((value) => {\n        this.updateButtonState('videoActive', value);\n        this.updateControlBroadcastButtons();\n        this.updateControlChatButtons();\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.screenShareActive.subscribe((value) => {\n        this.updateButtonState('screenShareActive', value);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.showMessagesBadge.subscribe((value) => {\n        this.updateButtonState('showMessagesBadge', value);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.totalReqWait.subscribe(() => {\n        this.updateButtonState('showMenuBadge', true);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.participantsCounter.subscribe((value) => {\n        this.updateMenuParticipantsWidget(value);\n      }),\n    );\n\n    this.mediaSFUParameters = {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('orientationchange', this.handleResize);\n    if (this.mainHeightWidthSubscription) {\n      this.mainHeightWidthSubscription.unsubscribe();\n    }\n    if (this.validatedSubscription) {\n      this.validatedSubscription.unsubscribe();\n    }\n    if (this.islevelSubscription) {\n      this.islevelSubscription.unsubscribe();\n    }\n    if (this.coHostSubscription) {\n      this.coHostSubscription.unsubscribe();\n    }\n    if (this.ScreenboardSubscription) {\n      this.ScreenboardSubscription.unsubscribe();\n    }\n    if (this.recordingSubscription) {\n      this.recordingSubscription.unsubscribe();\n    }\n  }\n\n  updateMainVideoSize = async () => {\n    if (!this.lock_screen.value && !this.shared.value) {\n      this.prepopulateUserMedia.prepopulateUserMedia({\n        name: this.hostLabel.value,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n    } else {\n      if (!this.first_round.value) {\n        this.prepopulateUserMedia.prepopulateUserMedia({\n          name: this.hostLabel.value,\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        });\n      }\n    }\n  };\n\n  async connectAndAddSocketMethods() {\n    this.mediaSFUParameters = {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n    const socket_ = await this.connect_Socket(this.apiUserName.value, '', this.apiToken.value);\n    if (socket_) {\n      this.updateSocket(socket_);\n    }\n  }\n\n  async handleValidated() {\n    this.updateAllVideoStreams([\n      { producerId: 'youyou', stream: undefined, id: 'youyou', name: 'youyou' },\n    ]);\n\n    this.updateStreamNames([{ id: 'youyou', name: 'youyou', producerId: '' }]);\n\n    if (this.validated.value) {\n\n      try {\n        if (!this.localUIMode.value) {\n          await this.connectAndAddSocketMethods();\n          this.updateIsLoadingModalVisible(true);\n        } else {\n          this.updateIsLoadingModalVisible(false);\n        }\n      } catch (error) {\n        console.log('error connectAndaAddSocketMethods', error);\n      }\n\n      this.startMeetingProgressTimer.startMeetingProgressTimer({\n        startTime: Date.now() / 1000,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n\n    }\n  }\n\n  @HostListener('window:resize')\n  @HostListener('window:orientationchange')\n  async handleResize() {\n    let fraction = 0;\n\n    if (\n      window.innerHeight < window.innerWidth &&\n      (this.eventType.value == 'webinar' || this.eventType.value == 'conference')\n    ) {\n      const currentHeight = window.innerHeight;\n      fraction = Number((40 / currentHeight).toFixed(3));\n      if (fraction != this.controlHeight.value) {\n        this.updateControlHeight(Number(fraction));\n      }\n    } else {\n      // Set default control button height for portrait mode or other event types\n      const currentHeight = window.innerHeight;\n      fraction = Number((40 / currentHeight).toFixed(3));\n      fraction = Number(fraction);\n      if (fraction != this.controlHeight.value) {\n        this.updateControlHeight(Number(fraction));\n      }\n    }\n\n    const dimensions = this.computeDimensionsMethod({\n      containerWidthFraction: 1,\n      containerHeightFraction: 1,\n      mainSize: this.mainHeightWidth.value,\n      doStack: true,\n      defaultFraction:\n        this.eventType.value == 'webinar' || this.eventType.value == 'conference'\n          ? 1 - fraction\n          : 1,\n    });\n\n    this.updateComponentSizes(dimensions);\n\n    const orientation = this.checkOrientation();\n    if (orientation == 'portrait') {\n      if (!this.isWideScreen.value) {\n        if (this.shareScreenStarted.value || this.shared.value) {\n          this.updateScreenForceFullDisplay(true);\n        }\n      }\n    }\n\n    // Updates the main grid view\n    await this.prepopulateUserMedia.prepopulateUserMedia({\n      name: this.hostLabel.value,\n      parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n    });\n    // Updates the mini grid view\n    await this.onScreenChanges.onScreenChanges({\n      changed: true,\n      parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n    });\n  }\n\n  async disconnectAllSockets(consume_sockets: ConsumeSocket[]): Promise<void> {\n    for (const socket of consume_sockets) {\n      try {\n        const ip = Object.keys(socket)[0];\n        await socket[ip].disconnect();\n      } catch (error) {\n        console.log(`Error disconnecting socket with IP: ${Object.keys(socket)[0]}`, error);\n      }\n    }\n  }\n\n  async closeAndReset() {\n    //close and clean up all sockets, modals,... and reset all states to initial values\n\n    this.updateIsMessagesModalVisible(false);\n    this.updateIsParticipantsModalVisible(false);\n    this.updateIsWaitingModalVisible(false);\n    this.updateIsRequestsModalVisible(false);\n    this.updateIsCoHostModalVisible(false);\n    this.updateIsSettingsModalVisible(false);\n    this.updateIsDisplaySettingsModalVisible(false);\n    this.updateIsMediaSettingsModalVisible(false);\n    this.updateIsMenuModalVisible(false);\n    this.updateIsShareEventModalVisible(false);\n    this.updateIsConfirmExitModalVisible(false);\n    await this.disconnectAllSockets(this.consume_sockets.value);\n    await this.updateStatesToInitialValues();\n    this.updateMeetingProgressTime('00:00:00');\n    this.updateMeetingElapsedTime(0);\n    this.updateRecordingProgressTime('00:00:00');\n    this.updateRecordElapsedTime(0);\n    this.updateShowRecordButtons(false);\n\n    this.updateIsConfigureWhiteboardModalVisible(false);\n    this.updateIsWhiteboardModalVisible(false);\n    this.updateIsMenuModalVisible(false);\n    this.updateIsRecordingModalVisible(false);\n    this.updateIsPollModalVisible(false);\n    this.updateIsBreakoutRoomsModalVisible(false);\n    this.updateIsBackgroundModalVisible(false);\n    this.updateIsLoadingModalVisible(false);\n    this.updateIsConfirmHereModalVisible(false);\n\n    await sleep({ ms: 500 });\n    this.updateValidated(false);\n    //if on web, reload the page\n    window.location.reload();\n  }\n\n  computeDimensionsMethod = ({\n    containerWidthFraction = 1,\n    containerHeightFraction = 1,\n    mainSize,\n    doStack = true,\n    defaultFraction,\n  }: {\n    containerWidthFraction?: number;\n    containerHeightFraction?: number;\n    mainSize: number;\n    doStack?: boolean;\n    defaultFraction: number;\n  }): ComponentSizes => {\n    const parentWidth = window.innerWidth * containerWidthFraction;\n    const parentHeight = window.innerHeight * containerHeightFraction * defaultFraction;\n    let isWideScreen = parentWidth >= 768;\n\n    if (!isWideScreen && parentWidth > 1.5 * parentHeight) {\n      isWideScreen = true;\n    }\n\n    this.updateIsWideScreen(isWideScreen);\n\n    const dimensions = this.calculateDimensions({\n      parentWidth,\n      parentHeight,\n      isWideScreen,\n      mainSize,\n      doStack,\n    });\n    return dimensions;\n  };\n\n  calculateDimensions({\n    parentWidth,\n    parentHeight,\n    isWideScreen,\n    mainSize,\n    doStack,\n  }: {\n    parentWidth: number;\n    parentHeight: number;\n    isWideScreen: boolean;\n    mainSize: number;\n    doStack: boolean;\n  }): ComponentSizes {\n    if (doStack) {\n      return isWideScreen\n        ? {\n            mainHeight: Math.floor(parentHeight),\n            otherHeight: Math.floor(parentHeight),\n            mainWidth: Math.floor((mainSize / 100) * parentWidth),\n            otherWidth: Math.floor(((100 - mainSize) / 100) * parentWidth),\n          }\n        : {\n            mainHeight: Math.floor((mainSize / 100) * parentHeight),\n            otherHeight: Math.floor(((100 - mainSize) / 100) * parentHeight),\n            mainWidth: Math.floor(parentWidth),\n            otherWidth: Math.floor(parentWidth),\n          };\n    } else {\n      return {\n        mainHeight: Math.floor(parentHeight),\n        otherHeight: Math.floor(parentHeight),\n        mainWidth: Math.floor(parentWidth),\n        otherWidth: Math.floor(parentWidth),\n      };\n    }\n  }\n\n  handleOrientationChange() {\n    window.addEventListener('resize', this.handleResize.bind(this));\n    window.addEventListener('orientationchange', this.handleResize.bind(this));\n  }\n\n  setupResizeListener() {\n    this.handleResize();\n  }\n\n  orientation = window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';\n\n  async joinRoom(data: {\n    socket: Socket;\n    roomName: string;\n    islevel: string;\n    member: string;\n    sec: string;\n    apiUserName: string;\n  }): Promise<ResponseJoinRoom | null> {\n    const { socket, roomName, islevel, member, sec, apiUserName } = data;\n\n    try {\n      const response: ResponseJoinRoom | null = await this.joinRoomClient.joinRoomClient({\n        socket,\n        roomName,\n        islevel,\n        member,\n        sec,\n        apiUserName,\n      });\n\n      return response;\n    } catch (error) {\n      console.log('Error joining room:', error);\n      throw new Error('Failed to join the room. Please check your connection and try again.');\n    }\n  }\n\n  async join_Room({\n    socket,\n    roomName,\n    islevel,\n    member,\n    sec,\n    apiUserName,\n  }: {\n    socket: Socket;\n    roomName: string;\n    islevel: string;\n    member: string;\n    sec: string;\n    apiUserName: string;\n  }): Promise<void> {\n    const data: ResponseJoinRoom | null = await this.joinRoom({\n      socket: socket,\n      roomName: roomName,\n      islevel: islevel,\n      member: member,\n      sec: sec,\n      apiUserName: apiUserName,\n    });\n\n    if (data && data.success) {\n      this.roomData.next(data);\n\n      try {\n        this.updateRoomParametersClient.updateRoomParametersClient({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n            data: data,\n          },\n        });\n\n        if (data.isHost) {\n          this.updateIslevel('2');\n        } else {\n          this.updateIslevel('1');\n        }\n\n        if (data.secureCode) {\n          this.updateAdminPasscode(data.secureCode);\n        }\n\n        if (data.rtpCapabilities) {\n          const device_ = await this.createDeviceClient.createDeviceClient({\n            rtpCapabilities: data.rtpCapabilities,\n          });\n\n          if (device_) {\n            this.device.next(device_);\n          }\n        }\n      } catch {\n        /* handle error */\n      }\n    } else {\n      this.updateValidated(false);\n      try {\n        if (this.showAlert && data?.reason) {\n          this.showAlert({ message: data?.reason, type: 'danger', duration: 3000 });\n        }\n      } catch {\n        /* handle error */\n      }\n    }\n  }\n\n  onParticipantsFilterChange = (value: string): void => {\n    if (value && value.length > 0) {\n      this.filteredParticipants.next(\n        this.participants.value.filter((participant) =>\n          participant.name.toLowerCase().includes(value.toLowerCase()),\n        ),\n      );\n      this.participantsCounter.next(this.filteredParticipants.value.length);\n    } else {\n      this.filteredParticipants.next(this.participants.value);\n      this.participantsCounter.next(this.participants.value.length);\n    }\n  };\n\n  updateStatesToInitialValues = async () => {\n    const initialValues = initialValuesState as { [key: string]: any };\n    const updateFunctions = this.getAllParams() as unknown as {\n      [key: string]: (value: any) => void;\n    };\n\n    for (const key in initialValues) {\n      if (Object.prototype.hasOwnProperty.call(initialValues, key)) {\n        const updateFunctionName = `update${key.charAt(0).toUpperCase() + key.slice(1)}`;\n        const updateFunction = updateFunctions[updateFunctionName];\n\n        if (typeof updateFunction === 'function') {\n          try {\n            updateFunction(initialValues[key]);\n          } catch {\n            /* handle error */\n          }\n        }\n      }\n    }\n  };\n\n  faRecordVinyl = faRecordVinyl;\n  faPlayCircle = faPlayCircle;\n  faPauseCircle = faPauseCircle;\n  faStopCircle = faStopCircle;\n  faDotCircle = faDotCircle;\n  faCog = faCog;\n  faUsers = faUsers;\n  faClock = faClock;\n  faUserPlus = faUserPlus;\n  faTools = faTools;\n  faDesktop = faDesktop;\n  faPoll = faPoll;\n  faUserFriends = faUserFriends;\n  faChalkboardTeacher = faChalkboardTeacher;\n  faMicrophone = faMicrophone;\n  faMicrophoneSlash = faMicrophoneSlash;\n  faVideo = faVideo;\n  faVideoSlash = faVideoSlash;\n  faSync = faSync;\n  faPhone = faPhone;\n  faShareAlt = faShareAlt;\n  faBars = faBars;\n  faComments = faComments;\n  faChartBar = faChartBar;\n\n  onCloseMenuModal = () => {\n    this.updateIsMenuModalVisible(false);\n  };\n\n  onEventSettingsClose = () => {\n    this.updateIsSettingsModalVisible(false);\n  };\n\n  onCoHostClose = () => {\n    this.updateIsCoHostModalVisible(false);\n  };\n\n  onMediaSettingsClose = () => {\n    this.updateIsMediaSettingsModalVisible(false);\n  };\n\n  onDisplaySettingsClose = () => {\n    this.updateIsDisplaySettingsModalVisible(false);\n  };\n\n  onPollClose = () => {\n    this.updateIsPollModalVisible(false);\n  };\n\n  onBreakoutRoomsClose = () => {\n    this.updateIsBreakoutRoomsModalVisible(false);\n  };\n\n  onConfigureWhiteboardClose = () => {\n    this.updateIsConfigureWhiteboardModalVisible(false);\n  };\n\n  onMessagesClose = () => {\n    this.updateIsMessagesModalVisible(false);\n  };\n\n  onRecordingClose = () => {\n    this.updateIsRecordingModalVisible(false);\n  };\n\n  onParticipantsClose = () => {\n    this.updateIsParticipantsModalVisible(false);\n  };\n\n  onBackgroundClose = () => {\n    this.updateIsBackgroundModalVisible(false);\n  };\n\n  onConfirmExitClose = () => {\n    this.updateIsConfirmExitModalVisible(false);\n  };\n\n  onConfirmHereClose = () => {\n    this.updateIsConfirmHereModalVisible(false);\n  };\n\n  onScreenboardClose = () => {\n    this.updateIsScreenboardModalVisible(false);\n  };\n\n  onShareEventClose = () => {\n    this.updateIsShareEventModalVisible(false);\n  };\n\n  onAlertHide = () => {\n    this.updateAlertVisible(false);\n  };\n\n  ScreenboardWidget = {\n    component: Screenboard,\n    inputs: {\n      customWidth: this.componentSizes.value.mainWidth,\n      customHeight: this.componentSizes.value.mainHeight,\n      parameters: this.mediaSFUParameters,\n      showAspect: this.shared.value,\n    },\n  };\n\n  recordTimerWidget = {\n    component: RecordTimerWidget,\n    injector: this.createInjector({ recordingProgressTime: this.recordingProgressTime.value }),\n  };\n\n  updateRecordTimerWidget = (\n    recordingProgressTime: string = this.recordingProgressTime.value,\n  ): { component: any; injector: Injector } => {\n    const recordTimerWidget = {\n      component: RecordTimerWidget,\n      injector: this.createInjector({ recordingProgressTime: recordingProgressTime }),\n    };\n\n    this.recordTimerWidget = { ...recordTimerWidget };\n\n    this.cdr.markForCheck();\n\n    return recordTimerWidget;\n  };\n\n  recordButton = [\n    {\n      icon: this.faRecordVinyl,\n      text: 'Record',\n      onPress: () => {\n        this.launchRecording.launchRecording({\n          updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n          isRecordingModalVisible: this.isRecordingModalVisible.value,\n          showAlert: this.showAlert.bind(this),\n          stopLaunchRecord: this.stopLaunchRecord.value,\n          canLaunchRecord: this.canLaunchRecord.value,\n          recordingAudioSupport: this.recordingAudioSupport.value,\n          recordingVideoSupport: this.recordingVideoSupport.value,\n          updateCanRecord: this.updateCanRecord.bind(this),\n          updateClearedToRecord: this.updateClearedToRecord.bind(this),\n          recordStarted: this.recordStarted.value,\n          recordPaused: this.recordPaused.value,\n          localUIMode: this.localUIMode.value,\n        });\n      },\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: true,\n    },\n  ];\n\n  recordButtons: MainButtonAlt[] = [];\n\n  recordButtonsArray: MainButtonAlt[] = [\n    {\n      icon: this.faPlayCircle,\n      active: () => !this.recordPaused.value,\n      onPress: () =>\n        this.updateRecording.updateRecording({\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      alternateIcon: this.faPauseCircle,\n      show: () => true,\n    },\n    {\n      icon: this.faStopCircle,\n      active: () => false,\n      onPress: () =>\n        this.stopRecording.stopRecording({\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'black',\n      show: () => true,\n    },\n    {\n      customComponent: () => this.updateRecordTimerWidget(),\n      show: () => true,\n      active: () => false,\n    },\n    {\n      icon: this.faDotCircle,\n      active: () => false,\n      onPress: () => console.log('Status pressed'),\n      activeColor: 'black',\n      inActiveColor: () => (this.recordPaused.value ? 'yellow' : 'red'),\n      show: () => true,\n    },\n    {\n      icon: this.faCog,\n      active: () => false,\n      onPress: () =>\n        this.launchRecording.launchRecording({\n          updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n          isRecordingModalVisible: this.isRecordingModalVisible.value,\n          showAlert: this.showAlert.bind(this),\n          stopLaunchRecord: this.stopLaunchRecord.value,\n          canLaunchRecord: this.canLaunchRecord.value,\n          recordingAudioSupport: this.recordingAudioSupport.value,\n          recordingVideoSupport: this.recordingVideoSupport.value,\n          updateCanRecord: this.updateCanRecord.bind(this),\n          updateClearedToRecord: this.updateClearedToRecord.bind(this),\n          recordStarted: this.recordStarted.value,\n          recordPaused: this.recordPaused.value,\n          localUIMode: this.localUIMode.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'black',\n      show: () => true,\n    },\n  ];\n\n  async updateRecordButtons() {\n    const recordButtons = this.recordButtonsArray.map((button) => {\n      return {\n        ...button,\n        active: typeof button.active === 'function' ? button.active() : button.active,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        customComponent: button.customComponent\n          ? typeof button.customComponent === 'function'\n            ? button.customComponent()\n            : button.customComponent\n          : undefined,\n        activeColor:\n          typeof button.inActiveColor === 'function'\n            ? button.inActiveColor()\n            : button.inActiveColor,\n        inActiveColor:\n          typeof button.inActiveColor === 'function'\n            ? button.inActiveColor()\n            : button.inActiveColor,\n      };\n    });\n    this.recordButtons = [...recordButtons];\n    await this.updateMenuRecordWidget(recordButtons);\n    this.updateCustomMenuButtons();\n    this.updateControlBroadcastButtons();\n\n    this.cdr.markForCheck();\n  }\n\n  // Create instances of the custom widgets\n  menuWidget = {\n    component: MenuWidget,\n    injector: this.createInjector({\n      icon: this.faBars,\n      badgeValue: this.totalReqWait.value,\n      iconColor: 'black',\n      showBadge: true,\n    }),\n  };\n\n  messageWidget = {\n    component: MessageWidget,\n    injector: this.createInjector({\n      icon: this.faComments,\n      showBadge: this.showMessagesBadge.value,\n      badgeValue: 1,\n      iconColor: 'black',\n    }),\n  };\n\n  menuRecordWidget = {\n    component: MenuRecordWidget,\n    injector: this.createInjector({\n      buttons: this.recordButtons,\n      showAspect: true,\n      direction: 'horizontal',\n    }),\n  };\n\n  updateMenuRecordWidget = (recordButtons: MainButtonAlt[] = this.recordButtons): any => {\n    const menuRecordWidget = {\n      component: MenuRecordWidget,\n      injector: this.createInjector({\n        buttons: recordButtons,\n        showAspect: true,\n        direction: 'horizontal',\n      }),\n    };\n\n    this.menuRecordWidget = { ...menuRecordWidget };\n\n    this.cdr.markForCheck();\n\n    return menuRecordWidget;\n  };\n\n  menuParticipantsWidget = {\n    component: MenuParticipantsWidget,\n    injector: this.createInjector({\n      icon: this.faChartBar,\n      participantsCounter: this.participantsCounter.value,\n      iconColor: 'black',\n    }),\n  };\n\n  updateMenuParticipantsWidget = (count: number = this.participantsCounter.value): any => {\n    const menuParticipantsWidget = {\n      component: MenuParticipantsWidget,\n      injector: this.createInjector({\n        icon: this.faChartBar,\n        participantsCounter: count,\n        iconColor: 'black',\n      }),\n    };\n\n    this.menuParticipantsWidget = { ...menuParticipantsWidget };\n\n    this.cdr.markForCheck();\n\n    return menuParticipantsWidget;\n  };\n\n  customMenuButtonsArray: MainCustomButton[] = [\n    {\n      icon: this.faRecordVinyl,\n      text: 'Record',\n      action: () =>\n        this.launchRecording.launchRecording({\n          updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n          isRecordingModalVisible: this.isRecordingModalVisible.value,\n          showAlert: this.showAlert.bind(this),\n          stopLaunchRecord: this.stopLaunchRecord.value,\n          canLaunchRecord: this.canLaunchRecord.value,\n          recordingAudioSupport: this.recordingAudioSupport.value,\n          recordingVideoSupport: this.recordingVideoSupport.value,\n          updateCanRecord: this.updateCanRecord.bind(this),\n          updateClearedToRecord: this.updateClearedToRecord.bind(this),\n          recordStarted: this.recordStarted.value,\n          recordPaused: this.recordPaused.value,\n          localUIMode: this.localUIMode.value,\n        }),\n      show: () => !this.showRecordButtons.value && this.islevel.value == '2',\n    },\n    {\n      customComponent: () => this.updateMenuRecordWidget(),\n      show: () => this.showRecordButtons.value && this.islevel.value == '2',\n      action: () => console.log('record buttons pressed'),\n    },\n    {\n      icon: this.faCog,\n      text: 'Event Settings',\n      action: () =>\n        this.launchSettings.launchSettings({\n          updateIsSettingsModalVisible: this.updateIsSettingsModalVisible.bind(this),\n          isSettingsModalVisible: this.isSettingsModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faUsers,\n      text: 'Requests',\n      action: () =>\n        this.launchRequests.launchRequests({\n          updateIsRequestsModalVisible: this.updateIsRequestsModalVisible.bind(this),\n          isRequestsModalVisible: this.isRequestsModalVisible.value,\n        }),\n      show: () =>\n        this.islevel.value == '2' ||\n        ((this.coHostResponsibility.value &&\n          this.coHost.value &&\n          this.coHost.value === this.member.value &&\n          !!this.coHostResponsibility?.value?.find((item) => item.name === 'media')?.value) ??\n          false) ||\n        false,\n    },\n    {\n      icon: this.faClock,\n      text: 'Waiting',\n      action: () =>\n        this.launchWaiting.launchWaiting({\n          updateIsWaitingModalVisible: this.updateIsWaitingModalVisible.bind(this),\n          isWaitingModalVisible: this.isWaitingModalVisible.value,\n        }),\n      show: () =>\n        this.islevel.value == '2' ||\n        (this.coHostResponsibility.value &&\n          this.coHost.value &&\n          this.coHost.value === this.member.value &&\n          this.coHostResponsibility?.value?.find((item) => item.name === 'waiting')?.value ===\n            true) ||\n        false,\n    },\n    {\n      icon: this.faUserPlus,\n      text: 'Co-host',\n      action: () =>\n        this.launchCoHost.launchCoHost({\n          updateIsCoHostModalVisible: this.updateIsCoHostModalVisible.bind(this),\n          isCoHostModalVisible: this.isCoHostModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faTools,\n      text: 'Set Media',\n      action: () =>\n        this.launchMediaSettings.launchMediaSettings({\n          updateIsMediaSettingsModalVisible: this.updateIsMediaSettingsModalVisible.bind(this),\n          isMediaSettingsModalVisible: this.isMediaSettingsModalVisible.value,\n          audioInputs: this.audioInputs.value,\n          videoInputs: this.videoInputs.value,\n          updateAudioInputs: this.updateAudioInputs.bind(this),\n          updateVideoInputs: this.updateVideoInputs.bind(this),\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faDesktop,\n      text: 'Display',\n      action: () =>\n        this.launchDisplaySettings.launchDisplaySettings({\n          updateIsDisplaySettingsModalVisible: this.updateIsDisplaySettingsModalVisible.bind(this),\n          isDisplaySettingsModalVisible: this.isDisplaySettingsModalVisible.value,\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faPoll,\n      text: 'Poll',\n      action: () =>\n        this.launchPoll.launchPoll({\n          updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n          isPollModalVisible: this.isPollModalVisible.value,\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faUserFriends,\n      text: 'Breakout Rooms',\n      action: () =>\n        this.launchBreakoutRooms.launchBreakoutRooms({\n          updateIsBreakoutRoomsModalVisible: this.updateIsBreakoutRoomsModalVisible.bind(this),\n          isBreakoutRoomsModalVisible: this.isBreakoutRoomsModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faChalkboardTeacher,\n      text: 'Whiteboard',\n      action: () =>\n        this.launchConfigureWhiteboard.launchConfigureWhiteboard({\n          updateIsConfigureWhiteboardModalVisible:\n            this.updateIsConfigureWhiteboardModalVisible.bind(this),\n          isConfigureWhiteboardModalVisible: this.isConfigureWhiteboardModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n  ];\n\n  customMenuButtons: MainCustomButton[] = [];\n\n  updateCustomMenuButtons() {\n    this.customMenuButtons = this.customMenuButtonsArray.map((button) => {\n      return {\n        ...button,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        customComponent: button.customComponent\n          ? typeof button.customComponent === 'function'\n            ? button.customComponent()\n            : button.customComponent\n          : undefined,\n      };\n    });\n  }\n\n  controlBroadcastButtons: ButtonTouch[] = [];\n\n  updateControlBroadcastButtons() {\n    this.controlBroadcastButtons = this.controlBroadcastButtonsArray.map((button) => {\n      return {\n        ...button,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        active: typeof button.active === 'function' ? button.active() : button.active,\n        customComponent: button.customComponent\n          ? typeof button.customComponent === 'function'\n            ? button.customComponent()\n            : button.customComponent\n          : undefined,\n      };\n    });\n  }\n\n  controlBroadcastButtonsArray: ButtonTouch[] = [\n    {\n      icon: this.faUsers,\n      active: true,\n      alternateIcon: this.faUsers,\n      onPress: () =>\n        this.launchParticipants.launchParticipants({\n          updateIsParticipantsModalVisible: this.updateIsParticipantsModalVisible.bind(this),\n          isParticipantsModalVisible: this.isParticipantsModalVisible.value,\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faShareAlt,\n      active: true,\n      alternateIcon: this.faShareAlt,\n      onPress: () => this.updateIsShareEventModalVisible(!this.isShareEventModalVisible.value),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: () => true,\n    },\n    {\n      customComponent: this.messageWidget,\n      onPress: () =>\n        this.launchMessages.launchMessages({\n          updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n          isMessagesModalVisible: this.isMessagesModalVisible.value,\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faSync,\n      active: true,\n      alternateIcon: this.faSync,\n      onPress: () =>\n        this.switchVideoAlt.switchVideoAlt({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faVideoSlash,\n      alternateIcon: this.faVideo,\n      active: () => this.videoActive.value,\n      onPress: () =>\n        this.clickVideo.clickVideo({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      show: () => this.islevel.value == '2',\n      activeColor: 'green',\n      inActiveColor: 'red',\n    },\n    {\n      icon: this.faMicrophoneSlash,\n      alternateIcon: this.faMicrophone,\n      active: () => this.micActive.value,\n      onPress: () =>\n        this.clickAudio.clickAudio({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      show: () => this.islevel.value == '2',\n    },\n    {\n      customComponent: () => this.menuParticipantsWidget,\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faPhone,\n      active: this.endCallActive.value,\n      onPress: () =>\n        this.launchConfirmExit.launchConfirmExit({\n          updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n          isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      show: () => true,\n    },\n    {\n      icon: this.faPhone,\n      active: this.endCallActive.value,\n      onPress: () => console.log('End Call pressed'),\n      activeColor: 'transparent',\n      inActiveColor: 'transparent',\n      backgroundColor: { default: 'transparent' },\n      show: () => false,\n    },\n  ];\n\n  controlChatButtons: ButtonTouch[] = [];\n\n  controlChatButtonsArray: ButtonTouch[] = [\n    {\n      icon: this.faShareAlt,\n      active: true,\n      alternateIcon: this.faShareAlt,\n      onPress: () => this.updateIsShareEventModalVisible(!this.isShareEventModalVisible.value),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: true,\n    },\n    {\n      customComponent: this.messageWidget,\n      onPress: () =>\n        this.launchMessages.launchMessages({\n          updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n          isMessagesModalVisible: this.isMessagesModalVisible.value,\n        }),\n      show: true,\n    },\n    {\n      icon: this.faSync,\n      active: true,\n      alternateIcon: this.faSync,\n      onPress: () =>\n        this.switchVideoAlt.switchVideoAlt({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: true,\n    },\n    {\n      icon: this.faVideoSlash,\n      alternateIcon: this.faVideo,\n      active: () => this.videoActive.value,\n      onPress: () =>\n        this.clickVideo.clickVideo({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      show: true,\n    },\n    {\n      icon: this.faMicrophoneSlash,\n      alternateIcon: this.faMicrophone,\n      active: () => this.micActive.value,\n      onPress: () =>\n        this.clickAudio.clickAudio({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      show: true,\n    },\n    {\n      icon: this.faPhone,\n      active: this.endCallActive.value,\n      onPress: () =>\n        this.launchConfirmExit.launchConfirmExit({\n          updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n          isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      show: true,\n    },\n  ];\n\n  updateControlChatButtons() {\n    this.controlChatButtons = this.controlChatButtonsArray.map((button) => {\n      return {\n        ...button,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        active: typeof button.active === 'function' ? button.active() : button.active,\n      };\n    });\n  }\n\n  screenShareWidget = {\n    component: ScreenShareWidget,\n    injector: this.createInjector({ disabled: !this.screenShareActive.value }),\n  };\n\n  controlButtons = [\n    {\n      icon: this.faMicrophoneSlash,\n      alternateIcon: this.faMicrophone,\n      active: this.micActive.value,\n      onPress: () =>\n        this.clickAudio.clickAudio({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: this.audioSwitching.value,\n      show: true,\n    },\n    {\n      icon: this.faVideoSlash,\n      alternateIcon: this.faVideo,\n      active: this.videoActive.value,\n      onPress: () =>\n        this.clickVideo.clickVideo({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n            MediaStream,\n            MediaStreamTrack,\n            mediaDevices: MediaDevices,\n            device: this.device.value,\n            socket: this.socket.value,\n            showAlert: this.showAlert.bind(this),\n            checkPermission: this.checkPermission.checkPermission,\n            streamSuccessVideo: this.streamSuccessVideo.streamSuccessVideo,\n            hasCameraPermission: this.hasCameraPermission.value,\n            requestPermissionCamera: this.requestPermissionCamera.bind(this),\n            checkMediaPermission: 'web' !== 'web',\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: this.videoSwitching.value,\n      show: true,\n    },\n    {\n      //inverted active for inactive state\n      icon: faDesktop,\n      alternateIconComponent: this.screenShareWidget,\n      active: true,\n      onPress: () =>\n        this.clickScreenShare.clickScreenShare({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: false,\n      show: true,\n    },\n    {\n      icon: this.faPhone,\n      active: this.endCallActive.value,\n      onPress: () =>\n        this.launchConfirmExit.launchConfirmExit({\n          updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n          isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: false,\n      show: true,\n    },\n    {\n      icon: this.faUsers,\n      active: this.participantsActive.value,\n      onPress: () =>\n        this.launchParticipants.launchParticipants({\n          updateIsParticipantsModalVisible: this.updateIsParticipantsModalVisible.bind(this),\n          isParticipantsModalVisible: this.isParticipantsModalVisible.value,\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      disabled: false,\n      show: true,\n    },\n    {\n      customComponent: this.menuWidget,\n      customName: 'Menu',\n      onPress: () =>\n        this.launchMenuModal.launchMenuModal({\n          updateIsMenuModalVisible: this.updateIsMenuModalVisible.bind(this),\n          isMenuModalVisible: this.isMenuModalVisible.value,\n        }),\n      show: true,\n    },\n    {\n      customComponent: this.messageWidget,\n      customName: 'Messages',\n      onPress: () =>\n        this.launchMessages.launchMessages({\n          updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n          isMessagesModalVisible: this.isMessagesModalVisible.value,\n        }),\n      show: true,\n    },\n  ];\n\n  async connect_Socket(\n    apiUserName: string,\n    apiKey: string,\n    apiToken: string,\n  ): Promise<Socket | null> {\n    if (this.socket.value && this.socket.value.id) {\n      this.socket.value.on('disconnect', async () => {\n        await this.disconnect.disconnect({\n          showAlert: this.showAlert.bind(this),\n          redirectURL: this.redirectURL.value,\n          onWeb: true,\n          updateValidated: this.updateValidated.bind(this),\n        });\n        if (this.videoAlreadyOn.value) {\n          await this.clickVideo.clickVideo({\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        }\n        if (this.audioAlreadyOn.value) {\n          await this.clickAudio.clickAudio({\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        }\n\n        await this.closeAndReset();\n      });\n\n      this.socket.value.on('allMembers', async (membersData: AllMembersData) => {\n        if (membersData) {\n          await this.allMembers.allMembers({\n            apiUserName: apiUserName,\n            apiKey: '', //not recommended - use apiToken instead. Use for testing/development only\n            apiToken: apiToken,\n            members: membersData.members,\n            requestss: membersData.requests ? membersData.requests : this.requestList.value,\n            coHoste: membersData.coHost ? membersData.coHost : this.coHost.value,\n            coHostRes: membersData.coHostResponsibilities\n              ? membersData.coHostResponsibilities\n              : this.coHostResponsibility.value,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            consume_sockets: this.consume_sockets.value,\n          });\n        }\n      });\n\n      this.socket.value.on('allMembersRest', async (membersData: AllMembersRestData) => {\n        if (membersData) {\n          await this.allMembersRest.allMembersRest({\n            apiUserName: apiUserName,\n            apiKey: '', // not recommended - use apiToken instead. Use for testing/development only\n            members: membersData.members,\n            apiToken: apiToken,\n            settings: membersData.settings,\n            coHoste: membersData.coHost ? membersData.coHost : this.coHost.value,\n            coHostRes: membersData.coHostResponsibilities\n              ? membersData.coHostResponsibilities\n              : this.coHostResponsibility.value,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            consume_sockets: this.consume_sockets.value,\n          });\n        }\n      });\n\n      this.socket.value.on('userWaiting', async ({ name }: { name: string }) => {\n        await this.userWaiting.userWaiting({\n          name,\n          showAlert: this.showAlert.bind(this),\n          totalReqWait: this.totalReqWait.value,\n          updateTotalReqWait: this.updateTotalReqWait.bind(this),\n        });\n      });\n\n      this.socket.value.on('personJoined', async ({ name }: { name: string }) => {\n        this.personJoined.personJoined({\n          name,\n          showAlert: this.showAlert.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'allWaitingRoomMembers',\n        async (waiting_data: AllWaitingRoomMembersData) => {\n          await this.allWaitingRoomMembers.allWaitingRoomMembers({\n            waitingParticipants: waiting_data.waitingParticipants\n              ? waiting_data.waitingParticipants\n              : waiting_data.waitingParticipantss\n              ? waiting_data.waitingParticipantss\n              : this.waitingRoomList.value,\n            updateTotalReqWait: this.updateTotalReqWait.bind(this),\n            updateWaitingRoomList: this.updateWaitingRoomList.bind(this),\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'roomRecordParams',\n        async ({ recordParams }: { recordParams: RecordParams }) => {\n          this.roomRecordParams.roomRecordParams({\n            recordParams,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('ban', async ({ name }: { name: string }) => {\n        await this.banParticipant.banParticipant({\n          name,\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        });\n      });\n\n      this.socket.value.on('updatedCoHost', async (cohost_data: UpdatedCoHostData) => {\n        await this.updatedCoHost.updatedCoHost({\n          coHost: cohost_data.coHost ? cohost_data.coHost : this.coHost.value,\n          coHostResponsibility: cohost_data.coHostResponsibilities\n            ? cohost_data.coHostResponsibilities\n            : this.coHostResponsibility.value,\n          youAreCoHost: this.youAreCoHost.value,\n          updateCoHost: this.updateCoHost.bind(this),\n          updateCoHostResponsibility: this.updateCoHostResponsibility.bind(this),\n          updateYouAreCoHost: this.updateYouAreCoHost.bind(this),\n          showAlert: this.showAlert.bind(this),\n          eventType: this.eventType.value,\n          islevel: this.islevel.value,\n          member: this.member.value,\n        });\n      });\n\n      this.socket.value.on(\n        'participantRequested',\n        async ({ userRequest }: { userRequest: Request }) => {\n          await this.participantRequested.participantRequested({\n            userRequest,\n            requestList: this.requestList.value,\n            waitingRoomList: this.waitingRoomList.value,\n            updateTotalReqWait: this.updateTotalReqWait.bind(this),\n            updateRequestList: this.updateRequestList.bind(this),\n          });\n        },\n      );\n\n      this.socket.value.on('screenProducerId', async ({ producerId }: { producerId: string }) => {\n        this.screenProducerId.screenProducerId({\n          producerId,\n          screenId: this.screenId.value,\n          membersReceived: this.membersReceived.value,\n          shareScreenStarted: this.shareScreenStarted.value,\n          deferScreenReceived: this.deferScreenReceived.value,\n          participants: this.participants.value,\n          updateScreenId: this.updateScreenId.bind(this),\n          updateShareScreenStarted: this.updateShareScreenStarted.bind(this),\n          updateDeferScreenReceived: this.updateDeferScreenReceived.bind(this),\n        });\n      });\n      //settings, updateAudioSetting, updateVideoSetting, updateScreenshareSetting, updateChatSetting\n      this.socket.value.on('updateMediaSettings', async ({ settings }: { settings: Settings }) => {\n        this.updateMediaSettings.updateMediaSettings({\n          settings,\n          updateAudioSetting: this.updateAudioSetting.bind(this),\n          updateVideoSetting: this.updateVideoSetting.bind(this),\n          updateScreenshareSetting: this.updateScreenshareSetting.bind(this),\n          updateChatSetting: this.updateChatSetting.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'producer-media-paused',\n        async ({\n          producerId,\n          kind,\n          name,\n        }: {\n          producerId: string;\n          kind: 'video' | 'audio' | 'screenshare' | 'screen';\n          name: string;\n        }) => {\n          await this.producerMediaPaused.producerMediaPaused({\n            producerId,\n            kind,\n            name,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'producer-media-resumed',\n        async ({ kind, name }: { kind: 'audio'; name: string }) => {\n          await this.producerMediaResumed.producerMediaResumed({\n            kind,\n            name,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'producer-media-closed',\n        async ({\n          producerId,\n          kind,\n        }: {\n          producerId: string;\n          kind: 'video' | 'audio' | 'screenshare' | 'screen';\n        }) => {\n          if (producerId && kind) {\n            await this.producerMediaClosed.producerMediaClosed({\n              producerId,\n              kind,\n              parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            });\n          }\n        },\n      );\n\n      this.socket.value.on(\n        'controlMediaHost',\n        async ({ type }: { type: 'video' | 'audio' | 'screenshare' | 'chat' | 'all' }) => {\n          await this.controlMediaHost.controlMediaHost({\n            type,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('meetingEnded', async () => {\n        await this.meetingEnded.meetingEnded({\n          showAlert: this.showAlert.bind(this),\n          redirectURL: this.redirectURL.value,\n          onWeb: true,\n          eventType: this.eventType.value,\n          updateValidated: this.updateValidated.bind(this),\n        });\n\n        if (this.videoAlreadyOn.value) {\n          await this.clickVideo.clickVideo({\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        }\n        if (this.audioAlreadyOn.value) {\n          await this.clickAudio.clickAudio({\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        }\n\n        await this.closeAndReset();\n      });\n\n      this.socket.value.on('disconnectUserSelf', async () => {\n        await this.disconnectUserSelf.disconnectUserSelf({\n          socket: this.socket.value,\n          member: this.member.value,\n          roomName: this.roomName.value,\n        });\n      });\n\n      this.socket.value.on('receiveMessage', async ({ message }: { message: Message }) => {\n        await this.receiveMessage.receiveMessage({\n          message,\n          messages: this.messages.value,\n          participantsAll: this.participantsAll.value,\n          member: this.member.value,\n          eventType: this.eventType.value,\n          islevel: this.islevel.value,\n          coHost: this.coHost.value,\n          updateMessages: this.updateMessages.bind(this),\n          updateShowMessagesBadge: this.updateShowMessagesBadge.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'meetingTimeRemaining',\n        async ({ timeRemaining }: { timeRemaining: number }) => {\n          await this.meetingTimeRemaining.meetingTimeRemaining({\n            timeRemaining,\n            showAlert: this.showAlert.bind(this),\n            eventType: this.eventType.value,\n          });\n        },\n      );\n\n      this.socket.value.on('meetingStillThere', async () => {\n        this.meetingStillThere.meetingStillThere({\n          updateIsConfirmHereModalVisible: this.updateIsConfirmHereModalVisible.bind(this),\n        });\n      });\n\n      this.socket.value.on('startRecords', async () => {\n        await this.startRecords.startRecords({\n          roomName: this.roomName.value,\n          member: this.member.value,\n          socket: this.socket.value,\n        });\n      });\n\n      this.socket.value.on('reInitiateRecording', async () => {\n        await this.reInitiateRecording.reInitiateRecording({\n          roomName: this.roomName.value,\n          member: this.member.value,\n          socket: this.socket.value,\n          adminRestrictSetting: this.adminRestrictSetting.value,\n        });\n      });\n\n      this.socket.value.on(\n        'updateConsumingDomains',\n        async ({ domains, alt_domains }: UpdateConsumingDomainsData) => {\n          await this.updateConsumingDomains.updateConsumingDomains({\n            domains,\n            alt_domains,\n            apiUserName,\n            apiKey,\n            apiToken,\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'RecordingNotice',\n        async ({ state, userRecordingParam, pauseCount, timeDone }: RecordingNoticeData) => {\n          await this.recordingNotice.RecordingNotice({\n            state,\n            userRecordingParam,\n            pauseCount,\n            timeDone,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('timeLeftRecording', async ({ timeLeft }: { timeLeft: number }) => {\n        this.timeLeftRecording.timeLeftRecording({\n          timeLeft,\n          showAlert: this.showAlert.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'stoppedRecording',\n        async ({ state, reason }: { state: string; reason: string }) => {\n          await this.stoppedRecording.stoppedRecording({\n            state,\n            reason,\n            showAlert: this.showAlert.bind(this),\n          });\n        },\n      );\n      this.socket.value.on(\n        'hostRequestResponse',\n        ({ requestResponse }: HostRequestResponseData) => {\n          this.hostRequestResponse.hostRequestResponse({\n            requestResponse,\n            showAlert: this.showAlert.bind(this),\n            requestList: this.requestList.value,\n            updateRequestList: this.updateRequestList.bind(this),\n            updateMicAction: this.updateMicAction.bind(this),\n            updateVideoAction: this.updateVideoAction.bind(this),\n            updateScreenAction: this.updateScreenAction.bind(this),\n            updateChatAction: this.updateChatAction.bind(this),\n            updateAudioRequestState: this.updateAudioRequestState.bind(this),\n            updateVideoRequestState: this.updateVideoRequestState.bind(this),\n            updateScreenRequestState: this.updateScreenRequestState.bind(this),\n            updateChatRequestState: this.updateChatRequestState.bind(this),\n            updateAudioRequestTime: this.updateAudioRequestTime.bind(this),\n            updateVideoRequestTime: this.updateVideoRequestTime.bind(this),\n            updateScreenRequestTime: this.updateScreenRequestTime.bind(this),\n            updateChatRequestTime: this.updateChatRequestTime.bind(this),\n            updateRequestIntervalSeconds: this.updateRequestIntervalSeconds.value,\n          });\n        },\n      );\n      this.socket.value.on('pollUpdated', async (data: PollUpdatedData) => {\n        try {\n          await this.pollUpdated.pollUpdated({\n            data,\n            polls: this.polls.value,\n            poll: this.poll.value ? this.poll.value : ({} as Poll),\n            member: this.member.value,\n            islevel: this.islevel.value,\n            showAlert: this.showAlert.bind(this),\n            updatePolls: this.updatePolls.bind(this),\n            updatePoll: this.updatePoll.bind(this),\n            updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n          });\n        } catch {\n          /* handle error */\n        }\n      });\n\n      this.socket.value.on('breakoutRoomUpdated', async (data: BreakoutRoomUpdatedData) => {\n        try {\n          await this.breakoutRoomUpdated.breakoutRoomUpdated({\n            data,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        } catch {\n          /* handle error */\n        }\n      });\n\n      await this.join_Room({\n        socket: this.socket.value,\n        roomName: this.roomName.value,\n        islevel: this.islevel.value,\n        member: this.member.value,\n        sec: this.apiToken.value,\n        apiUserName: this.apiUserName.value,\n      });\n      await this.receiveRoomMessages.receiveRoomMessages({\n        socket: this.socket.value,\n        roomName: this.roomName.value,\n        updateMessages: this.updateMessages.bind(this),\n      });\n      this.prepopulateUserMedia.prepopulateUserMedia({\n        name: this.hostLabel.value,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n\n      return this.socket.value;\n    } else {\n      return null;\n    }\n  }\n}\n","import {\n  Component,\n  HostListener,\n  Injector,\n  ChangeDetectorRef,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { Socket } from 'socket.io-client';\nimport {\n  faMicrophoneSlash,\n  faVideoSlash,\n  faPhone,\n  faUsers,\n  faComments,\n  faShareAlt,\n  faSync,\n  faChartBar,\n  faRecordVinyl,\n  faCog,\n  faPlayCircle,\n  faPauseCircle,\n  faStopCircle,\n  faDotCircle,\n  faVideo,\n  faMicrophone,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { initialValuesState } from '../../methods/utils/initial-values.util';\n\n// Components for display\nimport { MainAspectComponent } from '../display-components/main-aspect-component/main-aspect-component.component';\nimport { LoadingModal } from '../display-components/loading-modal/loading-modal.component';\nimport { ControlButtonsComponentTouch } from '../display-components/control-buttons-component-touch/control-buttons-component-touch.component';\nimport { MainScreenComponent } from '../display-components/main-screen-component/main-screen-component.component';\nimport { MainGridComponent } from '../display-components/main-grid-component/main-grid-component.component';\nimport { MainContainerComponent } from '../display-components/main-container-component/main-container-component.component';\nimport { AlertComponent } from '../display-components/alert-component/alert.component.component';\nimport { RecordingModal } from '../recording-components/recording-modal/recording-modal.component';\nimport { ParticipantsModal } from '../participants-components/participants-modal/participants-modal.component';\nimport { MessagesModal } from '../message-components/messages-modal/messages-modal.component';\nimport { ConfirmExitModal } from '../exit-components/confirm-exit-modal/confirm-exit-modal.component';\nimport { ConfirmHereModal } from '../misc-components/confirm-here-modal/confirm-here-modal.component';\nimport { ShareEventModal } from '../misc-components/share-event-modal/share-event-modal.component';\nimport {\n  WelcomePage,\n  WelcomePageOptions,\n} from '../misc-components/welcome-page/welcome-page.component';\n\n// Pagination and display of media\nimport { FlexibleVideo } from '../display-components/flexible-video/flexible-video.component';\nimport { AudioGrid } from '../display-components/audio-grid/audio-grid.component';\n\nimport { MessageWidget } from '../display-components/control-widgets/message-widget.component';\nimport { MenuRecordWidget } from '../display-components/control-widgets/menu-record-widget.component';\nimport { RecordTimerWidget } from '../display-components/control-widgets/record-timer-widget.component';\nimport { MenuParticipantsWidget } from '../display-components/control-widgets/menu-participants-widget.component';\n\nimport {\n  ButtonTouch,\n  ResponseJoinRoom,\n  CoHostResponsibility,\n  EventType,\n  Participant,\n  ConsumeSocket,\n  MeetingRoomParams,\n  VidCons,\n  HParamsType,\n  VParamsType,\n  ScreenParamsType,\n  AParamsType,\n  UserRecordingParams,\n  Stream,\n  AudioDecibels,\n  ScreenState,\n  GridSizes,\n  CustomMediaComponent,\n  Message,\n  WaitingRoomParticipant,\n  ComponentSizes,\n  Transport as TransportType,\n  Shape,\n  Poll,\n  BreakoutParticipant,\n  WhiteboardUser,\n  Request,\n  AllMembersData,\n  AllMembersRestData,\n  MainButtonAlt,\n  RecordParams,\n  SeedData,\n  UpdateConsumingDomainsData,\n  RecordingNoticeData,\n  PreJoinPageOptions,\n} from '../../@types/types';\n// Import methods for control\nimport { LaunchRecording } from '../../methods/recording-methods/launch-recording.service';\nimport { StartRecording } from '../../methods/recording-methods/start-recording.service';\nimport { ConfirmRecording } from '../../methods/recording-methods/confirm-recording.service';\nimport { LaunchParticipants } from '../../methods/participants-methods/launch-participants.service';\nimport { LaunchMessages } from '../../methods/message-methods/launch-messages.service';\nimport { LaunchConfirmExit } from '../../methods/exit-methods/launch-confirm-exit.service';\n\n// Mediasfu functions -- examples\nimport { SocketManager } from '../../sockets/socket-manager.service';\nimport { JoinRoomClient } from '../../producer-client/producer-client-emits/join-room-client.service';\nimport { UpdateRoomParametersClient } from '../../producer-client/producer-client-emits/update-room-parameters-client.service';\nimport { CreateDeviceClient } from '../../producer-client/producer-client-emits/create-device-client.service';\n\nimport { SwitchVideoAlt } from '../../methods/stream-methods/switch-video-alt.service';\nimport { ClickVideo } from '../../methods/stream-methods/click-video.service';\nimport { ClickAudio } from '../../methods/stream-methods/click-audio.service';\nimport { ClickScreenShare } from '../../methods/stream-methods/click-screen-share.service';\nimport { StreamSuccessVideo } from '../../consumers/stream-success-video.service';\nimport { StreamSuccessAudio } from '../../consumers/stream-success-audio.service';\nimport { StreamSuccessScreen } from '../../consumers/stream-success-screen.service';\nimport { StreamSuccessAudioSwitch } from '../../consumers/stream-success-audio-switch.service';\nimport { CheckPermission } from '../../consumers/check-permission.service';\n\n// Mediasfu consumer functions\nimport { UpdateMiniCardsGrid } from '../../consumers/update-mini-cards-grid.service';\nimport { MixStreams } from '../../consumers/mix-streams.service';\nimport { DispStreams } from '../../consumers/disp-streams.service';\nimport { StopShareScreen } from '../../consumers/stop-share-screen.service';\nimport { CheckScreenShare } from '../../consumers/check-screen-share.service';\nimport { StartShareScreen } from '../../consumers/start-share-screen.service';\nimport { RequestScreenShare } from '../../consumers/request-screen-share.service';\nimport { ReorderStreams } from '../../consumers/reorder-streams.service';\nimport { PrepopulateUserMedia } from '../../consumers/prepopulate-user-media.service';\nimport { GetVideos } from '../../consumers/get-videos.service';\nimport { RePort } from '../../consumers/re-port.service';\nimport { Trigger } from '../../consumers/trigger.service';\nimport { ConsumerResume } from '../../consumers/consumer-resume.service';\nimport { ConnectSendTransportAudio } from '../../consumers/connect-send-transport-audio.service';\nimport { ConnectSendTransportVideo } from '../../consumers/connect-send-transport-video.service';\nimport { ConnectSendTransportScreen } from '../../consumers/connect-send-transport-screen.service';\nimport { ProcessConsumerTransports } from '../../consumers/process-consumer-transports.service';\nimport { ResumePauseStreams } from '../../consumers/resume-pause-streams.service';\nimport { Readjust } from '../../consumers/readjust.service';\nimport { CheckGrid } from '../../consumers/check-grid.service';\nimport { GetEstimate } from '../../consumers/get-estimate.service';\nimport { CalculateRowsAndColumns } from '../../consumers/calculate-rows-and-columns.service';\nimport { AddVideosGrid } from '../../consumers/add-videos-grid.service';\nimport { OnScreenChanges } from '../../consumers/on-screen-changes.service';\nimport { sleep } from '../../methods/utils/sleep.util';\nimport { ChangeVids } from '../../consumers/change-vids.service';\nimport { CompareActiveNames } from '../../consumers/compare-active-names.service';\nimport { CompareScreenStates } from '../../consumers/compare-screen-states.service';\nimport { CreateSendTransport } from '../../consumers/create-send-transport.service';\nimport { ResumeSendTransportAudio } from '../../consumers/resume-send-transport-audio.service';\nimport { ReceiveAllPipedTransports } from '../../consumers/receive-all-piped-transports.service';\nimport { DisconnectSendTransportVideo } from '../../consumers/disconnect-send-transport-video.service';\nimport { DisconnectSendTransportAudio } from '../../consumers/disconnect-send-transport-audio.service';\nimport { DisconnectSendTransportScreen } from '../../consumers/disconnect-send-transport-screen.service';\nimport { ConnectSendTransport } from '../../consumers/connect-send-transport.service';\nimport { GetPipedProducersAlt } from '../../consumers/get-piped-producers-alt.service';\nimport { SignalNewConsumerTransport } from '../../consumers/signal-new-consumer-transport.service';\nimport { ConnectRecvTransport } from '../../consumers/connect-recv-transport.service';\nimport { ReUpdateInter } from '../../consumers/re-update-inter.service';\nimport { UpdateParticipantAudioDecibels } from '../../consumers/update-participant-audio-decibels.service';\nimport { CloseAndResize } from '../../consumers/close-and-resize.service';\nimport { AutoAdjust } from '../../consumers/auto-adjust.service';\nimport { SwitchUserVideoAlt } from '../../consumers/switch-user-video-alt.service';\nimport { SwitchUserVideo } from '../../consumers/switch-user-video.service';\nimport { SwitchUserAudio } from '../../consumers/switch-user-audio.service';\nimport { ReceiveRoomMessages } from '../../consumers/receive-room-messages.service';\nimport { FormatNumber } from '../../methods/utils/format-number.service';\nimport { ConnectIps } from '../../consumers/connect-ips.service';\n\n// Utility imports for meeting and recording functionality\nimport { StartMeetingProgressTimer } from '../../methods/utils/meeting-timer/start-meeting-progress-timer.service';\nimport { UpdateRecording } from '../../methods/recording-methods/update-recording.service';\nimport { StopRecording } from '../../methods/recording-methods/stop-recording.service';\n\n// Socket methods for participant and meeting management\nimport { PersonJoined } from '../../producers/socket-receive-methods/person-joined.service';\nimport { RoomRecordParams } from '../../producers/socket-receive-methods/room-record-params.service';\nimport { BanParticipant } from '../../producers/socket-receive-methods/ban-participant.service';\nimport { ProducerMediaPaused } from '../../producers/socket-receive-methods/producer-media-paused.service';\nimport { ProducerMediaResumed } from '../../producers/socket-receive-methods/producer-media-resumed.service';\nimport { ProducerMediaClosed } from '../../producers/socket-receive-methods/producer-media-closed.service';\nimport { MeetingEnded } from '../../producers/socket-receive-methods/meeting-ended.service';\nimport { DisconnectUserSelf } from '../../producers/socket-receive-methods/disconnect-user-self.service';\nimport { ReceiveMessage } from '../../producers/socket-receive-methods/receive-message.service';\nimport { MeetingTimeRemaining } from '../../producers/socket-receive-methods/meeting-time-remaining.service';\nimport { MeetingStillThere } from '../../producers/socket-receive-methods/meeting-still-there.service';\nimport { StartRecords } from '../../producers/socket-receive-methods/start-records.service';\nimport { ReInitiateRecording } from '../../producers/socket-receive-methods/re-initiate-recording.service';\nimport { GetDomains } from '../../producers/socket-receive-methods/get-domains.service';\nimport { UpdateConsumingDomains } from '../../producers/socket-receive-methods/update-consuming-domains.service';\nimport { RecordingNotice } from '../../producers/socket-receive-methods/recording-notice.service';\nimport { TimeLeftRecording } from '../../producers/socket-receive-methods/time-left-recording.service';\nimport { StoppedRecording } from '../../producers/socket-receive-methods/stopped-recording.service';\nimport { AllMembers } from '../../producers/socket-receive-methods/all-members.service';\nimport { AllMembersRest } from '../../producers/socket-receive-methods/all-members-rest.service';\nimport { Disconnect } from '../../producers/socket-receive-methods/disconnect.service';\n\nimport { CaptureCanvasStream } from '../../methods/whiteboard-methods/capture-canvas-stream.service';\nimport { ResumePauseAudioStreams } from '../../consumers/resume-pause-audio-streams.service';\nimport { ProcessConsumerTransportsAudio } from '../../consumers/process-consumer-transports-audio.service';\n\nimport {\n  Device,\n  Producer,\n  ProducerOptions,\n  RtpCapabilities,\n  Transport,\n} from 'mediasoup-client/lib/types';\nimport { SelfieSegmentation } from '@mediapipe/selfie_segmentation';\n\nexport type MediasfuBroadcastOptions = {\n  PrejoinPage?: (options: PreJoinPageOptions | WelcomePageOptions) => HTMLElement;\n  credentials?: { apiUserName: string; apiKey: string };\n  useLocalUIMode?: boolean;\n  seedData?: SeedData;\n  useSeed?: boolean;\n  imgSrc?: string;\n};\n\n@Component({\n  selector: 'app-mediasfu-broadcast',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    CommonModule,\n    AlertComponent,\n    AudioGrid,\n    ControlButtonsComponentTouch,\n    FlexibleVideo,\n    LoadingModal,\n    ConfirmExitModal,\n    MessagesModal,\n    ConfirmHereModal,\n    ShareEventModal,\n    WelcomePage,\n    ParticipantsModal,\n    RecordingModal,\n    MainAspectComponent,\n    MainContainerComponent,\n    MainGridComponent,\n    MainScreenComponent,\n    MessageWidget,\n    MenuRecordWidget,\n    RecordTimerWidget,\n    MenuParticipantsWidget,\n  ],\n  template: `\n    <div\n      class=\"MediaSFU\"\n      [ngStyle]=\"{\n        height: '100vh',\n        width: '100vw',\n        maxWidth: '100vw',\n        maxHeight: '100vh',\n        overflow: 'hidden'\n      }\"\n    >\n      <!-- Conditional Rendering: PrejoinPage or Main Content -->\n      <ng-container *ngIf=\"!validated.value; else mainContent\">\n        <ng-container\n          *ngComponentOutlet=\"\n            PrejoinPageComponent.component;\n            injector: PrejoinPageComponent.injector\n          \"\n        >\n        </ng-container>\n      </ng-container>\n\n      <!-- Main Content -->\n      <ng-template #mainContent>\n        <app-main-container-component>\n          <!-- Main Aspect Component -->\n          <app-main-aspect-component\n            [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n            [defaultFraction]=\"1 - controlHeight.value\"\n            [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n            [updateIsWideScreen]=\"updateIsWideScreen\"\n            [updateIsMediumScreen]=\"updateIsMediumScreen\"\n            [updateIsSmallScreen]=\"updateIsSmallScreen\"\n          >\n            <!-- Main Screen Component -->\n            <app-main-screen-component\n              [doStack]=\"true\"\n              [mainSize]=\"mainHeightWidth.value\"\n              [defaultFraction]=\"1 - controlHeight.value\"\n              [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n              [updateComponentSizes]=\"updateComponentSizes\"\n            >\n              <!-- Main Grid Component -->\n              <app-main-grid-component\n                [height]=\"componentSizes.value.mainHeight\"\n                [width]=\"componentSizes.value.mainWidth\"\n                [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                [mainSize]=\"mainHeightWidth.value\"\n                [showAspect]=\"mainHeightWidth.value > 0\"\n                [timeBackgroundColor]=\"recordState.value\"\n                [meetingProgressTime]=\"meetingProgressTime.value\"\n              >\n                <app-flexible-video\n                  [customWidth]=\"componentSizes.value.mainWidth\"\n                  [customHeight]=\"componentSizes.value.mainHeight\"\n                  [rows]=\"1\"\n                  [columns]=\"1\"\n                  [componentsToRender]=\"mainGridStream.value\"\n                  [showAspect]=\"\n                    mainGridStream.value.length > 0 &&\n                    !(whiteboardStarted.value && !whiteboardEnded.value)\n                  \"\n                >\n                </app-flexible-video>\n\n                <!-- Control Buttons for Broadcast -->\n                <app-control-buttons-component-touch\n                  [buttons]=\"controlBroadcastButtons\"\n                  [position]=\"'right'\"\n                  [location]=\"'bottom'\"\n                  [direction]=\"'vertical'\"\n                  [showAspect]=\"eventType.value === 'broadcast'\"\n                ></app-control-buttons-component-touch>\n\n                <!-- Recording Buttons -->\n                <app-control-buttons-component-touch\n                  [buttons]=\"recordButton\"\n                  [direction]=\"'horizontal'\"\n                  [showAspect]=\"\n                    eventType.value === 'broadcast' &&\n                    !showRecordButtons.value &&\n                    islevel.value === '2'\n                  \"\n                  [location]=\"'bottom'\"\n                  [position]=\"'middle'\"\n                ></app-control-buttons-component-touch>\n\n                <app-control-buttons-component-touch\n                  [buttons]=\"recordButtons\"\n                  [direction]=\"'horizontal'\"\n                  [showAspect]=\"\n                    eventType.value === 'broadcast' &&\n                    showRecordButtons.value &&\n                    islevel.value === '2'\n                  \"\n                  [location]=\"'bottom'\"\n                  [position]=\"'middle'\"\n                ></app-control-buttons-component-touch>\n\n                <!-- AudioGrid -->\n                <app-audio-grid [componentsToRender]=\"audioOnlyStreams.value\"></app-audio-grid>\n              </app-main-grid-component>\n\n              <!-- Other Grid Component is not included in MediasfuBroadcast -->\n            </app-main-screen-component>\n          </app-main-aspect-component>\n        </app-main-container-component>\n      </ng-template>\n\n      <!-- Modals to include -->\n      <app-participants-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isParticipantsModalVisible]=\"isParticipantsModalVisible.value\"\n        [onParticipantsClose]=\"onParticipantsClose\"\n        [participantsCounter]=\"participantsCounter.value\"\n        [onParticipantsFilterChange]=\"onParticipantsFilterChange\"\n        [parameters]=\"{\n          updateParticipants: updateParticipants,\n          updateIsParticipantsModalVisible: updateIsParticipantsModalVisible,\n          updateDirectMessageDetails: updateDirectMessageDetails,\n          updateStartDirectMessage: updateStartDirectMessage,\n          updateIsMessagesModalVisible: updateIsMessagesModalVisible,\n          showAlert: showAlert,\n          filteredParticipants: filteredParticipants.value,\n          participants: filteredParticipants.value,\n          roomName: roomName.value,\n          islevel: islevel.value,\n          member: member.value,\n          coHostResponsibility: coHostResponsibility.value,\n          coHost: coHost.value,\n          eventType: eventType.value,\n          startDirectMessage: startDirectMessage.value,\n          directMessageDetails: directMessageDetails.value,\n          socket: socket.value,\n          getUpdatedAllParams: getUpdatedAllParams,\n        }\"\n      ></app-participants-modal>\n\n      <app-recording-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isRecordingModalVisible]=\"isRecordingModalVisible.value\"\n        [onClose]=\"onRecordingClose\"\n        [startRecording]=\"startRecording.startRecording\"\n        [confirmRecording]=\"confirmRecording.confirmRecording\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-recording-modal>\n\n      <app-messages-modal\n        [backgroundColor]=\"\n          eventType.value === 'webinar' || eventType.value === 'conference'\n            ? '#f5f5f5'\n            : 'rgba(255, 255, 255, 0.25)'\n        \"\n        [isMessagesModalVisible]=\"isMessagesModalVisible.value\"\n        [onMessagesClose]=\"onMessagesClose\"\n        [messages]=\"messages.value\"\n        [eventType]=\"eventType.value\"\n        [member]=\"member.value\"\n        [islevel]=\"islevel.value\"\n        [coHostResponsibility]=\"coHostResponsibility.value\"\n        [coHost]=\"coHost.value\"\n        [startDirectMessage]=\"startDirectMessage.value\"\n        [directMessageDetails]=\"directMessageDetails.value\"\n        [updateStartDirectMessage]=\"updateStartDirectMessage\"\n        [updateDirectMessageDetails]=\"updateDirectMessageDetails\"\n        [showAlert]=\"showAlert\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [chatSetting]=\"chatSetting.value\"\n      ></app-messages-modal>\n\n      <app-confirm-exit-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isConfirmExitModalVisible]=\"isConfirmExitModalVisible.value\"\n        [onConfirmExitClose]=\"onConfirmExitClose\"\n        [position]=\"'topRight'\"\n        [member]=\"member.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [islevel]=\"islevel.value\"\n      ></app-confirm-exit-modal>\n\n      <app-confirm-here-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isConfirmHereModalVisible]=\"isConfirmHereModalVisible.value\"\n        [onConfirmHereClose]=\"onConfirmHereClose\"\n        [member]=\"member.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n      ></app-confirm-here-modal>\n\n      <app-share-event-modal\n        [isShareEventModalVisible]=\"isShareEventModalVisible.value\"\n        [onShareEventClose]=\"onShareEventClose\"\n        [roomName]=\"roomName.value\"\n        [islevel]=\"islevel.value\"\n        [adminPasscode]=\"adminPasscode.value\"\n        [eventType]=\"eventType.value\"\n      ></app-share-event-modal>\n\n      <app-alert-component\n        [visible]=\"alertVisible.value\"\n        [message]=\"alertMessage.value\"\n        [type]=\"alertType.value\"\n        [duration]=\"alertDuration.value\"\n        [onHide]=\"onAlertHide\"\n        textColor=\"#ffffff\"\n      ></app-alert-component>\n\n      <app-loading-modal\n        [isVisible]=\"isLoadingModalVisible.value\"\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        displayColor=\"black\"\n      ></app-loading-modal>\n    </div>\n  `,\n  styles: [\n    `\n      .MediaSFU {\n        /* Add any component-specific styles here */\n      }\n    `,\n  ],\n  providers: [CookieService],\n})\nexport class MediasfuBroadcast implements OnInit, OnDestroy {\n  @Input()\n  PrejoinPage: any = WelcomePage;\n  @Input() credentials: { apiUserName: string; apiKey: string } = { apiUserName: '', apiKey: '' };\n  @Input() useLocalUIMode = false;\n  @Input() seedData?: SeedData;\n  @Input() useSeed = false;\n  @Input() imgSrc = 'https://mediasfu.com/images/logo192.png';\n\n  title = 'MediaSFU-Broadcast';\n\n  private mainHeightWidthSubscription: Subscription | undefined;\n  private validatedSubscription: Subscription | undefined;\n  private islevelSubscription: Subscription | undefined;\n  private coHostSubscription: Subscription | undefined;\n  private buttonSubscriptions: Subscription[] = [];\n  private ScreenboardSubscription: Subscription | undefined;\n  private recordingSubscription: Subscription | undefined;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private injector: Injector,\n    public updateMiniCardsGrid: UpdateMiniCardsGrid,\n    public mixStreams: MixStreams,\n    public dispStreams: DispStreams,\n    public stopShareScreen: StopShareScreen,\n    public checkScreenShare: CheckScreenShare,\n    public startShareScreen: StartShareScreen,\n    public requestScreenShare: RequestScreenShare,\n    public reorderStreams: ReorderStreams,\n    public prepopulateUserMedia: PrepopulateUserMedia,\n    public getVideos: GetVideos,\n    public rePort: RePort,\n    public trigger: Trigger,\n    public consumerResume: ConsumerResume,\n    public connectSendTransport: ConnectSendTransport,\n    public connectSendTransportAudio: ConnectSendTransportAudio,\n    public connectSendTransportVideo: ConnectSendTransportVideo,\n    public connectSendTransportScreen: ConnectSendTransportScreen,\n    public processConsumerTransports: ProcessConsumerTransports,\n    public resumePauseStreams: ResumePauseStreams,\n    public readjust: Readjust,\n    public checkGrid: CheckGrid,\n    public getEstimate: GetEstimate,\n    public calculateRowsAndColumns: CalculateRowsAndColumns,\n    public addVideosGrid: AddVideosGrid,\n    public onScreenChanges: OnScreenChanges,\n    public changeVids: ChangeVids,\n    public compareActiveNames: CompareActiveNames,\n    public compareScreenStates: CompareScreenStates,\n    public createSendTransport: CreateSendTransport,\n    public resumeSendTransportAudio: ResumeSendTransportAudio,\n    public receiveAllPipedTransports: ReceiveAllPipedTransports,\n    public disconnectSendTransportVideo: DisconnectSendTransportVideo,\n    public disconnectSendTransportAudio: DisconnectSendTransportAudio,\n    public disconnectSendTransportScreen: DisconnectSendTransportScreen,\n    public getPipedProducersAlt: GetPipedProducersAlt,\n    public signalNewConsumerTransport: SignalNewConsumerTransport,\n    public connectRecvTransport: ConnectRecvTransport,\n    public reUpdateInter: ReUpdateInter,\n    public updateParticipantAudioDecibels: UpdateParticipantAudioDecibels,\n    public closeAndResize: CloseAndResize,\n    public autoAdjust: AutoAdjust,\n    public switchUserVideoAlt: SwitchUserVideoAlt,\n    public switchUserVideo: SwitchUserVideo,\n    public switchUserAudio: SwitchUserAudio,\n    public getDomains: GetDomains,\n    public formatNumber: FormatNumber,\n    public connectIps: ConnectIps,\n    public createDeviceClient: CreateDeviceClient,\n    public captureCanvasStream: CaptureCanvasStream,\n    public resumePauseAudioStreams: ResumePauseAudioStreams,\n    public processConsumerTransportsAudio: ProcessConsumerTransportsAudio,\n\n    public launchRecording: LaunchRecording,\n    public startRecording: StartRecording,\n    public confirmRecording: ConfirmRecording,\n    public launchParticipants: LaunchParticipants,\n    public launchMessages: LaunchMessages,\n    public launchConfirmExit: LaunchConfirmExit,\n\n    public startMeetingProgressTimer: StartMeetingProgressTimer,\n    public updateRecording: UpdateRecording,\n    public stopRecording: StopRecording,\n\n    public personJoined: PersonJoined,\n\n    public roomRecordParams: RoomRecordParams,\n    public banParticipant: BanParticipant,\n\n    public producerMediaPaused: ProducerMediaPaused,\n    public producerMediaResumed: ProducerMediaResumed,\n    public producerMediaClosed: ProducerMediaClosed,\n\n    public meetingEnded: MeetingEnded,\n    public disconnectUserSelf: DisconnectUserSelf,\n    public receiveMessage: ReceiveMessage,\n    public meetingTimeRemaining: MeetingTimeRemaining,\n    public meetingStillThere: MeetingStillThere,\n    public startRecords: StartRecords,\n    public reInitiateRecording: ReInitiateRecording,\n    public recordingNotice: RecordingNotice,\n    public timeLeftRecording: TimeLeftRecording,\n    public stoppedRecording: StoppedRecording,\n\n    public allMembers: AllMembers,\n    public allMembersRest: AllMembersRest,\n    public disconnect: Disconnect,\n\n    public socketManager: SocketManager,\n    public joinRoomClient: JoinRoomClient,\n    public updateRoomParametersClient: UpdateRoomParametersClient,\n    public clickVideo: ClickVideo,\n    public clickAudio: ClickAudio,\n    public clickScreenShare: ClickScreenShare,\n    public switchVideoAlt: SwitchVideoAlt,\n    public streamSuccessVideo: StreamSuccessVideo,\n    public streamSuccessAudio: StreamSuccessAudio,\n    public streamSuccessScreen: StreamSuccessScreen,\n    public streamSuccessAudioSwitch: StreamSuccessAudioSwitch,\n    public checkPermission: CheckPermission,\n\n    public updateConsumingDomains: UpdateConsumingDomains,\n    public receiveRoomMessages: ReceiveRoomMessages,\n  ) {}\n\n  createInjector(inputs: any) {\n    const inj = Injector.create({\n      providers: Object.keys(inputs).map((key) => ({ provide: key, useValue: inputs[key] })),\n      parent: this.injector,\n    });\n\n    return inj;\n  }\n\n  // Initial values\n  mediaSFUFunctions = () => {\n    return {\n      updateMiniCardsGrid:\n        this.updateMiniCardsGrid?.updateMiniCardsGrid ||\n        (() => {\n          console.log('none');\n        }),\n      mixStreams:\n        this.mixStreams?.mixStreams ||\n        (() => {\n          console.log('none');\n        }),\n      dispStreams:\n        this.dispStreams?.dispStreams ||\n        (() => {\n          console.log('none');\n        }),\n      stopShareScreen:\n        this.stopShareScreen?.stopShareScreen ||\n        (() => {\n          console.log('none');\n        }),\n      checkScreenShare:\n        this.checkScreenShare?.checkScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      startShareScreen:\n        this.startShareScreen?.startShareScreen ||\n        (() => {\n          console.log('none');\n        }),\n      requestScreenShare:\n        this.requestScreenShare?.requestScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      reorderStreams:\n        this.reorderStreams?.reorderStreams ||\n        (() => {\n          console.log('none');\n        }),\n      prepopulateUserMedia:\n        this.prepopulateUserMedia?.prepopulateUserMedia ||\n        (() => {\n          console.log('none');\n        }),\n      getVideos:\n        this.getVideos?.getVideos ||\n        (() => {\n          console.log('none');\n        }),\n      rePort:\n        this.rePort?.rePort ||\n        (() => {\n          console.log('none');\n        }),\n      trigger:\n        this.trigger?.trigger ||\n        (() => {\n          console.log('none');\n        }),\n      consumerResume:\n        this.consumerResume?.consumerResume ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransport:\n        this.connectSendTransport?.connectSendTransport ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportAudio:\n        this.connectSendTransportAudio?.connectSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportVideo:\n        this.connectSendTransportVideo?.connectSendTransportVideo ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportScreen:\n        this.connectSendTransportScreen?.connectSendTransportScreen ||\n        (() => {\n          console.log('none');\n        }),\n      processConsumerTransports:\n        this.processConsumerTransports?.processConsumerTransports ||\n        (() => {\n          console.log('none');\n        }),\n      resumePauseStreams:\n        this.resumePauseStreams?.resumePauseStreams ||\n        (() => {\n          console.log('none');\n        }),\n      readjust:\n        this.readjust?.readjust ||\n        (() => {\n          console.log('none');\n        }),\n      checkGrid:\n        this.checkGrid?.checkGrid ||\n        (() => {\n          console.log('none');\n        }),\n      getEstimate:\n        this.getEstimate?.getEstimate ||\n        (() => {\n          console.log('none');\n        }),\n      calculateRowsAndColumns:\n        this.calculateRowsAndColumns?.calculateRowsAndColumns ||\n        (() => {\n          console.log('none');\n        }),\n      addVideosGrid:\n        this.addVideosGrid?.addVideosGrid ||\n        (() => {\n          console.log('none');\n        }),\n      onScreenChanges:\n        this.onScreenChanges?.onScreenChanges ||\n        (() => {\n          console.log('none');\n        }),\n      sleep:\n        sleep ||\n        (() => {\n          console.log('none');\n        }),\n      changeVids:\n        this.changeVids?.changeVids ||\n        (() => {\n          console.log('none');\n        }),\n      compareActiveNames:\n        this.compareActiveNames?.compareActiveNames ||\n        (() => {\n          console.log('none');\n        }),\n      compareScreenStates:\n        this.compareScreenStates?.compareScreenStates ||\n        (() => {\n          console.log('none');\n        }),\n      createSendTransport:\n        this.createSendTransport?.createSendTransport ||\n        (() => {\n          console.log('none');\n        }),\n      resumeSendTransportAudio:\n        this.resumeSendTransportAudio?.resumeSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      receiveAllPipedTransports:\n        this.receiveAllPipedTransports?.receiveAllPipedTransports ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportVideo:\n        this.disconnectSendTransportVideo?.disconnectSendTransportVideo ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportAudio:\n        this.disconnectSendTransportAudio?.disconnectSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportScreen:\n        this.disconnectSendTransportScreen?.disconnectSendTransportScreen ||\n        (() => {\n          console.log('none');\n        }),\n      getPipedProducersAlt:\n        this.getPipedProducersAlt?.getPipedProducersAlt ||\n        (() => {\n          console.log('none');\n        }),\n      signalNewConsumerTransport:\n        this.signalNewConsumerTransport?.signalNewConsumerTransport ||\n        (() => {\n          console.log('none');\n        }),\n      connectRecvTransport:\n        this.connectRecvTransport?.connectRecvTransport ||\n        (() => {\n          console.log('none');\n        }),\n      reUpdateInter:\n        this.reUpdateInter?.reUpdateInter ||\n        (() => {\n          console.log('none');\n        }),\n      updateParticipantAudioDecibels:\n        this.updateParticipantAudioDecibels?.updateParticipantAudioDecibels ||\n        (() => {\n          console.log('none');\n        }),\n      closeAndResize:\n        this.closeAndResize?.closeAndResize ||\n        (() => {\n          console.log('none');\n        }),\n      autoAdjust:\n        this.autoAdjust?.autoAdjust ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserVideoAlt:\n        this.switchUserVideoAlt?.switchUserVideoAlt ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserVideo:\n        this.switchUserVideo?.switchUserVideo ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserAudio:\n        this.switchUserAudio?.switchUserAudio ||\n        (() => {\n          console.log('none');\n        }),\n      getDomains:\n        this.getDomains?.getDomains ||\n        (() => {\n          console.log('none');\n        }),\n      formatNumber:\n        this.formatNumber?.formatNumber ||\n        (() => {\n          console.log('none');\n        }),\n      connectIps:\n        this.connectIps?.connectIps ||\n        (() => {\n          console.log('none');\n        }),\n      createDeviceClient:\n        this.createDeviceClient?.createDeviceClient ||\n        (() => {\n          console.log('none');\n        }),\n      captureCanvasStream:\n        this.captureCanvasStream?.captureCanvasStream ||\n        (() => {\n          console.log('none');\n        }),\n      resumePauseAudioStreams:\n        this.resumePauseAudioStreams?.resumePauseAudioStreams ||\n        (() => {\n          console.log('none');\n        }),\n      processConsumerTransportsAudio:\n        this.processConsumerTransportsAudio?.processConsumerTransportsAudio ||\n        (() => {\n          console.log('none');\n        }),\n      checkPermission:\n        this.checkPermission?.checkPermission ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessVideo:\n        this.streamSuccessVideo?.streamSuccessVideo ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessAudio:\n        this.streamSuccessAudio?.streamSuccessAudio ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessScreen:\n        this.streamSuccessScreen?.streamSuccessScreen ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessAudioSwitch:\n        this.streamSuccessAudioSwitch?.streamSuccessAudioSwitch ||\n        (() => {\n          console.log('none');\n        }),\n      clickVideo:\n        this.clickVideo?.clickVideo ||\n        (() => {\n          console.log('none');\n        }),\n      clickAudio:\n        this.clickAudio?.clickAudio ||\n        (() => {\n          console.log('none');\n        }),\n      clickScreenShare:\n        this.clickScreenShare?.clickScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      switchVideoAlt:\n        this.switchVideoAlt?.switchVideoAlt ||\n        (() => {\n          console.log('none');\n        }),\n      requestPermissionCamera:\n        this.requestPermissionCamera ||\n        (() => {\n          console.log('none');\n        }),\n      requestPermissionAudio:\n        this.requestPermissionAudio ||\n        (() => {\n          console.log('none');\n        }),\n    };\n  };\n\n  validated = new BehaviorSubject<boolean>(false);\n  localUIMode = new BehaviorSubject<boolean>(false);\n  socket = new BehaviorSubject<Socket>({} as Socket);\n  roomData = new BehaviorSubject<ResponseJoinRoom | null>(null);\n  device = new BehaviorSubject<Device | null>(null);\n  apiKey = new BehaviorSubject<string>('');\n  apiUserName = new BehaviorSubject<string>('');\n  apiToken = new BehaviorSubject<string>('');\n  link = new BehaviorSubject<string>('');\n\n  roomName = new BehaviorSubject<string>('');\n  member = new BehaviorSubject<string>('');\n  adminPasscode = new BehaviorSubject<string>('');\n  islevel = new BehaviorSubject<string>('1');\n  coHost = new BehaviorSubject<string>('No coHost');\n  coHostResponsibility = new BehaviorSubject<CoHostResponsibility[]>([\n    { name: 'participants', value: false, dedicated: false },\n    { name: 'media', value: false, dedicated: false },\n    { name: 'waiting', value: false, dedicated: false },\n    { name: 'chat', value: false, dedicated: false },\n  ]);\n  youAreCoHost = new BehaviorSubject<boolean>(false);\n  youAreHost = new BehaviorSubject<boolean>(false);\n  confirmedToRecord = new BehaviorSubject<boolean>(false);\n  meetingDisplayType = new BehaviorSubject<string>('media');\n  meetingVideoOptimized = new BehaviorSubject<boolean>(false);\n  eventType = new BehaviorSubject<EventType>('broadcast');\n  participants = new BehaviorSubject<Participant[]>([]);\n  filteredParticipants = new BehaviorSubject<Participant[]>([]);\n  participantsCounter = new BehaviorSubject<number>(0);\n  participantsFilter = new BehaviorSubject<string>('');\n\n  consume_sockets = new BehaviorSubject<ConsumeSocket[]>([]);\n  rtpCapabilities = new BehaviorSubject<RtpCapabilities | null>(null);\n  roomRecvIPs = new BehaviorSubject<string[]>([]);\n  meetingRoomParams = new BehaviorSubject<MeetingRoomParams | null>(null);\n  itemPageLimit = new BehaviorSubject<number>(4);\n  audioOnlyRoom = new BehaviorSubject<boolean>(false);\n  addForBasic = new BehaviorSubject<boolean>(false);\n  screenPageLimit = new BehaviorSubject<number>(4);\n  shareScreenStarted = new BehaviorSubject<boolean>(false);\n  shared = new BehaviorSubject<boolean>(false);\n  targetOrientation = new BehaviorSubject<string>('landscape');\n  targetResolution = new BehaviorSubject<string>('sd');\n  targetResolutionHost = new BehaviorSubject<string>('sd');\n  vidCons = new BehaviorSubject<VidCons>({ width: 640, height: 360 });\n  frameRate = new BehaviorSubject<number>(10);\n  hParams = new BehaviorSubject<HParamsType>({} as HParamsType);\n  vParams = new BehaviorSubject<VParamsType>({} as VParamsType);\n  screenParams = new BehaviorSubject<ScreenParamsType>({} as ScreenParamsType);\n  aParams = new BehaviorSubject<AParamsType>({} as AParamsType);\n\n  recordingAudioPausesLimit = new BehaviorSubject<number>(0);\n  recordingAudioPausesCount = new BehaviorSubject<number>(0);\n  recordingAudioSupport = new BehaviorSubject<boolean>(false);\n  recordingAudioPeopleLimit = new BehaviorSubject<number>(0);\n  recordingAudioParticipantsTimeLimit = new BehaviorSubject<number>(0);\n  recordingVideoPausesCount = new BehaviorSubject<number>(0);\n  recordingVideoPausesLimit = new BehaviorSubject<number>(0);\n  recordingVideoSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoPeopleLimit = new BehaviorSubject<number>(0);\n  recordingVideoParticipantsTimeLimit = new BehaviorSubject<number>(0);\n  recordingAllParticipantsSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoParticipantsSupport = new BehaviorSubject<boolean>(false);\n  recordingAllParticipantsFullRoomSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoParticipantsFullRoomSupport = new BehaviorSubject<boolean>(false);\n  recordingPreferredOrientation = new BehaviorSubject<string>('landscape');\n  recordingSupportForOtherOrientation = new BehaviorSubject<boolean>(false);\n  recordingMultiFormatsSupport = new BehaviorSubject<boolean>(false);\n\n  userRecordingParams = new BehaviorSubject<UserRecordingParams>({\n    mainSpecs: {\n      mediaOptions: 'video', // 'audio', 'video'\n      audioOptions: 'all', // 'all', 'onScreen', 'host'\n      videoOptions: 'all', // 'all', 'mainScreen'\n      videoType: 'fullDisplay', // 'all', 'bestDisplay', 'fullDisplay'\n      videoOptimized: false, // true, false\n      recordingDisplayType: 'media', // 'media', 'video', 'all'\n      addHLS: false, // true, false\n    },\n    dispSpecs: {\n      nameTags: true, // true, false\n      backgroundColor: '#000000', // '#000000', '#ffffff'\n      nameTagsColor: '#ffffff', // '#000000', '#ffffff'\n      orientationVideo: 'portrait', // 'landscape', 'portrait', 'all'\n    },\n  });\n\n  canRecord = new BehaviorSubject<boolean>(false);\n  startReport = new BehaviorSubject<boolean>(false);\n  endReport = new BehaviorSubject<boolean>(false);\n  recordTimerInterval = new BehaviorSubject<NodeJS.Timeout | null>(null);\n  recordStartTime = new BehaviorSubject<number>(0);\n  recordElapsedTime = new BehaviorSubject<number>(0);\n  isTimerRunning = new BehaviorSubject<boolean>(false);\n  canPauseResume = new BehaviorSubject<boolean>(false);\n  recordChangeSeconds = new BehaviorSubject<number>(15000);\n  pauseLimit = new BehaviorSubject<number>(0);\n  pauseRecordCount = new BehaviorSubject<number>(0);\n  canLaunchRecord = new BehaviorSubject<boolean>(true);\n  stopLaunchRecord = new BehaviorSubject<boolean>(false);\n\n  participantsAll = new BehaviorSubject<Participant[]>([]);\n\n  firstAll = new BehaviorSubject<boolean>(false);\n  updateMainWindow = new BehaviorSubject<boolean>(false);\n  first_round = new BehaviorSubject<boolean>(false);\n  landScaped = new BehaviorSubject<boolean>(false);\n  lock_screen = new BehaviorSubject<boolean>(false);\n  screenId = new BehaviorSubject<string>('');\n  allVideoStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  newLimitedStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  newLimitedStreamsIDs = new BehaviorSubject<string[]>([]);\n  activeSounds = new BehaviorSubject<string[]>([]);\n  screenShareIDStream = new BehaviorSubject<string>('');\n  screenShareNameStream = new BehaviorSubject<string>('');\n  adminIDStream = new BehaviorSubject<string>('');\n  adminNameStream = new BehaviorSubject<string>('');\n  youYouStream = new BehaviorSubject<(Participant | Stream)[]>([]);\n  youYouStreamIDs = new BehaviorSubject<string[]>([]);\n  localStream = new BehaviorSubject<MediaStream | null>(null);\n  recordStarted = new BehaviorSubject<boolean>(false);\n  recordResumed = new BehaviorSubject<boolean>(false);\n  recordPaused = new BehaviorSubject<boolean>(false);\n  recordStopped = new BehaviorSubject<boolean>(false);\n  adminRestrictSetting = new BehaviorSubject<boolean>(false);\n  videoRequestState = new BehaviorSubject<string | null>(null);\n  videoRequestTime = new BehaviorSubject<number>(0);\n  videoAction = new BehaviorSubject<boolean>(false);\n  localStreamVideo = new BehaviorSubject<MediaStream | null>(null);\n  userDefaultVideoInputDevice = new BehaviorSubject<string>('');\n  currentFacingMode = new BehaviorSubject<string>('user');\n  prevFacingMode = new BehaviorSubject<string>('user');\n  defVideoID = new BehaviorSubject<string>('');\n  allowed = new BehaviorSubject<boolean>(false);\n  dispActiveNames = new BehaviorSubject<string[]>([]);\n  p_dispActiveNames = new BehaviorSubject<string[]>([]);\n  activeNames = new BehaviorSubject<string[]>([]);\n  prevActiveNames = new BehaviorSubject<string[]>([]);\n  p_activeNames = new BehaviorSubject<string[]>([]);\n  membersReceived = new BehaviorSubject<boolean>(false);\n  deferScreenReceived = new BehaviorSubject<boolean>(false);\n  hostFirstSwitch = new BehaviorSubject<boolean>(false);\n  micAction = new BehaviorSubject<boolean>(false);\n  screenAction = new BehaviorSubject<boolean>(false);\n  chatAction = new BehaviorSubject<boolean>(false);\n  audioRequestState = new BehaviorSubject<string | null>(null);\n  screenRequestState = new BehaviorSubject<string | null>(null);\n  chatRequestState = new BehaviorSubject<string | null>(null);\n  audioRequestTime = new BehaviorSubject<number>(0);\n  screenRequestTime = new BehaviorSubject<number>(0);\n  chatRequestTime = new BehaviorSubject<number>(0);\n  updateRequestIntervalSeconds = new BehaviorSubject<number>(240);\n  oldSoundIds = new BehaviorSubject<string[]>([]);\n  hostLabel = new BehaviorSubject<string>('Host');\n  mainScreenFilled = new BehaviorSubject<boolean>(false);\n  localStreamScreen = new BehaviorSubject<MediaStream | null>(null);\n  screenAlreadyOn = new BehaviorSubject<boolean>(false);\n  chatAlreadyOn = new BehaviorSubject<boolean>(false);\n  redirectURL = new BehaviorSubject<string>('');\n  oldAllStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  adminVidID = new BehaviorSubject<string>('');\n  streamNames = new BehaviorSubject<Stream[]>([]);\n  non_alVideoStreams = new BehaviorSubject<Participant[]>([]);\n  sortAudioLoudness = new BehaviorSubject<boolean>(false);\n  audioDecibels = new BehaviorSubject<AudioDecibels[]>([]);\n  mixed_alVideoStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  non_alVideoStreams_muted = new BehaviorSubject<Participant[]>([]);\n  paginatedStreams = new BehaviorSubject<(Participant | Stream)[][]>([]);\n  localStreamAudio = new BehaviorSubject<MediaStream | null>(null);\n  defAudioID = new BehaviorSubject<string>('');\n  userDefaultAudioInputDevice = new BehaviorSubject<string>('');\n  userDefaultAudioOutputDevice = new BehaviorSubject<string>('');\n  prevAudioInputDevice = new BehaviorSubject<string>('');\n  prevVideoInputDevice = new BehaviorSubject<string>('');\n  audioPaused = new BehaviorSubject<boolean>(false);\n  mainScreenPerson = new BehaviorSubject<string>('');\n  adminOnMainScreen = new BehaviorSubject<boolean>(false);\n  screenStates = new BehaviorSubject<ScreenState[]>([\n    {\n      mainScreenPerson: '',\n      mainScreenProducerId: '',\n      mainScreenFilled: false,\n      adminOnMainScreen: false,\n    },\n  ]);\n  prevScreenStates = new BehaviorSubject<ScreenState[]>([\n    {\n      mainScreenPerson: '',\n      mainScreenProducerId: '',\n      mainScreenFilled: false,\n      adminOnMainScreen: false,\n    },\n  ]);\n  updateDateState = new BehaviorSubject<number | null>(null);\n  lastUpdate = new BehaviorSubject<number | null>(null);\n  nForReadjustRecord = new BehaviorSubject<number>(0);\n  fixedPageLimit = new BehaviorSubject<number>(4);\n  removeAltGrid = new BehaviorSubject<boolean>(false);\n  nForReadjust = new BehaviorSubject<number>(0);\n  reorderInterval = new BehaviorSubject<number>(30000);\n  fastReorderInterval = new BehaviorSubject<number>(10000);\n  lastReorderTime = new BehaviorSubject<number>(0);\n  audStreamNames = new BehaviorSubject<Stream[]>([]);\n  currentUserPage = new BehaviorSubject<number>(0);\n  mainHeightWidth = new BehaviorSubject<number>(100);\n  prevMainHeightWidth = new BehaviorSubject<number>(this.mainHeightWidth.value);\n  prevDoPaginate = new BehaviorSubject<boolean>(false);\n  doPaginate = new BehaviorSubject<boolean>(false);\n  shareEnded = new BehaviorSubject<boolean>(false);\n  lStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  chatRefStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  controlHeight = new BehaviorSubject<number>(\n    this.eventType.value === 'webinar' || this.eventType.value === 'conference' ? 0 : 0.06,\n  );\n  isWideScreen = new BehaviorSubject<boolean>(false);\n  isMediumScreen = new BehaviorSubject<boolean>(false);\n  isSmallScreen = new BehaviorSubject<boolean>(false);\n  addGrid = new BehaviorSubject<boolean>(false);\n  addAltGrid = new BehaviorSubject<boolean>(false);\n  gridRows = new BehaviorSubject<number>(0);\n  gridCols = new BehaviorSubject<number>(0);\n  altGridRows = new BehaviorSubject<number>(0);\n  altGridCols = new BehaviorSubject<number>(0);\n  numberPages = new BehaviorSubject<number>(0);\n  currentStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  showMiniView = new BehaviorSubject<boolean>(false);\n  nStream = new BehaviorSubject<MediaStream | null>(null);\n  defer_receive = new BehaviorSubject<boolean>(false);\n  allAudioStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  remoteScreenStream = new BehaviorSubject<Stream[]>([]);\n  screenProducer = new BehaviorSubject<Producer | null>(null);\n  gotAllVids = new BehaviorSubject<boolean>(false);\n  paginationHeightWidth = new BehaviorSubject<number>(40);\n  paginationDirection = new BehaviorSubject<'horizontal' | 'vertical'>('horizontal');\n  gridSizes = new BehaviorSubject<GridSizes>({\n    gridWidth: 0,\n    gridHeight: 0,\n    altGridWidth: 0,\n    altGridHeight: 0,\n  });\n  screenForceFullDisplay = new BehaviorSubject<boolean>(false);\n  mainGridStream = new BehaviorSubject<CustomMediaComponent[]>([]);\n  otherGridStreams = new BehaviorSubject<CustomMediaComponent[][]>([]);\n  audioOnlyStreams = new BehaviorSubject<CustomMediaComponent[]>([]);\n  videoInputs = new BehaviorSubject<MediaDeviceInfo[]>([]);\n  audioInputs = new BehaviorSubject<MediaDeviceInfo[]>([]);\n  meetingProgressTime = new BehaviorSubject<string>('00:00:00');\n  meetingElapsedTime = new BehaviorSubject<number>(0);\n  ref_participants = new BehaviorSubject<Participant[]>([]);\n\n  updateValidated = (value: boolean) => {\n    this.validated.next(value);\n  };\n\n  updateSocket = (value: Socket) => {\n    this.socket.next(value);\n  };\n\n  updateDevice = (value: Device | null) => {\n    this.device.next(value);\n  };\n\n  updateRoomData = (value: ResponseJoinRoom | null) => {\n    this.roomData.next(value);\n  };\n\n  updateApiKey = (value: string) => {\n    this.apiKey.next(value);\n  };\n\n  updateApiUserName = (value: string) => {\n    this.apiUserName.next(value);\n  };\n\n  updateApiToken = (value: string) => {\n    this.apiToken.next(value);\n  };\n\n  updateLink = (value: string) => {\n    this.link.next(value);\n  };\n\n  updateRoomName = (value: string) => {\n    this.roomName.next(value);\n  };\n\n  updateMember = (value: string) => {\n    this.member.next(value);\n  };\n\n  updateAdminPasscode = (value: string) => {\n    this.adminPasscode.next(value);\n  };\n\n  updateIslevel = (value: string) => {\n    this.islevel.next(value);\n  };\n\n  updateCoHost = (value: string) => {\n    this.coHost.next(value);\n  };\n\n  updateCoHostResponsibility = (value: CoHostResponsibility[]) => {\n    this.coHostResponsibility.next(value);\n  };\n\n  updateYouAreCoHost = (value: boolean) => {\n    this.youAreCoHost.next(value);\n  };\n\n  updateYouAreHost = (value: boolean) => {\n    this.youAreHost.next(value);\n  };\n\n  updateConfirmedToRecord = (value: boolean) => {\n    this.confirmedToRecord.next(value);\n  };\n\n  updateMeetingDisplayType = (value: string) => {\n    this.meetingDisplayType.next(value);\n  };\n\n  updateMeetingVideoOptimized = (value: boolean) => {\n    this.meetingVideoOptimized.next(value);\n  };\n\n  updateEventType = (value: EventType) => {\n    this.eventType.next(value);\n  };\n\n  updateParticipants = (value: Participant[]) => {\n    this.participants.next(value);\n    this.participantsCounter.next(value.length);\n    this.filteredParticipants.next(this.participants.value);\n  };\n\n  updateFilteredParticipants = (value: Participant[]) => {\n    this.filteredParticipants.next(value);\n  };\n\n  updateParticipantsCounter = (value: number) => {\n    this.participantsCounter.next(value);\n  };\n\n  updateParticipantsFilter = (value: string) => {\n    this.participantsFilter.next(value);\n  };\n\n  updateConsume_sockets = (value: ConsumeSocket[]) => {\n    this.consume_sockets.next(value);\n  };\n\n  updateRtpCapabilities = (value: RtpCapabilities | null) => {\n    this.rtpCapabilities.next(value);\n  };\n\n  updateRoomRecvIPs = (value: string[]) => {\n    this.roomRecvIPs.next(value);\n  };\n\n  updateMeetingRoomParams = (value: MeetingRoomParams | null) => {\n    this.meetingRoomParams.next(value);\n  };\n\n  updateItemPageLimit = (value: number) => {\n    this.itemPageLimit.next(value);\n  };\n\n  updateAudioOnlyRoom = (value: boolean) => {\n    this.audioOnlyRoom.next(value);\n  };\n\n  updateAddForBasic = (value: boolean) => {\n    this.addForBasic.next(value);\n  };\n\n  updateScreenPageLimit = (value: number) => {\n    this.screenPageLimit.next(value);\n  };\n\n  updateShareScreenStarted = (value: boolean) => {\n    this.shareScreenStarted.next(value);\n  };\n\n  updateShared = (value: boolean) => {\n    this.shared.next(value);\n    this.screenShareActive.next(value);\n    if (value) {\n      setTimeout(async () => {\n        window.dispatchEvent(new Event('resize'));\n      }, 2000);\n    }\n  };\n\n  updateTargetOrientation = (value: string) => {\n    this.targetOrientation.next(value);\n  };\n\n  updateTargetResolution = (value: string) => {\n    this.targetResolution.next(value);\n  };\n\n  updateTargetResolutionHost = (value: string) => {\n    this.targetResolutionHost.next(value);\n  };\n\n  updateVidCons = (value: VidCons) => {\n    this.vidCons.next(value);\n  };\n\n  updateFrameRate = (value: number) => {\n    this.frameRate.next(value);\n  };\n\n  updateHParams = (value: HParamsType) => {\n    this.hParams.next(value);\n  };\n\n  updateVParams = (value: VParamsType) => {\n    this.vParams.next(value);\n  };\n\n  updateScreenParams = (value: ScreenParamsType) => {\n    this.screenParams.next(value);\n  };\n\n  updateAParams = (value: AParamsType) => {\n    this.aParams.next(value);\n  };\n\n  updateRecordingAudioPausesLimit = (value: number) => {\n    this.recordingAudioPausesLimit.next(value);\n  };\n\n  updateRecordingAudioPausesCount = (value: number) => {\n    this.recordingAudioPausesCount.next(value);\n  };\n\n  updateRecordingAudioSupport = (value: boolean) => {\n    this.recordingAudioSupport.next(value);\n  };\n\n  updateRecordingAudioPeopleLimit = (value: number) => {\n    this.recordingAudioPeopleLimit.next(value);\n  };\n\n  updateRecordingAudioParticipantsTimeLimit = (value: number) => {\n    this.recordingAudioParticipantsTimeLimit.next(value);\n  };\n\n  updateRecordingVideoPausesCount = (value: number) => {\n    this.recordingVideoPausesCount.next(value);\n  };\n\n  updateRecordingVideoPausesLimit = (value: number) => {\n    this.recordingVideoPausesLimit.next(value);\n  };\n\n  updateRecordingVideoSupport = (value: boolean) => {\n    this.recordingVideoSupport.next(value);\n  };\n\n  updateRecordingVideoPeopleLimit = (value: number) => {\n    this.recordingVideoPeopleLimit.next(value);\n  };\n\n  updateRecordingVideoParticipantsTimeLimit = (value: number) => {\n    this.recordingVideoParticipantsTimeLimit.next(value);\n  };\n\n  updateRecordingAllParticipantsSupport = (value: boolean) => {\n    this.recordingAllParticipantsSupport.next(value);\n  };\n\n  updateRecordingVideoParticipantsSupport = (value: boolean) => {\n    this.recordingVideoParticipantsSupport.next(value);\n  };\n\n  updateRecordingAllParticipantsFullRoomSupport = (value: boolean) => {\n    this.recordingAllParticipantsFullRoomSupport.next(value);\n  };\n\n  updateRecordingVideoParticipantsFullRoomSupport = (value: boolean) => {\n    this.recordingVideoParticipantsFullRoomSupport.next(value);\n  };\n\n  updateRecordingPreferredOrientation = (value: string) => {\n    this.recordingPreferredOrientation.next(value);\n  };\n\n  updateRecordingSupportForOtherOrientation = (value: boolean) => {\n    this.recordingSupportForOtherOrientation.next(value);\n  };\n\n  updateRecordingMultiFormatsSupport = (value: boolean) => {\n    this.recordingMultiFormatsSupport.next(value);\n  };\n\n  updateUserRecordingParams = (value: UserRecordingParams) => {\n    this.userRecordingParams.next(value);\n  };\n\n  updateCanRecord = (value: boolean) => {\n    this.canRecord.next(value);\n  };\n\n  updateStartReport = (value: boolean) => {\n    this.startReport.next(value);\n  };\n\n  updateEndReport = (value: boolean) => {\n    this.endReport.next(value);\n  };\n\n  updateRecordTimerInterval = (value: NodeJS.Timeout | null) => {\n    this.recordTimerInterval.next(value);\n  };\n\n  updateRecordStartTime = (value: number) => {\n    this.recordStartTime.next(value);\n  };\n\n  updateRecordElapsedTime = (value: number) => {\n    this.recordElapsedTime.next(value);\n  };\n\n  updateIsTimerRunning = (value: boolean) => {\n    this.isTimerRunning.next(value);\n  };\n\n  updateCanPauseResume = (value: boolean) => {\n    this.canPauseResume.next(value);\n  };\n\n  updateRecordChangeSeconds = (value: number) => {\n    this.recordChangeSeconds.next(value);\n  };\n\n  updatePauseLimit = (value: number) => {\n    this.pauseLimit.next(value);\n  };\n\n  updatePauseRecordCount = (value: number) => {\n    this.pauseRecordCount.next(value);\n  };\n\n  updateCanLaunchRecord = (value: boolean) => {\n    this.canLaunchRecord.next(value);\n  };\n\n  updateStopLaunchRecord = (value: boolean) => {\n    this.stopLaunchRecord.next(value);\n  };\n\n  updateParticipantsAll = (value: Participant[]) => {\n    this.participantsAll.next(value);\n  };\n\n  updateFirstAll = (value: boolean) => {\n    this.firstAll.next(value);\n  };\n\n  updateUpdateMainWindow = (value: boolean) => {\n    this.updateMainWindow.next(value);\n  };\n\n  updateFirst_round = (value: boolean) => {\n    this.first_round.next(value);\n  };\n\n  updateLandScaped = (value: boolean) => {\n    this.landScaped.next(value);\n  };\n\n  updateLock_screen = (value: boolean) => {\n    this.lock_screen.next(value);\n  };\n\n  updateScreenId = (value: string) => {\n    this.screenId.next(value);\n  };\n\n  updateAllVideoStreams = (value: (Participant | Stream)[]) => {\n    this.allVideoStreams.next(value);\n  };\n\n  updateNewLimitedStreams = (value: (Participant | Stream)[]) => {\n    this.newLimitedStreams.next(value);\n  };\n\n  updateNewLimitedStreamsIDs = (value: string[]) => {\n    this.newLimitedStreamsIDs.next(value);\n  };\n\n  updateActiveSounds = (value: string[]) => {\n    this.activeSounds.next(value);\n  };\n\n  updateScreenShareIDStream = (value: string) => {\n    this.screenShareIDStream.next(value);\n  };\n\n  updateScreenShareNameStream = (value: string) => {\n    this.screenShareNameStream.next(value);\n  };\n\n  updateAdminIDStream = (value: string) => {\n    this.adminIDStream.next(value);\n  };\n\n  updateAdminNameStream = (value: string) => {\n    this.adminNameStream.next(value);\n  };\n\n  updateYouYouStream = (value: (Participant | Stream)[]) => {\n    this.youYouStream.next(value);\n  };\n\n  updateYouYouStreamIDs = (value: string[]) => {\n    this.youYouStreamIDs.next(value);\n  };\n\n  updateLocalStream = (value: MediaStream | null) => {\n    this.localStream.next(value);\n  };\n\n  updateRecordStarted = (value: boolean) => {\n    this.recordStarted.next(value);\n  };\n\n  updateRecordResumed = (value: boolean) => {\n    this.recordResumed.next(value);\n  };\n\n  updateRecordPaused = (value: boolean) => {\n    this.recordPaused.next(value);\n  };\n\n  updateRecordStopped = (value: boolean) => {\n    this.recordStopped.next(value);\n  };\n\n  updateAdminRestrictSetting = (value: boolean) => {\n    this.adminRestrictSetting.next(value);\n  };\n\n  updateVideoRequestState = (value: string | null) => {\n    this.videoRequestState.next(value);\n  };\n\n  updateVideoRequestTime = (value: number) => {\n    this.videoRequestTime.next(value);\n  };\n\n  updateVideoAction = (value: boolean) => {\n    this.videoAction.next(value);\n  };\n\n  updateLocalStreamVideo = (value: MediaStream | null) => {\n    this.localStreamVideo.next(value);\n  };\n\n  updateUserDefaultVideoInputDevice = (value: string) => {\n    this.userDefaultVideoInputDevice.next(value);\n  };\n\n  updateCurrentFacingMode = (value: string) => {\n    this.currentFacingMode.next(value);\n  };\n\n  updatePrevFacingMode = (value: string) => {\n    this.prevFacingMode.next(value);\n  };\n\n  updateDefVideoID = (value: string) => {\n    this.defVideoID.next(value);\n  };\n\n  updateAllowed = (value: boolean) => {\n    this.allowed.next(value);\n  };\n\n  updateDispActiveNames = (value: string[]) => {\n    this.dispActiveNames.next(value);\n  };\n\n  updateP_dispActiveNames = (value: string[]) => {\n    this.p_dispActiveNames.next(value);\n  };\n\n  updateActiveNames = (value: string[]) => {\n    this.activeNames.next(value);\n  };\n\n  updatePrevActiveNames = (value: string[]) => {\n    this.prevActiveNames.next(value);\n  };\n\n  updateP_activeNames = (value: string[]) => {\n    this.p_activeNames.next(value);\n  };\n\n  updateMembersReceived = (value: boolean) => {\n    this.membersReceived.next(value);\n  };\n\n  updateDeferScreenReceived = (value: boolean) => {\n    this.deferScreenReceived.next(value);\n  };\n\n  updateHostFirstSwitch = (value: boolean) => {\n    this.hostFirstSwitch.next(value);\n  };\n\n  updateMicAction = (value: boolean) => {\n    this.micAction.next(value);\n  };\n\n  updateScreenAction = (value: boolean) => {\n    this.screenAction.next(value);\n  };\n\n  updateChatAction = (value: boolean) => {\n    this.chatAction.next(value);\n  };\n\n  updateAudioRequestState = (value: string | null) => {\n    this.audioRequestState.next(value);\n  };\n\n  updateScreenRequestState = (value: string | null) => {\n    this.screenRequestState.next(value);\n  };\n\n  updateChatRequestState = (value: string | null) => {\n    this.chatRequestState.next(value);\n  };\n\n  updateAudioRequestTime = (value: number) => {\n    this.audioRequestTime.next(value);\n  };\n\n  updateScreenRequestTime = (value: number) => {\n    this.screenRequestTime.next(value);\n  };\n\n  updateChatRequestTime = (value: number) => {\n    this.chatRequestTime.next(value);\n  };\n\n  updateOldSoundIds = (value: string[]) => {\n    this.oldSoundIds.next(value);\n  };\n\n  updateHostLabel = (value: string) => {\n    this.hostLabel.next(value);\n  };\n\n  updateMainScreenFilled = (value: boolean) => {\n    this.mainScreenFilled.next(value);\n  };\n\n  updateLocalStreamScreen = (value: MediaStream | null) => {\n    this.localStreamScreen.next(value);\n  };\n\n  updateScreenAlreadyOn = (value: boolean) => {\n    this.screenAlreadyOn.next(value);\n  };\n\n  updateChatAlreadyOn = (value: boolean) => {\n    this.chatAlreadyOn.next(value);\n  };\n\n  updateRedirectURL = (value: string) => {\n    this.redirectURL.next(value);\n  };\n\n  updateOldAllStreams = (value: (Participant | Stream)[]) => {\n    this.oldAllStreams.next(value);\n  };\n\n  updateAdminVidID = (value: string) => {\n    this.adminVidID.next(value);\n  };\n\n  updateStreamNames = (value: Stream[]) => {\n    this.streamNames.next(value);\n  };\n\n  updateNon_alVideoStreams = (value: Participant[]) => {\n    this.non_alVideoStreams.next(value);\n  };\n\n  updateSortAudioLoudness = (value: boolean) => {\n    this.sortAudioLoudness.next(value);\n  };\n\n  updateAudioDecibels = (value: AudioDecibels[]) => {\n    this.audioDecibels.next(value);\n  };\n\n  updateMixed_alVideoStreams = (value: (Participant | Stream)[]) => {\n    this.mixed_alVideoStreams.next(value);\n  };\n\n  updateNon_alVideoStreams_muted = (value: Participant[]) => {\n    this.non_alVideoStreams_muted.next(value);\n  };\n\n  updatePaginatedStreams = (value: (Participant | Stream)[][]) => {\n    this.paginatedStreams.next(value);\n  };\n\n  updateLocalStreamAudio = (value: MediaStream | null) => {\n    this.localStreamAudio.next(value);\n  };\n\n  updateDefAudioID = (value: string) => {\n    this.defAudioID.next(value);\n  };\n\n  updateUserDefaultAudioInputDevice = (value: string) => {\n    this.userDefaultAudioInputDevice.next(value);\n  };\n\n  updateUserDefaultAudioOutputDevice = (value: string) => {\n    this.userDefaultAudioOutputDevice.next(value);\n  };\n\n  updatePrevAudioInputDevice = (value: string) => {\n    this.prevAudioInputDevice.next(value);\n  };\n\n  updatePrevVideoInputDevice = (value: string) => {\n    this.prevVideoInputDevice.next(value);\n  };\n\n  updateAudioPaused = (value: boolean) => {\n    this.audioPaused.next(value);\n  };\n\n  updateMainScreenPerson = (value: string) => {\n    this.mainScreenPerson.next(value);\n  };\n\n  updateAdminOnMainScreen = (value: boolean) => {\n    this.adminOnMainScreen.next(value);\n  };\n\n  updateScreenStates = (value: ScreenState[]) => {\n    this.screenStates.next(value);\n  };\n\n  updatePrevScreenStates = (value: ScreenState[]) => {\n    this.prevScreenStates.next(value);\n  };\n\n  updateUpdateDateState = (value: number | null) => {\n    this.updateDateState.next(value);\n  };\n\n  updateLastUpdate = (value: number | null) => {\n    this.lastUpdate.next(value);\n  };\n\n  updateNForReadjustRecord = (value: number) => {\n    this.nForReadjustRecord.next(value);\n  };\n\n  updateFixedPageLimit = (value: number) => {\n    this.fixedPageLimit.next(value);\n  };\n\n  updateRemoveAltGrid = (value: boolean) => {\n    this.removeAltGrid.next(value);\n  };\n\n  updateNForReadjust = (value: number) => {\n    this.nForReadjust.next(value);\n  };\n\n  updateLastReorderTime = (value: number) => {\n    this.lastReorderTime.next(value);\n  };\n\n  updateAudStreamNames = (value: Stream[]) => {\n    this.audStreamNames.next(value);\n  };\n\n  updateCurrentUserPage = (value: number) => {\n    this.currentUserPage.next(value);\n  };\n\n  updateMainHeightWidth = (value: number) => {\n    this.mainHeightWidth.next(value);\n  };\n\n  updatePrevMainHeightWidth = (value: number) => {\n    this.prevMainHeightWidth.next(value);\n  };\n\n  updatePrevDoPaginate = (value: boolean) => {\n    this.prevDoPaginate.next(value);\n  };\n\n  updateDoPaginate = (value: boolean) => {\n    this.doPaginate.next(value);\n  };\n\n  updateShareEnded = (value: boolean) => {\n    this.shareEnded.next(value);\n  };\n\n  updateLStreams = (value: (Participant | Stream)[]) => {\n    this.lStreams.next(value);\n  };\n\n  updateChatRefStreams = (value: (Participant | Stream)[]) => {\n    this.chatRefStreams.next(value);\n  };\n\n  updateControlHeight = (value: number) => {\n    this.controlHeight.next(value);\n  };\n\n  updateIsWideScreen = (value: boolean) => {\n    this.isWideScreen.next(value);\n  };\n\n  updateIsMediumScreen = (value: boolean) => {\n    this.isMediumScreen.next(value);\n  };\n\n  updateIsSmallScreen = (value: boolean) => {\n    this.isSmallScreen.next(value);\n  };\n\n  updateAddGrid = (value: boolean) => {\n    this.addGrid.next(value);\n  };\n\n  updateAddAltGrid = (value: boolean) => {\n    this.addAltGrid.next(value);\n  };\n\n  updateGridRows = (value: number) => {\n    this.gridRows.next(value);\n  };\n\n  updateGridCols = (value: number) => {\n    this.gridCols.next(value);\n  };\n\n  updateAltGridRows = (value: number) => {\n    this.altGridRows.next(value);\n  };\n\n  updateAltGridCols = (value: number) => {\n    this.altGridCols.next(value);\n  };\n\n  updateNumberPages = (value: number) => {\n    this.numberPages.next(value);\n  };\n\n  updateCurrentStreams = (value: (Participant | Stream)[]) => {\n    this.currentStreams.next(value);\n  };\n\n  updateShowMiniView = (value: boolean) => {\n    this.showMiniView.next(value);\n  };\n\n  updateNStream = (value: MediaStream | null) => {\n    this.nStream.next(value);\n  };\n\n  updateDefer_receive = (value: boolean) => {\n    this.defer_receive.next(value);\n  };\n\n  updateAllAudioStreams = (value: (Participant | Stream)[]) => {\n    this.allAudioStreams.next(value);\n  };\n\n  updateRemoteScreenStream = (value: Stream[]) => {\n    this.remoteScreenStream.next(value);\n  };\n\n  updateScreenProducer = (value: Producer | null) => {\n    this.screenProducer.next(value);\n  };\n\n  updateGotAllVids = (value: boolean) => {\n    this.gotAllVids.next(value);\n  };\n\n  updatePaginationHeightWidth = (value: number) => {\n    this.paginationHeightWidth.next(value);\n  };\n\n  updatePaginationDirection = (value: 'horizontal' | 'vertical') => {\n    this.paginationDirection.next(value);\n  };\n\n  updateGridSizes = (value: GridSizes) => {\n    this.gridSizes.next(value);\n  };\n\n  updateScreenForceFullDisplay = (value: boolean) => {\n    this.screenForceFullDisplay.next(value);\n  };\n\n  updateMainGridStream = (value: CustomMediaComponent[]) => {\n    this.mainGridStream.next(value);\n  };\n\n  updateOtherGridStreams = (value: CustomMediaComponent[][]) => {\n    this.otherGridStreams.next(value);\n  };\n\n  updateAudioOnlyStreams = (value: CustomMediaComponent[]) => {\n    this.audioOnlyStreams.next(value);\n  };\n\n  updateVideoInputs = (value: MediaDeviceInfo[]) => {\n    this.videoInputs.next(value);\n  };\n\n  updateAudioInputs = (value: MediaDeviceInfo[]) => {\n    this.audioInputs.next(value);\n  };\n\n  updateMeetingProgressTime = (value: string) => {\n    this.meetingProgressTime.next(value);\n  };\n\n  updateMeetingElapsedTime = (value: number) => {\n    this.meetingElapsedTime.next(value);\n  };\n\n  updateRef_participants = (value: Participant[]) => {\n    this.ref_participants.next(value);\n  };\n\n  // Messages\n  messages = new BehaviorSubject<Message[]>([]);\n  startDirectMessage = new BehaviorSubject<boolean>(false);\n  directMessageDetails = new BehaviorSubject<Participant | null>(null);\n  showMessagesBadge = new BehaviorSubject<boolean>(false);\n\n  // Event Settings\n  audioSetting = new BehaviorSubject<string>('allow');\n  videoSetting = new BehaviorSubject<string>('allow');\n  screenshareSetting = new BehaviorSubject<string>('allow');\n  chatSetting = new BehaviorSubject<string>('allow');\n\n  // Display Settings\n  displayOption = new BehaviorSubject<string>('media');\n  autoWave = new BehaviorSubject<boolean>(true);\n  forceFullDisplay = new BehaviorSubject<boolean>(true);\n  prevForceFullDisplay = new BehaviorSubject<boolean>(false);\n  prevMeetingDisplayType = new BehaviorSubject<string>('video');\n\n  // Waiting Room\n  waitingRoomFilter = new BehaviorSubject<string>('');\n  waitingRoomList = new BehaviorSubject<WaitingRoomParticipant[]>([]);\n  waitingRoomCounter = new BehaviorSubject<number>(0);\n  filteredWaitingRoomList = new BehaviorSubject<WaitingRoomParticipant[]>([]);\n\n  // Requests\n  requestFilter = new BehaviorSubject<string>('');\n  requestList = new BehaviorSubject<Request[]>([]);\n  requestCounter = new BehaviorSubject<number>(0);\n  filteredRequestList = new BehaviorSubject<Request[]>([]);\n\n  // Total Requests and Waiting Room\n  totalReqWait = new BehaviorSubject<number>(0);\n\n  // Alerts\n  alertVisible = new BehaviorSubject<boolean>(false);\n  alertMessage = new BehaviorSubject<string>('');\n  alertType = new BehaviorSubject<'success' | 'danger'>('success');\n  alertDuration = new BehaviorSubject<number>(3000);\n\n  // Progress Timer\n  progressTimerVisible = new BehaviorSubject<boolean>(true);\n  progressTimerValue = new BehaviorSubject<number>(0);\n\n  // Menu Modals\n  isMenuModalVisible = new BehaviorSubject<boolean>(false);\n  isRecordingModalVisible = new BehaviorSubject<boolean>(false);\n  isSettingsModalVisible = new BehaviorSubject<boolean>(false);\n  isRequestsModalVisible = new BehaviorSubject<boolean>(false);\n  isWaitingModalVisible = new BehaviorSubject<boolean>(false);\n  isCoHostModalVisible = new BehaviorSubject<boolean>(false);\n  isMediaSettingsModalVisible = new BehaviorSubject<boolean>(false);\n  isDisplaySettingsModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Other Modals\n  isParticipantsModalVisible = new BehaviorSubject<boolean>(false);\n  isMessagesModalVisible = new BehaviorSubject<boolean>(false);\n  isConfirmExitModalVisible = new BehaviorSubject<boolean>(false);\n  isConfirmHereModalVisible = new BehaviorSubject<boolean>(false);\n  isShareEventModalVisible = new BehaviorSubject<boolean>(false);\n  isLoadingModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Recording Options\n  recordingMediaOptions = new BehaviorSubject<string>('video');\n  recordingAudioOptions = new BehaviorSubject<string>('all');\n  recordingVideoOptions = new BehaviorSubject<string>('all');\n  recordingVideoType = new BehaviorSubject<string>('fullDisplay');\n  recordingVideoOptimized = new BehaviorSubject<boolean>(false);\n  recordingDisplayType = new BehaviorSubject<'video' | 'media' | 'all'>('video');\n  recordingAddHLS = new BehaviorSubject<boolean>(true);\n  recordingNameTags = new BehaviorSubject<boolean>(true);\n  recordingBackgroundColor = new BehaviorSubject<string>('#83c0e9');\n  recordingNameTagsColor = new BehaviorSubject<string>('#ffffff');\n  recordingAddText = new BehaviorSubject<boolean>(false);\n  recordingCustomText = new BehaviorSubject<string>('Add Text');\n  recordingCustomTextPosition = new BehaviorSubject<string>('top');\n  recordingCustomTextColor = new BehaviorSubject<string>('#ffffff');\n  recordingOrientationVideo = new BehaviorSubject<string>('landscape');\n  clearedToResume = new BehaviorSubject<boolean>(true);\n  clearedToRecord = new BehaviorSubject<boolean>(true);\n  recordState = new BehaviorSubject<string>('green');\n  showRecordButtons = new BehaviorSubject<boolean>(false);\n  recordingProgressTime = new BehaviorSubject<string>('00:00:00');\n  audioSwitching = new BehaviorSubject<boolean>(false);\n  videoSwitching = new BehaviorSubject<boolean>(false);\n\n  // Media States\n  videoAlreadyOn = new BehaviorSubject<boolean>(false);\n  audioAlreadyOn = new BehaviorSubject<boolean>(false);\n\n  componentSizes = new BehaviorSubject<ComponentSizes>({\n    mainHeight: 0,\n    otherHeight: 0,\n    mainWidth: 0,\n    otherWidth: 0,\n  });\n\n  // Permissions\n  hasCameraPermission = new BehaviorSubject<boolean>(false);\n  hasAudioPermission = new BehaviorSubject<boolean>(false);\n\n  // Transports\n  transportCreated = new BehaviorSubject<boolean>(false);\n  transportCreatedVideo = new BehaviorSubject<boolean>(false);\n  transportCreatedAudio = new BehaviorSubject<boolean>(false);\n  transportCreatedScreen = new BehaviorSubject<boolean>(false);\n  producerTransport = new BehaviorSubject<Transport | null>(null);\n  videoProducer = new BehaviorSubject<Producer | null>(null);\n  params = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  videoParams = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  audioParams = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  audioProducer = new BehaviorSubject<Producer | null>(null);\n  consumerTransports = new BehaviorSubject<TransportType[]>([]);\n  consumingTransports = new BehaviorSubject<string[]>([]);\n\n  // Polls\n  polls = new BehaviorSubject<Poll[]>([]);\n  poll = new BehaviorSubject<Poll | null>(null);\n  isPollModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Background\n  customImage = new BehaviorSubject<string>('');\n  selectedImage = new BehaviorSubject<string>('');\n  segmentVideo = new BehaviorSubject<MediaStream | null>(null);\n  selfieSegmentation = new BehaviorSubject<SelfieSegmentation | null>(null);\n  pauseSegmentation = new BehaviorSubject<boolean>(false);\n  processedStream = new BehaviorSubject<MediaStream | null>(null);\n  keepBackground = new BehaviorSubject<boolean>(false);\n  backgroundHasChanged = new BehaviorSubject<boolean>(false);\n  virtualStream = new BehaviorSubject<MediaStream | null>(null);\n  mainCanvas = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  prevKeepBackground = new BehaviorSubject<boolean>(false);\n  appliedBackground = new BehaviorSubject<boolean>(false);\n  isBackgroundModalVisible = new BehaviorSubject<boolean>(false);\n  autoClickBackground = new BehaviorSubject<boolean>(false);\n\n  // Breakout Rooms\n  breakoutRooms = new BehaviorSubject<BreakoutParticipant[][]>([]);\n  currentRoomIndex = new BehaviorSubject<number>(0);\n  canStartBreakout = new BehaviorSubject<boolean>(false);\n  breakOutRoomStarted = new BehaviorSubject<boolean>(false);\n  breakOutRoomEnded = new BehaviorSubject<boolean>(false);\n  hostNewRoom = new BehaviorSubject<number>(-1);\n  limitedBreakRoom = new BehaviorSubject<BreakoutParticipant[]>([]);\n  mainRoomsLength = new BehaviorSubject<number>(0);\n  memberRoom = new BehaviorSubject<number>(-1);\n  isBreakoutRoomsModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Whiteboard\n  whiteboardUsers = new BehaviorSubject<WhiteboardUser[]>([]);\n  currentWhiteboardIndex = new BehaviorSubject<number>(0);\n  canStartWhiteboard = new BehaviorSubject<boolean>(false);\n  whiteboardStarted = new BehaviorSubject<boolean>(false);\n  whiteboardEnded = new BehaviorSubject<boolean>(false);\n  whiteboardLimit = new BehaviorSubject<number>(4);\n  isWhiteboardModalVisible = new BehaviorSubject<boolean>(false);\n  isConfigureWhiteboardModalVisible = new BehaviorSubject<boolean>(false);\n  shapes = new BehaviorSubject<Shape[]>([]);\n  useImageBackground = new BehaviorSubject<boolean>(true);\n  redoStack = new BehaviorSubject<Shape[]>([]);\n  undoStack = new BehaviorSubject<string[]>([]);\n  canvasStream = new BehaviorSubject<MediaStream | null>(null);\n  canvasWhiteboard = new BehaviorSubject<HTMLCanvasElement | null>(null);\n\n  // Screenboard\n  canvasScreenboard = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  processedScreenStream = new BehaviorSubject<MediaStream | null>(null);\n  annotateScreenStream = new BehaviorSubject<boolean>(false);\n  mainScreenCanvas = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  isScreenboardModalVisible = new BehaviorSubject<boolean>(false);\n\n  //state variables for the control buttons\n  micActive = new BehaviorSubject<boolean>(\n    this.audioAlreadyOn.value ? this.audioAlreadyOn.value : false,\n  );\n  videoActive = new BehaviorSubject<boolean>(\n    this.videoAlreadyOn.value ? this.videoAlreadyOn.value : false,\n  );\n  screenShareActive = new BehaviorSubject<boolean>(false);\n  endCallActive = new BehaviorSubject<boolean>(false);\n  participantsActive = new BehaviorSubject<boolean>(false);\n  menuActive = new BehaviorSubject<boolean>(false);\n  commentsActive = new BehaviorSubject<boolean>(false);\n\n  // Update functions\n  updateMessages = (value: Message[]) => {\n    this.messages.next(value);\n  };\n\n  updateStartDirectMessage = (value: boolean) => {\n    this.startDirectMessage.next(value);\n  };\n\n  updateDirectMessageDetails = (value: Participant | null) => {\n    this.directMessageDetails.next(value);\n  };\n\n  updateShowMessagesBadge = (value: boolean) => {\n    this.showMessagesBadge.next(value);\n  };\n\n  updateAudioSetting = (value: string) => {\n    this.audioSetting.next(value);\n  };\n\n  updateVideoSetting = (value: string) => {\n    this.videoSetting.next(value);\n  };\n\n  updateScreenshareSetting = (value: string) => {\n    this.screenshareSetting.next(value);\n  };\n\n  updateChatSetting = (value: string) => {\n    this.chatSetting.next(value);\n  };\n\n  updateDisplayOption = (value: string) => {\n    this.displayOption.next(value);\n  };\n\n  updateAutoWave = (value: boolean) => {\n    this.autoWave.next(value);\n  };\n\n  updateForceFullDisplay = (value: boolean) => {\n    this.forceFullDisplay.next(value);\n  };\n\n  updatePrevForceFullDisplay = (value: boolean) => {\n    this.prevForceFullDisplay.next(value);\n  };\n\n  updatePrevMeetingDisplayType = (value: string) => {\n    this.prevMeetingDisplayType.next(value);\n  };\n\n  updateWaitingRoomCounter = (value: number) => {\n    this.waitingRoomCounter.next(value);\n  };\n\n  updateWaitingRoomFilter = (value: string) => {\n    this.waitingRoomFilter.next(value);\n  };\n\n  updateWaitingRoomList = (value: WaitingRoomParticipant[]) => {\n    this.waitingRoomList.next(value);\n    this.filteredWaitingRoomList.next(value);\n    this.waitingRoomCounter.next(value.length);\n  };\n\n  onWaitingRoomClose = () => {\n    this.updateIsWaitingModalVisible(false);\n  };\n\n  updateRequestCounter = (value: number) => {\n    this.requestCounter.next(value);\n  };\n\n  updateRequestFilter = (value: string) => {\n    this.requestFilter.next(value);\n  };\n\n  updateRequestList = (value: Request[]) => {\n    this.requestList.next(value);\n    this.filteredRequestList.next(value);\n    this.requestCounter.next(value.length);\n  };\n\n  onRequestClose = () => {\n    this.updateIsRequestsModalVisible(false);\n  };\n\n  updateTotalReqWait = (value: number) => {\n    this.totalReqWait.next(value);\n  };\n\n  updateAlertVisible = (value: boolean) => {\n    this.alertVisible.next(value);\n  };\n\n  updateAlertMessage = (value: string) => {\n    this.alertMessage.next(value);\n  };\n\n  updateAlertType = (value: 'success' | 'danger') => {\n    this.alertType.next(value);\n  };\n\n  updateAlertDuration = (value: number) => {\n    this.alertDuration.next(value);\n  };\n\n  updateProgressTimerVisible = (value: boolean) => {\n    this.progressTimerVisible.next(value);\n  };\n\n  updateProgressTimerValue = (value: number) => {\n    this.progressTimerValue.next(value);\n  };\n\n  updateIsMenuModalVisible = (value: boolean) => {\n    this.isMenuModalVisible.next(value);\n  };\n\n  updateIsRecordingModalVisible = (value: boolean) => {\n    this.isRecordingModalVisible.next(value);\n    if (value) {\n      this.updateConfirmedToRecord(false);\n    } else {\n      if (\n        this.clearedToRecord.getValue() &&\n        this.clearedToResume.getValue() &&\n        this.recordStarted.getValue()\n      ) {\n        this.updateShowRecordButtons(true);\n      }\n    }\n  };\n\n  updateIsSettingsModalVisible = (value: boolean) => {\n    this.isSettingsModalVisible.next(value);\n  };\n\n  updateIsRequestsModalVisible = (value: boolean) => {\n    this.isRequestsModalVisible.next(value);\n  };\n\n  updateIsWaitingModalVisible = (value: boolean) => {\n    this.isWaitingModalVisible.next(value);\n  };\n\n  updateIsCoHostModalVisible = (value: boolean) => {\n    this.isCoHostModalVisible.next(value);\n  };\n\n  updateIsMediaSettingsModalVisible = (value: boolean) => {\n    this.isMediaSettingsModalVisible.next(value);\n  };\n\n  updateIsDisplaySettingsModalVisible = (value: boolean) => {\n    this.isDisplaySettingsModalVisible.next(value);\n  };\n\n  updateIsParticipantsModalVisible = (value: boolean) => {\n    this.isParticipantsModalVisible.next(value);\n  };\n\n  updateIsMessagesModalVisible = (value: boolean) => {\n    this.isMessagesModalVisible.next(value);\n    if (!value) {\n      this.updateShowMessagesBadge(false);\n    }\n  };\n\n  updateIsConfirmExitModalVisible = (value: boolean) => {\n    this.isConfirmExitModalVisible.next(value);\n  };\n\n  updateIsConfirmHereModalVisible = (value: boolean) => {\n    this.isConfirmHereModalVisible.next(value);\n  };\n\n  updateIsLoadingModalVisible = (value: boolean) => {\n    this.isLoadingModalVisible.next(value);\n  };\n\n  updateIsShareEventModalVisible = (value: boolean) => {\n    this.isShareEventModalVisible.next(value);\n  };\n\n  updateRecordingMediaOptions = (value: string) => {\n    this.recordingMediaOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAudioOptions = (value: string) => {\n    this.recordingAudioOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoOptions = (value: string) => {\n    this.recordingVideoOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoType = (value: string) => {\n    this.recordingVideoType.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoOptimized = (value: boolean) => {\n    this.recordingVideoOptimized.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingDisplayType = (value: 'video' | 'media' | 'all') => {\n    this.recordingDisplayType.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAddHLS = (value: boolean) => {\n    this.recordingAddHLS.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAddText = (value: boolean) => {\n    this.recordingAddText.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomText = (value: string) => {\n    this.recordingCustomText.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomTextPosition = (value: string) => {\n    this.recordingCustomTextPosition.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomTextColor = (value: string) => {\n    this.recordingCustomTextColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingNameTags = (value: boolean) => {\n    this.recordingNameTags.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingBackgroundColor = (value: string) => {\n    this.recordingBackgroundColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingNameTagsColor = (value: string) => {\n    this.recordingNameTagsColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingOrientationVideo = (value: string) => {\n    this.recordingOrientationVideo.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateClearedToResume = (value: boolean) => {\n    this.clearedToResume.next(value);\n  };\n\n  updateClearedToRecord = (value: boolean) => {\n    this.clearedToRecord.next(value);\n  };\n\n  updateRecordState = (value: string) => {\n    if (this.recordStarted.value && !this.recordStopped.value) {\n      if (!this.recordPaused.value) {\n        this.recordState.next('red');\n      } else {\n        this.recordState.next('yellow');\n      }\n    } else {\n      this.recordState.next(value);\n    }\n    this.recordState.next(value);\n  };\n\n  updateShowRecordButtons = (value: boolean) => {\n    this.showRecordButtons.next(value);\n  };\n\n  updateRecordingProgressTime = (value: string) => {\n    this.recordingProgressTime.next(value);\n    this.updateRecordTimerWidget();\n  };\n\n  updateAudioSwitching = (value: boolean) => {\n    this.audioSwitching.next(value);\n  };\n\n  updateVideoSwitching = (value: boolean) => {\n    this.videoSwitching.next(value);\n  };\n\n  updateVideoAlreadyOn = (value: boolean) => {\n    this.videoAlreadyOn.next(value);\n    this.videoActive.next(value);\n  };\n\n  updateAudioAlreadyOn = (value: boolean) => {\n    this.audioAlreadyOn.next(value);\n    this.micActive.next(value);\n  };\n\n  updateComponentSizes = (sizes: ComponentSizes) => {\n    this.componentSizes.next(sizes);\n  };\n\n  updateHasCameraPermission = (value: boolean) => {\n    this.hasCameraPermission.next(value);\n  };\n\n  updateHasAudioPermission = (value: boolean) => {\n    this.hasAudioPermission.next(value);\n  };\n\n  requestPermissionCamera(): Promise<string> {\n    // Implement the request permission logic here\n    return Promise.resolve('granted');\n  }\n\n  requestPermissionAudio(): Promise<string> {\n    // Implement the request permission logic here\n    return Promise.resolve('granted');\n  }\n\n  updateTransportCreated = (value: boolean) => {\n    this.transportCreated.next(value);\n  };\n\n  updateTransportCreatedVideo = (value: boolean) => {\n    this.transportCreatedVideo.next(value);\n  };\n\n  updateTransportCreatedAudio = (value: boolean) => {\n    this.transportCreatedAudio.next(value);\n  };\n\n  updateTransportCreatedScreen = (value: boolean) => {\n    this.transportCreatedScreen.next(value);\n  };\n\n  updateProducerTransport = (value: Transport | null) => {\n    this.producerTransport.next(value);\n  };\n\n  updateVideoProducer = (value: Producer | null) => {\n    this.videoProducer.next(value);\n  };\n\n  updateParams = (value: ProducerOptions) => {\n    this.params.next(value);\n  };\n\n  updateVideoParams = (value: ProducerOptions) => {\n    this.videoParams.next(value);\n  };\n\n  updateAudioParams = (value: ProducerOptions) => {\n    this.audioParams.next(value);\n  };\n\n  updateAudioProducer = (value: Producer | null) => {\n    this.audioProducer.next(value);\n  };\n\n  updateConsumerTransports = (value: TransportType[]) => {\n    this.consumerTransports.next(value);\n  };\n\n  updateConsumingTransports = (value: string[]) => {\n    this.consumingTransports.next(value);\n  };\n\n  updatePolls = (value: Poll[]) => {\n    this.polls.next(value);\n  };\n\n  updatePoll = (value: Poll | null) => {\n    this.poll.next(value);\n  };\n\n  updateIsPollModalVisible = (value: boolean) => {\n    this.isPollModalVisible.next(value);\n  };\n\n  updateCustomImage = (value: string) => {\n    this.customImage.next(value);\n  };\n\n  updateSelectedImage = (value: string) => {\n    this.selectedImage.next(value);\n  };\n\n  updateSegmentVideo = (value: MediaStream | null) => {\n    this.segmentVideo.next(value);\n  };\n\n  updateSelfieSegmentation = (value: SelfieSegmentation | null) => {\n    this.selfieSegmentation.next(value);\n  };\n\n  updatePauseSegmentation = (value: boolean) => {\n    this.pauseSegmentation.next(value);\n  };\n\n  updateProcessedStream = (value: MediaStream | null) => {\n    this.processedStream.next(value);\n  };\n\n  updateKeepBackground = (value: boolean) => {\n    this.keepBackground.next(value);\n  };\n\n  updateBackgroundHasChanged = (value: boolean) => {\n    this.backgroundHasChanged.next(value);\n  };\n\n  updateVirtualStream = (value: MediaStream | null) => {\n    this.virtualStream.next(value);\n  };\n\n  updateMainCanvas = (value: HTMLCanvasElement | null) => {\n    this.mainCanvas.next(value);\n  };\n\n  updatePrevKeepBackground = (value: boolean) => {\n    this.prevKeepBackground.next(value);\n  };\n\n  updateAppliedBackground = (value: boolean) => {\n    this.appliedBackground.next(value);\n  };\n\n  updateIsBackgroundModalVisible = (value: boolean) => {\n    this.isBackgroundModalVisible.next(value);\n  };\n\n  updateAutoClickBackground = (value: boolean) => {\n    this.autoClickBackground.next(value);\n  };\n\n  updateBreakoutRooms = (value: BreakoutParticipant[][]) => {\n    this.breakoutRooms.next(value);\n  };\n\n  updateCurrentRoomIndex = (value: number) => {\n    this.currentRoomIndex.next(value);\n  };\n\n  updateCanStartBreakout = (value: boolean) => {\n    this.canStartBreakout.next(value);\n  };\n\n  updateBreakOutRoomStarted = (value: boolean) => {\n    this.breakOutRoomStarted.next(value);\n  };\n\n  updateBreakOutRoomEnded = (value: boolean) => {\n    this.breakOutRoomEnded.next(value);\n  };\n\n  updateHostNewRoom = (value: number) => {\n    this.hostNewRoom.next(value);\n  };\n\n  updateLimitedBreakRoom = (value: BreakoutParticipant[]) => {\n    this.limitedBreakRoom.next(value);\n  };\n\n  updateMainRoomsLength = (value: number) => {\n    this.mainRoomsLength.next(value);\n  };\n\n  updateMemberRoom = (value: number) => {\n    this.memberRoom.next(value);\n  };\n\n  updateIsBreakoutRoomsModalVisible = (value: boolean) => {\n    this.isBreakoutRoomsModalVisible.next(value);\n  };\n\n  updateWhiteboardUsers = (value: WhiteboardUser[]) => {\n    this.whiteboardUsers.next(value);\n  };\n\n  updateCurrentWhiteboardIndex = (value: number) => {\n    this.currentWhiteboardIndex.next(value);\n  };\n\n  updateCanStartWhiteboard = (value: boolean) => {\n    this.canStartWhiteboard.next(value);\n  };\n\n  updateWhiteboardStarted = (value: boolean) => {\n    this.whiteboardStarted.next(value);\n  };\n\n  updateWhiteboardEnded = (value: boolean) => {\n    this.whiteboardEnded.next(value);\n  };\n\n  updateWhiteboardLimit = (value: number) => {\n    this.whiteboardLimit.next(value);\n  };\n\n  updateIsWhiteboardModalVisible = (value: boolean) => {\n    this.isWhiteboardModalVisible.next(value);\n  };\n\n  updateIsConfigureWhiteboardModalVisible = (value: boolean) => {\n    this.isConfigureWhiteboardModalVisible.next(value);\n  };\n\n  updateShapes = (value: Shape[]) => {\n    this.shapes.next(value);\n  };\n\n  updateUseImageBackground = (value: boolean) => {\n    this.useImageBackground.next(value);\n  };\n\n  updateRedoStack = (value: Shape[]) => {\n    this.redoStack.next(value);\n  };\n\n  updateUndoStack = (value: string[]) => {\n    this.undoStack.next(value);\n  };\n\n  updateCanvasStream = (value: MediaStream | null) => {\n    this.canvasStream.next(value);\n  };\n\n  updateCanvasWhiteboard = (value: HTMLCanvasElement | null) => {\n    this.canvasWhiteboard.next(value);\n  };\n\n  updateCanvasScreenboard = (value: HTMLCanvasElement | null) => {\n    this.canvasScreenboard.next(value);\n  };\n\n  updateProcessedScreenStream = (value: MediaStream | null) => {\n    this.processedScreenStream.next(value);\n  };\n\n  updateAnnotateScreenStream = (value: boolean) => {\n    this.annotateScreenStream.next(value);\n  };\n\n  updateMainScreenCanvas = (value: HTMLCanvasElement | null) => {\n    this.mainScreenCanvas.next(value);\n  };\n\n  updateIsScreenboardModalVisible = (value: boolean) => {\n    this.isScreenboardModalVisible.next(value);\n  };\n\n  checkOrientation = () => {\n    const isPortrait = window.matchMedia('(orientation: portrait)').matches;\n    return isPortrait ? 'portrait' : 'landscape';\n  };\n\n  showAlert = ({\n    message,\n    type,\n    duration = 3000,\n  }: {\n    message: string;\n    type: 'success' | 'danger';\n    duration?: number;\n  }) => {\n    this.updateAlertMessage(message);\n    this.updateAlertType(type);\n    this.updateAlertDuration(duration);\n    this.updateAlertVisible(true);\n  };\n\n  getAllParams() {\n    return {\n      localUIMode: this.localUIMode.value, // Local UI mode\n\n      // Room Details\n      roomName: this.roomName.value,\n      member: this.member.value,\n      adminPasscode: this.adminPasscode.value,\n      youAreCoHost: this.youAreCoHost.value,\n      youAreHost: this.youAreHost.value,\n      islevel: this.islevel.value,\n      confirmedToRecord: this.confirmedToRecord.value,\n      meetingDisplayType: this.meetingDisplayType.value,\n      meetingVideoOptimized: this.meetingVideoOptimized.value,\n      eventType: this.eventType.value,\n      participants: this.participants.value,\n      filteredParticipants: this.filteredParticipants.value,\n      participantsCounter: this.participantsCounter.value,\n      participantsFilter: this.participantsFilter.value,\n\n      // More room details - media\n      consume_sockets: this.consume_sockets.value,\n      rtpCapabilities: this.rtpCapabilities.value,\n      roomRecvIPs: this.roomRecvIPs.value,\n      meetingRoomParams: this.meetingRoomParams.value,\n      itemPageLimit: this.itemPageLimit.value,\n      audioOnlyRoom: this.audioOnlyRoom.value,\n      addForBasic: this.addForBasic.value,\n      screenPageLimit: this.screenPageLimit.value,\n      shareScreenStarted: this.shareScreenStarted.value,\n      shared: this.shared.value,\n      targetOrientation: this.targetOrientation.value,\n      targetResolution: this.targetResolution.value,\n      targetResolutionHost: this.targetResolutionHost.value,\n      vidCons: this.vidCons.value,\n      frameRate: this.frameRate.value,\n      hParams: this.hParams.value,\n      vParams: this.vParams.value,\n      screenParams: this.screenParams.value,\n      aParams: this.aParams.value,\n\n      // More room details - recording\n      recordingAudioPausesLimit: this.recordingAudioPausesLimit.value,\n      recordingAudioPausesCount: this.recordingAudioPausesCount.value,\n      recordingAudioSupport: this.recordingAudioSupport.value,\n      recordingAudioPeopleLimit: this.recordingAudioPeopleLimit.value,\n      recordingAudioParticipantsTimeLimit: this.recordingAudioParticipantsTimeLimit.value,\n      recordingVideoPausesCount: this.recordingVideoPausesCount.value,\n      recordingVideoPausesLimit: this.recordingVideoPausesLimit.value,\n      recordingVideoSupport: this.recordingVideoSupport.value,\n      recordingVideoPeopleLimit: this.recordingVideoPeopleLimit.value,\n      recordingVideoParticipantsTimeLimit: this.recordingVideoParticipantsTimeLimit.value,\n      recordingAllParticipantsSupport: this.recordingAllParticipantsSupport.value,\n      recordingVideoParticipantsSupport: this.recordingVideoParticipantsSupport.value,\n      recordingAllParticipantsFullRoomSupport: this.recordingAllParticipantsFullRoomSupport.value,\n      recordingVideoParticipantsFullRoomSupport:\n        this.recordingVideoParticipantsFullRoomSupport.value,\n      recordingPreferredOrientation: this.recordingPreferredOrientation.value,\n      recordingSupportForOtherOrientation: this.recordingSupportForOtherOrientation.value,\n      recordingMultiFormatsSupport: this.recordingMultiFormatsSupport.value,\n\n      userRecordingParams: this.userRecordingParams.value,\n      canRecord: this.canRecord.value,\n      startReport: this.startReport.value,\n      endReport: this.endReport.value,\n      recordStartTime: this.recordStartTime.value,\n      recordElapsedTime: this.recordElapsedTime.value,\n      isTimerRunning: this.isTimerRunning.value,\n      canPauseResume: this.canPauseResume.value,\n      recordChangeSeconds: this.recordChangeSeconds.value,\n      pauseLimit: this.pauseLimit.value,\n      pauseRecordCount: this.pauseRecordCount.value,\n      canLaunchRecord: this.canLaunchRecord.value,\n      stopLaunchRecord: this.stopLaunchRecord.value,\n\n      participantsAll: this.participantsAll.value,\n\n      firstAll: this.firstAll.value,\n      updateMainWindow: this.updateMainWindow.value,\n      first_round: this.first_round.value,\n      landScaped: this.landScaped.value,\n      lock_screen: this.lock_screen.value,\n      screenId: this.screenId.value,\n      allVideoStreams: this.allVideoStreams.value,\n      newLimitedStreams: this.newLimitedStreams.value,\n      newLimitedStreamsIDs: this.newLimitedStreamsIDs.value,\n      activeSounds: this.activeSounds.value,\n      screenShareIDStream: this.screenShareIDStream.value,\n      screenShareNameStream: this.screenShareNameStream.value,\n      adminIDStream: this.adminIDStream.value,\n      adminNameStream: this.adminNameStream.value,\n      youYouStream: this.youYouStream.value,\n      youYouStreamIDs: this.youYouStreamIDs.value,\n      localStream: this.localStream.value,\n      recordStarted: this.recordStarted.value,\n      recordResumed: this.recordResumed.value,\n      recordPaused: this.recordPaused.value,\n      recordStopped: this.recordStopped.value,\n      adminRestrictSetting: this.adminRestrictSetting.value,\n      videoRequestState: this.videoRequestState.value,\n      videoRequestTime: this.videoRequestTime.value,\n      videoAction: this.videoAction.value,\n      localStreamVideo: this.localStreamVideo.value,\n      userDefaultVideoInputDevice: this.userDefaultVideoInputDevice.value,\n      currentFacingMode: this.currentFacingMode.value,\n      prevFacingMode: this.prevFacingMode.value,\n      defVideoID: this.defVideoID.value,\n      allowed: this.allowed.value,\n      dispActiveNames: this.dispActiveNames.value,\n      p_dispActiveNames: this.p_dispActiveNames.value,\n      activeNames: this.activeNames.value,\n      prevActiveNames: this.prevActiveNames.value,\n      p_activeNames: this.p_activeNames.value,\n      membersReceived: this.membersReceived.value,\n      deferScreenReceived: this.deferScreenReceived.value,\n      hostFirstSwitch: this.hostFirstSwitch.value,\n      micAction: this.micAction.value,\n      screenAction: this.screenAction.value,\n      chatAction: this.chatAction.value,\n      audioRequestState: this.audioRequestState.value,\n      screenRequestState: this.screenRequestState.value,\n      chatRequestState: this.chatRequestState.value,\n      audioRequestTime: this.audioRequestTime.value,\n      screenRequestTime: this.screenRequestTime.value,\n      chatRequestTime: this.chatRequestTime.value,\n      updateRequestIntervalSeconds: this.updateRequestIntervalSeconds.value,\n      oldSoundIds: this.oldSoundIds.value,\n      hostLabel: this.hostLabel.value,\n      mainScreenFilled: this.mainScreenFilled.value,\n      localStreamScreen: this.localStreamScreen.value,\n      screenAlreadyOn: this.screenAlreadyOn.value,\n      chatAlreadyOn: this.chatAlreadyOn.value,\n      redirectURL: this.redirectURL.value,\n      oldAllStreams: this.oldAllStreams.value,\n      adminVidID: this.adminVidID.value,\n      streamNames: this.streamNames.value,\n      non_alVideoStreams: this.non_alVideoStreams.value,\n      sortAudioLoudness: this.sortAudioLoudness.value,\n      audioDecibels: this.audioDecibels.value,\n      mixed_alVideoStreams: this.mixed_alVideoStreams.value,\n      non_alVideoStreams_muted: this.non_alVideoStreams_muted.value,\n      paginatedStreams: this.paginatedStreams.value,\n      localStreamAudio: this.localStreamAudio.value,\n      defAudioID: this.defAudioID.value,\n      userDefaultAudioInputDevice: this.userDefaultAudioInputDevice.value,\n      userDefaultAudioOutputDevice: this.userDefaultAudioOutputDevice.value,\n      prevAudioInputDevice: this.prevAudioInputDevice.value,\n      prevVideoInputDevice: this.prevVideoInputDevice.value,\n      audioPaused: this.audioPaused.value,\n      mainScreenPerson: this.mainScreenPerson.value,\n      adminOnMainScreen: this.adminOnMainScreen.value,\n      screenStates: this.screenStates.value,\n      prevScreenStates: this.prevScreenStates.value,\n      updateDateState: this.updateDateState.value,\n      lastUpdate: this.lastUpdate.value,\n      nForReadjustRecord: this.nForReadjustRecord.value,\n      fixedPageLimit: this.fixedPageLimit.value,\n      removeAltGrid: this.removeAltGrid.value,\n      nForReadjust: this.nForReadjust.value,\n      lastReorderTime: this.lastReorderTime.value,\n      reorderInterval: this.reorderInterval.value,\n      fastReorderInterval: this.fastReorderInterval.value,\n      audStreamNames: this.audStreamNames.value,\n      currentUserPage: this.currentUserPage.value,\n      mainHeightWidth: this.mainHeightWidth.value,\n      prevMainHeightWidth: this.prevMainHeightWidth.value,\n      prevDoPaginate: this.prevDoPaginate.value,\n      doPaginate: this.doPaginate.value,\n      shareEnded: this.shareEnded.value,\n      lStreams: this.lStreams.value,\n      chatRefStreams: this.chatRefStreams.value,\n      controlHeight: this.controlHeight.value,\n      isWideScreen: this.isWideScreen.value,\n      isMediumScreen: this.isMediumScreen.value,\n      isSmallScreen: this.isSmallScreen.value,\n      addGrid: this.addGrid.value,\n      addAltGrid: this.addAltGrid.value,\n      gridRows: this.gridRows.value,\n      gridCols: this.gridCols.value,\n      altGridRows: this.altGridRows.value,\n      altGridCols: this.altGridCols.value,\n      numberPages: this.numberPages.value,\n      currentStreams: this.currentStreams.value,\n      showMiniView: this.showMiniView.value,\n      nStream: this.nStream.value,\n      defer_receive: this.defer_receive.value,\n      allAudioStreams: this.allAudioStreams.value,\n      screenProducer: this.screenProducer.value,\n      remoteScreenStream: this.remoteScreenStream.value,\n      gotAllVids: this.gotAllVids.value,\n      paginationHeightWidth: this.paginationHeightWidth.value,\n      paginationDirection: this.paginationDirection.value,\n      gridSizes: this.gridSizes.value,\n      screenForceFullDisplay: this.screenForceFullDisplay.value,\n      mainGridStream: this.mainGridStream.value,\n      otherGridStreams: this.otherGridStreams.value,\n      audioOnlyStreams: this.audioOnlyStreams.value,\n      videoInputs: this.videoInputs.value,\n      audioInputs: this.audioInputs.value,\n      meetingProgressTime: this.meetingProgressTime.value,\n      meetingElapsedTime: this.meetingElapsedTime.value,\n\n      ref_participants: this.ref_participants.value,\n\n      messages: this.messages.value,\n      startDirectMessage: this.startDirectMessage.value,\n      directMessageDetails: this.directMessageDetails.value,\n      coHost: this.coHost.value,\n      coHostResponsibility: this.coHostResponsibility.value,\n\n      // Event settings\n      audioSetting: this.audioSetting.value,\n      videoSetting: this.videoSetting.value,\n      screenshareSetting: this.screenshareSetting.value,\n      chatSetting: this.chatSetting.value,\n\n      // Display settings\n      autoWave: this.autoWave.value,\n      forceFullDisplay: this.forceFullDisplay.value,\n      prevForceFullDisplay: this.prevForceFullDisplay.value,\n      prevMeetingDisplayType: this.prevMeetingDisplayType.value,\n\n      // Waiting room\n      waitingRoomFilter: this.waitingRoomFilter.value,\n      waitingRoomList: this.waitingRoomList.value,\n      waitingRoomCounter: this.waitingRoomCounter.value,\n      filteredWaitingRoomList: this.filteredWaitingRoomList.value,\n\n      // Requests\n      requestFilter: this.requestFilter.value,\n      requestList: this.requestList.value,\n      requestCounter: this.requestCounter.value,\n      filteredRequestList: this.filteredRequestList.value,\n\n      // Total requests and waiting room\n      totalReqWait: this.totalReqWait.value,\n\n      // Alerts\n      alertVisible: this.alertVisible.value,\n      alertMessage: this.alertMessage.value,\n      alertType: this.alertType.value,\n      alertDuration: this.alertDuration.value,\n\n      // Progress Timer\n      progressTimerVisible: this.progressTimerVisible.value,\n      progressTimerValue: this.progressTimerValue.value,\n\n      // Menu modals\n      isMenuModalVisible: this.isMenuModalVisible.value,\n      isRecordingModalVisible: this.isRecordingModalVisible.value,\n      isSettingsModalVisible: this.isSettingsModalVisible.value,\n      isRequestsModalVisible: this.isRequestsModalVisible.value,\n      isWaitingModalVisible: this.isWaitingModalVisible.value,\n      isCoHostModalVisible: this.isCoHostModalVisible.value,\n      isMediaSettingsModalVisible: this.isMediaSettingsModalVisible.value,\n      isDisplaySettingsModalVisible: this.isDisplaySettingsModalVisible.value,\n\n      // Other Modals\n      isParticipantsModalVisible: this.isParticipantsModalVisible.value,\n      isMessagesModalVisible: this.isMessagesModalVisible.value,\n      isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n      isConfirmHereModalVisible: this.isConfirmHereModalVisible.value,\n      isLoadingModalVisible: this.isLoadingModalVisible.value,\n\n      // Recording Options\n      recordingMediaOptions: this.recordingMediaOptions.value,\n      recordingAudioOptions: this.recordingAudioOptions.value,\n      recordingVideoOptions: this.recordingVideoOptions.value,\n      recordingVideoType: this.recordingVideoType.value,\n      recordingVideoOptimized: this.recordingVideoOptimized.value,\n      recordingDisplayType: this.recordingDisplayType.value,\n      recordingAddHLS: this.recordingAddHLS.value,\n      recordingAddText: this.recordingAddText.value,\n      recordingCustomText: this.recordingCustomText.value,\n      recordingCustomTextPosition: this.recordingCustomTextPosition.value,\n      recordingCustomTextColor: this.recordingCustomTextColor.value,\n      recordingNameTags: this.recordingNameTags.value,\n      recordingBackgroundColor: this.recordingBackgroundColor.value,\n      recordingNameTagsColor: this.recordingNameTagsColor.value,\n      recordingOrientationVideo: this.recordingOrientationVideo.value,\n      clearedToResume: this.clearedToResume.value,\n      clearedToRecord: this.clearedToRecord.value,\n      recordState: this.recordState.value,\n      showRecordButtons: this.showRecordButtons.value,\n      recordingProgressTime: this.recordingProgressTime.value,\n      audioSwitching: this.audioSwitching.value,\n      videoSwitching: this.videoSwitching.value,\n\n      // Media states\n      videoAlreadyOn: this.videoAlreadyOn.value,\n      audioAlreadyOn: this.audioAlreadyOn.value,\n      componentSizes: this.componentSizes.value,\n\n      // Permissions\n      hasCameraPermission: this.hasCameraPermission.value,\n      hasAudioPermission: this.hasAudioPermission.value,\n\n      // Transports\n      transportCreated: this.transportCreated.value,\n      transportCreatedVideo: this.transportCreatedVideo.value,\n      transportCreatedAudio: this.transportCreatedAudio.value,\n      transportCreatedScreen: this.transportCreatedScreen.value,\n      producerTransport: this.producerTransport.value,\n      videoProducer: this.videoProducer.value,\n      params: this.params.value,\n      videoParams: this.videoParams.value,\n      audioParams: this.audioParams.value,\n      audioProducer: this.audioProducer.value,\n      consumerTransports: this.consumerTransports.value,\n      consumingTransports: this.consumingTransports.value,\n\n      // Polls\n      polls: this.polls.value,\n      poll: this.poll.value,\n      isPollModalVisible: this.isPollModalVisible.value,\n\n      // Background\n      customImage: this.customImage.value,\n      selectedImage: this.selectedImage.value,\n      segmentVideo: this.segmentVideo.value,\n      selfieSegmentation: this.selfieSegmentation.value,\n      pauseSegmentation: this.pauseSegmentation.value,\n      processedStream: this.processedStream.value,\n      keepBackground: this.keepBackground.value,\n      backgroundHasChanged: this.backgroundHasChanged.value,\n      virtualStream: this.virtualStream.value,\n      mainCanvas: this.mainCanvas.value,\n      prevKeepBackground: this.prevKeepBackground.value,\n      appliedBackground: this.appliedBackground.value,\n      isBackgroundModalVisible: this.isBackgroundModalVisible.value,\n      autoClickBackground: this.autoClickBackground.value,\n\n      // Breakout rooms\n      breakoutRooms: this.breakoutRooms.value,\n      currentRoomIndex: this.currentRoomIndex.value,\n      canStartBreakout: this.canStartBreakout.value,\n      breakOutRoomStarted: this.breakOutRoomStarted.value,\n      breakOutRoomEnded: this.breakOutRoomEnded.value,\n      hostNewRoom: this.hostNewRoom.value,\n      limitedBreakRoom: this.limitedBreakRoom.value,\n      mainRoomsLength: this.mainRoomsLength.value,\n      memberRoom: this.memberRoom.value,\n      isBreakoutRoomsModalVisible: this.isBreakoutRoomsModalVisible.value,\n\n      // Whiteboard\n      whiteboardUsers: this.whiteboardUsers.value,\n      currentWhiteboardIndex: this.currentWhiteboardIndex.value,\n      canStartWhiteboard: this.canStartWhiteboard.value,\n      whiteboardStarted: this.whiteboardStarted.value,\n      whiteboardEnded: this.whiteboardEnded.value,\n      whiteboardLimit: this.whiteboardLimit.value,\n      isWhiteboardModalVisible: this.isWhiteboardModalVisible.value,\n      isConfigureWhiteboardModalVisible: this.isConfigureWhiteboardModalVisible.value,\n      shapes: this.shapes.value,\n      useImageBackground: this.useImageBackground.value,\n      redoStack: this.redoStack.value,\n      undoStack: this.undoStack.value,\n      canvasStream: this.canvasStream.value,\n      canvasWhiteboard: this.canvasWhiteboard.value,\n\n      // Screenboard\n      canvasScreenboard: this.canvasScreenboard.value,\n      processedScreenStream: this.processedScreenStream.value,\n      annotateScreenStream: this.annotateScreenStream.value,\n      mainScreenCanvas: this.mainScreenCanvas.value,\n      isScreenboardModalVisible: this.isScreenboardModalVisible.value,\n\n      validated: this.validated.value,\n      device: this.device.value,\n      socket: this.socket.value,\n      checkMediaPermission: false,\n      onWeb: true,\n\n      // Update functions\n      updateRoomName: this.updateRoomName.bind(this),\n      updateMember: this.updateMember.bind(this),\n      updateAdminPasscode: this.updateAdminPasscode.bind(this),\n      updateYouAreCoHost: this.updateYouAreCoHost.bind(this),\n      updateYouAreHost: this.updateYouAreHost.bind(this),\n      updateIslevel: this.updateIslevel.bind(this),\n      updateCoHost: this.updateCoHost.bind(this),\n      updateCoHostResponsibility: this.updateCoHostResponsibility.bind(this),\n      updateConfirmedToRecord: this.updateConfirmedToRecord.bind(this),\n      updateMeetingDisplayType: this.updateMeetingDisplayType.bind(this),\n      updateMeetingVideoOptimized: this.updateMeetingVideoOptimized.bind(this),\n      updateEventType: this.updateEventType.bind(this),\n      updateParticipants: this.updateParticipants.bind(this),\n      updateParticipantsCounter: this.updateParticipantsCounter.bind(this),\n      updateParticipantsFilter: this.updateParticipantsFilter.bind(this),\n\n      // More update functions for media details\n      updateConsume_sockets: this.updateConsume_sockets.bind(this),\n      updateRtpCapabilities: this.updateRtpCapabilities.bind(this),\n      updateRoomRecvIPs: this.updateRoomRecvIPs.bind(this),\n      updateMeetingRoomParams: this.updateMeetingRoomParams.bind(this),\n      updateItemPageLimit: this.updateItemPageLimit.bind(this),\n      updateAudioOnlyRoom: this.updateAudioOnlyRoom.bind(this),\n      updateAddForBasic: this.updateAddForBasic.bind(this),\n      updateScreenPageLimit: this.updateScreenPageLimit.bind(this),\n      updateShareScreenStarted: this.updateShareScreenStarted.bind(this),\n      updateShared: this.updateShared.bind(this),\n      updateTargetOrientation: this.updateTargetOrientation.bind(this),\n      updateTargetResolution: this.updateTargetResolution.bind(this),\n      updateTargetResolutionHost: this.updateTargetResolutionHost.bind(this),\n      updateVidCons: this.updateVidCons.bind(this),\n      updateFrameRate: this.updateFrameRate.bind(this),\n      updateHParams: this.updateHParams.bind(this),\n      updateVParams: this.updateVParams.bind(this),\n      updateScreenParams: this.updateScreenParams.bind(this),\n      updateAParams: this.updateAParams.bind(this),\n\n      // More update functions for recording details\n      updateRecordingAudioPausesLimit: this.updateRecordingAudioPausesLimit.bind(this),\n      updateRecordingAudioPausesCount: this.updateRecordingAudioPausesCount.bind(this),\n      updateRecordingAudioSupport: this.updateRecordingAudioSupport.bind(this),\n      updateRecordingAudioPeopleLimit: this.updateRecordingAudioPeopleLimit.bind(this),\n      updateRecordingAudioParticipantsTimeLimit:\n        this.updateRecordingAudioParticipantsTimeLimit.bind(this),\n      updateRecordingVideoPausesCount: this.updateRecordingVideoPausesCount.bind(this),\n      updateRecordingVideoPausesLimit: this.updateRecordingVideoPausesLimit.bind(this),\n      updateRecordingVideoSupport: this.updateRecordingVideoSupport.bind(this),\n      updateRecordingVideoPeopleLimit: this.updateRecordingVideoPeopleLimit.bind(this),\n      updateRecordingVideoParticipantsTimeLimit:\n        this.updateRecordingVideoParticipantsTimeLimit.bind(this),\n      updateRecordingAllParticipantsSupport: this.updateRecordingAllParticipantsSupport.bind(this),\n      updateRecordingVideoParticipantsSupport:\n        this.updateRecordingVideoParticipantsSupport.bind(this),\n      updateRecordingAllParticipantsFullRoomSupport:\n        this.updateRecordingAllParticipantsFullRoomSupport.bind(this),\n      updateRecordingVideoParticipantsFullRoomSupport:\n        this.updateRecordingVideoParticipantsFullRoomSupport.bind(this),\n      updateRecordingPreferredOrientation: this.updateRecordingPreferredOrientation.bind(this),\n      updateRecordingSupportForOtherOrientation:\n        this.updateRecordingSupportForOtherOrientation.bind(this),\n      updateRecordingMultiFormatsSupport: this.updateRecordingMultiFormatsSupport.bind(this),\n\n      updateUserRecordingParams: this.updateUserRecordingParams.bind(this),\n      updateCanRecord: this.updateCanRecord.bind(this),\n      updateStartReport: this.updateStartReport.bind(this),\n      updateEndReport: this.updateEndReport.bind(this),\n      updateRecordTimerInterval: this.updateRecordTimerInterval.bind(this),\n      updateRecordStartTime: this.updateRecordStartTime.bind(this),\n      updateRecordElapsedTime: this.updateRecordElapsedTime.bind(this),\n      updateIsTimerRunning: this.updateIsTimerRunning.bind(this),\n      updateCanPauseResume: this.updateCanPauseResume.bind(this),\n      updateRecordChangeSeconds: this.updateRecordChangeSeconds.bind(this),\n      updatePauseLimit: this.updatePauseLimit.bind(this),\n      updatePauseRecordCount: this.updatePauseRecordCount.bind(this),\n      updateCanLaunchRecord: this.updateCanLaunchRecord.bind(this),\n      updateStopLaunchRecord: this.updateStopLaunchRecord.bind(this),\n\n      updateParticipantsAll: this.updateParticipantsAll.bind(this),\n\n      updateFirstAll: this.updateFirstAll.bind(this),\n      updateUpdateMainWindow: this.updateUpdateMainWindow.bind(this),\n      updateFirst_round: this.updateFirst_round.bind(this),\n      updateLandScaped: this.updateLandScaped.bind(this),\n      updateLock_screen: this.updateLock_screen.bind(this),\n      updateScreenId: this.updateScreenId.bind(this),\n      updateAllVideoStreams: this.updateAllVideoStreams.bind(this),\n      updateNewLimitedStreams: this.updateNewLimitedStreams.bind(this),\n      updateNewLimitedStreamsIDs: this.updateNewLimitedStreamsIDs.bind(this),\n      updateActiveSounds: this.updateActiveSounds.bind(this),\n      updateScreenShareIDStream: this.updateScreenShareIDStream.bind(this),\n      updateScreenShareNameStream: this.updateScreenShareNameStream.bind(this),\n      updateAdminIDStream: this.updateAdminIDStream.bind(this),\n      updateAdminNameStream: this.updateAdminNameStream.bind(this),\n      updateYouYouStream: this.updateYouYouStream.bind(this),\n      updateYouYouStreamIDs: this.updateYouYouStreamIDs.bind(this),\n      updateLocalStream: this.updateLocalStream.bind(this),\n      updateRecordStarted: this.updateRecordStarted.bind(this),\n      updateRecordResumed: this.updateRecordResumed.bind(this),\n      updateRecordPaused: this.updateRecordPaused.bind(this),\n      updateRecordStopped: this.updateRecordStopped.bind(this),\n      updateAdminRestrictSetting: this.updateAdminRestrictSetting.bind(this),\n      updateVideoRequestState: this.updateVideoRequestState.bind(this),\n      updateVideoRequestTime: this.updateVideoRequestTime.bind(this),\n      updateVideoAction: this.updateVideoAction.bind(this),\n      updateLocalStreamVideo: this.updateLocalStreamVideo.bind(this),\n      updateUserDefaultVideoInputDevice: this.updateUserDefaultVideoInputDevice.bind(this),\n      updateCurrentFacingMode: this.updateCurrentFacingMode.bind(this),\n      updatePrevFacingMode: this.updatePrevFacingMode.bind(this),\n      updateDefVideoID: this.updateDefVideoID.bind(this),\n      updateAllowed: this.updateAllowed.bind(this),\n      updateDispActiveNames: this.updateDispActiveNames.bind(this),\n      updateP_dispActiveNames: this.updateP_dispActiveNames.bind(this),\n      updateActiveNames: this.updateActiveNames.bind(this),\n      updatePrevActiveNames: this.updatePrevActiveNames.bind(this),\n      updateP_activeNames: this.updateP_activeNames.bind(this),\n      updateMembersReceived: this.updateMembersReceived.bind(this),\n      updateDeferScreenReceived: this.updateDeferScreenReceived.bind(this),\n      updateHostFirstSwitch: this.updateHostFirstSwitch.bind(this),\n      updateMicAction: this.updateMicAction.bind(this),\n      updateScreenAction: this.updateScreenAction.bind(this),\n      updateChatAction: this.updateChatAction.bind(this),\n      updateAudioRequestState: this.updateAudioRequestState.bind(this),\n      updateScreenRequestState: this.updateScreenRequestState.bind(this),\n      updateChatRequestState: this.updateChatRequestState.bind(this),\n      updateAudioRequestTime: this.updateAudioRequestTime.bind(this),\n      updateScreenRequestTime: this.updateScreenRequestTime.bind(this),\n      updateChatRequestTime: this.updateChatRequestTime.bind(this),\n      updateOldSoundIds: this.updateOldSoundIds.bind(this),\n      updateHostLabel: this.updateHostLabel.bind(this),\n      updateMainScreenFilled: this.updateMainScreenFilled.bind(this),\n      updateLocalStreamScreen: this.updateLocalStreamScreen.bind(this),\n      updateScreenAlreadyOn: this.updateScreenAlreadyOn.bind(this),\n      updateChatAlreadyOn: this.updateChatAlreadyOn.bind(this),\n      updateRedirectURL: this.updateRedirectURL.bind(this),\n      updateOldAllStreams: this.updateOldAllStreams.bind(this),\n      updateAdminVidID: this.updateAdminVidID.bind(this),\n      updateStreamNames: this.updateStreamNames.bind(this),\n      updateNon_alVideoStreams: this.updateNon_alVideoStreams.bind(this),\n      updateSortAudioLoudness: this.updateSortAudioLoudness.bind(this),\n      updateAudioDecibels: this.updateAudioDecibels.bind(this),\n      updateMixed_alVideoStreams: this.updateMixed_alVideoStreams.bind(this),\n      updateNon_alVideoStreams_muted: this.updateNon_alVideoStreams_muted.bind(this),\n      updatePaginatedStreams: this.updatePaginatedStreams.bind(this),\n      updateLocalStreamAudio: this.updateLocalStreamAudio.bind(this),\n      updateDefAudioID: this.updateDefAudioID.bind(this),\n      updateUserDefaultAudioInputDevice: this.updateUserDefaultAudioInputDevice.bind(this),\n      updateUserDefaultAudioOutputDevice: this.updateUserDefaultAudioOutputDevice.bind(this),\n      updatePrevAudioInputDevice: this.updatePrevAudioInputDevice.bind(this),\n      updatePrevVideoInputDevice: this.updatePrevVideoInputDevice.bind(this),\n      updateAudioPaused: this.updateAudioPaused.bind(this),\n      updateMainScreenPerson: this.updateMainScreenPerson.bind(this),\n      updateAdminOnMainScreen: this.updateAdminOnMainScreen.bind(this),\n      updateScreenStates: this.updateScreenStates.bind(this),\n      updatePrevScreenStates: this.updatePrevScreenStates.bind(this),\n      updateUpdateDateState: this.updateUpdateDateState.bind(this),\n      updateLastUpdate: this.updateLastUpdate.bind(this),\n      updateNForReadjustRecord: this.updateNForReadjustRecord.bind(this),\n      updateFixedPageLimit: this.updateFixedPageLimit.bind(this),\n      updateRemoveAltGrid: this.updateRemoveAltGrid.bind(this),\n      updateNForReadjust: this.updateNForReadjust.bind(this),\n      updateLastReorderTime: this.updateLastReorderTime.bind(this),\n      updateAudStreamNames: this.updateAudStreamNames.bind(this),\n      updateCurrentUserPage: this.updateCurrentUserPage.bind(this),\n      updateMainHeightWidth: this.updateMainHeightWidth.bind(this),\n      updatePrevMainHeightWidth: this.updatePrevMainHeightWidth.bind(this),\n      updatePrevDoPaginate: this.updatePrevDoPaginate.bind(this),\n      updateDoPaginate: this.updateDoPaginate.bind(this),\n      updateShareEnded: this.updateShareEnded.bind(this),\n      updateLStreams: this.updateLStreams.bind(this),\n      updateChatRefStreams: this.updateChatRefStreams.bind(this),\n      updateControlHeight: this.updateControlHeight.bind(this),\n      updateIsWideScreen: this.updateIsWideScreen.bind(this),\n      updateIsMediumScreen: this.updateIsMediumScreen.bind(this),\n      updateIsSmallScreen: this.updateIsSmallScreen.bind(this),\n      updateAddGrid: this.updateAddGrid.bind(this),\n      updateAddAltGrid: this.updateAddAltGrid.bind(this),\n      updateGridRows: this.updateGridRows.bind(this),\n      updateGridCols: this.updateGridCols.bind(this),\n      updateAltGridRows: this.updateAltGridRows.bind(this),\n      updateAltGridCols: this.updateAltGridCols.bind(this),\n      updateNumberPages: this.updateNumberPages.bind(this),\n      updateCurrentStreams: this.updateCurrentStreams.bind(this),\n      updateShowMiniView: this.updateShowMiniView.bind(this),\n      updateNStream: this.updateNStream.bind(this),\n      updateDefer_receive: this.updateDefer_receive.bind(this),\n      updateAllAudioStreams: this.updateAllAudioStreams.bind(this),\n      updateRemoteScreenStream: this.updateRemoteScreenStream.bind(this),\n      updateScreenProducer: this.updateScreenProducer.bind(this),\n      updateGotAllVids: this.updateGotAllVids.bind(this),\n      updatePaginationHeightWidth: this.updatePaginationHeightWidth.bind(this),\n      updatePaginationDirection: this.updatePaginationDirection.bind(this),\n      updateGridSizes: this.updateGridSizes.bind(this),\n      updateScreenForceFullDisplay: this.updateScreenForceFullDisplay.bind(this),\n      updateMainGridStream: this.updateMainGridStream.bind(this),\n      updateOtherGridStreams: this.updateOtherGridStreams.bind(this),\n      updateAudioOnlyStreams: this.updateAudioOnlyStreams.bind(this),\n      updateVideoInputs: this.updateVideoInputs.bind(this),\n      updateAudioInputs: this.updateAudioInputs.bind(this),\n      updateMeetingProgressTime: this.updateMeetingProgressTime.bind(this),\n      updateMeetingElapsedTime: this.updateMeetingElapsedTime.bind(this),\n      updateRef_participants: this.updateRef_participants.bind(this),\n\n      updateMessages: this.updateMessages.bind(this),\n      updateStartDirectMessage: this.updateStartDirectMessage.bind(this),\n      updateDirectMessageDetails: this.updateDirectMessageDetails.bind(this),\n      updateShowMessagesBadge: this.updateShowMessagesBadge.bind(this),\n\n      // Event settings\n      updateAudioSetting: this.updateAudioSetting.bind(this),\n      updateVideoSetting: this.updateVideoSetting.bind(this),\n      updateScreenshareSetting: this.updateScreenshareSetting.bind(this),\n      updateChatSetting: this.updateChatSetting.bind(this),\n\n      // Display settings\n      updateAutoWave: this.updateAutoWave.bind(this),\n      updateForceFullDisplay: this.updateForceFullDisplay.bind(this),\n      updatePrevForceFullDisplay: this.updatePrevForceFullDisplay.bind(this),\n      updatePrevMeetingDisplayType: this.updatePrevMeetingDisplayType.bind(this),\n\n      // Waiting room\n      updateWaitingRoomFilter: this.updateWaitingRoomFilter.bind(this),\n      updateWaitingRoomList: this.updateWaitingRoomList.bind(this),\n      updateWaitingRoomCounter: this.updateWaitingRoomCounter.bind(this),\n\n      // Requests\n      updateRequestFilter: this.updateRequestFilter.bind(this),\n      updateRequestList: this.updateRequestList.bind(this),\n      updateRequestCounter: this.updateRequestCounter.bind(this),\n\n      // Total requests and waiting room\n      updateTotalReqWait: this.updateTotalReqWait.bind(this),\n\n      // Menu modals\n      updateIsMenuModalVisible: this.updateIsMenuModalVisible.bind(this),\n      updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n      updateIsSettingsModalVisible: this.updateIsSettingsModalVisible.bind(this),\n      updateIsRequestsModalVisible: this.updateIsRequestsModalVisible.bind(this),\n      updateIsWaitingModalVisible: this.updateIsWaitingModalVisible.bind(this),\n      updateIsCoHostModalVisible: this.updateIsCoHostModalVisible.bind(this),\n      updateIsMediaSettingsModalVisible: this.updateIsMediaSettingsModalVisible.bind(this),\n      updateIsDisplaySettingsModalVisible: this.updateIsDisplaySettingsModalVisible.bind(this),\n\n      // Other modals\n      updateIsParticipantsModalVisible: this.updateIsParticipantsModalVisible.bind(this),\n      updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n      updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n      updateIsConfirmHereModalVisible: this.updateIsConfirmHereModalVisible.bind(this),\n      updateIsLoadingModalVisible: this.updateIsLoadingModalVisible.bind(this),\n\n      // Recording Options\n      updateRecordingMediaOptions: this.updateRecordingMediaOptions.bind(this),\n      updateRecordingAudioOptions: this.updateRecordingAudioOptions.bind(this),\n      updateRecordingVideoOptions: this.updateRecordingVideoOptions.bind(this),\n      updateRecordingVideoType: this.updateRecordingVideoType.bind(this),\n      updateRecordingVideoOptimized: this.updateRecordingVideoOptimized.bind(this),\n      updateRecordingDisplayType: this.updateRecordingDisplayType.bind(this),\n      updateRecordingAddHLS: this.updateRecordingAddHLS.bind(this),\n      updateRecordingAddText: this.updateRecordingAddText.bind(this),\n      updateRecordingCustomText: this.updateRecordingCustomText.bind(this),\n      updateRecordingCustomTextPosition: this.updateRecordingCustomTextPosition.bind(this),\n      updateRecordingCustomTextColor: this.updateRecordingCustomTextColor.bind(this),\n      updateRecordingNameTags: this.updateRecordingNameTags.bind(this),\n      updateRecordingBackgroundColor: this.updateRecordingBackgroundColor.bind(this),\n      updateRecordingNameTagsColor: this.updateRecordingNameTagsColor.bind(this),\n      updateRecordingOrientationVideo: this.updateRecordingOrientationVideo.bind(this),\n      updateClearedToResume: this.updateClearedToResume.bind(this),\n      updateClearedToRecord: this.updateClearedToRecord.bind(this),\n      updateRecordState: this.updateRecordState.bind(this),\n      updateShowRecordButtons: this.updateShowRecordButtons.bind(this),\n      updateRecordingProgressTime: this.updateRecordingProgressTime.bind(this),\n      updateAudioSwitching: this.updateAudioSwitching.bind(this),\n      updateVideoSwitching: this.updateVideoSwitching.bind(this),\n\n      // Media states\n      updateVideoAlreadyOn: this.updateVideoAlreadyOn.bind(this),\n      updateAudioAlreadyOn: this.updateAudioAlreadyOn.bind(this),\n      updateComponentSizes: this.updateComponentSizes.bind(this),\n\n      // Permissions\n      updateHasCameraPermission: this.updateHasCameraPermission.bind(this),\n      updateHasAudioPermission: this.updateHasAudioPermission.bind(this),\n\n      // Transports\n      updateTransportCreated: this.updateTransportCreated.bind(this),\n      updateTransportCreatedVideo: this.updateTransportCreatedVideo.bind(this),\n      updateTransportCreatedAudio: this.updateTransportCreatedAudio.bind(this),\n      updateTransportCreatedScreen: this.updateTransportCreatedScreen.bind(this),\n      updateProducerTransport: this.updateProducerTransport.bind(this),\n      updateVideoProducer: this.updateVideoProducer.bind(this),\n      updateParams: this.updateParams.bind(this),\n      updateVideoParams: this.updateVideoParams.bind(this),\n      updateAudioParams: this.updateAudioParams.bind(this),\n      updateAudioProducer: this.updateAudioProducer.bind(this),\n      updateConsumerTransports: this.updateConsumerTransports.bind(this),\n      updateConsumingTransports: this.updateConsumingTransports.bind(this),\n\n      // Polls\n      updatePolls: this.updatePolls.bind(this),\n      updatePoll: this.updatePoll.bind(this),\n      updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n\n      // Background\n      updateCustomImage: this.updateCustomImage.bind(this),\n      updateSelectedImage: this.updateSelectedImage.bind(this),\n      updateSegmentVideo: this.updateSegmentVideo.bind(this),\n      updateSelfieSegmentation: this.updateSelfieSegmentation.bind(this),\n      updatePauseSegmentation: this.updatePauseSegmentation.bind(this),\n      updateProcessedStream: this.updateProcessedStream.bind(this),\n      updateKeepBackground: this.updateKeepBackground.bind(this),\n      updateBackgroundHasChanged: this.updateBackgroundHasChanged.bind(this),\n      updateVirtualStream: this.updateVirtualStream.bind(this),\n      updateMainCanvas: this.updateMainCanvas.bind(this),\n      updatePrevKeepBackground: this.updatePrevKeepBackground.bind(this),\n      updateAppliedBackground: this.updateAppliedBackground.bind(this),\n      updateIsBackgroundModalVisible: this.updateIsBackgroundModalVisible.bind(this),\n      updateAutoClickBackground: this.updateAutoClickBackground.bind(this),\n\n      // Breakout rooms\n      updateBreakoutRooms: this.updateBreakoutRooms.bind(this),\n      updateCurrentRoomIndex: this.updateCurrentRoomIndex.bind(this),\n      updateCanStartBreakout: this.updateCanStartBreakout.bind(this),\n      updateBreakOutRoomStarted: this.updateBreakOutRoomStarted.bind(this),\n      updateBreakOutRoomEnded: this.updateBreakOutRoomEnded.bind(this),\n      updateHostNewRoom: this.updateHostNewRoom.bind(this),\n      updateLimitedBreakRoom: this.updateLimitedBreakRoom.bind(this),\n      updateMainRoomsLength: this.updateMainRoomsLength.bind(this),\n      updateMemberRoom: this.updateMemberRoom.bind(this),\n      updateIsBreakoutRoomsModalVisible: this.updateIsBreakoutRoomsModalVisible.bind(this),\n\n      // Whiteboard\n      updateWhiteboardUsers: this.updateWhiteboardUsers.bind(this),\n      updateCurrentWhiteboardIndex: this.updateCurrentWhiteboardIndex.bind(this),\n      updateCanStartWhiteboard: this.updateCanStartWhiteboard.bind(this),\n      updateWhiteboardStarted: this.updateWhiteboardStarted.bind(this),\n      updateWhiteboardEnded: this.updateWhiteboardEnded.bind(this),\n      updateWhiteboardLimit: this.updateWhiteboardLimit.bind(this),\n      updateIsWhiteboardModalVisible: this.updateIsWhiteboardModalVisible.bind(this),\n      updateIsConfigureWhiteboardModalVisible:\n        this.updateIsConfigureWhiteboardModalVisible.bind(this),\n      updateShapes: this.updateShapes.bind(this),\n      updateUseImageBackground: this.updateUseImageBackground.bind(this),\n      updateRedoStack: this.updateRedoStack.bind(this),\n      updateUndoStack: this.updateUndoStack.bind(this),\n      updateCanvasStream: this.updateCanvasStream.bind(this),\n      updateCanvasWhiteboard: this.updateCanvasWhiteboard.bind(this),\n\n      // Screenboard\n      updateCanvasScreenboard: this.updateCanvasScreenboard.bind(this),\n      updateProcessedScreenStream: this.updateProcessedScreenStream.bind(this),\n      updateAnnotateScreenStream: this.updateAnnotateScreenStream.bind(this),\n      updateMainScreenCanvas: this.updateMainScreenCanvas.bind(this),\n      updateIsScreenboardModalVisible: this.updateIsScreenboardModalVisible.bind(this),\n\n      // Other functions\n      checkOrientation: this.checkOrientation.bind(this),\n\n      updateDevice: this.updateDevice.bind(this),\n      updateSocket: this.updateSocket.bind(this),\n      updateValidated: this.updateValidated.bind(this),\n\n      showAlert: this.showAlert.bind(this),\n      getUpdatedAllParams: () => {\n        return {\n          ...this.getAllParams(),\n          ...this.mediaSFUFunctions(),\n        };\n      },\n    };\n  }\n\n  mediaSFUParameters = {\n    ...this.getAllParams(),\n    ...this.mediaSFUFunctions(),\n  };\n\n  getUpdatedAllParams = () => {\n    return {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n  };\n\n  PrejoinPageComponent: any = {\n    component: this.PrejoinPage,\n    injector: null,\n  };\n\n  updatePrejoinPageComponent = () => {\n    const PrejoinComp = {\n      component: this.PrejoinPage,\n      injector: this.createInjector({\n        parameters: {\n          showAlert:\n            this.showAlert ||\n            (() => {\n              console.log('showAlert not defined');\n            }),\n          updateIsLoadingModalVisible: this.updateIsLoadingModalVisible,\n          connectSocket: this.socketManager.connectSocket,\n          updateSocket: this.updateSocket,\n          updateValidated: this.updateValidated,\n          updateApiUserName: this.updateApiUserName,\n          updateApiToken: this.updateApiToken,\n          updateLink: this.updateLink,\n          updateRoomName: this.updateRoomName,\n          updateMember: this.updateMember,\n        },\n        credentials: this.credentials,\n      }),\n    };\n\n    this.PrejoinPageComponent = { ...PrejoinComp };\n\n    this.cdr.detectChanges();\n  };\n\n  ngOnInit() {\n    if (this.PrejoinPage) {\n      this.updatePrejoinPageComponent();\n    }\n\n    this.setupResizeListener();\n    if (this.validated) {\n      this.connectAndAddSocketMethods();\n    }\n\n    this.mainHeightWidthSubscription = this.mainHeightWidth.subscribe(() => {\n      this.updateMainVideoSize();\n    });\n\n    this.recordingSubscription = combineLatest([\n      this.recordPaused,\n      this.recordStarted,\n      this.recordStopped,\n      this.recordResumed,\n      this.recordingProgressTime,\n      this.showRecordButtons,\n      this.islevel,\n    ]).subscribe(\n      ([\n        recordPaused,\n        recordStarted,\n        recordStopped,\n        recordResumed,\n        recordingProgressTime,\n        showRecordButtons,\n        islevel,\n      ]) => {\n        if (\n          recordPaused ||\n          recordStarted ||\n          recordStopped ||\n          recordResumed ||\n          recordingProgressTime ||\n          showRecordButtons ||\n          islevel\n        ) {\n          this.updateRecordButtons();\n        }\n      },\n    );\n    this.validatedSubscription = this.validated.subscribe((validated) => {\n      if (validated) {\n        this.handleValidated();\n      }\n    });\n    this.islevelSubscription = this.islevel.subscribe((islevel) => {\n      if (islevel) {\n        this.updateControlBroadcastButtons();\n      }\n    });\n    this.coHostSubscription = combineLatest([this.coHost, this.coHostResponsibility]).subscribe(\n      ([coHost, coHostResponsibility]) => {\n        if (coHost || coHostResponsibility) {\n          this.updateControlBroadcastButtons();\n        }\n      },\n    );\n\n    // Subscribe to changes in BehaviorSubject and update the buttons accordingly\n    this.buttonSubscriptions.push(\n      this.micActive.subscribe(() => {\n        this.updateControlBroadcastButtons();\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.videoActive.subscribe(() => {\n        this.updateControlBroadcastButtons();\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.participantsCounter.subscribe((value) => {\n        this.updateMenuParticipantsWidget(value);\n      }),\n    );\n\n    this.mediaSFUParameters = {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('orientationchange', this.handleResize);\n    if (this.mainHeightWidthSubscription) {\n      this.mainHeightWidthSubscription.unsubscribe();\n    }\n    if (this.validatedSubscription) {\n      this.validatedSubscription.unsubscribe();\n    }\n    if (this.islevelSubscription) {\n      this.islevelSubscription.unsubscribe();\n    }\n    if (this.coHostSubscription) {\n      this.coHostSubscription.unsubscribe();\n    }\n    if (this.ScreenboardSubscription) {\n      this.ScreenboardSubscription.unsubscribe();\n    }\n    if (this.recordingSubscription) {\n      this.recordingSubscription.unsubscribe();\n    }\n  }\n\n  updateMainVideoSize = async () => {\n    if (!this.lock_screen.value && !this.shared.value) {\n      this.prepopulateUserMedia.prepopulateUserMedia({\n        name: this.hostLabel.value,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n    } else {\n      if (!this.first_round.value) {\n        this.prepopulateUserMedia.prepopulateUserMedia({\n          name: this.hostLabel.value,\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        });\n      }\n    }\n  };\n\n  async connectAndAddSocketMethods() {\n    this.mediaSFUParameters = {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n    const socket_ = await this.connect_Socket(this.apiUserName.value, '', this.apiToken.value);\n    if (socket_) {\n      this.updateSocket(socket_);\n    }\n  }\n\n  async handleValidated() {\n    this.updateAllVideoStreams([\n      { producerId: 'youyou', stream: undefined, id: 'youyou', name: 'youyou' },\n    ]);\n\n    this.updateStreamNames([{ id: 'youyou', name: 'youyou', producerId: '' }]);\n\n    if (this.validated.value) {\n\n      try {\n        if (!this.localUIMode.value) {\n          await this.connectAndAddSocketMethods();\n          this.updateIsLoadingModalVisible(true);\n        } else {\n          this.updateIsLoadingModalVisible(false);\n        }\n      } catch (error) {\n        console.log('error connectAndaAddSocketMethods', error);\n      }\n\n      this.startMeetingProgressTimer.startMeetingProgressTimer({\n        startTime: Date.now() / 1000,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n\n    }\n  }\n\n  @HostListener('window:resize')\n  @HostListener('window:orientationchange')\n  async handleResize() {\n    let fraction = 0;\n\n    if (\n      window.innerHeight < window.innerWidth &&\n      (this.eventType.value == 'webinar' || this.eventType.value == 'conference')\n    ) {\n      const currentHeight = window.innerHeight;\n      fraction = Number((40 / currentHeight).toFixed(3));\n      if (fraction != this.controlHeight.value) {\n        this.updateControlHeight(Number(fraction));\n      }\n    } else {\n      // Set default control button height for portrait mode or other event types\n      const currentHeight = window.innerHeight;\n      fraction = Number((40 / currentHeight).toFixed(3));\n      fraction = Number(fraction);\n      if (fraction != this.controlHeight.value) {\n        this.updateControlHeight(Number(fraction));\n      }\n    }\n\n    const dimensions = this.computeDimensionsMethod({\n      containerWidthFraction: 1,\n      containerHeightFraction: 1,\n      mainSize: this.mainHeightWidth.value,\n      doStack: true,\n      defaultFraction:\n        this.eventType.value == 'webinar' || this.eventType.value == 'conference'\n          ? 1 - fraction\n          : 1,\n    });\n\n    this.updateComponentSizes(dimensions);\n\n    const orientation = this.checkOrientation();\n    if (orientation == 'portrait') {\n      if (!this.isWideScreen.value) {\n        if (this.shareScreenStarted.value || this.shared.value) {\n          this.updateScreenForceFullDisplay(true);\n        }\n      }\n    }\n\n    // Updates the main grid view\n    await this.prepopulateUserMedia.prepopulateUserMedia({\n      name: this.hostLabel.value,\n      parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n    });\n    // Updates the mini grid view\n    await this.onScreenChanges.onScreenChanges({\n      changed: true,\n      parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n    });\n  }\n\n  async disconnectAllSockets(consume_sockets: ConsumeSocket[]): Promise<void> {\n    for (const socket of consume_sockets) {\n      try {\n        const ip = Object.keys(socket)[0];\n        await socket[ip].disconnect();\n      } catch (error) {\n        console.log(`Error disconnecting socket with IP: ${Object.keys(socket)[0]}`, error);\n      }\n    }\n  }\n\n  async closeAndReset() {\n    //close and clean up all sockets, modals,... and reset all states to initial values\n\n    this.updateIsMessagesModalVisible(false);\n    this.updateIsParticipantsModalVisible(false);\n    this.updateIsWaitingModalVisible(false);\n    this.updateIsRequestsModalVisible(false);\n    this.updateIsCoHostModalVisible(false);\n    this.updateIsSettingsModalVisible(false);\n    this.updateIsDisplaySettingsModalVisible(false);\n    this.updateIsMediaSettingsModalVisible(false);\n    this.updateIsMenuModalVisible(false);\n    this.updateIsShareEventModalVisible(false);\n    this.updateIsConfirmExitModalVisible(false);\n    await this.disconnectAllSockets(this.consume_sockets.value);\n    await this.updateStatesToInitialValues();\n    this.updateMeetingProgressTime('00:00:00');\n    this.updateMeetingElapsedTime(0);\n    this.updateRecordingProgressTime('00:00:00');\n    this.updateRecordElapsedTime(0);\n    this.updateShowRecordButtons(false);\n\n    this.updateIsConfigureWhiteboardModalVisible(false);\n    this.updateIsWhiteboardModalVisible(false);\n    this.updateIsMenuModalVisible(false);\n    this.updateIsRecordingModalVisible(false);\n    this.updateIsPollModalVisible(false);\n    this.updateIsBreakoutRoomsModalVisible(false);\n    this.updateIsBackgroundModalVisible(false);\n    this.updateIsLoadingModalVisible(false);\n    this.updateIsConfirmHereModalVisible(false);\n\n    await sleep({ ms: 500 });\n    this.updateValidated(false);\n    //if on web, reload the page\n    window.location.reload();\n  }\n\n  computeDimensionsMethod = ({\n    containerWidthFraction = 1,\n    containerHeightFraction = 1,\n    mainSize,\n    doStack = true,\n    defaultFraction,\n  }: {\n    containerWidthFraction?: number;\n    containerHeightFraction?: number;\n    mainSize: number;\n    doStack?: boolean;\n    defaultFraction: number;\n  }): ComponentSizes => {\n    const parentWidth = window.innerWidth * containerWidthFraction;\n    const parentHeight = window.innerHeight * containerHeightFraction * defaultFraction;\n    let isWideScreen = parentWidth >= 768;\n\n    if (!isWideScreen && parentWidth > 1.5 * parentHeight) {\n      isWideScreen = true;\n    }\n\n    this.updateIsWideScreen(isWideScreen);\n\n    const dimensions = this.calculateDimensions({\n      parentWidth,\n      parentHeight,\n      isWideScreen,\n      mainSize,\n      doStack,\n    });\n    return dimensions;\n  };\n\n  calculateDimensions({\n    parentWidth,\n    parentHeight,\n    isWideScreen,\n    mainSize,\n    doStack,\n  }: {\n    parentWidth: number;\n    parentHeight: number;\n    isWideScreen: boolean;\n    mainSize: number;\n    doStack: boolean;\n  }): ComponentSizes {\n    if (doStack) {\n      return isWideScreen\n        ? {\n            mainHeight: Math.floor(parentHeight),\n            otherHeight: Math.floor(parentHeight),\n            mainWidth: Math.floor((mainSize / 100) * parentWidth),\n            otherWidth: Math.floor(((100 - mainSize) / 100) * parentWidth),\n          }\n        : {\n            mainHeight: Math.floor((mainSize / 100) * parentHeight),\n            otherHeight: Math.floor(((100 - mainSize) / 100) * parentHeight),\n            mainWidth: Math.floor(parentWidth),\n            otherWidth: Math.floor(parentWidth),\n          };\n    } else {\n      return {\n        mainHeight: Math.floor(parentHeight),\n        otherHeight: Math.floor(parentHeight),\n        mainWidth: Math.floor(parentWidth),\n        otherWidth: Math.floor(parentWidth),\n      };\n    }\n  }\n\n  handleOrientationChange() {\n    window.addEventListener('resize', this.handleResize.bind(this));\n    window.addEventListener('orientationchange', this.handleResize.bind(this));\n  }\n\n  setupResizeListener() {\n    this.handleResize();\n  }\n\n  orientation = window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';\n\n  async joinRoom(data: {\n    socket: Socket;\n    roomName: string;\n    islevel: string;\n    member: string;\n    sec: string;\n    apiUserName: string;\n  }): Promise<ResponseJoinRoom | null> {\n    const { socket, roomName, islevel, member, sec, apiUserName } = data;\n\n    try {\n      const response: ResponseJoinRoom | null = await this.joinRoomClient.joinRoomClient({\n        socket,\n        roomName,\n        islevel,\n        member,\n        sec,\n        apiUserName,\n      });\n\n      return response;\n    } catch (error) {\n      console.log('Error joining room:', error);\n      throw new Error('Failed to join the room. Please check your connection and try again.');\n    }\n  }\n\n  async join_Room({\n    socket,\n    roomName,\n    islevel,\n    member,\n    sec,\n    apiUserName,\n  }: {\n    socket: Socket;\n    roomName: string;\n    islevel: string;\n    member: string;\n    sec: string;\n    apiUserName: string;\n  }): Promise<void> {\n    const data: ResponseJoinRoom | null = await this.joinRoom({\n      socket: socket,\n      roomName: roomName,\n      islevel: islevel,\n      member: member,\n      sec: sec,\n      apiUserName: apiUserName,\n    });\n\n    if (data && data.success) {\n      this.roomData.next(data);\n\n      try {\n        this.updateRoomParametersClient.updateRoomParametersClient({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n            data: data,\n          },\n        });\n\n        if (data.isHost) {\n          this.updateIslevel('2');\n        } else {\n          this.updateIslevel('1');\n        }\n\n        if (data.secureCode) {\n          this.updateAdminPasscode(data.secureCode);\n        }\n\n        if (data.rtpCapabilities) {\n          const device_ = await this.createDeviceClient.createDeviceClient({\n            rtpCapabilities: data.rtpCapabilities,\n          });\n\n          if (device_) {\n            this.device.next(device_);\n          }\n        }\n      } catch {\n        /* handle error */\n      }\n    } else {\n      this.updateValidated(false);\n      try {\n        if (this.showAlert && data?.reason) {\n          this.showAlert({ message: data?.reason, type: 'danger', duration: 3000 });\n        }\n      } catch {\n        /* handle error */\n      }\n    }\n  }\n\n  onParticipantsFilterChange = (value: string): void => {\n    if (value && value.length > 0) {\n      this.filteredParticipants.next(\n        this.participants.value.filter((participant) =>\n          participant.name.toLowerCase().includes(value.toLowerCase()),\n        ),\n      );\n      this.participantsCounter.next(this.filteredParticipants.value.length);\n    } else {\n      this.filteredParticipants.next(this.participants.value);\n      this.participantsCounter.next(this.participants.value.length);\n    }\n  };\n\n  updateStatesToInitialValues = async () => {\n    const initialValues = initialValuesState as { [key: string]: any };\n    const updateFunctions = this.getAllParams() as unknown as {\n      [key: string]: (value: any) => void;\n    };\n\n    for (const key in initialValues) {\n      if (Object.prototype.hasOwnProperty.call(initialValues, key)) {\n        const updateFunctionName = `update${key.charAt(0).toUpperCase() + key.slice(1)}`;\n        const updateFunction = updateFunctions[updateFunctionName];\n\n        if (typeof updateFunction === 'function') {\n          try {\n            updateFunction(initialValues[key]);\n          } catch {\n            /* handle error */\n          }\n        }\n      }\n    }\n  };\n\n  faRecordVinyl = faRecordVinyl;\n  faPlayCircle = faPlayCircle;\n  faPauseCircle = faPauseCircle;\n  faStopCircle = faStopCircle;\n  faDotCircle = faDotCircle;\n  faCog = faCog;\n  faUsers = faUsers;\n  faMicrophone = faMicrophone;\n  faMicrophoneSlash = faMicrophoneSlash;\n  faVideo = faVideo;\n  faVideoSlash = faVideoSlash;\n  faSync = faSync;\n  faPhone = faPhone;\n  faShareAlt = faShareAlt;\n  faComments = faComments;\n  faChartBar = faChartBar;\n\n  onCloseMenuModal = () => {\n    this.updateIsMenuModalVisible(false);\n  };\n\n  onEventSettingsClose = () => {\n    this.updateIsSettingsModalVisible(false);\n  };\n\n  onCoHostClose = () => {\n    this.updateIsCoHostModalVisible(false);\n  };\n\n  onMediaSettingsClose = () => {\n    this.updateIsMediaSettingsModalVisible(false);\n  };\n\n  onDisplaySettingsClose = () => {\n    this.updateIsDisplaySettingsModalVisible(false);\n  };\n\n  onPollClose = () => {\n    this.updateIsPollModalVisible(false);\n  };\n\n  onBreakoutRoomsClose = () => {\n    this.updateIsBreakoutRoomsModalVisible(false);\n  };\n\n  onConfigureWhiteboardClose = () => {\n    this.updateIsConfigureWhiteboardModalVisible(false);\n  };\n\n  onMessagesClose = () => {\n    this.updateIsMessagesModalVisible(false);\n  };\n\n  onRecordingClose = () => {\n    this.updateIsRecordingModalVisible(false);\n  };\n\n  onParticipantsClose = () => {\n    this.updateIsParticipantsModalVisible(false);\n  };\n\n  onBackgroundClose = () => {\n    this.updateIsBackgroundModalVisible(false);\n  };\n\n  onConfirmExitClose = () => {\n    this.updateIsConfirmExitModalVisible(false);\n  };\n\n  onConfirmHereClose = () => {\n    this.updateIsConfirmHereModalVisible(false);\n  };\n\n  onScreenboardClose = () => {\n    this.updateIsScreenboardModalVisible(false);\n  };\n\n  onShareEventClose = () => {\n    this.updateIsShareEventModalVisible(false);\n  };\n\n  onAlertHide = () => {\n    this.updateAlertVisible(false);\n  };\n  recordTimerWidget = {\n    component: RecordTimerWidget,\n    injector: this.createInjector({ recordingProgressTime: this.recordingProgressTime.value }),\n  };\n\n  updateRecordTimerWidget = (\n    recordingProgressTime: string = this.recordingProgressTime.value,\n  ): { component: any; injector: Injector } => {\n    const recordTimerWidget = {\n      component: RecordTimerWidget,\n      injector: this.createInjector({ recordingProgressTime: recordingProgressTime }),\n    };\n\n    this.recordTimerWidget = { ...recordTimerWidget };\n\n    this.cdr.markForCheck();\n\n    return recordTimerWidget;\n  };\n\n  recordButton = [\n    {\n      icon: this.faRecordVinyl,\n      text: 'Record',\n      onPress: () => {\n        this.launchRecording.launchRecording({\n          updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n          isRecordingModalVisible: this.isRecordingModalVisible.value,\n          showAlert: this.showAlert.bind(this),\n          stopLaunchRecord: this.stopLaunchRecord.value,\n          canLaunchRecord: this.canLaunchRecord.value,\n          recordingAudioSupport: this.recordingAudioSupport.value,\n          recordingVideoSupport: this.recordingVideoSupport.value,\n          updateCanRecord: this.updateCanRecord.bind(this),\n          updateClearedToRecord: this.updateClearedToRecord.bind(this),\n          recordStarted: this.recordStarted.value,\n          recordPaused: this.recordPaused.value,\n          localUIMode: this.localUIMode.value,\n        });\n      },\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: true,\n    },\n  ];\n\n  recordButtons: MainButtonAlt[] = [];\n\n  recordButtonsArray: MainButtonAlt[] = [\n    {\n      icon: this.faPlayCircle,\n      active: () => !this.recordPaused.value,\n      onPress: () =>\n        this.updateRecording.updateRecording({\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      alternateIcon: this.faPauseCircle,\n      show: () => true,\n    },\n    {\n      icon: this.faStopCircle,\n      active: () => false,\n      onPress: () =>\n        this.stopRecording.stopRecording({\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'black',\n      show: () => true,\n    },\n    {\n      customComponent: () => this.updateRecordTimerWidget(),\n      show: () => true,\n      active: () => false,\n    },\n    {\n      icon: this.faDotCircle,\n      active: () => false,\n      onPress: () => console.log('Status pressed'),\n      activeColor: 'black',\n      inActiveColor: () => (this.recordPaused.value ? 'yellow' : 'red'),\n      show: () => true,\n    },\n    {\n      icon: this.faCog,\n      active: () => false,\n      onPress: () =>\n        this.launchRecording.launchRecording({\n          updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n          isRecordingModalVisible: this.isRecordingModalVisible.value,\n          showAlert: this.showAlert.bind(this),\n          stopLaunchRecord: this.stopLaunchRecord.value,\n          canLaunchRecord: this.canLaunchRecord.value,\n          recordingAudioSupport: this.recordingAudioSupport.value,\n          recordingVideoSupport: this.recordingVideoSupport.value,\n          updateCanRecord: this.updateCanRecord.bind(this),\n          updateClearedToRecord: this.updateClearedToRecord.bind(this),\n          recordStarted: this.recordStarted.value,\n          recordPaused: this.recordPaused.value,\n          localUIMode: this.localUIMode.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'black',\n      show: () => true,\n    },\n  ];\n\n  async updateRecordButtons() {\n    const recordButtons = this.recordButtonsArray.map((button) => {\n      return {\n        ...button,\n        active: typeof button.active === 'function' ? button.active() : button.active,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        customComponent: button.customComponent\n          ? typeof button.customComponent === 'function'\n            ? button.customComponent()\n            : button.customComponent\n          : undefined,\n        activeColor:\n          typeof button.inActiveColor === 'function'\n            ? button.inActiveColor()\n            : button.inActiveColor,\n        inActiveColor:\n          typeof button.inActiveColor === 'function'\n            ? button.inActiveColor()\n            : button.inActiveColor,\n      };\n    });\n    this.recordButtons = [...recordButtons];\n    await this.updateMenuRecordWidget(recordButtons);\n    this.updateControlBroadcastButtons();\n\n    this.cdr.markForCheck();\n  }\n\n  // Create instances of the custom widgets\n  messageWidget = {\n    component: MessageWidget,\n    injector: this.createInjector({\n      icon: this.faComments,\n      showBadge: this.showMessagesBadge.value,\n      badgeValue: 1,\n      iconColor: 'black',\n    }),\n  };\n\n  menuRecordWidget = {\n    component: MenuRecordWidget,\n    injector: this.createInjector({\n      buttons: this.recordButtons,\n      showAspect: true,\n      direction: 'horizontal',\n    }),\n  };\n\n  updateMenuRecordWidget = (recordButtons: MainButtonAlt[] = this.recordButtons): any => {\n    const menuRecordWidget = {\n      component: MenuRecordWidget,\n      injector: this.createInjector({\n        buttons: recordButtons,\n        showAspect: true,\n        direction: 'horizontal',\n      }),\n    };\n\n    this.menuRecordWidget = { ...menuRecordWidget };\n\n    this.cdr.markForCheck();\n\n    return menuRecordWidget;\n  };\n\n  menuParticipantsWidget = {\n    component: MenuParticipantsWidget,\n    injector: this.createInjector({\n      icon: this.faChartBar,\n      participantsCounter: this.participantsCounter.value,\n      iconColor: 'black',\n    }),\n  };\n\n  updateMenuParticipantsWidget = (count: number = this.participantsCounter.value): any => {\n    const menuParticipantsWidget = {\n      component: MenuParticipantsWidget,\n      injector: this.createInjector({\n        icon: this.faChartBar,\n        participantsCounter: count,\n        iconColor: 'black',\n      }),\n    };\n\n    this.menuParticipantsWidget = { ...menuParticipantsWidget };\n\n    this.cdr.markForCheck();\n\n    return menuParticipantsWidget;\n  };\n\n  controlBroadcastButtons: ButtonTouch[] = [];\n\n  updateControlBroadcastButtons() {\n    this.controlBroadcastButtons = this.controlBroadcastButtonsArray.map((button) => {\n      return {\n        ...button,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        active: typeof button.active === 'function' ? button.active() : button.active,\n      };\n    });\n  }\n\n  controlBroadcastButtonsArray: ButtonTouch[] = [\n    {\n      icon: this.faUsers,\n      active: true,\n      alternateIcon: this.faUsers,\n      onPress: () =>\n        this.launchParticipants.launchParticipants({\n          updateIsParticipantsModalVisible: this.updateIsParticipantsModalVisible.bind(this),\n          isParticipantsModalVisible: this.isParticipantsModalVisible.value,\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faShareAlt,\n      active: true,\n      alternateIcon: this.faShareAlt,\n      onPress: () => this.updateIsShareEventModalVisible(!this.isShareEventModalVisible.value),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: () => true,\n    },\n    {\n      customComponent: this.messageWidget,\n      onPress: () =>\n        this.launchMessages.launchMessages({\n          updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n          isMessagesModalVisible: this.isMessagesModalVisible.value,\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faSync,\n      active: true,\n      alternateIcon: this.faSync,\n      onPress: () =>\n        this.switchVideoAlt.switchVideoAlt({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faVideoSlash,\n      alternateIcon: this.faVideo,\n      active: () => this.videoActive.value,\n      onPress: () =>\n        this.clickVideo.clickVideo({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      show: () => this.islevel.value == '2',\n      activeColor: 'green',\n      inActiveColor: 'red',\n    },\n    {\n      icon: this.faMicrophoneSlash,\n      alternateIcon: this.faMicrophone,\n      active: () => this.micActive.value,\n      onPress: () =>\n        this.clickAudio.clickAudio({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      show: () => this.islevel.value == '2',\n    },\n    {\n      customComponent: () => this.menuParticipantsWidget,\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faPhone,\n      active: this.endCallActive.value,\n      onPress: () =>\n        this.launchConfirmExit.launchConfirmExit({\n          updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n          isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      show: () => true,\n    },\n    {\n      icon: this.faPhone,\n      active: this.endCallActive.value,\n      onPress: () => console.log('End Call pressed'),\n      activeColor: 'transparent',\n      inActiveColor: 'transparent',\n      backgroundColor: { default: 'transparent' },\n      show: () => false,\n    },\n  ];\n\n  async connect_Socket(\n    apiUserName: string,\n    apiKey: string,\n    apiToken: string,\n  ): Promise<Socket | null> {\n    if (this.socket.value && this.socket.value.id) {\n      this.socket.value.on('disconnect', async () => {\n        await this.disconnect.disconnect({\n          showAlert: this.showAlert.bind(this),\n          redirectURL: this.redirectURL.value,\n          onWeb: true,\n          updateValidated: this.updateValidated.bind(this),\n        });\n        if (this.videoAlreadyOn.value) {\n          await this.clickVideo.clickVideo({\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        }\n        if (this.audioAlreadyOn.value) {\n          await this.clickAudio.clickAudio({\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        }\n\n        await this.closeAndReset();\n      });\n\n      this.socket.value.on('allMembers', async (membersData: AllMembersData) => {\n        if (membersData) {\n          await this.allMembers.allMembers({\n            apiUserName: apiUserName,\n            apiKey: '', //not recommended - use apiToken instead. Use for testing/development only\n            apiToken: apiToken,\n            members: membersData.members,\n            requestss: membersData.requests ? membersData.requests : this.requestList.value,\n            coHoste: membersData.coHost ? membersData.coHost : this.coHost.value,\n            coHostRes: membersData.coHostResponsibilities\n              ? membersData.coHostResponsibilities\n              : this.coHostResponsibility.value,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            consume_sockets: this.consume_sockets.value,\n          });\n        }\n      });\n\n      this.socket.value.on('allMembersRest', async (membersData: AllMembersRestData) => {\n        if (membersData) {\n          await this.allMembersRest.allMembersRest({\n            apiUserName: apiUserName,\n            apiKey: '', // not recommended - use apiToken instead. Use for testing/development only\n            members: membersData.members,\n            apiToken: apiToken,\n            settings: membersData.settings,\n            coHoste: membersData.coHost ? membersData.coHost : this.coHost.value,\n            coHostRes: membersData.coHostResponsibilities\n              ? membersData.coHostResponsibilities\n              : this.coHostResponsibility.value,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            consume_sockets: this.consume_sockets.value,\n          });\n        }\n      });\n\n      this.socket.value.on('personJoined', async ({ name }: { name: string }) => {\n        this.personJoined.personJoined({\n          name,\n          showAlert: this.showAlert.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'roomRecordParams',\n        async ({ recordParams }: { recordParams: RecordParams }) => {\n          this.roomRecordParams.roomRecordParams({\n            recordParams,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('ban', async ({ name }: { name: string }) => {\n        await this.banParticipant.banParticipant({\n          name,\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        });\n      });\n\n      this.socket.value.on(\n        'producer-media-paused',\n        async ({\n          producerId,\n          kind,\n          name,\n        }: {\n          producerId: string;\n          kind: 'video' | 'audio' | 'screenshare' | 'screen';\n          name: string;\n        }) => {\n          await this.producerMediaPaused.producerMediaPaused({\n            producerId,\n            kind,\n            name,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'producer-media-resumed',\n        async ({ kind, name }: { kind: 'audio'; name: string }) => {\n          await this.producerMediaResumed.producerMediaResumed({\n            kind,\n            name,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'producer-media-closed',\n        async ({\n          producerId,\n          kind,\n        }: {\n          producerId: string;\n          kind: 'video' | 'audio' | 'screenshare' | 'screen';\n        }) => {\n          if (producerId && kind) {\n            await this.producerMediaClosed.producerMediaClosed({\n              producerId,\n              kind,\n              parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            });\n          }\n        },\n      );\n\n      this.socket.value.on('meetingEnded', async () => {\n        await this.meetingEnded.meetingEnded({\n          showAlert: this.showAlert.bind(this),\n          redirectURL: this.redirectURL.value,\n          onWeb: true,\n          eventType: this.eventType.value,\n          updateValidated: this.updateValidated.bind(this),\n        });\n\n        if (this.videoAlreadyOn.value) {\n          await this.clickVideo.clickVideo({\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        }\n        if (this.audioAlreadyOn.value) {\n          await this.clickAudio.clickAudio({\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        }\n\n        await this.closeAndReset();\n      });\n\n      this.socket.value.on('disconnectUserSelf', async () => {\n        await this.disconnectUserSelf.disconnectUserSelf({\n          socket: this.socket.value,\n          member: this.member.value,\n          roomName: this.roomName.value,\n        });\n      });\n\n      this.socket.value.on('receiveMessage', async ({ message }: { message: Message }) => {\n        await this.receiveMessage.receiveMessage({\n          message,\n          messages: this.messages.value,\n          participantsAll: this.participantsAll.value,\n          member: this.member.value,\n          eventType: this.eventType.value,\n          islevel: this.islevel.value,\n          coHost: this.coHost.value,\n          updateMessages: this.updateMessages.bind(this),\n          updateShowMessagesBadge: this.updateShowMessagesBadge.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'meetingTimeRemaining',\n        async ({ timeRemaining }: { timeRemaining: number }) => {\n          await this.meetingTimeRemaining.meetingTimeRemaining({\n            timeRemaining,\n            showAlert: this.showAlert.bind(this),\n            eventType: this.eventType.value,\n          });\n        },\n      );\n\n      this.socket.value.on('meetingStillThere', async () => {\n        this.meetingStillThere.meetingStillThere({\n          updateIsConfirmHereModalVisible: this.updateIsConfirmHereModalVisible.bind(this),\n        });\n      });\n\n      this.socket.value.on('startRecords', async () => {\n        await this.startRecords.startRecords({\n          roomName: this.roomName.value,\n          member: this.member.value,\n          socket: this.socket.value,\n        });\n      });\n\n      this.socket.value.on('reInitiateRecording', async () => {\n        await this.reInitiateRecording.reInitiateRecording({\n          roomName: this.roomName.value,\n          member: this.member.value,\n          socket: this.socket.value,\n          adminRestrictSetting: this.adminRestrictSetting.value,\n        });\n      });\n\n      this.socket.value.on(\n        'updateConsumingDomains',\n        async ({ domains, alt_domains }: UpdateConsumingDomainsData) => {\n          await this.updateConsumingDomains.updateConsumingDomains({\n            domains,\n            alt_domains,\n            apiUserName,\n            apiKey,\n            apiToken,\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'RecordingNotice',\n        async ({ state, userRecordingParam, pauseCount, timeDone }: RecordingNoticeData) => {\n          await this.recordingNotice.RecordingNotice({\n            state,\n            userRecordingParam,\n            pauseCount,\n            timeDone,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('timeLeftRecording', async ({ timeLeft }: { timeLeft: number }) => {\n        this.timeLeftRecording.timeLeftRecording({\n          timeLeft,\n          showAlert: this.showAlert.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'stoppedRecording',\n        async ({ state, reason }: { state: string; reason: string }) => {\n          await this.stoppedRecording.stoppedRecording({\n            state,\n            reason,\n            showAlert: this.showAlert.bind(this),\n          });\n        },\n      );\n\n      await this.join_Room({\n        socket: this.socket.value,\n        roomName: this.roomName.value,\n        islevel: this.islevel.value,\n        member: this.member.value,\n        sec: this.apiToken.value,\n        apiUserName: this.apiUserName.value,\n      });\n      await this.receiveRoomMessages.receiveRoomMessages({\n        socket: this.socket.value,\n        roomName: this.roomName.value,\n        updateMessages: this.updateMessages.bind(this),\n      });\n      this.prepopulateUserMedia.prepopulateUserMedia({\n        name: this.hostLabel.value,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n\n      return this.socket.value;\n    } else {\n      return null;\n    }\n  }\n}\n","import {\n  Component,\n  HostListener,\n  Injector,\n  ChangeDetectorRef,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { Socket } from 'socket.io-client';\nimport {\n  faPlayCircle,\n  faPauseCircle,\n  faStopCircle,\n  faDotCircle,\n  faRecordVinyl,\n  faCog,\n  faUsers,\n  faClock,\n  faUserPlus,\n  faTools,\n  faDesktop,\n  faPoll,\n  faUserFriends,\n  faChalkboardTeacher,\n  faMicrophone,\n  faMicrophoneSlash,\n  faVideo,\n  faVideoSlash,\n  faPhone,\n  faBars,\n  faComments,\n  faChartBar,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { initialValuesState } from '../../methods/utils/initial-values.util';\n\nimport { MainAspectComponent } from '../display-components/main-aspect-component/main-aspect-component.component';\nimport { LoadingModal } from '../display-components/loading-modal/loading-modal.component';\nimport { ControlButtonsComponent } from '../display-components/control-buttons-component/control-buttons-component.component';\nimport { ControlButtonsAltComponent } from '../display-components/control-buttons-alt-component/control-buttons-alt-component.component';\nimport { OtherGridComponent } from '../display-components/other-grid-component/other-grid-component.component';\nimport { MainScreenComponent } from '../display-components/main-screen-component/main-screen-component.component';\nimport { MainGridComponent } from '../display-components/main-grid-component/main-grid-component.component';\nimport { SubAspectComponent } from '../display-components/sub-aspect-component/sub-aspect-component.component';\nimport { MainContainerComponent } from '../display-components/main-container-component/main-container-component.component';\nimport { AlertComponent } from '../display-components/alert-component/alert.component.component';\nimport { MenuModal } from '../menu-components/menu-modal/menu-modal.component';\nimport { RecordingModal } from '../recording-components/recording-modal/recording-modal.component';\nimport { RequestsModal } from '../requests-components/requests-modal/requests-modal.component';\nimport { WaitingRoomModal } from '../waiting-components/waiting-room-modal.component';\nimport { DisplaySettingsModal } from '../display-settings-components/display-settings-modal.component';\nimport { EventSettingsModal } from '../event-settings-components/event-settings-modal/event-settings-modal.component';\nimport { CoHostModal } from '../co-host-components/co-host-modal/co-host-modal.component';\nimport { ParticipantsModal } from '../participants-components/participants-modal/participants-modal.component';\nimport { MessagesModal } from '../message-components/messages-modal/messages-modal.component';\nimport { MediaSettingsModal } from '../media-settings-components/media-settings-modal/media-settings-modal.component';\nimport { ConfirmExitModal } from '../exit-components/confirm-exit-modal/confirm-exit-modal.component';\nimport { ConfirmHereModal } from '../misc-components/confirm-here-modal/confirm-here-modal.component';\nimport { ShareEventModal } from '../misc-components/share-event-modal/share-event-modal.component';\nimport {\n  WelcomePage,\n  WelcomePageOptions,\n} from '../misc-components/welcome-page/welcome-page.component';\n\nimport { PollModal } from '../polls-components/poll-modal/poll-modal.component';\nimport { BackgroundModal } from '../background-components/background-modal/background-modal.component';\nimport { BreakoutRoomsModal } from '../breakout-components/breakout-rooms-modal.component';\nimport { ConfigureWhiteboardModal } from '../whiteboard-components/configure-whiteboard-modal/configure-whiteboard-modal.component';\nimport { Whiteboard } from '../whiteboard-components/whiteboard/whiteboard.component';\nimport { Screenboard } from '../screenboard-components/screenboard/screenboard.component';\nimport { ScreenboardModal } from '../screenboard-components/screenboard-modal/screenboard-modal.component';\n// pagination and display of media (samples)\nimport { Pagination } from '../display-components/pagination/pagination.component';\nimport { FlexibleGrid } from '../display-components/flexible-grid/flexible-grid.component';\nimport { FlexibleVideo } from '../display-components/flexible-video/flexible-video.component';\nimport { AudioGrid } from '../display-components/audio-grid/audio-grid.component';\n\nimport { MenuWidget } from '../display-components/control-widgets/menu-widget.component';\nimport { MessageWidget } from '../display-components/control-widgets/message-widget.component';\nimport { MenuRecordWidget } from '../display-components/control-widgets/menu-record-widget.component';\nimport { RecordTimerWidget } from '../display-components/control-widgets/record-timer-widget.component';\nimport { MenuParticipantsWidget } from '../display-components/control-widgets/menu-participants-widget.component';\nimport { ScreenShareWidget } from '../display-components/control-widgets/screenshare-widget.component';\n\nimport {\n  ResponseJoinRoom,\n  CoHostResponsibility,\n  EventType,\n  Participant,\n  ConsumeSocket,\n  MeetingRoomParams,\n  VidCons,\n  HParamsType,\n  VParamsType,\n  ScreenParamsType,\n  AParamsType,\n  UserRecordingParams,\n  Stream,\n  AudioDecibels,\n  ScreenState,\n  GridSizes,\n  CustomMediaComponent,\n  Message,\n  WaitingRoomParticipant,\n  ComponentSizes,\n  Transport as TransportType,\n  Shape,\n  Poll,\n  BreakoutParticipant,\n  WhiteboardUser,\n  Request,\n  AllMembersData,\n  AllMembersRestData,\n  BreakoutRoomUpdatedData,\n  AllWaitingRoomMembersData,\n  MainButtonAlt,\n  MainCustomButton,\n  RecordParams,\n  SeedData,\n  UpdatedCoHostData,\n  Settings,\n  UpdateConsumingDomainsData,\n  RecordingNoticeData,\n  HostRequestResponseData,\n  PollUpdatedData,\n  PreJoinPageOptions,\n} from '../../@types/types';\n\n//import methods for control (samples)\n// Import methods for control (samples)\nimport { LaunchMenuModal } from '../../methods/menu-methods/launch-menu-modal.service';\nimport { LaunchRecording } from '../../methods/recording-methods/launch-recording.service';\nimport { StartRecording } from '../../methods/recording-methods/start-recording.service';\nimport { ConfirmRecording } from '../../methods/recording-methods/confirm-recording.service';\nimport { LaunchWaiting } from '../../methods/waiting-methods/launch-waiting.service';\nimport { launchCoHost } from '../../methods/co-host-methods/launch-co-host.service';\nimport { LaunchMediaSettings } from '../../methods/media-settings-methods/launch-media-settings.service';\nimport { LaunchDisplaySettings } from '../../methods/display-settings-methods/launch-display-settings.service';\nimport { LaunchSettings } from '../../methods/settings-methods/launch-settings.service';\nimport { LaunchRequests } from '../../methods/requests-methods/launch-requests.service';\nimport { LaunchParticipants } from '../../methods/participants-methods/launch-participants.service';\nimport { LaunchMessages } from '../../methods/message-methods/launch-messages.service';\nimport { LaunchConfirmExit } from '../../methods/exit-methods/launch-confirm-exit.service';\n\nimport { LaunchPoll } from '../../methods/polls-methods/launch-poll.service';\nimport { LaunchBreakoutRooms } from '../../methods/breakout-room-methods/launch-breakout-rooms.service';\nimport { LaunchConfigureWhiteboard } from '../../methods/whiteboard-methods/launch-configure-whiteboard.service';\n\n// mediasfu functions -- examples\nimport { SocketManager } from '../../sockets/socket-manager.service';\nimport { JoinRoomClient } from '../../producer-client/producer-client-emits/join-room-client.service';\nimport { UpdateRoomParametersClient } from '../../producer-client/producer-client-emits/update-room-parameters-client.service';\nimport { CreateDeviceClient } from '../../producer-client/producer-client-emits/create-device-client.service';\n\nimport { ClickVideo } from '../../methods/stream-methods/click-video.service';\nimport { ClickAudio } from '../../methods/stream-methods/click-audio.service';\nimport { ClickScreenShare } from '../../methods/stream-methods/click-screen-share.service';\nimport { StreamSuccessVideo } from '../../consumers/stream-success-video.service';\nimport { StreamSuccessAudio } from '../../consumers/stream-success-audio.service';\nimport { StreamSuccessScreen } from '../../consumers/stream-success-screen.service';\nimport { StreamSuccessAudioSwitch } from '../../consumers/stream-success-audio-switch.service';\nimport { CheckPermission } from '../../consumers/check-permission.service';\n\n// mediasfu functions\nimport { UpdateMiniCardsGrid } from '../../consumers/update-mini-cards-grid.service';\nimport { MixStreams } from '../../consumers/mix-streams.service';\nimport { DispStreams } from '../../consumers/disp-streams.service';\nimport { StopShareScreen } from '../../consumers/stop-share-screen.service';\nimport { CheckScreenShare } from '../../consumers/check-screen-share.service';\nimport { StartShareScreen } from '../../consumers/start-share-screen.service';\nimport { RequestScreenShare } from '../../consumers/request-screen-share.service';\nimport { ReorderStreams } from '../../consumers/reorder-streams.service';\nimport { PrepopulateUserMedia } from '../../consumers/prepopulate-user-media.service';\nimport { GetVideos } from '../../consumers/get-videos.service';\nimport { RePort } from '../../consumers/re-port.service';\nimport { Trigger } from '../../consumers/trigger.service';\nimport { ConsumerResume } from '../../consumers/consumer-resume.service';\nimport { ConnectSendTransportAudio } from '../../consumers/connect-send-transport-audio.service';\nimport { ConnectSendTransportVideo } from '../../consumers/connect-send-transport-video.service';\nimport { ConnectSendTransportScreen } from '../../consumers/connect-send-transport-screen.service';\nimport { ProcessConsumerTransports } from '../../consumers/process-consumer-transports.service';\nimport { ResumePauseStreams } from '../../consumers/resume-pause-streams.service';\nimport { Readjust } from '../../consumers/readjust.service';\nimport { CheckGrid } from '../../consumers/check-grid.service';\nimport { GetEstimate } from '../../consumers/get-estimate.service';\nimport { CalculateRowsAndColumns } from '../../consumers/calculate-rows-and-columns.service';\nimport { AddVideosGrid } from '../../consumers/add-videos-grid.service';\nimport { OnScreenChanges } from '../../consumers/on-screen-changes.service';\nimport { sleep } from '../../methods/utils/sleep.util';\nimport { ChangeVids } from '../../consumers/change-vids.service';\nimport { CompareActiveNames } from '../../consumers/compare-active-names.service';\nimport { CompareScreenStates } from '../../consumers/compare-screen-states.service';\nimport { CreateSendTransport } from '../../consumers/create-send-transport.service';\nimport { ResumeSendTransportAudio } from '../../consumers/resume-send-transport-audio.service';\nimport { ReceiveAllPipedTransports } from '../../consumers/receive-all-piped-transports.service';\nimport { DisconnectSendTransportVideo } from '../../consumers/disconnect-send-transport-video.service';\nimport { DisconnectSendTransportAudio } from '../../consumers/disconnect-send-transport-audio.service';\nimport { DisconnectSendTransportScreen } from '../../consumers/disconnect-send-transport-screen.service';\nimport { ConnectSendTransport } from '../../consumers/connect-send-transport.service';\nimport { GetPipedProducersAlt } from '../../consumers/get-piped-producers-alt.service';\nimport { SignalNewConsumerTransport } from '../../consumers/signal-new-consumer-transport.service';\nimport { ConnectRecvTransport } from '../../consumers/connect-recv-transport.service';\nimport { ReUpdateInter } from '../../consumers/re-update-inter.service';\nimport { UpdateParticipantAudioDecibels } from '../../consumers/update-participant-audio-decibels.service';\nimport { CloseAndResize } from '../../consumers/close-and-resize.service';\nimport { AutoAdjust } from '../../consumers/auto-adjust.service';\nimport { SwitchUserVideoAlt } from '../../consumers/switch-user-video-alt.service';\nimport { SwitchUserVideo } from '../../consumers/switch-user-video.service';\nimport { SwitchUserAudio } from '../../consumers/switch-user-audio.service';\nimport { ReceiveRoomMessages } from '../../consumers/receive-room-messages.service';\nimport { FormatNumber } from '../../methods/utils/format-number.service';\nimport { ConnectIps } from '../../consumers/connect-ips.service';\n\nimport { PollUpdated } from '../../methods/polls-methods/poll-updated.service';\nimport { HandleCreatePoll } from '../../methods/polls-methods/handle-create-poll.service';\nimport { HandleVotePoll } from '../../methods/polls-methods/handle-vote-poll.service';\nimport { HandleEndPoll } from '../../methods/polls-methods/handle-end-poll.service';\n\nimport { BreakoutRoomUpdated } from '../../methods/breakout-room-methods/breakout-room-updated.service';\n\nimport { StartMeetingProgressTimer } from '../../methods/utils/meeting-timer/start-meeting-progress-timer.service';\nimport { UpdateRecording } from '../../methods/recording-methods/update-recording.service';\nimport { StopRecording } from '../../methods/recording-methods/stop-recording.service';\n\nimport { UserWaiting } from '../../producers/socket-receive-methods/user-waiting.service';\nimport { PersonJoined } from '../../producers/socket-receive-methods/person-joined.service';\nimport { AllWaitingRoomMembers } from '../../producers/socket-receive-methods/all-waiting-room-members.service';\nimport { RoomRecordParams } from '../../producers/socket-receive-methods/room-record-params.service';\nimport { BanParticipant } from '../../producers/socket-receive-methods/ban-participant.service';\nimport { UpdatedCoHost } from '../../producers/socket-receive-methods/updated-co-host.service';\nimport { ParticipantRequested } from '../../producers/socket-receive-methods/participant-requested.service';\nimport { ScreenProducerId } from '../../producers/socket-receive-methods/screen-producer-id.service';\nimport { UpdateMediaSettings } from '../../producers/socket-receive-methods/update-media-settings.service';\nimport { ProducerMediaPaused } from '../../producers/socket-receive-methods/producer-media-paused.service';\nimport { ProducerMediaResumed } from '../../producers/socket-receive-methods/producer-media-resumed.service';\nimport { ProducerMediaClosed } from '../../producers/socket-receive-methods/producer-media-closed.service';\nimport { ControlMediaHost } from '../../producers/socket-receive-methods/control-media-host.service';\nimport { MeetingEnded } from '../../producers/socket-receive-methods/meeting-ended.service';\nimport { DisconnectUserSelf } from '../../producers/socket-receive-methods/disconnect-user-self.service';\nimport { ReceiveMessage } from '../../producers/socket-receive-methods/receive-message.service';\nimport { MeetingTimeRemaining } from '../../producers/socket-receive-methods/meeting-time-remaining.service';\nimport { MeetingStillThere } from '../../producers/socket-receive-methods/meeting-still-there.service';\nimport { StartRecords } from '../../producers/socket-receive-methods/start-records.service';\nimport { ReInitiateRecording } from '../../producers/socket-receive-methods/re-initiate-recording.service';\nimport { GetDomains } from '../../producers/socket-receive-methods/get-domains.service';\nimport { UpdateConsumingDomains } from '../../producers/socket-receive-methods/update-consuming-domains.service';\nimport { RecordingNotice } from '../../producers/socket-receive-methods/recording-notice.service';\nimport { TimeLeftRecording } from '../../producers/socket-receive-methods/time-left-recording.service';\nimport { StoppedRecording } from '../../producers/socket-receive-methods/stopped-recording.service';\nimport { HostRequestResponse } from '../../producers/socket-receive-methods/host-request-response.service';\nimport { AllMembers } from '../../producers/socket-receive-methods/all-members.service';\nimport { AllMembersRest } from '../../producers/socket-receive-methods/all-members-rest.service';\nimport { Disconnect } from '../../producers/socket-receive-methods/disconnect.service';\n\nimport { CaptureCanvasStream } from '../../methods/whiteboard-methods/capture-canvas-stream.service';\nimport { ResumePauseAudioStreams } from '../../consumers/resume-pause-audio-streams.service';\nimport { ProcessConsumerTransportsAudio } from '../../consumers/process-consumer-transports-audio.service';\n\nimport {\n  Device,\n  Producer,\n  ProducerOptions,\n  RtpCapabilities,\n  Transport,\n} from 'mediasoup-client/lib/types';\nimport { SelfieSegmentation } from '@mediapipe/selfie_segmentation';\n\n/**\n * Options for configuring the MediasfuWebinar component.\n *\n * @typedef {Object} MediasfuWebinarOptions\n * @property {(options: PreJoinPageOptions | WelcomePageOptions) => HTMLElement} [PrejoinPage] - A function that returns an HTMLElement for the pre-join page.\n * @property {{ apiUserName: string; apiKey: string }} [credentials] - Credentials for API access, including username and API key.\n * @property {boolean} [useLocalUIMode] - Flag to determine if the local UI mode should be used.\n * @property {SeedData} [seedData] - Data used for seeding the component.\n * @property {boolean} [useSeed] - Flag to determine if seed data should be used.\n * @property {string} [imgSrc] - Source URL for an image to be used in the component.\n */\nexport type MediasfuWebinarOptions = {\n  PrejoinPage?: (options: PreJoinPageOptions | WelcomePageOptions) => HTMLElement;\n  credentials?: { apiUserName: string; apiKey: string };\n  useLocalUIMode?: boolean;\n  seedData?: SeedData;\n  useSeed?: boolean;\n  imgSrc?: string;\n};\n\n@Component({\n  selector: 'app-mediasfu-webinar',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    CommonModule,\n    BreakoutRoomsModal,\n    BackgroundModal,\n    CoHostModal,\n    AlertComponent,\n    AudioGrid,\n    ControlButtonsAltComponent,\n    ControlButtonsComponent,\n    FlexibleGrid,\n    FlexibleVideo,\n    LoadingModal,\n    Pagination,\n    SubAspectComponent,\n    DisplaySettingsModal,\n    EventSettingsModal,\n    ConfirmExitModal,\n    MediaSettingsModal,\n    MenuModal,\n    MessagesModal,\n    ConfirmHereModal,\n    ShareEventModal,\n    WelcomePage,\n    ParticipantsModal,\n    PollModal,\n    RecordingModal,\n    RequestsModal,\n    MainAspectComponent,\n    MainContainerComponent,\n    MainGridComponent,\n    MainScreenComponent,\n    OtherGridComponent,\n    Screenboard,\n    ScreenboardModal,\n    Whiteboard,\n    ConfigureWhiteboardModal,\n    WaitingRoomModal,\n    MenuWidget,\n    MessageWidget,\n    MenuRecordWidget,\n    RecordTimerWidget,\n    MenuParticipantsWidget,\n    ScreenShareWidget,\n  ],\n  template: `\n    <div\n      class=\"MediaSFU\"\n      [ngStyle]=\"{\n        height: '100vh',\n        width: '100vw',\n        maxWidth: '100vw',\n        maxHeight: '100vh',\n        overflow: 'hidden'\n      }\"\n    >\n      <ng-container *ngIf=\"!validated.value; else mainContent\">\n        <ng-container\n          *ngComponentOutlet=\"\n            PrejoinPageComponent.component;\n            injector: PrejoinPageComponent.injector\n          \"\n        >\n        </ng-container>\n      </ng-container>\n\n      <ng-template #mainContent>\n        <app-main-container-component>\n          <app-main-aspect-component\n            [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n            [defaultFraction]=\"1 - controlHeight.value\"\n            [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n            [updateIsWideScreen]=\"updateIsWideScreen\"\n            [updateIsMediumScreen]=\"updateIsMediumScreen\"\n            [updateIsSmallScreen]=\"updateIsSmallScreen\"\n          >\n            <app-main-screen-component\n              [doStack]=\"true\"\n              [mainSize]=\"mainHeightWidth.value\"\n              [defaultFraction]=\"1 - controlHeight.value\"\n              [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n              [updateComponentSizes]=\"updateComponentSizes\"\n            >\n              <app-main-grid-component\n                [height]=\"componentSizes.value.mainHeight\"\n                [width]=\"componentSizes.value.mainWidth\"\n                [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                [mainSize]=\"mainHeightWidth.value\"\n                [showAspect]=\"mainHeightWidth.value > 0\"\n                [timeBackgroundColor]=\"recordState.value\"\n                [meetingProgressTime]=\"meetingProgressTime.value\"\n              >\n                <app-flexible-video\n                  [customWidth]=\"componentSizes.value.mainWidth\"\n                  [customHeight]=\"componentSizes.value.mainHeight\"\n                  [rows]=\"1\"\n                  [columns]=\"1\"\n                  [componentsToRender]=\"mainGridStream.value\"\n                  [showAspect]=\"\n                    mainGridStream.value.length > 0 &&\n                    !(whiteboardStarted.value && !whiteboardEnded.value)\n                  \"\n                  [localStreamScreen]=\"localStreamScreen.value!\"\n                  [annotateScreenStream]=\"annotateScreenStream.value\"\n                  [Screenboard]=\"shared.value ? ScreenboardWidget : undefined\"\n                >\n                </app-flexible-video>\n                <app-whiteboard\n                  [customWidth]=\"componentSizes.value.mainWidth\"\n                  [customHeight]=\"componentSizes.value.mainHeight\"\n                  [parameters]=\"mediaSFUParameters\"\n                  [showAspect]=\"whiteboardStarted.value && !whiteboardEnded.value\"\n                ></app-whiteboard>\n              </app-main-grid-component>\n\n              <app-other-grid-component\n                [height]=\"componentSizes.value.otherHeight\"\n                [width]=\"componentSizes.value.otherWidth\"\n                [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                [showAspect]=\"mainHeightWidth.value !== 100\"\n                [timeBackgroundColor]=\"recordState.value\"\n                [showTimer]=\"mainHeightWidth.value === 0\"\n                [meetingProgressTime]=\"meetingProgressTime.value\"\n              >\n                <div\n                  *ngIf=\"doPaginate.value\"\n                  [ngStyle]=\"{\n                    width:\n                      paginationDirection.value == 'horizontal'\n                        ? componentSizes.value.otherWidth\n                        : paginationHeightWidth.value,\n                    height:\n                      paginationDirection.value == 'horizontal'\n                        ? paginationHeightWidth.value\n                        : componentSizes.value.otherHeight,\n                    display: doPaginate.value ? 'flex' : 'none',\n                    'flex-direction': paginationDirection.value == 'horizontal' ? 'row' : 'column',\n                    'justify-content': 'center',\n                    'align-items': 'center',\n                    padding: '0',\n                    margin: '0'\n                  }\"\n                >\n                  <app-pagination\n                    [totalPages]=\"numberPages.value\"\n                    [currentUserPage]=\"currentUserPage.value\"\n                    [showAspect]=\"doPaginate.value\"\n                    [paginationHeight]=\"paginationHeightWidth.value\"\n                    [direction]=\"paginationDirection.value\"\n                    [parameters]=\"mediaSFUParameters\"\n                  ></app-pagination>\n                </div>\n\n                <app-audio-grid [componentsToRender]=\"audioOnlyStreams.value\"></app-audio-grid>\n\n                <app-flexible-grid\n                  [customWidth]=\"gridSizes.value.gridWidth!\"\n                  [customHeight]=\"gridSizes.value.gridHeight!\"\n                  [rows]=\"gridRows.value\"\n                  [columns]=\"gridCols.value\"\n                  [componentsToRender]=\"otherGridStreams.value[0]\"\n                  [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                ></app-flexible-grid>\n                <app-flexible-grid\n                  [customWidth]=\"gridSizes.value.altGridWidth!\"\n                  [customHeight]=\"gridSizes.value.altGridHeight!\"\n                  [rows]=\"altGridRows.value\"\n                  [columns]=\"altGridCols.value\"\n                  [componentsToRender]=\"otherGridStreams.value[1]\"\n                  [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                ></app-flexible-grid>\n              </app-other-grid-component>\n            </app-main-screen-component>\n          </app-main-aspect-component>\n\n          <app-sub-aspect-component\n            [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n            [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n            [defaultFractionSub]=\"controlHeight.value\"\n          >\n            <app-control-buttons-component\n              [buttons]=\"controlButtons\"\n              [buttonColor]=\"'black'\"\n              [buttonBackgroundColor]=\"{\n                default: 'transparent',\n                pressed: 'transparent'\n              }\"\n              [alignment]=\"'space-between'\"\n              [vertical]=\"false\"\n              [buttonsContainerStyle]=\"{\n                marginTop: '0',\n                marginBottom: '0',\n                backgroundColor: 'transparent'\n              }\"\n            ></app-control-buttons-component>\n          </app-sub-aspect-component>\n        </app-main-container-component>\n      </ng-template>\n\n      <app-menu-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isVisible]=\"isMenuModalVisible.value\"\n        [onClose]=\"onCloseMenuModal\"\n        [customButtons]=\"customMenuButtons\"\n        [roomName]=\"roomName.value\"\n        [adminPasscode]=\"adminPasscode.value\"\n        [islevel]=\"islevel.value\"\n      ></app-menu-modal>\n\n      <app-event-settings-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isEventSettingsModalVisible]=\"isSettingsModalVisible.value\"\n        [onEventSettingsClose]=\"onEventSettingsClose\"\n        [audioSetting]=\"audioSetting.value\"\n        [videoSetting]=\"videoSetting.value\"\n        [screenshareSetting]=\"screenshareSetting.value\"\n        [chatSetting]=\"chatSetting.value\"\n        [updateAudioSetting]=\"updateAudioSetting\"\n        [updateVideoSetting]=\"updateVideoSetting\"\n        [updateScreenshareSetting]=\"updateScreenshareSetting\"\n        [updateChatSetting]=\"updateChatSetting\"\n        [updateIsSettingsModalVisible]=\"updateIsSettingsModalVisible\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [showAlert]=\"showAlert\"\n      ></app-event-settings-modal>\n\n      <app-requests-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isRequestsModalVisible]=\"isRequestsModalVisible.value\"\n        [onRequestClose]=\"onRequestClose\"\n        [requestCounter]=\"requestCounter.value\"\n        [onRequestFilterChange]=\"onRequestFilterChange\"\n        [updateRequestList]=\"updateRequestList\"\n        [requestList]=\"filteredRequestList.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-requests-modal>\n\n      <app-waiting-room-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isWaitingModalVisible]=\"isWaitingModalVisible.value\"\n        [onWaitingRoomClose]=\"onWaitingRoomClose\"\n        [waitingRoomCounter]=\"waitingRoomCounter.value\"\n        [onWaitingRoomFilterChange]=\"onWaitingRoomFilterChange\"\n        [waitingRoomList]=\"filteredWaitingRoomList.value\"\n        [updateWaitingList]=\"updateWaitingRoomList\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [parameters]=\"{\n                      filteredWaitingRoomList: waitingRoomList.value,\n                      getUpdatedAllParams: getUpdatedAllParams,\n                    }\"\n      ></app-waiting-room-modal>\n\n      <app-co-host-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isCoHostModalVisible]=\"isCoHostModalVisible.value\"\n        [onCoHostClose]=\"onCoHostClose\"\n        [coHostResponsibility]=\"coHostResponsibility.value\"\n        [participants]=\"participants.value\"\n        [currentCohost]=\"coHost.value\"\n        [roomName]=\"roomName.value\"\n        [showAlert]=\"showAlert\"\n        [updateCoHostResponsibility]=\"updateCoHostResponsibility\"\n        [updateCoHost]=\"updateCoHost\"\n        [updateIsCoHostModalVisible]=\"updateIsCoHostModalVisible\"\n        [socket]=\"socket.value\"\n      ></app-co-host-modal>\n\n      <app-media-settings-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isMediaSettingsModalVisible]=\"isMediaSettingsModalVisible.value\"\n        [onMediaSettingsClose]=\"onMediaSettingsClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-media-settings-modal>\n\n      <app-participants-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isParticipantsModalVisible]=\"isParticipantsModalVisible.value\"\n        [onParticipantsClose]=\"onParticipantsClose\"\n        [participantsCounter]=\"participantsCounter.value\"\n        [onParticipantsFilterChange]=\"onParticipantsFilterChange\"\n        [parameters]=\"{\n              updateParticipants: updateParticipants,\n              filteredParticipants: filteredParticipants.value,\n              updateIsParticipantsModalVisible: updateIsParticipantsModalVisible,\n              updateDirectMessageDetails: updateDirectMessageDetails,\n              updateStartDirectMessage: updateStartDirectMessage,\n              updateIsMessagesModalVisible: updateIsMessagesModalVisible,\n              showAlert: showAlert,\n              participants: filteredParticipants.value,\n              roomName: roomName.value,\n              islevel: islevel.value,\n              member: member.value,\n              coHostResponsibility: coHostResponsibility.value,\n              coHost: coHost.value,\n              eventType: eventType.value,\n              startDirectMessage: startDirectMessage.value,\n              directMessageDetails: directMessageDetails.value,\n              socket: socket.value,\n              getUpdatedAllParams: getUpdatedAllParams,\n            }\"\n      ></app-participants-modal>\n\n      <app-display-settings-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isDisplaySettingsModalVisible]=\"isDisplaySettingsModalVisible.value\"\n        [onDisplaySettingsClose]=\"onDisplaySettingsClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-display-settings-modal>\n\n      <app-recording-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isRecordingModalVisible]=\"isRecordingModalVisible.value\"\n        [onClose]=\"onRecordingClose\"\n        [startRecording]=\"startRecording.startRecording\"\n        [confirmRecording]=\"confirmRecording.confirmRecording\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-recording-modal>\n\n      <app-messages-modal\n        [backgroundColor]=\"\n          eventType.value === 'webinar' || eventType.value === 'conference'\n            ? '#f5f5f5'\n            : 'rgba(255, 255, 255, 0.25)'\n        \"\n        [isMessagesModalVisible]=\"isMessagesModalVisible.value\"\n        [onMessagesClose]=\"onMessagesClose\"\n        [messages]=\"messages.value\"\n        [eventType]=\"eventType.value\"\n        [member]=\"member.value\"\n        [islevel]=\"islevel.value\"\n        [coHostResponsibility]=\"coHostResponsibility.value\"\n        [coHost]=\"coHost.value\"\n        [startDirectMessage]=\"startDirectMessage.value\"\n        [directMessageDetails]=\"directMessageDetails.value\"\n        [updateStartDirectMessage]=\"updateStartDirectMessage\"\n        [updateDirectMessageDetails]=\"updateDirectMessageDetails\"\n        [showAlert]=\"showAlert\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [chatSetting]=\"chatSetting.value\"\n      ></app-messages-modal>\n\n      <app-confirm-exit-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isConfirmExitModalVisible]=\"isConfirmExitModalVisible.value\"\n        [onConfirmExitClose]=\"onConfirmExitClose\"\n        [position]=\"'topRight'\"\n        [member]=\"member.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [islevel]=\"islevel.value\"\n      ></app-confirm-exit-modal>\n\n      <app-confirm-here-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isConfirmHereModalVisible]=\"isConfirmHereModalVisible.value\"\n        [onConfirmHereClose]=\"onConfirmHereClose\"\n        [member]=\"member.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n      ></app-confirm-here-modal>\n\n      <app-share-event-modal\n        [isShareEventModalVisible]=\"isShareEventModalVisible.value\"\n        [onShareEventClose]=\"onShareEventClose\"\n        [roomName]=\"roomName.value\"\n        [islevel]=\"islevel.value\"\n        [adminPasscode]=\"adminPasscode.value\"\n        [eventType]=\"eventType.value\"\n      ></app-share-event-modal>\n\n      <app-poll-modal\n        [isPollModalVisible]=\"isPollModalVisible.value\"\n        [onClose]=\"onPollClose\"\n        [member]=\"member.value\"\n        [islevel]=\"islevel.value\"\n        [polls]=\"polls.value\"\n        [poll]=\"poll.value\"\n        [socket]=\"socket.value\"\n        [roomName]=\"roomName.value\"\n        [showAlert]=\"showAlert\"\n        [updateIsPollModalVisible]=\"updateIsPollModalVisible\"\n        [handleCreatePoll]=\"handleCreatePoll.handleCreatePoll\"\n        [handleEndPoll]=\"handleEndPoll.handleEndPoll\"\n        [handleVotePoll]=\"handleVotePoll.handleVotePoll\"\n      ></app-poll-modal>\n\n      <app-background-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isBackgroundModalVisible.value\"\n        [onClose]=\"onBackgroundClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-background-modal>\n\n      <app-breakout-rooms-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isBreakoutRoomsModalVisible.value\"\n        [onBreakoutRoomsClose]=\"onBreakoutRoomsClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-breakout-rooms-modal>\n\n      <app-configure-whiteboard-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isConfigureWhiteboardModalVisible.value\"\n        [onConfigureWhiteboardClose]=\"onConfigureWhiteboardClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-configure-whiteboard-modal>\n\n      <app-screenboard-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isScreenboardModalVisible.value\"\n        [onClose]=\"onScreenboardClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-screenboard-modal>\n\n      <app-alert-component\n        [visible]=\"alertVisible.value\"\n        [message]=\"alertMessage.value\"\n        [type]=\"alertType.value\"\n        [duration]=\"alertDuration.value\"\n        [onHide]=\"onAlertHide\"\n        textColor=\"#ffffff\"\n      ></app-alert-component>\n\n      <app-loading-modal\n        [isVisible]=\"isLoadingModalVisible.value\"\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        displayColor=\"black\"\n      ></app-loading-modal>\n    </div>\n  `,\n  styles: [\n    `\n      .MediaSFU {\n        /* Add any component-specific styles here */\n      }\n    `,\n  ],\n  providers: [CookieService],\n})\nexport class MediasfuWebinar implements OnInit, OnDestroy {\n  @Input()\n  PrejoinPage: any = WelcomePage;\n  @Input() credentials: { apiUserName: string; apiKey: string } = { apiUserName: '', apiKey: '' };\n  @Input() useLocalUIMode = false;\n  @Input() seedData?: SeedData;\n  @Input() useSeed = false;\n  @Input() imgSrc = 'https://mediasfu.com/images/logo192.png';\n\n  title = 'MediaSFU-Webinar';\n\n  private mainHeightWidthSubscription: Subscription | undefined;\n  private validatedSubscription: Subscription | undefined;\n  private islevelSubscription: Subscription | undefined;\n  private coHostSubscription: Subscription | undefined;\n  private buttonSubscriptions: Subscription[] = [];\n  private ScreenboardSubscription: Subscription | undefined;\n  private recordingSubscription: Subscription | undefined;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private injector: Injector,\n    public updateMiniCardsGrid: UpdateMiniCardsGrid,\n    public mixStreams: MixStreams,\n    public dispStreams: DispStreams,\n    public stopShareScreen: StopShareScreen,\n    public checkScreenShare: CheckScreenShare,\n    public startShareScreen: StartShareScreen,\n    public requestScreenShare: RequestScreenShare,\n    public reorderStreams: ReorderStreams,\n    public prepopulateUserMedia: PrepopulateUserMedia,\n    public getVideos: GetVideos,\n    public rePort: RePort,\n    public trigger: Trigger,\n    public consumerResume: ConsumerResume,\n    public connectSendTransport: ConnectSendTransport,\n    public connectSendTransportAudio: ConnectSendTransportAudio,\n    public connectSendTransportVideo: ConnectSendTransportVideo,\n    public connectSendTransportScreen: ConnectSendTransportScreen,\n    public processConsumerTransports: ProcessConsumerTransports,\n    public resumePauseStreams: ResumePauseStreams,\n    public readjust: Readjust,\n    public checkGrid: CheckGrid,\n    public getEstimate: GetEstimate,\n    public calculateRowsAndColumns: CalculateRowsAndColumns,\n    public addVideosGrid: AddVideosGrid,\n    public onScreenChanges: OnScreenChanges,\n    public changeVids: ChangeVids,\n    public compareActiveNames: CompareActiveNames,\n    public compareScreenStates: CompareScreenStates,\n    public createSendTransport: CreateSendTransport,\n    public resumeSendTransportAudio: ResumeSendTransportAudio,\n    public receiveAllPipedTransports: ReceiveAllPipedTransports,\n    public disconnectSendTransportVideo: DisconnectSendTransportVideo,\n    public disconnectSendTransportAudio: DisconnectSendTransportAudio,\n    public disconnectSendTransportScreen: DisconnectSendTransportScreen,\n    public getPipedProducersAlt: GetPipedProducersAlt,\n    public signalNewConsumerTransport: SignalNewConsumerTransport,\n    public connectRecvTransport: ConnectRecvTransport,\n    public reUpdateInter: ReUpdateInter,\n    public updateParticipantAudioDecibels: UpdateParticipantAudioDecibels,\n    public closeAndResize: CloseAndResize,\n    public autoAdjust: AutoAdjust,\n    public switchUserVideoAlt: SwitchUserVideoAlt,\n    public switchUserVideo: SwitchUserVideo,\n    public switchUserAudio: SwitchUserAudio,\n    public getDomains: GetDomains,\n    public formatNumber: FormatNumber,\n    public connectIps: ConnectIps,\n    public createDeviceClient: CreateDeviceClient,\n    public handleCreatePoll: HandleCreatePoll,\n    public handleEndPoll: HandleEndPoll,\n    public handleVotePoll: HandleVotePoll,\n    public captureCanvasStream: CaptureCanvasStream,\n    public resumePauseAudioStreams: ResumePauseAudioStreams,\n    public processConsumerTransportsAudio: ProcessConsumerTransportsAudio,\n\n    public launchMenuModal: LaunchMenuModal,\n    public launchRecording: LaunchRecording,\n    public startRecording: StartRecording,\n    public confirmRecording: ConfirmRecording,\n    public launchWaiting: LaunchWaiting,\n    public launchCoHost: launchCoHost,\n    public launchMediaSettings: LaunchMediaSettings,\n    public launchDisplaySettings: LaunchDisplaySettings,\n    public launchSettings: LaunchSettings,\n    public launchRequests: LaunchRequests,\n    public launchParticipants: LaunchParticipants,\n    public launchMessages: LaunchMessages,\n    public launchConfirmExit: LaunchConfirmExit,\n    public launchPoll: LaunchPoll,\n    public launchBreakoutRooms: LaunchBreakoutRooms,\n    public launchConfigureWhiteboard: LaunchConfigureWhiteboard,\n    public startMeetingProgressTimer: StartMeetingProgressTimer,\n    public updateRecording: UpdateRecording,\n    public stopRecording: StopRecording,\n    public userWaiting: UserWaiting,\n    public personJoined: PersonJoined,\n    public allWaitingRoomMembers: AllWaitingRoomMembers,\n    public roomRecordParams: RoomRecordParams,\n    public banParticipant: BanParticipant,\n    public updatedCoHost: UpdatedCoHost,\n    public participantRequested: ParticipantRequested,\n    public screenProducerId: ScreenProducerId,\n    public updateMediaSettings: UpdateMediaSettings,\n    public producerMediaPaused: ProducerMediaPaused,\n    public producerMediaResumed: ProducerMediaResumed,\n    public producerMediaClosed: ProducerMediaClosed,\n    public controlMediaHost: ControlMediaHost,\n    public meetingEnded: MeetingEnded,\n    public disconnectUserSelf: DisconnectUserSelf,\n    public receiveMessage: ReceiveMessage,\n    public meetingTimeRemaining: MeetingTimeRemaining,\n    public meetingStillThere: MeetingStillThere,\n    public startRecords: StartRecords,\n    public reInitiateRecording: ReInitiateRecording,\n    public recordingNotice: RecordingNotice,\n    public timeLeftRecording: TimeLeftRecording,\n    public stoppedRecording: StoppedRecording,\n    public hostRequestResponse: HostRequestResponse,\n    public allMembers: AllMembers,\n    public allMembersRest: AllMembersRest,\n    public disconnect: Disconnect,\n    public pollUpdated: PollUpdated,\n    public breakoutRoomUpdated: BreakoutRoomUpdated,\n    public socketManager: SocketManager,\n    public joinRoomClient: JoinRoomClient,\n    public updateRoomParametersClient: UpdateRoomParametersClient,\n    public clickVideo: ClickVideo,\n    public clickAudio: ClickAudio,\n    public clickScreenShare: ClickScreenShare,\n    public streamSuccessVideo: StreamSuccessVideo,\n    public streamSuccessAudio: StreamSuccessAudio,\n    public streamSuccessScreen: StreamSuccessScreen,\n    public streamSuccessAudioSwitch: StreamSuccessAudioSwitch,\n    public checkPermission: CheckPermission,\n    public updateConsumingDomains: UpdateConsumingDomains,\n    public receiveRoomMessages: ReceiveRoomMessages,\n  ) {}\n\n  createInjector(inputs: any) {\n    const inj = Injector.create({\n      providers: Object.keys(inputs).map((key) => ({ provide: key, useValue: inputs[key] })),\n      parent: this.injector,\n    });\n\n    return inj;\n  }\n\n  // Initial values\n  mediaSFUFunctions = () => {\n    return {\n      updateMiniCardsGrid:\n        this.updateMiniCardsGrid?.updateMiniCardsGrid ||\n        (() => {\n          console.log('none');\n        }),\n      mixStreams:\n        this.mixStreams?.mixStreams ||\n        (() => {\n          console.log('none');\n        }),\n      dispStreams:\n        this.dispStreams?.dispStreams ||\n        (() => {\n          console.log('none');\n        }),\n      stopShareScreen:\n        this.stopShareScreen?.stopShareScreen ||\n        (() => {\n          console.log('none');\n        }),\n      checkScreenShare:\n        this.checkScreenShare?.checkScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      startShareScreen:\n        this.startShareScreen?.startShareScreen ||\n        (() => {\n          console.log('none');\n        }),\n      requestScreenShare:\n        this.requestScreenShare?.requestScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      reorderStreams:\n        this.reorderStreams?.reorderStreams ||\n        (() => {\n          console.log('none');\n        }),\n      prepopulateUserMedia:\n        this.prepopulateUserMedia?.prepopulateUserMedia ||\n        (() => {\n          console.log('none');\n        }),\n      getVideos:\n        this.getVideos?.getVideos ||\n        (() => {\n          console.log('none');\n        }),\n      rePort:\n        this.rePort?.rePort ||\n        (() => {\n          console.log('none');\n        }),\n      trigger:\n        this.trigger?.trigger ||\n        (() => {\n          console.log('none');\n        }),\n      consumerResume:\n        this.consumerResume?.consumerResume ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransport:\n        this.connectSendTransport?.connectSendTransport ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportAudio:\n        this.connectSendTransportAudio?.connectSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportVideo:\n        this.connectSendTransportVideo?.connectSendTransportVideo ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportScreen:\n        this.connectSendTransportScreen?.connectSendTransportScreen ||\n        (() => {\n          console.log('none');\n        }),\n      processConsumerTransports:\n        this.processConsumerTransports?.processConsumerTransports ||\n        (() => {\n          console.log('none');\n        }),\n      resumePauseStreams:\n        this.resumePauseStreams?.resumePauseStreams ||\n        (() => {\n          console.log('none');\n        }),\n      readjust:\n        this.readjust?.readjust ||\n        (() => {\n          console.log('none');\n        }),\n      checkGrid:\n        this.checkGrid?.checkGrid ||\n        (() => {\n          console.log('none');\n        }),\n      getEstimate:\n        this.getEstimate?.getEstimate ||\n        (() => {\n          console.log('none');\n        }),\n      calculateRowsAndColumns:\n        this.calculateRowsAndColumns?.calculateRowsAndColumns ||\n        (() => {\n          console.log('none');\n        }),\n      addVideosGrid:\n        this.addVideosGrid?.addVideosGrid ||\n        (() => {\n          console.log('none');\n        }),\n      onScreenChanges:\n        this.onScreenChanges?.onScreenChanges ||\n        (() => {\n          console.log('none');\n        }),\n      sleep:\n        sleep ||\n        (() => {\n          console.log('none');\n        }),\n      changeVids:\n        this.changeVids?.changeVids ||\n        (() => {\n          console.log('none');\n        }),\n      compareActiveNames:\n        this.compareActiveNames?.compareActiveNames ||\n        (() => {\n          console.log('none');\n        }),\n      compareScreenStates:\n        this.compareScreenStates?.compareScreenStates ||\n        (() => {\n          console.log('none');\n        }),\n      createSendTransport:\n        this.createSendTransport?.createSendTransport ||\n        (() => {\n          console.log('none');\n        }),\n      resumeSendTransportAudio:\n        this.resumeSendTransportAudio?.resumeSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      receiveAllPipedTransports:\n        this.receiveAllPipedTransports?.receiveAllPipedTransports ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportVideo:\n        this.disconnectSendTransportVideo?.disconnectSendTransportVideo ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportAudio:\n        this.disconnectSendTransportAudio?.disconnectSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportScreen:\n        this.disconnectSendTransportScreen?.disconnectSendTransportScreen ||\n        (() => {\n          console.log('none');\n        }),\n      getPipedProducersAlt:\n        this.getPipedProducersAlt?.getPipedProducersAlt ||\n        (() => {\n          console.log('none');\n        }),\n      signalNewConsumerTransport:\n        this.signalNewConsumerTransport?.signalNewConsumerTransport ||\n        (() => {\n          console.log('none');\n        }),\n      connectRecvTransport:\n        this.connectRecvTransport?.connectRecvTransport ||\n        (() => {\n          console.log('none');\n        }),\n      reUpdateInter:\n        this.reUpdateInter?.reUpdateInter ||\n        (() => {\n          console.log('none');\n        }),\n      updateParticipantAudioDecibels:\n        this.updateParticipantAudioDecibels?.updateParticipantAudioDecibels ||\n        (() => {\n          console.log('none');\n        }),\n      closeAndResize:\n        this.closeAndResize?.closeAndResize ||\n        (() => {\n          console.log('none');\n        }),\n      autoAdjust:\n        this.autoAdjust?.autoAdjust ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserVideoAlt:\n        this.switchUserVideoAlt?.switchUserVideoAlt ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserVideo:\n        this.switchUserVideo?.switchUserVideo ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserAudio:\n        this.switchUserAudio?.switchUserAudio ||\n        (() => {\n          console.log('none');\n        }),\n      getDomains:\n        this.getDomains?.getDomains ||\n        (() => {\n          console.log('none');\n        }),\n      formatNumber:\n        this.formatNumber?.formatNumber ||\n        (() => {\n          console.log('none');\n        }),\n      connectIps:\n        this.connectIps?.connectIps ||\n        (() => {\n          console.log('none');\n        }),\n      createDeviceClient:\n        this.createDeviceClient?.createDeviceClient ||\n        (() => {\n          console.log('none');\n        }),\n      handleCreatePoll:\n        this.handleCreatePoll?.handleCreatePoll ||\n        (() => {\n          console.log('none');\n        }),\n      handleEndPoll:\n        this.handleEndPoll?.handleEndPoll ||\n        (() => {\n          console.log('none');\n        }),\n      handleVotePoll:\n        this.handleVotePoll?.handleVotePoll ||\n        (() => {\n          console.log('none');\n        }),\n      captureCanvasStream:\n        this.captureCanvasStream?.captureCanvasStream ||\n        (() => {\n          console.log('none');\n        }),\n      resumePauseAudioStreams:\n        this.resumePauseAudioStreams?.resumePauseAudioStreams ||\n        (() => {\n          console.log('none');\n        }),\n      processConsumerTransportsAudio:\n        this.processConsumerTransportsAudio?.processConsumerTransportsAudio ||\n        (() => {\n          console.log('none');\n        }),\n      checkPermission:\n        this.checkPermission?.checkPermission ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessVideo:\n        this.streamSuccessVideo?.streamSuccessVideo ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessAudio:\n        this.streamSuccessAudio?.streamSuccessAudio ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessScreen:\n        this.streamSuccessScreen?.streamSuccessScreen ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessAudioSwitch:\n        this.streamSuccessAudioSwitch?.streamSuccessAudioSwitch ||\n        (() => {\n          console.log('none');\n        }),\n      clickVideo:\n        this.clickVideo?.clickVideo ||\n        (() => {\n          console.log('none');\n        }),\n      clickAudio:\n        this.clickAudio?.clickAudio ||\n        (() => {\n          console.log('none');\n        }),\n      clickScreenShare:\n        this.clickScreenShare?.clickScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      requestPermissionCamera:\n        this.requestPermissionCamera ||\n        (() => {\n          console.log('none');\n        }),\n      requestPermissionAudio:\n        this.requestPermissionAudio ||\n        (() => {\n          console.log('none');\n        }),\n    };\n  };\n\n  validated = new BehaviorSubject<boolean>(false);\n  localUIMode = new BehaviorSubject<boolean>(false);\n  socket = new BehaviorSubject<Socket>({} as Socket);\n  roomData = new BehaviorSubject<ResponseJoinRoom | null>(null);\n  device = new BehaviorSubject<Device | null>(null);\n  apiKey = new BehaviorSubject<string>(\n    '021193742c935c4434d25d7592362575fcb6d6590b6c38334a2f3e06c83af758',\n  );\n  apiUserName = new BehaviorSubject<string>('abcdefgh');\n  apiToken = new BehaviorSubject<string>('');\n  link = new BehaviorSubject<string>('');\n\n  roomName = new BehaviorSubject<string>('');\n  member = new BehaviorSubject<string>('');\n  adminPasscode = new BehaviorSubject<string>('');\n  islevel = new BehaviorSubject<string>('1');\n  coHost = new BehaviorSubject<string>('No coHost');\n  coHostResponsibility = new BehaviorSubject<CoHostResponsibility[]>([\n    { name: 'participants', value: false, dedicated: false },\n    { name: 'media', value: false, dedicated: false },\n    { name: 'waiting', value: false, dedicated: false },\n    { name: 'chat', value: false, dedicated: false },\n  ]);\n  youAreCoHost = new BehaviorSubject<boolean>(false);\n  youAreHost = new BehaviorSubject<boolean>(false);\n  confirmedToRecord = new BehaviorSubject<boolean>(false);\n  meetingDisplayType = new BehaviorSubject<string>('media');\n  meetingVideoOptimized = new BehaviorSubject<boolean>(false);\n  eventType = new BehaviorSubject<EventType>('webinar');\n  participants = new BehaviorSubject<Participant[]>([]);\n  filteredParticipants = new BehaviorSubject<Participant[]>([]);\n  participantsCounter = new BehaviorSubject<number>(0);\n  participantsFilter = new BehaviorSubject<string>('');\n\n  consume_sockets = new BehaviorSubject<ConsumeSocket[]>([]);\n  rtpCapabilities = new BehaviorSubject<RtpCapabilities | null>(null);\n  roomRecvIPs = new BehaviorSubject<string[]>([]);\n  meetingRoomParams = new BehaviorSubject<MeetingRoomParams | null>(null);\n  itemPageLimit = new BehaviorSubject<number>(4);\n  audioOnlyRoom = new BehaviorSubject<boolean>(false);\n  addForBasic = new BehaviorSubject<boolean>(false);\n  screenPageLimit = new BehaviorSubject<number>(4);\n  shareScreenStarted = new BehaviorSubject<boolean>(false);\n  shared = new BehaviorSubject<boolean>(false);\n  targetOrientation = new BehaviorSubject<string>('landscape');\n  targetResolution = new BehaviorSubject<string>('sd');\n  targetResolutionHost = new BehaviorSubject<string>('sd');\n  vidCons = new BehaviorSubject<VidCons>({ width: 640, height: 360 });\n  frameRate = new BehaviorSubject<number>(10);\n  hParams = new BehaviorSubject<HParamsType>({} as HParamsType);\n  vParams = new BehaviorSubject<VParamsType>({} as VParamsType);\n  screenParams = new BehaviorSubject<ScreenParamsType>({} as ScreenParamsType);\n  aParams = new BehaviorSubject<AParamsType>({} as AParamsType);\n\n  recordingAudioPausesLimit = new BehaviorSubject<number>(0);\n  recordingAudioPausesCount = new BehaviorSubject<number>(0);\n  recordingAudioSupport = new BehaviorSubject<boolean>(false);\n  recordingAudioPeopleLimit = new BehaviorSubject<number>(0);\n  recordingAudioParticipantsTimeLimit = new BehaviorSubject<number>(0);\n  recordingVideoPausesCount = new BehaviorSubject<number>(0);\n  recordingVideoPausesLimit = new BehaviorSubject<number>(0);\n  recordingVideoSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoPeopleLimit = new BehaviorSubject<number>(0);\n  recordingVideoParticipantsTimeLimit = new BehaviorSubject<number>(0);\n  recordingAllParticipantsSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoParticipantsSupport = new BehaviorSubject<boolean>(false);\n  recordingAllParticipantsFullRoomSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoParticipantsFullRoomSupport = new BehaviorSubject<boolean>(false);\n  recordingPreferredOrientation = new BehaviorSubject<string>('landscape');\n  recordingSupportForOtherOrientation = new BehaviorSubject<boolean>(false);\n  recordingMultiFormatsSupport = new BehaviorSubject<boolean>(false);\n\n  userRecordingParams = new BehaviorSubject<UserRecordingParams>({\n    mainSpecs: {\n      mediaOptions: 'video', // 'audio', 'video'\n      audioOptions: 'all', // 'all', 'onScreen', 'host'\n      videoOptions: 'all', // 'all', 'mainScreen'\n      videoType: 'fullDisplay', // 'all', 'bestDisplay', 'fullDisplay'\n      videoOptimized: false, // true, false\n      recordingDisplayType: 'media', // 'media', 'video', 'all'\n      addHLS: false, // true, false\n    },\n    dispSpecs: {\n      nameTags: true, // true, false\n      backgroundColor: '#000000', // '#000000', '#ffffff'\n      nameTagsColor: '#ffffff', // '#000000', '#ffffff'\n      orientationVideo: 'portrait', // 'landscape', 'portrait', 'all'\n    },\n  });\n\n  canRecord = new BehaviorSubject<boolean>(false);\n  startReport = new BehaviorSubject<boolean>(false);\n  endReport = new BehaviorSubject<boolean>(false);\n  recordTimerInterval = new BehaviorSubject<NodeJS.Timeout | null>(null);\n  recordStartTime = new BehaviorSubject<number>(0);\n  recordElapsedTime = new BehaviorSubject<number>(0);\n  isTimerRunning = new BehaviorSubject<boolean>(false);\n  canPauseResume = new BehaviorSubject<boolean>(false);\n  recordChangeSeconds = new BehaviorSubject<number>(15000);\n  pauseLimit = new BehaviorSubject<number>(0);\n  pauseRecordCount = new BehaviorSubject<number>(0);\n  canLaunchRecord = new BehaviorSubject<boolean>(true);\n  stopLaunchRecord = new BehaviorSubject<boolean>(false);\n\n  participantsAll = new BehaviorSubject<Participant[]>([]);\n\n  firstAll = new BehaviorSubject<boolean>(false);\n  updateMainWindow = new BehaviorSubject<boolean>(false);\n  first_round = new BehaviorSubject<boolean>(false);\n  landScaped = new BehaviorSubject<boolean>(false);\n  lock_screen = new BehaviorSubject<boolean>(false);\n  screenId = new BehaviorSubject<string>('');\n  allVideoStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  newLimitedStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  newLimitedStreamsIDs = new BehaviorSubject<string[]>([]);\n  activeSounds = new BehaviorSubject<string[]>([]);\n  screenShareIDStream = new BehaviorSubject<string>('');\n  screenShareNameStream = new BehaviorSubject<string>('');\n  adminIDStream = new BehaviorSubject<string>('');\n  adminNameStream = new BehaviorSubject<string>('');\n  youYouStream = new BehaviorSubject<(Participant | Stream)[]>([]);\n  youYouStreamIDs = new BehaviorSubject<string[]>([]);\n  localStream = new BehaviorSubject<MediaStream | null>(null);\n  recordStarted = new BehaviorSubject<boolean>(false);\n  recordResumed = new BehaviorSubject<boolean>(false);\n  recordPaused = new BehaviorSubject<boolean>(false);\n  recordStopped = new BehaviorSubject<boolean>(false);\n  adminRestrictSetting = new BehaviorSubject<boolean>(false);\n  videoRequestState = new BehaviorSubject<string | null>(null);\n  videoRequestTime = new BehaviorSubject<number>(0);\n  videoAction = new BehaviorSubject<boolean>(false);\n  localStreamVideo = new BehaviorSubject<MediaStream | null>(null);\n  userDefaultVideoInputDevice = new BehaviorSubject<string>('');\n  currentFacingMode = new BehaviorSubject<string>('user');\n  prevFacingMode = new BehaviorSubject<string>('user');\n  defVideoID = new BehaviorSubject<string>('');\n  allowed = new BehaviorSubject<boolean>(false);\n  dispActiveNames = new BehaviorSubject<string[]>([]);\n  p_dispActiveNames = new BehaviorSubject<string[]>([]);\n  activeNames = new BehaviorSubject<string[]>([]);\n  prevActiveNames = new BehaviorSubject<string[]>([]);\n  p_activeNames = new BehaviorSubject<string[]>([]);\n  membersReceived = new BehaviorSubject<boolean>(false);\n  deferScreenReceived = new BehaviorSubject<boolean>(false);\n  hostFirstSwitch = new BehaviorSubject<boolean>(false);\n  micAction = new BehaviorSubject<boolean>(false);\n  screenAction = new BehaviorSubject<boolean>(false);\n  chatAction = new BehaviorSubject<boolean>(false);\n  audioRequestState = new BehaviorSubject<string | null>(null);\n  screenRequestState = new BehaviorSubject<string | null>(null);\n  chatRequestState = new BehaviorSubject<string | null>(null);\n  audioRequestTime = new BehaviorSubject<number>(0);\n  screenRequestTime = new BehaviorSubject<number>(0);\n  chatRequestTime = new BehaviorSubject<number>(0);\n  updateRequestIntervalSeconds = new BehaviorSubject<number>(240);\n  oldSoundIds = new BehaviorSubject<string[]>([]);\n  hostLabel = new BehaviorSubject<string>('Host');\n  mainScreenFilled = new BehaviorSubject<boolean>(false);\n  localStreamScreen = new BehaviorSubject<MediaStream | null>(null);\n  screenAlreadyOn = new BehaviorSubject<boolean>(false);\n  chatAlreadyOn = new BehaviorSubject<boolean>(false);\n  redirectURL = new BehaviorSubject<string>('');\n  oldAllStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  adminVidID = new BehaviorSubject<string>('');\n  streamNames = new BehaviorSubject<Stream[]>([]);\n  non_alVideoStreams = new BehaviorSubject<Participant[]>([]);\n  sortAudioLoudness = new BehaviorSubject<boolean>(false);\n  audioDecibels = new BehaviorSubject<AudioDecibels[]>([]);\n  mixed_alVideoStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  non_alVideoStreams_muted = new BehaviorSubject<Participant[]>([]);\n  paginatedStreams = new BehaviorSubject<(Participant | Stream)[][]>([]);\n  localStreamAudio = new BehaviorSubject<MediaStream | null>(null);\n  defAudioID = new BehaviorSubject<string>('');\n  userDefaultAudioInputDevice = new BehaviorSubject<string>('');\n  userDefaultAudioOutputDevice = new BehaviorSubject<string>('');\n  prevAudioInputDevice = new BehaviorSubject<string>('');\n  prevVideoInputDevice = new BehaviorSubject<string>('');\n  audioPaused = new BehaviorSubject<boolean>(false);\n  mainScreenPerson = new BehaviorSubject<string>('');\n  adminOnMainScreen = new BehaviorSubject<boolean>(false);\n  screenStates = new BehaviorSubject<ScreenState[]>([\n    {\n      mainScreenPerson: '',\n      mainScreenProducerId: '',\n      mainScreenFilled: false,\n      adminOnMainScreen: false,\n    },\n  ]);\n  prevScreenStates = new BehaviorSubject<ScreenState[]>([\n    {\n      mainScreenPerson: '',\n      mainScreenProducerId: '',\n      mainScreenFilled: false,\n      adminOnMainScreen: false,\n    },\n  ]);\n  updateDateState = new BehaviorSubject<number | null>(null);\n  lastUpdate = new BehaviorSubject<number | null>(null);\n  nForReadjustRecord = new BehaviorSubject<number>(0);\n  fixedPageLimit = new BehaviorSubject<number>(4);\n  removeAltGrid = new BehaviorSubject<boolean>(false);\n  nForReadjust = new BehaviorSubject<number>(0);\n  reorderInterval = new BehaviorSubject<number>(30000);\n  fastReorderInterval = new BehaviorSubject<number>(10000);\n  lastReorderTime = new BehaviorSubject<number>(0);\n  audStreamNames = new BehaviorSubject<Stream[]>([]);\n  currentUserPage = new BehaviorSubject<number>(0);\n  mainHeightWidth = new BehaviorSubject<number>(\n    this.eventType.value == 'webinar' ? 67 : this.eventType.value == 'broadcast' ? 100 : 0,\n  );\n  prevMainHeightWidth = new BehaviorSubject<number>(this.mainHeightWidth.value);\n  prevDoPaginate = new BehaviorSubject<boolean>(false);\n  doPaginate = new BehaviorSubject<boolean>(false);\n  shareEnded = new BehaviorSubject<boolean>(false);\n  lStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  chatRefStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  controlHeight = new BehaviorSubject<number>(\n    this.eventType.value === 'webinar' || this.eventType.value === 'conference' ? 0 : 0.06,\n  );\n  isWideScreen = new BehaviorSubject<boolean>(false);\n  isMediumScreen = new BehaviorSubject<boolean>(false);\n  isSmallScreen = new BehaviorSubject<boolean>(false);\n  addGrid = new BehaviorSubject<boolean>(false);\n  addAltGrid = new BehaviorSubject<boolean>(false);\n  gridRows = new BehaviorSubject<number>(0);\n  gridCols = new BehaviorSubject<number>(0);\n  altGridRows = new BehaviorSubject<number>(0);\n  altGridCols = new BehaviorSubject<number>(0);\n  numberPages = new BehaviorSubject<number>(0);\n  currentStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  showMiniView = new BehaviorSubject<boolean>(false);\n  nStream = new BehaviorSubject<MediaStream | null>(null);\n  defer_receive = new BehaviorSubject<boolean>(false);\n  allAudioStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  remoteScreenStream = new BehaviorSubject<Stream[]>([]);\n  screenProducer = new BehaviorSubject<Producer | null>(null);\n  gotAllVids = new BehaviorSubject<boolean>(false);\n  paginationHeightWidth = new BehaviorSubject<number>(40);\n  paginationDirection = new BehaviorSubject<'horizontal' | 'vertical'>('horizontal');\n  gridSizes = new BehaviorSubject<GridSizes>({\n    gridWidth: 0,\n    gridHeight: 0,\n    altGridWidth: 0,\n    altGridHeight: 0,\n  });\n  screenForceFullDisplay = new BehaviorSubject<boolean>(false);\n  mainGridStream = new BehaviorSubject<CustomMediaComponent[]>([]);\n  otherGridStreams = new BehaviorSubject<CustomMediaComponent[][]>([]);\n  audioOnlyStreams = new BehaviorSubject<CustomMediaComponent[]>([]);\n  videoInputs = new BehaviorSubject<MediaDeviceInfo[]>([]);\n  audioInputs = new BehaviorSubject<MediaDeviceInfo[]>([]);\n  meetingProgressTime = new BehaviorSubject<string>('00:00:00');\n  meetingElapsedTime = new BehaviorSubject<number>(0);\n  ref_participants = new BehaviorSubject<Participant[]>([]);\n\n  updateValidated = (value: boolean) => {\n    this.validated.next(value);\n  };\n\n  updateSocket = (value: Socket) => {\n    this.socket.next(value);\n  };\n\n  updateDevice = (value: Device | null) => {\n    this.device.next(value);\n  };\n\n  updateRoomData = (value: ResponseJoinRoom | null) => {\n    this.roomData.next(value);\n  };\n\n  updateApiKey = (value: string) => {\n    this.apiKey.next(value);\n  };\n\n  updateApiUserName = (value: string) => {\n    this.apiUserName.next(value);\n  };\n\n  updateApiToken = (value: string) => {\n    this.apiToken.next(value);\n  };\n\n  updateLink = (value: string) => {\n    this.link.next(value);\n  };\n\n  updateRoomName = (value: string) => {\n    this.roomName.next(value);\n  };\n\n  updateMember = (value: string) => {\n    this.member.next(value);\n  };\n\n  updateAdminPasscode = (value: string) => {\n    this.adminPasscode.next(value);\n  };\n\n  updateIslevel = (value: string) => {\n    this.islevel.next(value);\n  };\n\n  updateCoHost = (value: string) => {\n    this.coHost.next(value);\n  };\n\n  updateCoHostResponsibility = (value: CoHostResponsibility[]) => {\n    this.coHostResponsibility.next(value);\n  };\n\n  updateYouAreCoHost = (value: boolean) => {\n    this.youAreCoHost.next(value);\n  };\n\n  updateYouAreHost = (value: boolean) => {\n    this.youAreHost.next(value);\n  };\n\n  updateConfirmedToRecord = (value: boolean) => {\n    this.confirmedToRecord.next(value);\n  };\n\n  updateMeetingDisplayType = (value: string) => {\n    this.meetingDisplayType.next(value);\n  };\n\n  updateMeetingVideoOptimized = (value: boolean) => {\n    this.meetingVideoOptimized.next(value);\n  };\n\n  updateEventType = (value: EventType) => {\n    this.eventType.next(value);\n    if (value != 'none') {\n      try {\n        setTimeout(() => {\n          this.handleResize();\n        }, 2000);\n      } catch {\n        /* handle error */\n      }\n    }\n  };\n\n  updateParticipants = (value: Participant[]) => {\n    this.participants.next(value);\n    this.participantsCounter.next(value.length);\n    this.filteredParticipants.next(this.participants.value);\n  };\n\n  updateFilteredParticipants = (value: Participant[]) => {\n    this.filteredParticipants.next(value);\n  };\n\n  updateParticipantsCounter = (value: number) => {\n    this.participantsCounter.next(value);\n  };\n\n  updateParticipantsFilter = (value: string) => {\n    this.participantsFilter.next(value);\n  };\n\n  updateConsume_sockets = (value: ConsumeSocket[]) => {\n    this.consume_sockets.next(value);\n  };\n\n  updateRtpCapabilities = (value: RtpCapabilities | null) => {\n    this.rtpCapabilities.next(value);\n  };\n\n  updateRoomRecvIPs = (value: string[]) => {\n    this.roomRecvIPs.next(value);\n  };\n\n  updateMeetingRoomParams = (value: MeetingRoomParams | null) => {\n    this.meetingRoomParams.next(value);\n  };\n\n  updateItemPageLimit = (value: number) => {\n    this.itemPageLimit.next(value);\n  };\n\n  updateAudioOnlyRoom = (value: boolean) => {\n    this.audioOnlyRoom.next(value);\n  };\n\n  updateAddForBasic = (value: boolean) => {\n    this.addForBasic.next(value);\n  };\n\n  updateScreenPageLimit = (value: number) => {\n    this.screenPageLimit.next(value);\n  };\n\n  updateShareScreenStarted = (value: boolean) => {\n    this.shareScreenStarted.next(value);\n  };\n\n  updateShared = (value: boolean) => {\n    this.shared.next(value);\n    this.screenShareActive.next(value);\n    if (value) {\n      setTimeout(async () => {\n        window.dispatchEvent(new Event('resize'));\n      }, 2000);\n    }\n  };\n\n  updateTargetOrientation = (value: string) => {\n    this.targetOrientation.next(value);\n  };\n\n  updateTargetResolution = (value: string) => {\n    this.targetResolution.next(value);\n  };\n\n  updateTargetResolutionHost = (value: string) => {\n    this.targetResolutionHost.next(value);\n  };\n\n  updateVidCons = (value: VidCons) => {\n    this.vidCons.next(value);\n  };\n\n  updateFrameRate = (value: number) => {\n    this.frameRate.next(value);\n  };\n\n  updateHParams = (value: HParamsType) => {\n    this.hParams.next(value);\n  };\n\n  updateVParams = (value: VParamsType) => {\n    this.vParams.next(value);\n  };\n\n  updateScreenParams = (value: ScreenParamsType) => {\n    this.screenParams.next(value);\n  };\n\n  updateAParams = (value: AParamsType) => {\n    this.aParams.next(value);\n  };\n\n  updateRecordingAudioPausesLimit = (value: number) => {\n    this.recordingAudioPausesLimit.next(value);\n  };\n\n  updateRecordingAudioPausesCount = (value: number) => {\n    this.recordingAudioPausesCount.next(value);\n  };\n\n  updateRecordingAudioSupport = (value: boolean) => {\n    this.recordingAudioSupport.next(value);\n  };\n\n  updateRecordingAudioPeopleLimit = (value: number) => {\n    this.recordingAudioPeopleLimit.next(value);\n  };\n\n  updateRecordingAudioParticipantsTimeLimit = (value: number) => {\n    this.recordingAudioParticipantsTimeLimit.next(value);\n  };\n\n  updateRecordingVideoPausesCount = (value: number) => {\n    this.recordingVideoPausesCount.next(value);\n  };\n\n  updateRecordingVideoPausesLimit = (value: number) => {\n    this.recordingVideoPausesLimit.next(value);\n  };\n\n  updateRecordingVideoSupport = (value: boolean) => {\n    this.recordingVideoSupport.next(value);\n  };\n\n  updateRecordingVideoPeopleLimit = (value: number) => {\n    this.recordingVideoPeopleLimit.next(value);\n  };\n\n  updateRecordingVideoParticipantsTimeLimit = (value: number) => {\n    this.recordingVideoParticipantsTimeLimit.next(value);\n  };\n\n  updateRecordingAllParticipantsSupport = (value: boolean) => {\n    this.recordingAllParticipantsSupport.next(value);\n  };\n\n  updateRecordingVideoParticipantsSupport = (value: boolean) => {\n    this.recordingVideoParticipantsSupport.next(value);\n  };\n\n  updateRecordingAllParticipantsFullRoomSupport = (value: boolean) => {\n    this.recordingAllParticipantsFullRoomSupport.next(value);\n  };\n\n  updateRecordingVideoParticipantsFullRoomSupport = (value: boolean) => {\n    this.recordingVideoParticipantsFullRoomSupport.next(value);\n  };\n\n  updateRecordingPreferredOrientation = (value: string) => {\n    this.recordingPreferredOrientation.next(value);\n  };\n\n  updateRecordingSupportForOtherOrientation = (value: boolean) => {\n    this.recordingSupportForOtherOrientation.next(value);\n  };\n\n  updateRecordingMultiFormatsSupport = (value: boolean) => {\n    this.recordingMultiFormatsSupport.next(value);\n  };\n\n  updateUserRecordingParams = (value: UserRecordingParams) => {\n    this.userRecordingParams.next(value);\n  };\n\n  updateCanRecord = (value: boolean) => {\n    this.canRecord.next(value);\n  };\n\n  updateStartReport = (value: boolean) => {\n    this.startReport.next(value);\n  };\n\n  updateEndReport = (value: boolean) => {\n    this.endReport.next(value);\n  };\n\n  updateRecordTimerInterval = (value: NodeJS.Timeout | null) => {\n    this.recordTimerInterval.next(value);\n  };\n\n  updateRecordStartTime = (value: number) => {\n    this.recordStartTime.next(value);\n  };\n\n  updateRecordElapsedTime = (value: number) => {\n    this.recordElapsedTime.next(value);\n  };\n\n  updateIsTimerRunning = (value: boolean) => {\n    this.isTimerRunning.next(value);\n  };\n\n  updateCanPauseResume = (value: boolean) => {\n    this.canPauseResume.next(value);\n  };\n\n  updateRecordChangeSeconds = (value: number) => {\n    this.recordChangeSeconds.next(value);\n  };\n\n  updatePauseLimit = (value: number) => {\n    this.pauseLimit.next(value);\n  };\n\n  updatePauseRecordCount = (value: number) => {\n    this.pauseRecordCount.next(value);\n  };\n\n  updateCanLaunchRecord = (value: boolean) => {\n    this.canLaunchRecord.next(value);\n  };\n\n  updateStopLaunchRecord = (value: boolean) => {\n    this.stopLaunchRecord.next(value);\n  };\n\n  updateParticipantsAll = (value: Participant[]) => {\n    this.participantsAll.next(value);\n  };\n\n  updateFirstAll = (value: boolean) => {\n    this.firstAll.next(value);\n  };\n\n  updateUpdateMainWindow = (value: boolean) => {\n    this.updateMainWindow.next(value);\n  };\n\n  updateFirst_round = (value: boolean) => {\n    this.first_round.next(value);\n  };\n\n  updateLandScaped = (value: boolean) => {\n    this.landScaped.next(value);\n  };\n\n  updateLock_screen = (value: boolean) => {\n    this.lock_screen.next(value);\n  };\n\n  updateScreenId = (value: string) => {\n    this.screenId.next(value);\n  };\n\n  updateAllVideoStreams = (value: (Participant | Stream)[]) => {\n    this.allVideoStreams.next(value);\n  };\n\n  updateNewLimitedStreams = (value: (Participant | Stream)[]) => {\n    this.newLimitedStreams.next(value);\n  };\n\n  updateNewLimitedStreamsIDs = (value: string[]) => {\n    this.newLimitedStreamsIDs.next(value);\n  };\n\n  updateActiveSounds = (value: string[]) => {\n    this.activeSounds.next(value);\n  };\n\n  updateScreenShareIDStream = (value: string) => {\n    this.screenShareIDStream.next(value);\n  };\n\n  updateScreenShareNameStream = (value: string) => {\n    this.screenShareNameStream.next(value);\n  };\n\n  updateAdminIDStream = (value: string) => {\n    this.adminIDStream.next(value);\n  };\n\n  updateAdminNameStream = (value: string) => {\n    this.adminNameStream.next(value);\n  };\n\n  updateYouYouStream = (value: (Participant | Stream)[]) => {\n    this.youYouStream.next(value);\n  };\n\n  updateYouYouStreamIDs = (value: string[]) => {\n    this.youYouStreamIDs.next(value);\n  };\n\n  updateLocalStream = (value: MediaStream | null) => {\n    this.localStream.next(value);\n  };\n\n  updateRecordStarted = (value: boolean) => {\n    this.recordStarted.next(value);\n  };\n\n  updateRecordResumed = (value: boolean) => {\n    this.recordResumed.next(value);\n  };\n\n  updateRecordPaused = (value: boolean) => {\n    this.recordPaused.next(value);\n  };\n\n  updateRecordStopped = (value: boolean) => {\n    this.recordStopped.next(value);\n  };\n\n  updateAdminRestrictSetting = (value: boolean) => {\n    this.adminRestrictSetting.next(value);\n  };\n\n  updateVideoRequestState = (value: string | null) => {\n    this.videoRequestState.next(value);\n  };\n\n  updateVideoRequestTime = (value: number) => {\n    this.videoRequestTime.next(value);\n  };\n\n  updateVideoAction = (value: boolean) => {\n    this.videoAction.next(value);\n  };\n\n  updateLocalStreamVideo = (value: MediaStream | null) => {\n    this.localStreamVideo.next(value);\n  };\n\n  updateUserDefaultVideoInputDevice = (value: string) => {\n    this.userDefaultVideoInputDevice.next(value);\n  };\n\n  updateCurrentFacingMode = (value: string) => {\n    this.currentFacingMode.next(value);\n  };\n\n  updatePrevFacingMode = (value: string) => {\n    this.prevFacingMode.next(value);\n  };\n\n  updateDefVideoID = (value: string) => {\n    this.defVideoID.next(value);\n  };\n\n  updateAllowed = (value: boolean) => {\n    this.allowed.next(value);\n  };\n\n  updateDispActiveNames = (value: string[]) => {\n    this.dispActiveNames.next(value);\n  };\n\n  updateP_dispActiveNames = (value: string[]) => {\n    this.p_dispActiveNames.next(value);\n  };\n\n  updateActiveNames = (value: string[]) => {\n    this.activeNames.next(value);\n  };\n\n  updatePrevActiveNames = (value: string[]) => {\n    this.prevActiveNames.next(value);\n  };\n\n  updateP_activeNames = (value: string[]) => {\n    this.p_activeNames.next(value);\n  };\n\n  updateMembersReceived = (value: boolean) => {\n    this.membersReceived.next(value);\n  };\n\n  updateDeferScreenReceived = (value: boolean) => {\n    this.deferScreenReceived.next(value);\n  };\n\n  updateHostFirstSwitch = (value: boolean) => {\n    this.hostFirstSwitch.next(value);\n  };\n\n  updateMicAction = (value: boolean) => {\n    this.micAction.next(value);\n  };\n\n  updateScreenAction = (value: boolean) => {\n    this.screenAction.next(value);\n  };\n\n  updateChatAction = (value: boolean) => {\n    this.chatAction.next(value);\n  };\n\n  updateAudioRequestState = (value: string | null) => {\n    this.audioRequestState.next(value);\n  };\n\n  updateScreenRequestState = (value: string | null) => {\n    this.screenRequestState.next(value);\n  };\n\n  updateChatRequestState = (value: string | null) => {\n    this.chatRequestState.next(value);\n  };\n\n  updateAudioRequestTime = (value: number) => {\n    this.audioRequestTime.next(value);\n  };\n\n  updateScreenRequestTime = (value: number) => {\n    this.screenRequestTime.next(value);\n  };\n\n  updateChatRequestTime = (value: number) => {\n    this.chatRequestTime.next(value);\n  };\n\n  updateOldSoundIds = (value: string[]) => {\n    this.oldSoundIds.next(value);\n  };\n\n  updateHostLabel = (value: string) => {\n    this.hostLabel.next(value);\n  };\n\n  updateMainScreenFilled = (value: boolean) => {\n    this.mainScreenFilled.next(value);\n  };\n\n  updateLocalStreamScreen = (value: MediaStream | null) => {\n    this.localStreamScreen.next(value);\n  };\n\n  updateScreenAlreadyOn = (value: boolean) => {\n    this.screenAlreadyOn.next(value);\n  };\n\n  updateChatAlreadyOn = (value: boolean) => {\n    this.chatAlreadyOn.next(value);\n  };\n\n  updateRedirectURL = (value: string) => {\n    this.redirectURL.next(value);\n  };\n\n  updateOldAllStreams = (value: (Participant | Stream)[]) => {\n    this.oldAllStreams.next(value);\n  };\n\n  updateAdminVidID = (value: string) => {\n    this.adminVidID.next(value);\n  };\n\n  updateStreamNames = (value: Stream[]) => {\n    this.streamNames.next(value);\n  };\n\n  updateNon_alVideoStreams = (value: Participant[]) => {\n    this.non_alVideoStreams.next(value);\n  };\n\n  updateSortAudioLoudness = (value: boolean) => {\n    this.sortAudioLoudness.next(value);\n  };\n\n  updateAudioDecibels = (value: AudioDecibels[]) => {\n    this.audioDecibels.next(value);\n  };\n\n  updateMixed_alVideoStreams = (value: (Participant | Stream)[]) => {\n    this.mixed_alVideoStreams.next(value);\n  };\n\n  updateNon_alVideoStreams_muted = (value: Participant[]) => {\n    this.non_alVideoStreams_muted.next(value);\n  };\n\n  updatePaginatedStreams = (value: (Participant | Stream)[][]) => {\n    this.paginatedStreams.next(value);\n  };\n\n  updateLocalStreamAudio = (value: MediaStream | null) => {\n    this.localStreamAudio.next(value);\n  };\n\n  updateDefAudioID = (value: string) => {\n    this.defAudioID.next(value);\n  };\n\n  updateUserDefaultAudioInputDevice = (value: string) => {\n    this.userDefaultAudioInputDevice.next(value);\n  };\n\n  updateUserDefaultAudioOutputDevice = (value: string) => {\n    this.userDefaultAudioOutputDevice.next(value);\n  };\n\n  updatePrevAudioInputDevice = (value: string) => {\n    this.prevAudioInputDevice.next(value);\n  };\n\n  updatePrevVideoInputDevice = (value: string) => {\n    this.prevVideoInputDevice.next(value);\n  };\n\n  updateAudioPaused = (value: boolean) => {\n    this.audioPaused.next(value);\n  };\n\n  updateMainScreenPerson = (value: string) => {\n    this.mainScreenPerson.next(value);\n  };\n\n  updateAdminOnMainScreen = (value: boolean) => {\n    this.adminOnMainScreen.next(value);\n  };\n\n  updateScreenStates = (value: ScreenState[]) => {\n    this.screenStates.next(value);\n  };\n\n  updatePrevScreenStates = (value: ScreenState[]) => {\n    this.prevScreenStates.next(value);\n  };\n\n  updateUpdateDateState = (value: number | null) => {\n    this.updateDateState.next(value);\n  };\n\n  updateLastUpdate = (value: number | null) => {\n    this.lastUpdate.next(value);\n  };\n\n  updateNForReadjustRecord = (value: number) => {\n    this.nForReadjustRecord.next(value);\n  };\n\n  updateFixedPageLimit = (value: number) => {\n    this.fixedPageLimit.next(value);\n  };\n\n  updateRemoveAltGrid = (value: boolean) => {\n    this.removeAltGrid.next(value);\n  };\n\n  updateNForReadjust = (value: number) => {\n    this.nForReadjust.next(value);\n  };\n\n  updateLastReorderTime = (value: number) => {\n    this.lastReorderTime.next(value);\n  };\n\n  updateAudStreamNames = (value: Stream[]) => {\n    this.audStreamNames.next(value);\n  };\n\n  updateCurrentUserPage = (value: number) => {\n    this.currentUserPage.next(value);\n  };\n\n  updateMainHeightWidth = (value: number) => {\n    this.mainHeightWidth.next(value);\n  };\n\n  updatePrevMainHeightWidth = (value: number) => {\n    this.prevMainHeightWidth.next(value);\n  };\n\n  updatePrevDoPaginate = (value: boolean) => {\n    this.prevDoPaginate.next(value);\n  };\n\n  updateDoPaginate = (value: boolean) => {\n    this.doPaginate.next(value);\n  };\n\n  updateShareEnded = (value: boolean) => {\n    this.shareEnded.next(value);\n  };\n\n  updateLStreams = (value: (Participant | Stream)[]) => {\n    this.lStreams.next(value);\n  };\n\n  updateChatRefStreams = (value: (Participant | Stream)[]) => {\n    this.chatRefStreams.next(value);\n  };\n\n  updateControlHeight = (value: number) => {\n    this.controlHeight.next(value);\n  };\n\n  updateIsWideScreen = (value: boolean) => {\n    this.isWideScreen.next(value);\n  };\n\n  updateIsMediumScreen = (value: boolean) => {\n    this.isMediumScreen.next(value);\n  };\n\n  updateIsSmallScreen = (value: boolean) => {\n    this.isSmallScreen.next(value);\n  };\n\n  updateAddGrid = (value: boolean) => {\n    this.addGrid.next(value);\n  };\n\n  updateAddAltGrid = (value: boolean) => {\n    this.addAltGrid.next(value);\n  };\n\n  updateGridRows = (value: number) => {\n    this.gridRows.next(value);\n  };\n\n  updateGridCols = (value: number) => {\n    this.gridCols.next(value);\n  };\n\n  updateAltGridRows = (value: number) => {\n    this.altGridRows.next(value);\n  };\n\n  updateAltGridCols = (value: number) => {\n    this.altGridCols.next(value);\n  };\n\n  updateNumberPages = (value: number) => {\n    this.numberPages.next(value);\n  };\n\n  updateCurrentStreams = (value: (Participant | Stream)[]) => {\n    this.currentStreams.next(value);\n  };\n\n  updateShowMiniView = (value: boolean) => {\n    this.showMiniView.next(value);\n  };\n\n  updateNStream = (value: MediaStream | null) => {\n    this.nStream.next(value);\n  };\n\n  updateDefer_receive = (value: boolean) => {\n    this.defer_receive.next(value);\n  };\n\n  updateAllAudioStreams = (value: (Participant | Stream)[]) => {\n    this.allAudioStreams.next(value);\n  };\n\n  updateRemoteScreenStream = (value: Stream[]) => {\n    this.remoteScreenStream.next(value);\n  };\n\n  updateScreenProducer = (value: Producer | null) => {\n    this.screenProducer.next(value);\n  };\n\n  updateGotAllVids = (value: boolean) => {\n    this.gotAllVids.next(value);\n  };\n\n  updatePaginationHeightWidth = (value: number) => {\n    this.paginationHeightWidth.next(value);\n  };\n\n  updatePaginationDirection = (value: 'horizontal' | 'vertical') => {\n    this.paginationDirection.next(value);\n  };\n\n  updateGridSizes = (value: GridSizes) => {\n    this.gridSizes.next(value);\n  };\n\n  updateScreenForceFullDisplay = (value: boolean) => {\n    this.screenForceFullDisplay.next(value);\n  };\n\n  updateMainGridStream = (value: CustomMediaComponent[]) => {\n    this.mainGridStream.next(value);\n  };\n\n  updateOtherGridStreams = (value: CustomMediaComponent[][]) => {\n    this.otherGridStreams.next(value);\n  };\n\n  updateAudioOnlyStreams = (value: CustomMediaComponent[]) => {\n    this.audioOnlyStreams.next(value);\n  };\n\n  updateVideoInputs = (value: MediaDeviceInfo[]) => {\n    this.videoInputs.next(value);\n  };\n\n  updateAudioInputs = (value: MediaDeviceInfo[]) => {\n    this.audioInputs.next(value);\n  };\n\n  updateMeetingProgressTime = (value: string) => {\n    this.meetingProgressTime.next(value);\n  };\n\n  updateMeetingElapsedTime = (value: number) => {\n    this.meetingElapsedTime.next(value);\n  };\n\n  updateRef_participants = (value: Participant[]) => {\n    this.ref_participants.next(value);\n  };\n\n  // Messages\n  messages = new BehaviorSubject<Message[]>([]);\n  startDirectMessage = new BehaviorSubject<boolean>(false);\n  directMessageDetails = new BehaviorSubject<Participant | null>(null);\n  showMessagesBadge = new BehaviorSubject<boolean>(false);\n\n  // Event Settings\n  audioSetting = new BehaviorSubject<string>('allow');\n  videoSetting = new BehaviorSubject<string>('allow');\n  screenshareSetting = new BehaviorSubject<string>('allow');\n  chatSetting = new BehaviorSubject<string>('allow');\n\n  // Display Settings\n  displayOption = new BehaviorSubject<string>('media');\n  autoWave = new BehaviorSubject<boolean>(true);\n  forceFullDisplay = new BehaviorSubject<boolean>(true);\n  prevForceFullDisplay = new BehaviorSubject<boolean>(false);\n  prevMeetingDisplayType = new BehaviorSubject<string>('video');\n\n  // Waiting Room\n  waitingRoomFilter = new BehaviorSubject<string>('');\n  waitingRoomList = new BehaviorSubject<WaitingRoomParticipant[]>(\n    this.useSeed && this.seedData?.waitingList ? this.seedData.waitingList : [],\n  );\n  waitingRoomCounter = new BehaviorSubject<number>(0);\n  filteredWaitingRoomList = new BehaviorSubject<WaitingRoomParticipant[]>(\n    this.useSeed && this.seedData?.waitingList ? this.seedData.waitingList : [],\n  );\n\n  // Requests\n  requestFilter = new BehaviorSubject<string>('');\n  requestList = new BehaviorSubject<Request[]>(\n    this.useSeed && this.seedData?.requests ? this.seedData.requests : [],\n  );\n  requestCounter = new BehaviorSubject<number>(0);\n  filteredRequestList = new BehaviorSubject<Request[]>(\n    this.useSeed && this.seedData?.requests ? this.seedData.requests : [],\n  );\n\n  // Total Requests and Waiting Room\n  totalReqWait = new BehaviorSubject<number>(0);\n\n  // Alerts\n  alertVisible = new BehaviorSubject<boolean>(false);\n  alertMessage = new BehaviorSubject<string>('');\n  alertType = new BehaviorSubject<'success' | 'danger'>('success');\n  alertDuration = new BehaviorSubject<number>(3000);\n\n  // Progress Timer\n  progressTimerVisible = new BehaviorSubject<boolean>(true);\n  progressTimerValue = new BehaviorSubject<number>(0);\n\n  // Menu Modals\n  isMenuModalVisible = new BehaviorSubject<boolean>(false);\n  isRecordingModalVisible = new BehaviorSubject<boolean>(false);\n  isSettingsModalVisible = new BehaviorSubject<boolean>(false);\n  isRequestsModalVisible = new BehaviorSubject<boolean>(false);\n  isWaitingModalVisible = new BehaviorSubject<boolean>(false);\n  isCoHostModalVisible = new BehaviorSubject<boolean>(false);\n  isMediaSettingsModalVisible = new BehaviorSubject<boolean>(false);\n  isDisplaySettingsModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Other Modals\n  isParticipantsModalVisible = new BehaviorSubject<boolean>(false);\n  isMessagesModalVisible = new BehaviorSubject<boolean>(false);\n  isConfirmExitModalVisible = new BehaviorSubject<boolean>(false);\n  isConfirmHereModalVisible = new BehaviorSubject<boolean>(false);\n  isShareEventModalVisible = new BehaviorSubject<boolean>(false);\n  isLoadingModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Recording Options\n  recordingMediaOptions = new BehaviorSubject<string>('video');\n  recordingAudioOptions = new BehaviorSubject<string>('all');\n  recordingVideoOptions = new BehaviorSubject<string>('all');\n  recordingVideoType = new BehaviorSubject<string>('fullDisplay');\n  recordingVideoOptimized = new BehaviorSubject<boolean>(false);\n  recordingDisplayType = new BehaviorSubject<'video' | 'media' | 'all'>('video');\n  recordingAddHLS = new BehaviorSubject<boolean>(true);\n  recordingNameTags = new BehaviorSubject<boolean>(true);\n  recordingBackgroundColor = new BehaviorSubject<string>('#83c0e9');\n  recordingNameTagsColor = new BehaviorSubject<string>('#ffffff');\n  recordingAddText = new BehaviorSubject<boolean>(false);\n  recordingCustomText = new BehaviorSubject<string>('Add Text');\n  recordingCustomTextPosition = new BehaviorSubject<string>('top');\n  recordingCustomTextColor = new BehaviorSubject<string>('#ffffff');\n  recordingOrientationVideo = new BehaviorSubject<string>('landscape');\n  clearedToResume = new BehaviorSubject<boolean>(true);\n  clearedToRecord = new BehaviorSubject<boolean>(true);\n  recordState = new BehaviorSubject<string>('green');\n  showRecordButtons = new BehaviorSubject<boolean>(false);\n  recordingProgressTime = new BehaviorSubject<string>('00:00:00');\n  audioSwitching = new BehaviorSubject<boolean>(false);\n  videoSwitching = new BehaviorSubject<boolean>(false);\n\n  // Media States\n  videoAlreadyOn = new BehaviorSubject<boolean>(false);\n  audioAlreadyOn = new BehaviorSubject<boolean>(false);\n\n  componentSizes = new BehaviorSubject<ComponentSizes>({\n    mainHeight: 0,\n    otherHeight: 0,\n    mainWidth: 0,\n    otherWidth: 0,\n  });\n\n  // Permissions\n  hasCameraPermission = new BehaviorSubject<boolean>(false);\n  hasAudioPermission = new BehaviorSubject<boolean>(false);\n\n  // Transports\n  transportCreated = new BehaviorSubject<boolean>(false);\n  transportCreatedVideo = new BehaviorSubject<boolean>(false);\n  transportCreatedAudio = new BehaviorSubject<boolean>(false);\n  transportCreatedScreen = new BehaviorSubject<boolean>(false);\n  producerTransport = new BehaviorSubject<Transport | null>(null);\n  videoProducer = new BehaviorSubject<Producer | null>(null);\n  params = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  videoParams = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  audioParams = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  audioProducer = new BehaviorSubject<Producer | null>(null);\n  consumerTransports = new BehaviorSubject<TransportType[]>([]);\n  consumingTransports = new BehaviorSubject<string[]>([]);\n\n  // Polls\n  polls = new BehaviorSubject<Poll[]>(\n    this.useSeed && this.seedData?.polls ? this.seedData.polls : [],\n  );\n  poll = new BehaviorSubject<Poll | null>(null);\n  isPollModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Background\n  customImage = new BehaviorSubject<string>('');\n  selectedImage = new BehaviorSubject<string>('');\n  segmentVideo = new BehaviorSubject<MediaStream | null>(null);\n  selfieSegmentation = new BehaviorSubject<SelfieSegmentation | null>(null);\n  pauseSegmentation = new BehaviorSubject<boolean>(false);\n  processedStream = new BehaviorSubject<MediaStream | null>(null);\n  keepBackground = new BehaviorSubject<boolean>(false);\n  backgroundHasChanged = new BehaviorSubject<boolean>(false);\n  virtualStream = new BehaviorSubject<MediaStream | null>(null);\n  mainCanvas = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  prevKeepBackground = new BehaviorSubject<boolean>(false);\n  appliedBackground = new BehaviorSubject<boolean>(false);\n  isBackgroundModalVisible = new BehaviorSubject<boolean>(false);\n  autoClickBackground = new BehaviorSubject<boolean>(false);\n\n  // Breakout Rooms\n  breakoutRooms = new BehaviorSubject<BreakoutParticipant[][]>(\n    this.useSeed && this.seedData?.breakoutRooms ? this.seedData.breakoutRooms : [],\n  );\n  currentRoomIndex = new BehaviorSubject<number>(0);\n  canStartBreakout = new BehaviorSubject<boolean>(false);\n  breakOutRoomStarted = new BehaviorSubject<boolean>(false);\n  breakOutRoomEnded = new BehaviorSubject<boolean>(false);\n  hostNewRoom = new BehaviorSubject<number>(-1);\n  limitedBreakRoom = new BehaviorSubject<BreakoutParticipant[]>([]);\n  mainRoomsLength = new BehaviorSubject<number>(0);\n  memberRoom = new BehaviorSubject<number>(-1);\n  isBreakoutRoomsModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Whiteboard\n  whiteboardUsers = new BehaviorSubject<WhiteboardUser[]>(\n    this.useSeed && this.seedData?.whiteboardUsers ? this.seedData.whiteboardUsers : [],\n  );\n  currentWhiteboardIndex = new BehaviorSubject<number>(0);\n  canStartWhiteboard = new BehaviorSubject<boolean>(false);\n  whiteboardStarted = new BehaviorSubject<boolean>(false);\n  whiteboardEnded = new BehaviorSubject<boolean>(false);\n  whiteboardLimit = new BehaviorSubject<number>(4);\n  isWhiteboardModalVisible = new BehaviorSubject<boolean>(false);\n  isConfigureWhiteboardModalVisible = new BehaviorSubject<boolean>(false);\n  shapes = new BehaviorSubject<Shape[]>([]);\n  useImageBackground = new BehaviorSubject<boolean>(true);\n  redoStack = new BehaviorSubject<Shape[]>([]);\n  undoStack = new BehaviorSubject<string[]>([]);\n  canvasStream = new BehaviorSubject<MediaStream | null>(null);\n  canvasWhiteboard = new BehaviorSubject<HTMLCanvasElement | null>(null);\n\n  // Screenboard\n  canvasScreenboard = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  processedScreenStream = new BehaviorSubject<MediaStream | null>(null);\n  annotateScreenStream = new BehaviorSubject<boolean>(false);\n  mainScreenCanvas = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  isScreenboardModalVisible = new BehaviorSubject<boolean>(false);\n\n  //state variables for the control buttons\n  micActive = new BehaviorSubject<boolean>(\n    this.audioAlreadyOn.value ? this.audioAlreadyOn.value : false,\n  );\n  videoActive = new BehaviorSubject<boolean>(\n    this.videoAlreadyOn.value ? this.videoAlreadyOn.value : false,\n  );\n  screenShareActive = new BehaviorSubject<boolean>(false);\n  endCallActive = new BehaviorSubject<boolean>(false);\n  participantsActive = new BehaviorSubject<boolean>(false);\n  menuActive = new BehaviorSubject<boolean>(false);\n  commentsActive = new BehaviorSubject<boolean>(false);\n\n  // Update functions\n  updateMessages = (value: Message[]) => {\n    this.messages.next(value);\n  };\n\n  updateStartDirectMessage = (value: boolean) => {\n    this.startDirectMessage.next(value);\n  };\n\n  updateDirectMessageDetails = (value: Participant | null) => {\n    this.directMessageDetails.next(value);\n  };\n\n  updateShowMessagesBadge = (value: boolean) => {\n    this.showMessagesBadge.next(value);\n  };\n\n  updateAudioSetting = (value: string) => {\n    this.audioSetting.next(value);\n  };\n\n  updateVideoSetting = (value: string) => {\n    this.videoSetting.next(value);\n  };\n\n  updateScreenshareSetting = (value: string) => {\n    this.screenshareSetting.next(value);\n  };\n\n  updateChatSetting = (value: string) => {\n    this.chatSetting.next(value);\n  };\n\n  updateDisplayOption = (value: string) => {\n    this.displayOption.next(value);\n  };\n\n  updateAutoWave = (value: boolean) => {\n    this.autoWave.next(value);\n  };\n\n  updateForceFullDisplay = (value: boolean) => {\n    this.forceFullDisplay.next(value);\n  };\n\n  updatePrevForceFullDisplay = (value: boolean) => {\n    this.prevForceFullDisplay.next(value);\n  };\n\n  updatePrevMeetingDisplayType = (value: string) => {\n    this.prevMeetingDisplayType.next(value);\n  };\n\n  updateWaitingRoomCounter = (value: number) => {\n    this.waitingRoomCounter.next(value);\n  };\n\n  updateWaitingRoomFilter = (value: string) => {\n    this.waitingRoomFilter.next(value);\n  };\n\n  updateWaitingRoomList = (value: WaitingRoomParticipant[]) => {\n    this.waitingRoomList.next(value);\n    this.filteredWaitingRoomList.next(value);\n    this.waitingRoomCounter.next(value.length);\n  };\n\n  onWaitingRoomFilterChange = (value: string) => {\n    if (value !== '' && value.length > 0) {\n      const filteredWaitingRoom = this.waitingRoomList\n        .getValue()\n        .filter((waitingRoom: WaitingRoomParticipant) => {\n          return waitingRoom.name.toLowerCase().includes(value.toLowerCase());\n        });\n      this.filteredWaitingRoomList.next(filteredWaitingRoom);\n      this.waitingRoomCounter.next(filteredWaitingRoom.length);\n    } else {\n      this.filteredWaitingRoomList.next(this.waitingRoomList.getValue());\n      this.waitingRoomCounter.next(this.waitingRoomList.getValue().length);\n    }\n  };\n\n  onWaitingRoomClose = () => {\n    this.updateIsWaitingModalVisible(false);\n  };\n\n  updateRequestCounter = (value: number) => {\n    this.requestCounter.next(value);\n  };\n\n  updateRequestFilter = (value: string) => {\n    this.requestFilter.next(value);\n  };\n\n  updateRequestList = (value: Request[]) => {\n    this.requestList.next(value);\n    this.filteredRequestList.next(value);\n    this.requestCounter.next(value.length);\n  };\n\n  onRequestFilterChange = (value: string) => {\n    if (value !== '' && value.length > 0) {\n      const filteredRequest = this.requestList.getValue().filter((request: Request) => {\n        return request?.name?.toLowerCase().includes(value.toLowerCase()) ?? false;\n      });\n      this.filteredRequestList.next(filteredRequest);\n      this.requestCounter.next(filteredRequest.length);\n    } else {\n      this.filteredRequestList.next(this.requestList.getValue());\n      this.requestCounter.next(this.requestList.getValue().length);\n    }\n  };\n\n  onRequestClose = () => {\n    this.updateIsRequestsModalVisible(false);\n  };\n\n  updateTotalReqWait = (value: number) => {\n    this.totalReqWait.next(value);\n  };\n\n  updateAlertVisible = (value: boolean) => {\n    this.alertVisible.next(value);\n  };\n\n  updateAlertMessage = (value: string) => {\n    this.alertMessage.next(value);\n  };\n\n  updateAlertType = (value: 'success' | 'danger') => {\n    this.alertType.next(value);\n  };\n\n  updateAlertDuration = (value: number) => {\n    this.alertDuration.next(value);\n  };\n\n  updateProgressTimerVisible = (value: boolean) => {\n    this.progressTimerVisible.next(value);\n  };\n\n  updateProgressTimerValue = (value: number) => {\n    this.progressTimerValue.next(value);\n  };\n\n  updateIsMenuModalVisible = (value: boolean) => {\n    this.isMenuModalVisible.next(value);\n  };\n\n  updateIsRecordingModalVisible = (value: boolean) => {\n    this.isRecordingModalVisible.next(value);\n    if (value) {\n      this.updateConfirmedToRecord(false);\n    } else {\n      if (\n        this.clearedToRecord.getValue() &&\n        this.clearedToResume.getValue() &&\n        this.recordStarted.getValue()\n      ) {\n        this.updateShowRecordButtons(true);\n      }\n    }\n  };\n\n  updateIsSettingsModalVisible = (value: boolean) => {\n    this.isSettingsModalVisible.next(value);\n  };\n\n  updateIsRequestsModalVisible = (value: boolean) => {\n    this.isRequestsModalVisible.next(value);\n  };\n\n  updateIsWaitingModalVisible = (value: boolean) => {\n    this.isWaitingModalVisible.next(value);\n  };\n\n  updateIsCoHostModalVisible = (value: boolean) => {\n    this.isCoHostModalVisible.next(value);\n  };\n\n  updateIsMediaSettingsModalVisible = (value: boolean) => {\n    this.isMediaSettingsModalVisible.next(value);\n  };\n\n  updateIsDisplaySettingsModalVisible = (value: boolean) => {\n    this.isDisplaySettingsModalVisible.next(value);\n  };\n\n  updateIsParticipantsModalVisible = (value: boolean) => {\n    this.isParticipantsModalVisible.next(value);\n  };\n\n  updateIsMessagesModalVisible = (value: boolean) => {\n    this.isMessagesModalVisible.next(value);\n    if (!value) {\n      this.updateShowMessagesBadge(false);\n    }\n  };\n\n  updateIsConfirmExitModalVisible = (value: boolean) => {\n    this.isConfirmExitModalVisible.next(value);\n  };\n\n  updateIsConfirmHereModalVisible = (value: boolean) => {\n    this.isConfirmHereModalVisible.next(value);\n  };\n\n  updateIsLoadingModalVisible = (value: boolean) => {\n    this.isLoadingModalVisible.next(value);\n  };\n\n  updateIsShareEventModalVisible = (value: boolean) => {\n    this.isShareEventModalVisible.next(value);\n  };\n\n  updateRecordingMediaOptions = (value: string) => {\n    this.recordingMediaOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAudioOptions = (value: string) => {\n    this.recordingAudioOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoOptions = (value: string) => {\n    this.recordingVideoOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoType = (value: string) => {\n    this.recordingVideoType.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoOptimized = (value: boolean) => {\n    this.recordingVideoOptimized.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingDisplayType = (value: 'video' | 'media' | 'all') => {\n    this.recordingDisplayType.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAddHLS = (value: boolean) => {\n    this.recordingAddHLS.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAddText = (value: boolean) => {\n    this.recordingAddText.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomText = (value: string) => {\n    this.recordingCustomText.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomTextPosition = (value: string) => {\n    this.recordingCustomTextPosition.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomTextColor = (value: string) => {\n    this.recordingCustomTextColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingNameTags = (value: boolean) => {\n    this.recordingNameTags.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingBackgroundColor = (value: string) => {\n    this.recordingBackgroundColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingNameTagsColor = (value: string) => {\n    this.recordingNameTagsColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingOrientationVideo = (value: string) => {\n    this.recordingOrientationVideo.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateClearedToResume = (value: boolean) => {\n    this.clearedToResume.next(value);\n  };\n\n  updateClearedToRecord = (value: boolean) => {\n    this.clearedToRecord.next(value);\n  };\n\n  updateRecordState = (value: string) => {\n    if (this.recordStarted.value && !this.recordStopped.value) {\n      if (!this.recordPaused.value) {\n        this.recordState.next('red');\n      } else {\n        this.recordState.next('yellow');\n      }\n    } else {\n      this.recordState.next(value);\n    }\n    this.recordState.next(value);\n  };\n\n  updateShowRecordButtons = (value: boolean) => {\n    this.showRecordButtons.next(value);\n  };\n\n  updateRecordingProgressTime = (value: string) => {\n    this.recordingProgressTime.next(value);\n    this.updateRecordTimerWidget();\n  };\n\n  updateAudioSwitching = (value: boolean) => {\n    this.audioSwitching.next(value);\n  };\n\n  updateVideoSwitching = (value: boolean) => {\n    this.videoSwitching.next(value);\n  };\n\n  updateVideoAlreadyOn = (value: boolean) => {\n    this.videoAlreadyOn.next(value);\n    this.videoActive.next(value);\n  };\n\n  updateAudioAlreadyOn = (value: boolean) => {\n    this.audioAlreadyOn.next(value);\n    this.micActive.next(value);\n  };\n\n  updateComponentSizes = (sizes: ComponentSizes) => {\n    this.componentSizes.next(sizes);\n  };\n\n  updateHasCameraPermission = (value: boolean) => {\n    this.hasCameraPermission.next(value);\n  };\n\n  updateHasAudioPermission = (value: boolean) => {\n    this.hasAudioPermission.next(value);\n  };\n\n  requestPermissionCamera(): Promise<string> {\n    // Implement the request permission logic here\n    return Promise.resolve('granted');\n  }\n\n  requestPermissionAudio(): Promise<string> {\n    // Implement the request permission logic here\n    return Promise.resolve('granted');\n  }\n\n  updateTransportCreated = (value: boolean) => {\n    this.transportCreated.next(value);\n  };\n\n  updateTransportCreatedVideo = (value: boolean) => {\n    this.transportCreatedVideo.next(value);\n  };\n\n  updateTransportCreatedAudio = (value: boolean) => {\n    this.transportCreatedAudio.next(value);\n  };\n\n  updateTransportCreatedScreen = (value: boolean) => {\n    this.transportCreatedScreen.next(value);\n  };\n\n  updateProducerTransport = (value: Transport | null) => {\n    this.producerTransport.next(value);\n  };\n\n  updateVideoProducer = (value: Producer | null) => {\n    this.videoProducer.next(value);\n  };\n\n  updateParams = (value: ProducerOptions) => {\n    this.params.next(value);\n  };\n\n  updateVideoParams = (value: ProducerOptions) => {\n    this.videoParams.next(value);\n  };\n\n  updateAudioParams = (value: ProducerOptions) => {\n    this.audioParams.next(value);\n  };\n\n  updateAudioProducer = (value: Producer | null) => {\n    this.audioProducer.next(value);\n  };\n\n  updateConsumerTransports = (value: TransportType[]) => {\n    this.consumerTransports.next(value);\n  };\n\n  updateConsumingTransports = (value: string[]) => {\n    this.consumingTransports.next(value);\n  };\n\n  updatePolls = (value: Poll[]) => {\n    this.polls.next(value);\n  };\n\n  updatePoll = (value: Poll | null) => {\n    this.poll.next(value);\n  };\n\n  updateIsPollModalVisible = (value: boolean) => {\n    this.isPollModalVisible.next(value);\n  };\n\n  updateCustomImage = (value: string) => {\n    this.customImage.next(value);\n  };\n\n  updateSelectedImage = (value: string) => {\n    this.selectedImage.next(value);\n  };\n\n  updateSegmentVideo = (value: MediaStream | null) => {\n    this.segmentVideo.next(value);\n  };\n\n  updateSelfieSegmentation = (value: SelfieSegmentation | null) => {\n    this.selfieSegmentation.next(value);\n  };\n\n  updatePauseSegmentation = (value: boolean) => {\n    this.pauseSegmentation.next(value);\n  };\n\n  updateProcessedStream = (value: MediaStream | null) => {\n    this.processedStream.next(value);\n  };\n\n  updateKeepBackground = (value: boolean) => {\n    this.keepBackground.next(value);\n  };\n\n  updateBackgroundHasChanged = (value: boolean) => {\n    this.backgroundHasChanged.next(value);\n  };\n\n  updateVirtualStream = (value: MediaStream | null) => {\n    this.virtualStream.next(value);\n  };\n\n  updateMainCanvas = (value: HTMLCanvasElement | null) => {\n    this.mainCanvas.next(value);\n  };\n\n  updatePrevKeepBackground = (value: boolean) => {\n    this.prevKeepBackground.next(value);\n  };\n\n  updateAppliedBackground = (value: boolean) => {\n    this.appliedBackground.next(value);\n  };\n\n  updateIsBackgroundModalVisible = (value: boolean) => {\n    this.isBackgroundModalVisible.next(value);\n  };\n\n  updateAutoClickBackground = (value: boolean) => {\n    this.autoClickBackground.next(value);\n  };\n\n  updateBreakoutRooms = (value: BreakoutParticipant[][]) => {\n    this.breakoutRooms.next(value);\n  };\n\n  updateCurrentRoomIndex = (value: number) => {\n    this.currentRoomIndex.next(value);\n  };\n\n  updateCanStartBreakout = (value: boolean) => {\n    this.canStartBreakout.next(value);\n  };\n\n  updateBreakOutRoomStarted = (value: boolean) => {\n    this.breakOutRoomStarted.next(value);\n  };\n\n  updateBreakOutRoomEnded = (value: boolean) => {\n    this.breakOutRoomEnded.next(value);\n  };\n\n  updateHostNewRoom = (value: number) => {\n    this.hostNewRoom.next(value);\n  };\n\n  updateLimitedBreakRoom = (value: BreakoutParticipant[]) => {\n    this.limitedBreakRoom.next(value);\n  };\n\n  updateMainRoomsLength = (value: number) => {\n    this.mainRoomsLength.next(value);\n  };\n\n  updateMemberRoom = (value: number) => {\n    this.memberRoom.next(value);\n  };\n\n  updateIsBreakoutRoomsModalVisible = (value: boolean) => {\n    this.isBreakoutRoomsModalVisible.next(value);\n  };\n\n  updateWhiteboardUsers = (value: WhiteboardUser[]) => {\n    this.whiteboardUsers.next(value);\n  };\n\n  updateCurrentWhiteboardIndex = (value: number) => {\n    this.currentWhiteboardIndex.next(value);\n  };\n\n  updateCanStartWhiteboard = (value: boolean) => {\n    this.canStartWhiteboard.next(value);\n  };\n\n  updateWhiteboardStarted = (value: boolean) => {\n    this.whiteboardStarted.next(value);\n  };\n\n  updateWhiteboardEnded = (value: boolean) => {\n    this.whiteboardEnded.next(value);\n  };\n\n  updateWhiteboardLimit = (value: number) => {\n    this.whiteboardLimit.next(value);\n  };\n\n  updateIsWhiteboardModalVisible = (value: boolean) => {\n    this.isWhiteboardModalVisible.next(value);\n  };\n\n  updateIsConfigureWhiteboardModalVisible = (value: boolean) => {\n    this.isConfigureWhiteboardModalVisible.next(value);\n  };\n\n  updateShapes = (value: Shape[]) => {\n    this.shapes.next(value);\n  };\n\n  updateUseImageBackground = (value: boolean) => {\n    this.useImageBackground.next(value);\n  };\n\n  updateRedoStack = (value: Shape[]) => {\n    this.redoStack.next(value);\n  };\n\n  updateUndoStack = (value: string[]) => {\n    this.undoStack.next(value);\n  };\n\n  updateCanvasStream = (value: MediaStream | null) => {\n    this.canvasStream.next(value);\n  };\n\n  updateCanvasWhiteboard = (value: HTMLCanvasElement | null) => {\n    this.canvasWhiteboard.next(value);\n  };\n\n  updateCanvasScreenboard = (value: HTMLCanvasElement | null) => {\n    this.canvasScreenboard.next(value);\n  };\n\n  updateProcessedScreenStream = (value: MediaStream | null) => {\n    this.processedScreenStream.next(value);\n  };\n\n  updateAnnotateScreenStream = (value: boolean) => {\n    this.annotateScreenStream.next(value);\n  };\n\n  updateMainScreenCanvas = (value: HTMLCanvasElement | null) => {\n    this.mainScreenCanvas.next(value);\n  };\n\n  updateIsScreenboardModalVisible = (value: boolean) => {\n    this.isScreenboardModalVisible.next(value);\n  };\n\n  checkOrientation = () => {\n    const isPortrait = window.matchMedia('(orientation: portrait)').matches;\n    return isPortrait ? 'portrait' : 'landscape';\n  };\n\n  showAlert = ({\n    message,\n    type,\n    duration = 3000,\n  }: {\n    message: string;\n    type: 'success' | 'danger';\n    duration?: number;\n  }) => {\n    this.updateAlertMessage(message);\n    this.updateAlertType(type);\n    this.updateAlertDuration(duration);\n    this.updateAlertVisible(true);\n  };\n\n  getAllParams() {\n    return {\n      localUIMode: this.localUIMode.value, // Local UI mode\n\n      // Room Details\n      roomName: this.roomName.value,\n      member: this.member.value,\n      adminPasscode: this.adminPasscode.value,\n      youAreCoHost: this.youAreCoHost.value,\n      youAreHost: this.youAreHost.value,\n      islevel: this.islevel.value,\n      confirmedToRecord: this.confirmedToRecord.value,\n      meetingDisplayType: this.meetingDisplayType.value,\n      meetingVideoOptimized: this.meetingVideoOptimized.value,\n      eventType: this.eventType.value,\n      participants: this.participants.value,\n      filteredParticipants: this.filteredParticipants.value,\n      participantsCounter: this.participantsCounter.value,\n      participantsFilter: this.participantsFilter.value,\n\n      // More room details - media\n      consume_sockets: this.consume_sockets.value,\n      rtpCapabilities: this.rtpCapabilities.value,\n      roomRecvIPs: this.roomRecvIPs.value,\n      meetingRoomParams: this.meetingRoomParams.value,\n      itemPageLimit: this.itemPageLimit.value,\n      audioOnlyRoom: this.audioOnlyRoom.value,\n      addForBasic: this.addForBasic.value,\n      screenPageLimit: this.screenPageLimit.value,\n      shareScreenStarted: this.shareScreenStarted.value,\n      shared: this.shared.value,\n      targetOrientation: this.targetOrientation.value,\n      targetResolution: this.targetResolution.value,\n      targetResolutionHost: this.targetResolutionHost.value,\n      vidCons: this.vidCons.value,\n      frameRate: this.frameRate.value,\n      hParams: this.hParams.value,\n      vParams: this.vParams.value,\n      screenParams: this.screenParams.value,\n      aParams: this.aParams.value,\n\n      // More room details - recording\n      recordingAudioPausesLimit: this.recordingAudioPausesLimit.value,\n      recordingAudioPausesCount: this.recordingAudioPausesCount.value,\n      recordingAudioSupport: this.recordingAudioSupport.value,\n      recordingAudioPeopleLimit: this.recordingAudioPeopleLimit.value,\n      recordingAudioParticipantsTimeLimit: this.recordingAudioParticipantsTimeLimit.value,\n      recordingVideoPausesCount: this.recordingVideoPausesCount.value,\n      recordingVideoPausesLimit: this.recordingVideoPausesLimit.value,\n      recordingVideoSupport: this.recordingVideoSupport.value,\n      recordingVideoPeopleLimit: this.recordingVideoPeopleLimit.value,\n      recordingVideoParticipantsTimeLimit: this.recordingVideoParticipantsTimeLimit.value,\n      recordingAllParticipantsSupport: this.recordingAllParticipantsSupport.value,\n      recordingVideoParticipantsSupport: this.recordingVideoParticipantsSupport.value,\n      recordingAllParticipantsFullRoomSupport: this.recordingAllParticipantsFullRoomSupport.value,\n      recordingVideoParticipantsFullRoomSupport:\n        this.recordingVideoParticipantsFullRoomSupport.value,\n      recordingPreferredOrientation: this.recordingPreferredOrientation.value,\n      recordingSupportForOtherOrientation: this.recordingSupportForOtherOrientation.value,\n      recordingMultiFormatsSupport: this.recordingMultiFormatsSupport.value,\n\n      userRecordingParams: this.userRecordingParams.value,\n      canRecord: this.canRecord.value,\n      startReport: this.startReport.value,\n      endReport: this.endReport.value,\n      recordStartTime: this.recordStartTime.value,\n      recordElapsedTime: this.recordElapsedTime.value,\n      isTimerRunning: this.isTimerRunning.value,\n      canPauseResume: this.canPauseResume.value,\n      recordChangeSeconds: this.recordChangeSeconds.value,\n      pauseLimit: this.pauseLimit.value,\n      pauseRecordCount: this.pauseRecordCount.value,\n      canLaunchRecord: this.canLaunchRecord.value,\n      stopLaunchRecord: this.stopLaunchRecord.value,\n\n      participantsAll: this.participantsAll.value,\n\n      firstAll: this.firstAll.value,\n      updateMainWindow: this.updateMainWindow.value,\n      first_round: this.first_round.value,\n      landScaped: this.landScaped.value,\n      lock_screen: this.lock_screen.value,\n      screenId: this.screenId.value,\n      allVideoStreams: this.allVideoStreams.value,\n      newLimitedStreams: this.newLimitedStreams.value,\n      newLimitedStreamsIDs: this.newLimitedStreamsIDs.value,\n      activeSounds: this.activeSounds.value,\n      screenShareIDStream: this.screenShareIDStream.value,\n      screenShareNameStream: this.screenShareNameStream.value,\n      adminIDStream: this.adminIDStream.value,\n      adminNameStream: this.adminNameStream.value,\n      youYouStream: this.youYouStream.value,\n      youYouStreamIDs: this.youYouStreamIDs.value,\n      localStream: this.localStream.value,\n      recordStarted: this.recordStarted.value,\n      recordResumed: this.recordResumed.value,\n      recordPaused: this.recordPaused.value,\n      recordStopped: this.recordStopped.value,\n      adminRestrictSetting: this.adminRestrictSetting.value,\n      videoRequestState: this.videoRequestState.value,\n      videoRequestTime: this.videoRequestTime.value,\n      videoAction: this.videoAction.value,\n      localStreamVideo: this.localStreamVideo.value,\n      userDefaultVideoInputDevice: this.userDefaultVideoInputDevice.value,\n      currentFacingMode: this.currentFacingMode.value,\n      prevFacingMode: this.prevFacingMode.value,\n      defVideoID: this.defVideoID.value,\n      allowed: this.allowed.value,\n      dispActiveNames: this.dispActiveNames.value,\n      p_dispActiveNames: this.p_dispActiveNames.value,\n      activeNames: this.activeNames.value,\n      prevActiveNames: this.prevActiveNames.value,\n      p_activeNames: this.p_activeNames.value,\n      membersReceived: this.membersReceived.value,\n      deferScreenReceived: this.deferScreenReceived.value,\n      hostFirstSwitch: this.hostFirstSwitch.value,\n      micAction: this.micAction.value,\n      screenAction: this.screenAction.value,\n      chatAction: this.chatAction.value,\n      audioRequestState: this.audioRequestState.value,\n      screenRequestState: this.screenRequestState.value,\n      chatRequestState: this.chatRequestState.value,\n      audioRequestTime: this.audioRequestTime.value,\n      screenRequestTime: this.screenRequestTime.value,\n      chatRequestTime: this.chatRequestTime.value,\n      updateRequestIntervalSeconds: this.updateRequestIntervalSeconds.value,\n      oldSoundIds: this.oldSoundIds.value,\n      hostLabel: this.hostLabel.value,\n      mainScreenFilled: this.mainScreenFilled.value,\n      localStreamScreen: this.localStreamScreen.value,\n      screenAlreadyOn: this.screenAlreadyOn.value,\n      chatAlreadyOn: this.chatAlreadyOn.value,\n      redirectURL: this.redirectURL.value,\n      oldAllStreams: this.oldAllStreams.value,\n      adminVidID: this.adminVidID.value,\n      streamNames: this.streamNames.value,\n      non_alVideoStreams: this.non_alVideoStreams.value,\n      sortAudioLoudness: this.sortAudioLoudness.value,\n      audioDecibels: this.audioDecibels.value,\n      mixed_alVideoStreams: this.mixed_alVideoStreams.value,\n      non_alVideoStreams_muted: this.non_alVideoStreams_muted.value,\n      paginatedStreams: this.paginatedStreams.value,\n      localStreamAudio: this.localStreamAudio.value,\n      defAudioID: this.defAudioID.value,\n      userDefaultAudioInputDevice: this.userDefaultAudioInputDevice.value,\n      userDefaultAudioOutputDevice: this.userDefaultAudioOutputDevice.value,\n      prevAudioInputDevice: this.prevAudioInputDevice.value,\n      prevVideoInputDevice: this.prevVideoInputDevice.value,\n      audioPaused: this.audioPaused.value,\n      mainScreenPerson: this.mainScreenPerson.value,\n      adminOnMainScreen: this.adminOnMainScreen.value,\n      screenStates: this.screenStates.value,\n      prevScreenStates: this.prevScreenStates.value,\n      updateDateState: this.updateDateState.value,\n      lastUpdate: this.lastUpdate.value,\n      nForReadjustRecord: this.nForReadjustRecord.value,\n      fixedPageLimit: this.fixedPageLimit.value,\n      removeAltGrid: this.removeAltGrid.value,\n      nForReadjust: this.nForReadjust.value,\n      lastReorderTime: this.lastReorderTime.value,\n      reorderInterval: this.reorderInterval.value,\n      fastReorderInterval: this.fastReorderInterval.value,\n      audStreamNames: this.audStreamNames.value,\n      currentUserPage: this.currentUserPage.value,\n      mainHeightWidth: this.mainHeightWidth.value,\n      prevMainHeightWidth: this.prevMainHeightWidth.value,\n      prevDoPaginate: this.prevDoPaginate.value,\n      doPaginate: this.doPaginate.value,\n      shareEnded: this.shareEnded.value,\n      lStreams: this.lStreams.value,\n      chatRefStreams: this.chatRefStreams.value,\n      controlHeight: this.controlHeight.value,\n      isWideScreen: this.isWideScreen.value,\n      isMediumScreen: this.isMediumScreen.value,\n      isSmallScreen: this.isSmallScreen.value,\n      addGrid: this.addGrid.value,\n      addAltGrid: this.addAltGrid.value,\n      gridRows: this.gridRows.value,\n      gridCols: this.gridCols.value,\n      altGridRows: this.altGridRows.value,\n      altGridCols: this.altGridCols.value,\n      numberPages: this.numberPages.value,\n      currentStreams: this.currentStreams.value,\n      showMiniView: this.showMiniView.value,\n      nStream: this.nStream.value,\n      defer_receive: this.defer_receive.value,\n      allAudioStreams: this.allAudioStreams.value,\n      screenProducer: this.screenProducer.value,\n      remoteScreenStream: this.remoteScreenStream.value,\n      gotAllVids: this.gotAllVids.value,\n      paginationHeightWidth: this.paginationHeightWidth.value,\n      paginationDirection: this.paginationDirection.value,\n      gridSizes: this.gridSizes.value,\n      screenForceFullDisplay: this.screenForceFullDisplay.value,\n      mainGridStream: this.mainGridStream.value,\n      otherGridStreams: this.otherGridStreams.value,\n      audioOnlyStreams: this.audioOnlyStreams.value,\n      videoInputs: this.videoInputs.value,\n      audioInputs: this.audioInputs.value,\n      meetingProgressTime: this.meetingProgressTime.value,\n      meetingElapsedTime: this.meetingElapsedTime.value,\n\n      ref_participants: this.ref_participants.value,\n\n      messages: this.messages.value,\n      startDirectMessage: this.startDirectMessage.value,\n      directMessageDetails: this.directMessageDetails.value,\n      coHost: this.coHost.value,\n      coHostResponsibility: this.coHostResponsibility.value,\n\n      // Event settings\n      audioSetting: this.audioSetting.value,\n      videoSetting: this.videoSetting.value,\n      screenshareSetting: this.screenshareSetting.value,\n      chatSetting: this.chatSetting.value,\n\n      // Display settings\n      autoWave: this.autoWave.value,\n      forceFullDisplay: this.forceFullDisplay.value,\n      prevForceFullDisplay: this.prevForceFullDisplay.value,\n      prevMeetingDisplayType: this.prevMeetingDisplayType.value,\n\n      // Waiting room\n      waitingRoomFilter: this.waitingRoomFilter.value,\n      waitingRoomList: this.waitingRoomList.value,\n      waitingRoomCounter: this.waitingRoomCounter.value,\n      filteredWaitingRoomList: this.filteredWaitingRoomList.value,\n\n      // Requests\n      requestFilter: this.requestFilter.value,\n      requestList: this.requestList.value,\n      requestCounter: this.requestCounter.value,\n      filteredRequestList: this.filteredRequestList.value,\n\n      // Total requests and waiting room\n      totalReqWait: this.totalReqWait.value,\n\n      // Alerts\n      alertVisible: this.alertVisible.value,\n      alertMessage: this.alertMessage.value,\n      alertType: this.alertType.value,\n      alertDuration: this.alertDuration.value,\n\n      // Progress Timer\n      progressTimerVisible: this.progressTimerVisible.value,\n      progressTimerValue: this.progressTimerValue.value,\n\n      // Menu modals\n      isMenuModalVisible: this.isMenuModalVisible.value,\n      isRecordingModalVisible: this.isRecordingModalVisible.value,\n      isSettingsModalVisible: this.isSettingsModalVisible.value,\n      isRequestsModalVisible: this.isRequestsModalVisible.value,\n      isWaitingModalVisible: this.isWaitingModalVisible.value,\n      isCoHostModalVisible: this.isCoHostModalVisible.value,\n      isMediaSettingsModalVisible: this.isMediaSettingsModalVisible.value,\n      isDisplaySettingsModalVisible: this.isDisplaySettingsModalVisible.value,\n\n      // Other Modals\n      isParticipantsModalVisible: this.isParticipantsModalVisible.value,\n      isMessagesModalVisible: this.isMessagesModalVisible.value,\n      isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n      isConfirmHereModalVisible: this.isConfirmHereModalVisible.value,\n      isLoadingModalVisible: this.isLoadingModalVisible.value,\n\n      // Recording Options\n      recordingMediaOptions: this.recordingMediaOptions.value,\n      recordingAudioOptions: this.recordingAudioOptions.value,\n      recordingVideoOptions: this.recordingVideoOptions.value,\n      recordingVideoType: this.recordingVideoType.value,\n      recordingVideoOptimized: this.recordingVideoOptimized.value,\n      recordingDisplayType: this.recordingDisplayType.value,\n      recordingAddHLS: this.recordingAddHLS.value,\n      recordingAddText: this.recordingAddText.value,\n      recordingCustomText: this.recordingCustomText.value,\n      recordingCustomTextPosition: this.recordingCustomTextPosition.value,\n      recordingCustomTextColor: this.recordingCustomTextColor.value,\n      recordingNameTags: this.recordingNameTags.value,\n      recordingBackgroundColor: this.recordingBackgroundColor.value,\n      recordingNameTagsColor: this.recordingNameTagsColor.value,\n      recordingOrientationVideo: this.recordingOrientationVideo.value,\n      clearedToResume: this.clearedToResume.value,\n      clearedToRecord: this.clearedToRecord.value,\n      recordState: this.recordState.value,\n      showRecordButtons: this.showRecordButtons.value,\n      recordingProgressTime: this.recordingProgressTime.value,\n      audioSwitching: this.audioSwitching.value,\n      videoSwitching: this.videoSwitching.value,\n\n      // Media states\n      videoAlreadyOn: this.videoAlreadyOn.value,\n      audioAlreadyOn: this.audioAlreadyOn.value,\n      componentSizes: this.componentSizes.value,\n\n      // Permissions\n      hasCameraPermission: this.hasCameraPermission.value,\n      hasAudioPermission: this.hasAudioPermission.value,\n\n      // Transports\n      transportCreated: this.transportCreated.value,\n      transportCreatedVideo: this.transportCreatedVideo.value,\n      transportCreatedAudio: this.transportCreatedAudio.value,\n      transportCreatedScreen: this.transportCreatedScreen.value,\n      producerTransport: this.producerTransport.value,\n      videoProducer: this.videoProducer.value,\n      params: this.params.value,\n      videoParams: this.videoParams.value,\n      audioParams: this.audioParams.value,\n      audioProducer: this.audioProducer.value,\n      consumerTransports: this.consumerTransports.value,\n      consumingTransports: this.consumingTransports.value,\n\n      // Polls\n      polls: this.polls.value,\n      poll: this.poll.value,\n      isPollModalVisible: this.isPollModalVisible.value,\n\n      // Background\n      customImage: this.customImage.value,\n      selectedImage: this.selectedImage.value,\n      segmentVideo: this.segmentVideo.value,\n      selfieSegmentation: this.selfieSegmentation.value,\n      pauseSegmentation: this.pauseSegmentation.value,\n      processedStream: this.processedStream.value,\n      keepBackground: this.keepBackground.value,\n      backgroundHasChanged: this.backgroundHasChanged.value,\n      virtualStream: this.virtualStream.value,\n      mainCanvas: this.mainCanvas.value,\n      prevKeepBackground: this.prevKeepBackground.value,\n      appliedBackground: this.appliedBackground.value,\n      isBackgroundModalVisible: this.isBackgroundModalVisible.value,\n      autoClickBackground: this.autoClickBackground.value,\n\n      // Breakout rooms\n      breakoutRooms: this.breakoutRooms.value,\n      currentRoomIndex: this.currentRoomIndex.value,\n      canStartBreakout: this.canStartBreakout.value,\n      breakOutRoomStarted: this.breakOutRoomStarted.value,\n      breakOutRoomEnded: this.breakOutRoomEnded.value,\n      hostNewRoom: this.hostNewRoom.value,\n      limitedBreakRoom: this.limitedBreakRoom.value,\n      mainRoomsLength: this.mainRoomsLength.value,\n      memberRoom: this.memberRoom.value,\n      isBreakoutRoomsModalVisible: this.isBreakoutRoomsModalVisible.value,\n\n      // Whiteboard\n      whiteboardUsers: this.whiteboardUsers.value,\n      currentWhiteboardIndex: this.currentWhiteboardIndex.value,\n      canStartWhiteboard: this.canStartWhiteboard.value,\n      whiteboardStarted: this.whiteboardStarted.value,\n      whiteboardEnded: this.whiteboardEnded.value,\n      whiteboardLimit: this.whiteboardLimit.value,\n      isWhiteboardModalVisible: this.isWhiteboardModalVisible.value,\n      isConfigureWhiteboardModalVisible: this.isConfigureWhiteboardModalVisible.value,\n      shapes: this.shapes.value,\n      useImageBackground: this.useImageBackground.value,\n      redoStack: this.redoStack.value,\n      undoStack: this.undoStack.value,\n      canvasStream: this.canvasStream.value,\n      canvasWhiteboard: this.canvasWhiteboard.value,\n\n      // Screenboard\n      canvasScreenboard: this.canvasScreenboard.value,\n      processedScreenStream: this.processedScreenStream.value,\n      annotateScreenStream: this.annotateScreenStream.value,\n      mainScreenCanvas: this.mainScreenCanvas.value,\n      isScreenboardModalVisible: this.isScreenboardModalVisible.value,\n\n      validated: this.validated.value,\n      device: this.device.value,\n      socket: this.socket.value,\n      checkMediaPermission: false,\n      onWeb: true,\n\n      // Update functions\n      updateRoomName: this.updateRoomName.bind(this),\n      updateMember: this.updateMember.bind(this),\n      updateAdminPasscode: this.updateAdminPasscode.bind(this),\n      updateYouAreCoHost: this.updateYouAreCoHost.bind(this),\n      updateYouAreHost: this.updateYouAreHost.bind(this),\n      updateIslevel: this.updateIslevel.bind(this),\n      updateCoHost: this.updateCoHost.bind(this),\n      updateCoHostResponsibility: this.updateCoHostResponsibility.bind(this),\n      updateConfirmedToRecord: this.updateConfirmedToRecord.bind(this),\n      updateMeetingDisplayType: this.updateMeetingDisplayType.bind(this),\n      updateMeetingVideoOptimized: this.updateMeetingVideoOptimized.bind(this),\n      updateEventType: this.updateEventType.bind(this),\n      updateParticipants: this.updateParticipants.bind(this),\n      updateParticipantsCounter: this.updateParticipantsCounter.bind(this),\n      updateParticipantsFilter: this.updateParticipantsFilter.bind(this),\n\n      // More update functions for media details\n      updateConsume_sockets: this.updateConsume_sockets.bind(this),\n      updateRtpCapabilities: this.updateRtpCapabilities.bind(this),\n      updateRoomRecvIPs: this.updateRoomRecvIPs.bind(this),\n      updateMeetingRoomParams: this.updateMeetingRoomParams.bind(this),\n      updateItemPageLimit: this.updateItemPageLimit.bind(this),\n      updateAudioOnlyRoom: this.updateAudioOnlyRoom.bind(this),\n      updateAddForBasic: this.updateAddForBasic.bind(this),\n      updateScreenPageLimit: this.updateScreenPageLimit.bind(this),\n      updateShareScreenStarted: this.updateShareScreenStarted.bind(this),\n      updateShared: this.updateShared.bind(this),\n      updateTargetOrientation: this.updateTargetOrientation.bind(this),\n      updateTargetResolution: this.updateTargetResolution.bind(this),\n      updateTargetResolutionHost: this.updateTargetResolutionHost.bind(this),\n      updateVidCons: this.updateVidCons.bind(this),\n      updateFrameRate: this.updateFrameRate.bind(this),\n      updateHParams: this.updateHParams.bind(this),\n      updateVParams: this.updateVParams.bind(this),\n      updateScreenParams: this.updateScreenParams.bind(this),\n      updateAParams: this.updateAParams.bind(this),\n\n      // More update functions for recording details\n      updateRecordingAudioPausesLimit: this.updateRecordingAudioPausesLimit.bind(this),\n      updateRecordingAudioPausesCount: this.updateRecordingAudioPausesCount.bind(this),\n      updateRecordingAudioSupport: this.updateRecordingAudioSupport.bind(this),\n      updateRecordingAudioPeopleLimit: this.updateRecordingAudioPeopleLimit.bind(this),\n      updateRecordingAudioParticipantsTimeLimit:\n        this.updateRecordingAudioParticipantsTimeLimit.bind(this),\n      updateRecordingVideoPausesCount: this.updateRecordingVideoPausesCount.bind(this),\n      updateRecordingVideoPausesLimit: this.updateRecordingVideoPausesLimit.bind(this),\n      updateRecordingVideoSupport: this.updateRecordingVideoSupport.bind(this),\n      updateRecordingVideoPeopleLimit: this.updateRecordingVideoPeopleLimit.bind(this),\n      updateRecordingVideoParticipantsTimeLimit:\n        this.updateRecordingVideoParticipantsTimeLimit.bind(this),\n      updateRecordingAllParticipantsSupport: this.updateRecordingAllParticipantsSupport.bind(this),\n      updateRecordingVideoParticipantsSupport:\n        this.updateRecordingVideoParticipantsSupport.bind(this),\n      updateRecordingAllParticipantsFullRoomSupport:\n        this.updateRecordingAllParticipantsFullRoomSupport.bind(this),\n      updateRecordingVideoParticipantsFullRoomSupport:\n        this.updateRecordingVideoParticipantsFullRoomSupport.bind(this),\n      updateRecordingPreferredOrientation: this.updateRecordingPreferredOrientation.bind(this),\n      updateRecordingSupportForOtherOrientation:\n        this.updateRecordingSupportForOtherOrientation.bind(this),\n      updateRecordingMultiFormatsSupport: this.updateRecordingMultiFormatsSupport.bind(this),\n\n      updateUserRecordingParams: this.updateUserRecordingParams.bind(this),\n      updateCanRecord: this.updateCanRecord.bind(this),\n      updateStartReport: this.updateStartReport.bind(this),\n      updateEndReport: this.updateEndReport.bind(this),\n      updateRecordTimerInterval: this.updateRecordTimerInterval.bind(this),\n      updateRecordStartTime: this.updateRecordStartTime.bind(this),\n      updateRecordElapsedTime: this.updateRecordElapsedTime.bind(this),\n      updateIsTimerRunning: this.updateIsTimerRunning.bind(this),\n      updateCanPauseResume: this.updateCanPauseResume.bind(this),\n      updateRecordChangeSeconds: this.updateRecordChangeSeconds.bind(this),\n      updatePauseLimit: this.updatePauseLimit.bind(this),\n      updatePauseRecordCount: this.updatePauseRecordCount.bind(this),\n      updateCanLaunchRecord: this.updateCanLaunchRecord.bind(this),\n      updateStopLaunchRecord: this.updateStopLaunchRecord.bind(this),\n\n      updateParticipantsAll: this.updateParticipantsAll.bind(this),\n\n      updateFirstAll: this.updateFirstAll.bind(this),\n      updateUpdateMainWindow: this.updateUpdateMainWindow.bind(this),\n      updateFirst_round: this.updateFirst_round.bind(this),\n      updateLandScaped: this.updateLandScaped.bind(this),\n      updateLock_screen: this.updateLock_screen.bind(this),\n      updateScreenId: this.updateScreenId.bind(this),\n      updateAllVideoStreams: this.updateAllVideoStreams.bind(this),\n      updateNewLimitedStreams: this.updateNewLimitedStreams.bind(this),\n      updateNewLimitedStreamsIDs: this.updateNewLimitedStreamsIDs.bind(this),\n      updateActiveSounds: this.updateActiveSounds.bind(this),\n      updateScreenShareIDStream: this.updateScreenShareIDStream.bind(this),\n      updateScreenShareNameStream: this.updateScreenShareNameStream.bind(this),\n      updateAdminIDStream: this.updateAdminIDStream.bind(this),\n      updateAdminNameStream: this.updateAdminNameStream.bind(this),\n      updateYouYouStream: this.updateYouYouStream.bind(this),\n      updateYouYouStreamIDs: this.updateYouYouStreamIDs.bind(this),\n      updateLocalStream: this.updateLocalStream.bind(this),\n      updateRecordStarted: this.updateRecordStarted.bind(this),\n      updateRecordResumed: this.updateRecordResumed.bind(this),\n      updateRecordPaused: this.updateRecordPaused.bind(this),\n      updateRecordStopped: this.updateRecordStopped.bind(this),\n      updateAdminRestrictSetting: this.updateAdminRestrictSetting.bind(this),\n      updateVideoRequestState: this.updateVideoRequestState.bind(this),\n      updateVideoRequestTime: this.updateVideoRequestTime.bind(this),\n      updateVideoAction: this.updateVideoAction.bind(this),\n      updateLocalStreamVideo: this.updateLocalStreamVideo.bind(this),\n      updateUserDefaultVideoInputDevice: this.updateUserDefaultVideoInputDevice.bind(this),\n      updateCurrentFacingMode: this.updateCurrentFacingMode.bind(this),\n      updatePrevFacingMode: this.updatePrevFacingMode.bind(this),\n      updateDefVideoID: this.updateDefVideoID.bind(this),\n      updateAllowed: this.updateAllowed.bind(this),\n      updateDispActiveNames: this.updateDispActiveNames.bind(this),\n      updateP_dispActiveNames: this.updateP_dispActiveNames.bind(this),\n      updateActiveNames: this.updateActiveNames.bind(this),\n      updatePrevActiveNames: this.updatePrevActiveNames.bind(this),\n      updateP_activeNames: this.updateP_activeNames.bind(this),\n      updateMembersReceived: this.updateMembersReceived.bind(this),\n      updateDeferScreenReceived: this.updateDeferScreenReceived.bind(this),\n      updateHostFirstSwitch: this.updateHostFirstSwitch.bind(this),\n      updateMicAction: this.updateMicAction.bind(this),\n      updateScreenAction: this.updateScreenAction.bind(this),\n      updateChatAction: this.updateChatAction.bind(this),\n      updateAudioRequestState: this.updateAudioRequestState.bind(this),\n      updateScreenRequestState: this.updateScreenRequestState.bind(this),\n      updateChatRequestState: this.updateChatRequestState.bind(this),\n      updateAudioRequestTime: this.updateAudioRequestTime.bind(this),\n      updateScreenRequestTime: this.updateScreenRequestTime.bind(this),\n      updateChatRequestTime: this.updateChatRequestTime.bind(this),\n      updateOldSoundIds: this.updateOldSoundIds.bind(this),\n      updateHostLabel: this.updateHostLabel.bind(this),\n      updateMainScreenFilled: this.updateMainScreenFilled.bind(this),\n      updateLocalStreamScreen: this.updateLocalStreamScreen.bind(this),\n      updateScreenAlreadyOn: this.updateScreenAlreadyOn.bind(this),\n      updateChatAlreadyOn: this.updateChatAlreadyOn.bind(this),\n      updateRedirectURL: this.updateRedirectURL.bind(this),\n      updateOldAllStreams: this.updateOldAllStreams.bind(this),\n      updateAdminVidID: this.updateAdminVidID.bind(this),\n      updateStreamNames: this.updateStreamNames.bind(this),\n      updateNon_alVideoStreams: this.updateNon_alVideoStreams.bind(this),\n      updateSortAudioLoudness: this.updateSortAudioLoudness.bind(this),\n      updateAudioDecibels: this.updateAudioDecibels.bind(this),\n      updateMixed_alVideoStreams: this.updateMixed_alVideoStreams.bind(this),\n      updateNon_alVideoStreams_muted: this.updateNon_alVideoStreams_muted.bind(this),\n      updatePaginatedStreams: this.updatePaginatedStreams.bind(this),\n      updateLocalStreamAudio: this.updateLocalStreamAudio.bind(this),\n      updateDefAudioID: this.updateDefAudioID.bind(this),\n      updateUserDefaultAudioInputDevice: this.updateUserDefaultAudioInputDevice.bind(this),\n      updateUserDefaultAudioOutputDevice: this.updateUserDefaultAudioOutputDevice.bind(this),\n      updatePrevAudioInputDevice: this.updatePrevAudioInputDevice.bind(this),\n      updatePrevVideoInputDevice: this.updatePrevVideoInputDevice.bind(this),\n      updateAudioPaused: this.updateAudioPaused.bind(this),\n      updateMainScreenPerson: this.updateMainScreenPerson.bind(this),\n      updateAdminOnMainScreen: this.updateAdminOnMainScreen.bind(this),\n      updateScreenStates: this.updateScreenStates.bind(this),\n      updatePrevScreenStates: this.updatePrevScreenStates.bind(this),\n      updateUpdateDateState: this.updateUpdateDateState.bind(this),\n      updateLastUpdate: this.updateLastUpdate.bind(this),\n      updateNForReadjustRecord: this.updateNForReadjustRecord.bind(this),\n      updateFixedPageLimit: this.updateFixedPageLimit.bind(this),\n      updateRemoveAltGrid: this.updateRemoveAltGrid.bind(this),\n      updateNForReadjust: this.updateNForReadjust.bind(this),\n      updateLastReorderTime: this.updateLastReorderTime.bind(this),\n      updateAudStreamNames: this.updateAudStreamNames.bind(this),\n      updateCurrentUserPage: this.updateCurrentUserPage.bind(this),\n      updateMainHeightWidth: this.updateMainHeightWidth.bind(this),\n      updatePrevMainHeightWidth: this.updatePrevMainHeightWidth.bind(this),\n      updatePrevDoPaginate: this.updatePrevDoPaginate.bind(this),\n      updateDoPaginate: this.updateDoPaginate.bind(this),\n      updateShareEnded: this.updateShareEnded.bind(this),\n      updateLStreams: this.updateLStreams.bind(this),\n      updateChatRefStreams: this.updateChatRefStreams.bind(this),\n      updateControlHeight: this.updateControlHeight.bind(this),\n      updateIsWideScreen: this.updateIsWideScreen.bind(this),\n      updateIsMediumScreen: this.updateIsMediumScreen.bind(this),\n      updateIsSmallScreen: this.updateIsSmallScreen.bind(this),\n      updateAddGrid: this.updateAddGrid.bind(this),\n      updateAddAltGrid: this.updateAddAltGrid.bind(this),\n      updateGridRows: this.updateGridRows.bind(this),\n      updateGridCols: this.updateGridCols.bind(this),\n      updateAltGridRows: this.updateAltGridRows.bind(this),\n      updateAltGridCols: this.updateAltGridCols.bind(this),\n      updateNumberPages: this.updateNumberPages.bind(this),\n      updateCurrentStreams: this.updateCurrentStreams.bind(this),\n      updateShowMiniView: this.updateShowMiniView.bind(this),\n      updateNStream: this.updateNStream.bind(this),\n      updateDefer_receive: this.updateDefer_receive.bind(this),\n      updateAllAudioStreams: this.updateAllAudioStreams.bind(this),\n      updateRemoteScreenStream: this.updateRemoteScreenStream.bind(this),\n      updateScreenProducer: this.updateScreenProducer.bind(this),\n      updateGotAllVids: this.updateGotAllVids.bind(this),\n      updatePaginationHeightWidth: this.updatePaginationHeightWidth.bind(this),\n      updatePaginationDirection: this.updatePaginationDirection.bind(this),\n      updateGridSizes: this.updateGridSizes.bind(this),\n      updateScreenForceFullDisplay: this.updateScreenForceFullDisplay.bind(this),\n      updateMainGridStream: this.updateMainGridStream.bind(this),\n      updateOtherGridStreams: this.updateOtherGridStreams.bind(this),\n      updateAudioOnlyStreams: this.updateAudioOnlyStreams.bind(this),\n      updateVideoInputs: this.updateVideoInputs.bind(this),\n      updateAudioInputs: this.updateAudioInputs.bind(this),\n      updateMeetingProgressTime: this.updateMeetingProgressTime.bind(this),\n      updateMeetingElapsedTime: this.updateMeetingElapsedTime.bind(this),\n      updateRef_participants: this.updateRef_participants.bind(this),\n\n      updateMessages: this.updateMessages.bind(this),\n      updateStartDirectMessage: this.updateStartDirectMessage.bind(this),\n      updateDirectMessageDetails: this.updateDirectMessageDetails.bind(this),\n      updateShowMessagesBadge: this.updateShowMessagesBadge.bind(this),\n\n      // Event settings\n      updateAudioSetting: this.updateAudioSetting.bind(this),\n      updateVideoSetting: this.updateVideoSetting.bind(this),\n      updateScreenshareSetting: this.updateScreenshareSetting.bind(this),\n      updateChatSetting: this.updateChatSetting.bind(this),\n\n      // Display settings\n      updateAutoWave: this.updateAutoWave.bind(this),\n      updateForceFullDisplay: this.updateForceFullDisplay.bind(this),\n      updatePrevForceFullDisplay: this.updatePrevForceFullDisplay.bind(this),\n      updatePrevMeetingDisplayType: this.updatePrevMeetingDisplayType.bind(this),\n\n      // Waiting room\n      updateWaitingRoomFilter: this.updateWaitingRoomFilter.bind(this),\n      updateWaitingRoomList: this.updateWaitingRoomList.bind(this),\n      updateWaitingRoomCounter: this.updateWaitingRoomCounter.bind(this),\n\n      // Requests\n      updateRequestFilter: this.updateRequestFilter.bind(this),\n      updateRequestList: this.updateRequestList.bind(this),\n      updateRequestCounter: this.updateRequestCounter.bind(this),\n\n      // Total requests and waiting room\n      updateTotalReqWait: this.updateTotalReqWait.bind(this),\n\n      // Menu modals\n      updateIsMenuModalVisible: this.updateIsMenuModalVisible.bind(this),\n      updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n      updateIsSettingsModalVisible: this.updateIsSettingsModalVisible.bind(this),\n      updateIsRequestsModalVisible: this.updateIsRequestsModalVisible.bind(this),\n      updateIsWaitingModalVisible: this.updateIsWaitingModalVisible.bind(this),\n      updateIsCoHostModalVisible: this.updateIsCoHostModalVisible.bind(this),\n      updateIsMediaSettingsModalVisible: this.updateIsMediaSettingsModalVisible.bind(this),\n      updateIsDisplaySettingsModalVisible: this.updateIsDisplaySettingsModalVisible.bind(this),\n\n      // Other modals\n      updateIsParticipantsModalVisible: this.updateIsParticipantsModalVisible.bind(this),\n      updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n      updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n      updateIsConfirmHereModalVisible: this.updateIsConfirmHereModalVisible.bind(this),\n      updateIsLoadingModalVisible: this.updateIsLoadingModalVisible.bind(this),\n\n      // Recording Options\n      updateRecordingMediaOptions: this.updateRecordingMediaOptions.bind(this),\n      updateRecordingAudioOptions: this.updateRecordingAudioOptions.bind(this),\n      updateRecordingVideoOptions: this.updateRecordingVideoOptions.bind(this),\n      updateRecordingVideoType: this.updateRecordingVideoType.bind(this),\n      updateRecordingVideoOptimized: this.updateRecordingVideoOptimized.bind(this),\n      updateRecordingDisplayType: this.updateRecordingDisplayType.bind(this),\n      updateRecordingAddHLS: this.updateRecordingAddHLS.bind(this),\n      updateRecordingAddText: this.updateRecordingAddText.bind(this),\n      updateRecordingCustomText: this.updateRecordingCustomText.bind(this),\n      updateRecordingCustomTextPosition: this.updateRecordingCustomTextPosition.bind(this),\n      updateRecordingCustomTextColor: this.updateRecordingCustomTextColor.bind(this),\n      updateRecordingNameTags: this.updateRecordingNameTags.bind(this),\n      updateRecordingBackgroundColor: this.updateRecordingBackgroundColor.bind(this),\n      updateRecordingNameTagsColor: this.updateRecordingNameTagsColor.bind(this),\n      updateRecordingOrientationVideo: this.updateRecordingOrientationVideo.bind(this),\n      updateClearedToResume: this.updateClearedToResume.bind(this),\n      updateClearedToRecord: this.updateClearedToRecord.bind(this),\n      updateRecordState: this.updateRecordState.bind(this),\n      updateShowRecordButtons: this.updateShowRecordButtons.bind(this),\n      updateRecordingProgressTime: this.updateRecordingProgressTime.bind(this),\n      updateAudioSwitching: this.updateAudioSwitching.bind(this),\n      updateVideoSwitching: this.updateVideoSwitching.bind(this),\n\n      // Media states\n      updateVideoAlreadyOn: this.updateVideoAlreadyOn.bind(this),\n      updateAudioAlreadyOn: this.updateAudioAlreadyOn.bind(this),\n      updateComponentSizes: this.updateComponentSizes.bind(this),\n\n      // Permissions\n      updateHasCameraPermission: this.updateHasCameraPermission.bind(this),\n      updateHasAudioPermission: this.updateHasAudioPermission.bind(this),\n\n      // Transports\n      updateTransportCreated: this.updateTransportCreated.bind(this),\n      updateTransportCreatedVideo: this.updateTransportCreatedVideo.bind(this),\n      updateTransportCreatedAudio: this.updateTransportCreatedAudio.bind(this),\n      updateTransportCreatedScreen: this.updateTransportCreatedScreen.bind(this),\n      updateProducerTransport: this.updateProducerTransport.bind(this),\n      updateVideoProducer: this.updateVideoProducer.bind(this),\n      updateParams: this.updateParams.bind(this),\n      updateVideoParams: this.updateVideoParams.bind(this),\n      updateAudioParams: this.updateAudioParams.bind(this),\n      updateAudioProducer: this.updateAudioProducer.bind(this),\n      updateConsumerTransports: this.updateConsumerTransports.bind(this),\n      updateConsumingTransports: this.updateConsumingTransports.bind(this),\n\n      // Polls\n      updatePolls: this.updatePolls.bind(this),\n      updatePoll: this.updatePoll.bind(this),\n      updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n\n      // Background\n      updateCustomImage: this.updateCustomImage.bind(this),\n      updateSelectedImage: this.updateSelectedImage.bind(this),\n      updateSegmentVideo: this.updateSegmentVideo.bind(this),\n      updateSelfieSegmentation: this.updateSelfieSegmentation.bind(this),\n      updatePauseSegmentation: this.updatePauseSegmentation.bind(this),\n      updateProcessedStream: this.updateProcessedStream.bind(this),\n      updateKeepBackground: this.updateKeepBackground.bind(this),\n      updateBackgroundHasChanged: this.updateBackgroundHasChanged.bind(this),\n      updateVirtualStream: this.updateVirtualStream.bind(this),\n      updateMainCanvas: this.updateMainCanvas.bind(this),\n      updatePrevKeepBackground: this.updatePrevKeepBackground.bind(this),\n      updateAppliedBackground: this.updateAppliedBackground.bind(this),\n      updateIsBackgroundModalVisible: this.updateIsBackgroundModalVisible.bind(this),\n      updateAutoClickBackground: this.updateAutoClickBackground.bind(this),\n\n      // Breakout rooms\n      updateBreakoutRooms: this.updateBreakoutRooms.bind(this),\n      updateCurrentRoomIndex: this.updateCurrentRoomIndex.bind(this),\n      updateCanStartBreakout: this.updateCanStartBreakout.bind(this),\n      updateBreakOutRoomStarted: this.updateBreakOutRoomStarted.bind(this),\n      updateBreakOutRoomEnded: this.updateBreakOutRoomEnded.bind(this),\n      updateHostNewRoom: this.updateHostNewRoom.bind(this),\n      updateLimitedBreakRoom: this.updateLimitedBreakRoom.bind(this),\n      updateMainRoomsLength: this.updateMainRoomsLength.bind(this),\n      updateMemberRoom: this.updateMemberRoom.bind(this),\n      updateIsBreakoutRoomsModalVisible: this.updateIsBreakoutRoomsModalVisible.bind(this),\n\n      // Whiteboard\n      updateWhiteboardUsers: this.updateWhiteboardUsers.bind(this),\n      updateCurrentWhiteboardIndex: this.updateCurrentWhiteboardIndex.bind(this),\n      updateCanStartWhiteboard: this.updateCanStartWhiteboard.bind(this),\n      updateWhiteboardStarted: this.updateWhiteboardStarted.bind(this),\n      updateWhiteboardEnded: this.updateWhiteboardEnded.bind(this),\n      updateWhiteboardLimit: this.updateWhiteboardLimit.bind(this),\n      updateIsWhiteboardModalVisible: this.updateIsWhiteboardModalVisible.bind(this),\n      updateIsConfigureWhiteboardModalVisible:\n        this.updateIsConfigureWhiteboardModalVisible.bind(this),\n      updateShapes: this.updateShapes.bind(this),\n      updateUseImageBackground: this.updateUseImageBackground.bind(this),\n      updateRedoStack: this.updateRedoStack.bind(this),\n      updateUndoStack: this.updateUndoStack.bind(this),\n      updateCanvasStream: this.updateCanvasStream.bind(this),\n      updateCanvasWhiteboard: this.updateCanvasWhiteboard.bind(this),\n\n      // Screenboard\n      updateCanvasScreenboard: this.updateCanvasScreenboard.bind(this),\n      updateProcessedScreenStream: this.updateProcessedScreenStream.bind(this),\n      updateAnnotateScreenStream: this.updateAnnotateScreenStream.bind(this),\n      updateMainScreenCanvas: this.updateMainScreenCanvas.bind(this),\n      updateIsScreenboardModalVisible: this.updateIsScreenboardModalVisible.bind(this),\n\n      // Other functions\n      checkOrientation: this.checkOrientation.bind(this),\n\n      updateDevice: this.updateDevice.bind(this),\n      updateSocket: this.updateSocket.bind(this),\n      updateValidated: this.updateValidated.bind(this),\n\n      showAlert: this.showAlert.bind(this),\n      getUpdatedAllParams: () => {\n        return {\n          ...this.getAllParams(),\n          ...this.mediaSFUFunctions(),\n        };\n      },\n    };\n  }\n\n  mediaSFUParameters = {\n    ...this.getAllParams(),\n    ...this.mediaSFUFunctions(),\n  };\n\n  getUpdatedAllParams = () => {\n    return {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n  };\n\n  updateButtonState(buttonType: string, value: boolean) {\n    this.controlButtons = this.controlButtons.map((button) => {\n      if (buttonType === 'micActive' && button.icon === this.faMicrophoneSlash) {\n        return { ...button, active: value };\n      }\n      if (buttonType === 'videoActive' && button.icon === this.faVideoSlash) {\n        return { ...button, active: value };\n      }\n      if (buttonType === 'screenShareActive' && button.icon === this.faDesktop) {\n        if (button.alternateIconComponent) {\n          const updatedInjector = this.createInjector({\n            disabled: !value,\n          });\n          return {\n            ...button,\n            active: true,\n            alternateIconComponent: { ...this.screenShareWidget, injector: updatedInjector },\n          }; //always default to true for active\n        } else {\n          return { ...button, active: true }; //always default to true for active\n        }\n      }\n      if (buttonType === 'endCallActive' && button.icon === this.faPhone) {\n        return { ...button, active: value };\n      }\n      if (buttonType === 'participantsActive' && button.icon === this.faUsers) {\n        return { ...button, active: value };\n      }\n      if (\n        buttonType === 'showMessagesBadge' &&\n        button.customName &&\n        button.customName === 'Messages'\n      ) {\n        const updatedInjector = this.createInjector({\n          icon: this.faComments,\n          badgeValue: value ? '*' : '',\n          iconColor: 'black',\n          showBadge: value,\n        });\n        return { ...button, customComponent: { ...this.messageWidget, injector: updatedInjector } };\n      }\n      if (buttonType === 'showMenuBadge' && button.customName && button.customName === 'Menu') {\n        const updatedInjector = this.createInjector({\n          icon: this.faBars,\n          badgeValue: this.totalReqWait.value,\n          iconColor: 'black',\n          showBadge: true,\n        });\n        return { ...button, customComponent: { ...this.menuWidget, injector: updatedInjector } };\n      }\n\n      return button;\n    });\n\n    this.cdr.detectChanges();\n  }\n\n  PrejoinPageComponent: any = {\n    component: this.PrejoinPage,\n    injector: null,\n  };\n\n  updatePrejoinPageComponent = () => {\n    const PrejoinComp = {\n      component: this.PrejoinPage,\n      injector: this.createInjector({\n        parameters: {\n          showAlert:\n            this.showAlert ||\n            (() => {\n              console.log('none');\n            }),\n          updateIsLoadingModalVisible: this.updateIsLoadingModalVisible,\n          connectSocket: this.socketManager.connectSocket,\n          updateSocket: this.updateSocket,\n          updateValidated: this.updateValidated,\n          updateApiUserName: this.updateApiUserName,\n          updateApiToken: this.updateApiToken,\n          updateLink: this.updateLink,\n          updateRoomName: this.updateRoomName,\n          updateMember: this.updateMember,\n        },\n        credentials: this.credentials,\n      }),\n    };\n\n    this.PrejoinPageComponent = { ...PrejoinComp };\n\n    this.cdr.detectChanges();\n  };\n\n  ngOnInit() {\n    if (this.PrejoinPage) {\n      this.updatePrejoinPageComponent();\n    }\n\n    this.setupResizeListener();\n    if (this.validated) {\n      this.connectAndAddSocketMethods();\n    }\n\n    this.mainHeightWidthSubscription = this.mainHeightWidth.subscribe(() => {\n      this.updateMainVideoSize();\n    });\n\n    this.recordingSubscription = combineLatest([\n      this.recordPaused,\n      this.recordStarted,\n      this.recordStopped,\n      this.recordResumed,\n      this.recordingProgressTime,\n      this.showRecordButtons,\n      this.islevel,\n    ]).subscribe(\n      ([\n        recordPaused,\n        recordStarted,\n        recordStopped,\n        recordResumed,\n        recordingProgressTime,\n        showRecordButtons,\n        islevel,\n      ]) => {\n        if (\n          recordPaused ||\n          recordStarted ||\n          recordStopped ||\n          recordResumed ||\n          recordingProgressTime ||\n          showRecordButtons ||\n          islevel\n        ) {\n          this.updateRecordButtons();\n        }\n      },\n    );\n\n    this.ScreenboardSubscription = combineLatest([\n      this.shared,\n      this.componentSizes,\n      this.annotateScreenStream,\n    ]).subscribe(([shared, componentSizes]) => {\n      this.ScreenboardWidget = {\n        component: Screenboard,\n        inputs: {\n          customWidth: componentSizes.mainWidth,\n          customHeight: componentSizes.mainHeight,\n          parameters: this.mediaSFUParameters,\n          showAspect: shared,\n        },\n      };\n    });\n    this.validatedSubscription = this.validated.subscribe((validated) => {\n      if (validated) {\n        this.handleValidated();\n      }\n    });\n    this.islevelSubscription = this.islevel.subscribe((islevel) => {\n      if (islevel) {\n        this.updateCustomMenuButtons();\n      }\n    });\n    this.coHostSubscription = combineLatest([this.coHost, this.coHostResponsibility]).subscribe(\n      ([coHost, coHostResponsibility]) => {\n        if (coHost || coHostResponsibility) {\n          this.updateCustomMenuButtons();\n        }\n      },\n    );\n\n    // Subscribe to changes in BehaviorSubject and update the buttons accordingly\n    this.buttonSubscriptions.push(\n      this.micActive.subscribe((value) => {\n        this.updateButtonState('micActive', value);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.videoActive.subscribe((value) => {\n        this.updateButtonState('videoActive', value);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.screenShareActive.subscribe((value) => {\n        this.updateButtonState('screenShareActive', value);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.showMessagesBadge.subscribe((value) => {\n        this.updateButtonState('showMessagesBadge', value);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.totalReqWait.subscribe(() => {\n        this.updateButtonState('showMenuBadge', true);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.participantsCounter.subscribe((value) => {\n        this.updateMenuParticipantsWidget(value);\n      }),\n    );\n\n    this.mediaSFUParameters = {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('orientationchange', this.handleResize);\n    if (this.mainHeightWidthSubscription) {\n      this.mainHeightWidthSubscription.unsubscribe();\n    }\n    if (this.validatedSubscription) {\n      this.validatedSubscription.unsubscribe();\n    }\n    if (this.islevelSubscription) {\n      this.islevelSubscription.unsubscribe();\n    }\n    if (this.coHostSubscription) {\n      this.coHostSubscription.unsubscribe();\n    }\n    if (this.ScreenboardSubscription) {\n      this.ScreenboardSubscription.unsubscribe();\n    }\n    if (this.recordingSubscription) {\n      this.recordingSubscription.unsubscribe();\n    }\n  }\n\n  updateMainVideoSize = async () => {\n    if (!this.lock_screen.value && !this.shared.value) {\n      this.prepopulateUserMedia.prepopulateUserMedia({\n        name: this.hostLabel.value,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n    } else {\n      if (!this.first_round.value) {\n        this.prepopulateUserMedia.prepopulateUserMedia({\n          name: this.hostLabel.value,\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        });\n      }\n    }\n  };\n\n  async connectAndAddSocketMethods() {\n    this.mediaSFUParameters = {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n    const socket_ = await this.connect_Socket(this.apiUserName.value, '', this.apiToken.value);\n    if (socket_) {\n      this.updateSocket(socket_);\n    }\n  }\n\n  async handleValidated() {\n    this.updateAllVideoStreams([\n      { producerId: 'youyou', stream: undefined, id: 'youyou', name: 'youyou' },\n    ]);\n\n    this.updateStreamNames([{ id: 'youyou', name: 'youyou', producerId: '' }]);\n\n    if (this.validated.value) {\n\n      try {\n        if (!this.localUIMode.value) {\n          await this.connectAndAddSocketMethods();\n          this.updateIsLoadingModalVisible(true);\n        } else {\n          this.updateIsLoadingModalVisible(false);\n        }\n      } catch (error) {\n        console.log('error connectAndaAddSocketMethods', error);\n      }\n\n      this.startMeetingProgressTimer.startMeetingProgressTimer({\n        startTime: Date.now() / 1000,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n\n    }\n  }\n\n  @HostListener('window:resize')\n  @HostListener('window:orientationchange')\n  async handleResize() {\n    let fraction = 0;\n\n    if (\n      window.innerHeight < window.innerWidth &&\n      (this.eventType.value == 'webinar' || this.eventType.value == 'conference')\n    ) {\n      const currentHeight = window.innerHeight;\n      fraction = Number((40 / currentHeight).toFixed(3));\n      if (fraction != this.controlHeight.value) {\n        this.updateControlHeight(Number(fraction));\n      }\n    } else {\n      // Set default control button height for portrait mode or other event types\n      const currentHeight = window.innerHeight;\n      fraction = Number((40 / currentHeight).toFixed(3));\n      fraction = Number(fraction);\n      if (fraction != this.controlHeight.value) {\n        this.updateControlHeight(Number(fraction));\n      }\n    }\n\n    const dimensions = this.computeDimensionsMethod({\n      containerWidthFraction: 1,\n      containerHeightFraction: 1,\n      mainSize: this.mainHeightWidth.value,\n      doStack: true,\n      defaultFraction:\n        this.eventType.value == 'webinar' || this.eventType.value == 'conference'\n          ? 1 - fraction\n          : 1,\n    });\n\n    this.updateComponentSizes(dimensions);\n\n    const orientation = this.checkOrientation();\n    if (orientation == 'portrait') {\n      if (!this.isWideScreen.value) {\n        if (this.shareScreenStarted.value || this.shared.value) {\n          this.updateScreenForceFullDisplay(true);\n        }\n      }\n    }\n\n    // Updates the main grid view\n    await this.prepopulateUserMedia.prepopulateUserMedia({\n      name: this.hostLabel.value,\n      parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n    });\n    // Updates the mini grid view\n    await this.onScreenChanges.onScreenChanges({\n      changed: true,\n      parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n    });\n  }\n\n  async disconnectAllSockets(consume_sockets: ConsumeSocket[]): Promise<void> {\n    for (const socket of consume_sockets) {\n      try {\n        const ip = Object.keys(socket)[0];\n        await socket[ip].disconnect();\n      } catch (error) {\n        console.log(`Error disconnecting socket with IP: ${Object.keys(socket)[0]}`, error);\n      }\n    }\n  }\n\n  async closeAndReset() {\n    //close and clean up all sockets, modals,... and reset all states to initial values\n\n    this.updateIsMessagesModalVisible(false);\n    this.updateIsParticipantsModalVisible(false);\n    this.updateIsWaitingModalVisible(false);\n    this.updateIsRequestsModalVisible(false);\n    this.updateIsCoHostModalVisible(false);\n    this.updateIsSettingsModalVisible(false);\n    this.updateIsDisplaySettingsModalVisible(false);\n    this.updateIsMediaSettingsModalVisible(false);\n    this.updateIsMenuModalVisible(false);\n    this.updateIsShareEventModalVisible(false);\n    this.updateIsConfirmExitModalVisible(false);\n    await this.disconnectAllSockets(this.consume_sockets.value);\n    await this.updateStatesToInitialValues();\n    this.updateMeetingProgressTime('00:00:00');\n    this.updateMeetingElapsedTime(0);\n    this.updateRecordingProgressTime('00:00:00');\n    this.updateRecordElapsedTime(0);\n    this.updateShowRecordButtons(false);\n\n    this.updateIsConfigureWhiteboardModalVisible(false);\n    this.updateIsWhiteboardModalVisible(false);\n    this.updateIsMenuModalVisible(false);\n    this.updateIsRecordingModalVisible(false);\n    this.updateIsPollModalVisible(false);\n    this.updateIsBreakoutRoomsModalVisible(false);\n    this.updateIsBackgroundModalVisible(false);\n    this.updateIsLoadingModalVisible(false);\n    this.updateIsConfirmHereModalVisible(false);\n\n    await sleep({ ms: 500 });\n    this.updateValidated(false);\n    //if on web, reload the page\n    window.location.reload();\n  }\n\n  computeDimensionsMethod = ({\n    containerWidthFraction = 1,\n    containerHeightFraction = 1,\n    mainSize,\n    doStack = true,\n    defaultFraction,\n  }: {\n    containerWidthFraction?: number;\n    containerHeightFraction?: number;\n    mainSize: number;\n    doStack?: boolean;\n    defaultFraction: number;\n  }): ComponentSizes => {\n    const parentWidth = window.innerWidth * containerWidthFraction;\n    const parentHeight = window.innerHeight * containerHeightFraction * defaultFraction;\n    let isWideScreen = parentWidth >= 768;\n\n    if (!isWideScreen && parentWidth > 1.5 * parentHeight) {\n      isWideScreen = true;\n    }\n\n    this.updateIsWideScreen(isWideScreen);\n\n    const dimensions = this.calculateDimensions({\n      parentWidth,\n      parentHeight,\n      isWideScreen,\n      mainSize,\n      doStack,\n    });\n    return dimensions;\n  };\n\n  calculateDimensions({\n    parentWidth,\n    parentHeight,\n    isWideScreen,\n    mainSize,\n    doStack,\n  }: {\n    parentWidth: number;\n    parentHeight: number;\n    isWideScreen: boolean;\n    mainSize: number;\n    doStack: boolean;\n  }): ComponentSizes {\n    if (doStack) {\n      return isWideScreen\n        ? {\n            mainHeight: Math.floor(parentHeight),\n            otherHeight: Math.floor(parentHeight),\n            mainWidth: Math.floor((mainSize / 100) * parentWidth),\n            otherWidth: Math.floor(((100 - mainSize) / 100) * parentWidth),\n          }\n        : {\n            mainHeight: Math.floor((mainSize / 100) * parentHeight),\n            otherHeight: Math.floor(((100 - mainSize) / 100) * parentHeight),\n            mainWidth: Math.floor(parentWidth),\n            otherWidth: Math.floor(parentWidth),\n          };\n    } else {\n      return {\n        mainHeight: Math.floor(parentHeight),\n        otherHeight: Math.floor(parentHeight),\n        mainWidth: Math.floor(parentWidth),\n        otherWidth: Math.floor(parentWidth),\n      };\n    }\n  }\n\n  handleOrientationChange() {\n    window.addEventListener('resize', this.handleResize.bind(this));\n    window.addEventListener('orientationchange', this.handleResize.bind(this));\n  }\n\n  setupResizeListener() {\n    this.handleResize();\n  }\n\n  orientation = window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';\n\n  async joinRoom(data: {\n    socket: Socket;\n    roomName: string;\n    islevel: string;\n    member: string;\n    sec: string;\n    apiUserName: string;\n  }): Promise<ResponseJoinRoom | null> {\n    const { socket, roomName, islevel, member, sec, apiUserName } = data;\n\n    try {\n      const response: ResponseJoinRoom | null = await this.joinRoomClient.joinRoomClient({\n        socket,\n        roomName,\n        islevel,\n        member,\n        sec,\n        apiUserName,\n      });\n\n      return response;\n    } catch (error) {\n      console.log('Error joining room:', error);\n      throw new Error('Failed to join the room. Please check your connection and try again.');\n    }\n  }\n\n  async join_Room({\n    socket,\n    roomName,\n    islevel,\n    member,\n    sec,\n    apiUserName,\n  }: {\n    socket: Socket;\n    roomName: string;\n    islevel: string;\n    member: string;\n    sec: string;\n    apiUserName: string;\n  }): Promise<void> {\n    const data: ResponseJoinRoom | null = await this.joinRoom({\n      socket: socket,\n      roomName: roomName,\n      islevel: islevel,\n      member: member,\n      sec: sec,\n      apiUserName: apiUserName,\n    });\n\n    if (data && data.success) {\n      this.roomData.next(data);\n\n      try {\n        this.updateRoomParametersClient.updateRoomParametersClient({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n            data: data,\n          },\n        });\n\n        if (data.isHost) {\n          this.updateIslevel('2');\n        } else {\n          this.updateIslevel('1');\n        }\n\n        if (data.secureCode) {\n          this.updateAdminPasscode(data.secureCode);\n        }\n\n        if (data.rtpCapabilities) {\n          const device_ = await this.createDeviceClient.createDeviceClient({\n            rtpCapabilities: data.rtpCapabilities,\n          });\n\n          if (device_) {\n            this.device.next(device_);\n          }\n        }\n      } catch {\n        /* handle error */\n      }\n    } else {\n      this.updateValidated(false);\n      try {\n        if (this.showAlert && data?.reason) {\n          this.showAlert({ message: data?.reason, type: 'danger', duration: 3000 });\n        }\n      } catch {\n        /* handle error */\n      }\n    }\n  }\n\n  onParticipantsFilterChange = (value: string): void => {\n    if (value && value.length > 0) {\n      this.filteredParticipants.next(\n        this.participants.value.filter((participant) =>\n          participant.name.toLowerCase().includes(value.toLowerCase()),\n        ),\n      );\n      this.participantsCounter.next(this.filteredParticipants.value.length);\n    } else {\n      this.filteredParticipants.next(this.participants.value);\n      this.participantsCounter.next(this.participants.value.length);\n    }\n  };\n\n  updateStatesToInitialValues = async () => {\n    const initialValues = initialValuesState as { [key: string]: any };\n    const updateFunctions = this.getAllParams() as unknown as {\n      [key: string]: (value: any) => void;\n    };\n\n    for (const key in initialValues) {\n      if (Object.prototype.hasOwnProperty.call(initialValues, key)) {\n        const updateFunctionName = `update${key.charAt(0).toUpperCase() + key.slice(1)}`;\n        const updateFunction = updateFunctions[updateFunctionName];\n\n        if (typeof updateFunction === 'function') {\n          try {\n            updateFunction(initialValues[key]);\n          } catch {\n            /* handle error */\n          }\n        }\n      }\n    }\n  };\n\n  faRecordVinyl = faRecordVinyl;\n  faPlayCircle = faPlayCircle;\n  faPauseCircle = faPauseCircle;\n  faStopCircle = faStopCircle;\n  faDotCircle = faDotCircle;\n  faCog = faCog;\n  faUsers = faUsers;\n  faClock = faClock;\n  faUserPlus = faUserPlus;\n  faTools = faTools;\n  faDesktop = faDesktop;\n  faPoll = faPoll;\n  faUserFriends = faUserFriends;\n  faChalkboardTeacher = faChalkboardTeacher;\n  faMicrophone = faMicrophone;\n  faMicrophoneSlash = faMicrophoneSlash;\n  faVideo = faVideo;\n  faVideoSlash = faVideoSlash;\n  faPhone = faPhone;\n  faBars = faBars;\n  faComments = faComments;\n  faChartBar = faChartBar;\n\n  onCloseMenuModal = () => {\n    this.updateIsMenuModalVisible(false);\n  };\n\n  onEventSettingsClose = () => {\n    this.updateIsSettingsModalVisible(false);\n  };\n\n  onCoHostClose = () => {\n    this.updateIsCoHostModalVisible(false);\n  };\n\n  onMediaSettingsClose = () => {\n    this.updateIsMediaSettingsModalVisible(false);\n  };\n\n  onDisplaySettingsClose = () => {\n    this.updateIsDisplaySettingsModalVisible(false);\n  };\n\n  onPollClose = () => {\n    this.updateIsPollModalVisible(false);\n  };\n\n  onBreakoutRoomsClose = () => {\n    this.updateIsBreakoutRoomsModalVisible(false);\n  };\n\n  onConfigureWhiteboardClose = () => {\n    this.updateIsConfigureWhiteboardModalVisible(false);\n  };\n\n  onMessagesClose = () => {\n    this.updateIsMessagesModalVisible(false);\n  };\n\n  onRecordingClose = () => {\n    this.updateIsRecordingModalVisible(false);\n  };\n\n  onParticipantsClose = () => {\n    this.updateIsParticipantsModalVisible(false);\n  };\n\n  onBackgroundClose = () => {\n    this.updateIsBackgroundModalVisible(false);\n  };\n\n  onConfirmExitClose = () => {\n    this.updateIsConfirmExitModalVisible(false);\n  };\n\n  onConfirmHereClose = () => {\n    this.updateIsConfirmHereModalVisible(false);\n  };\n\n  onScreenboardClose = () => {\n    this.updateIsScreenboardModalVisible(false);\n  };\n\n  onShareEventClose = () => {\n    this.updateIsShareEventModalVisible(false);\n  };\n\n  onAlertHide = () => {\n    this.updateAlertVisible(false);\n  };\n\n  ScreenboardWidget = {\n    component: Screenboard,\n    inputs: {\n      customWidth: this.componentSizes.value.mainWidth,\n      customHeight: this.componentSizes.value.mainHeight,\n      parameters: this.mediaSFUParameters,\n      showAspect: this.shared.value,\n    },\n  };\n\n  recordTimerWidget = {\n    component: RecordTimerWidget,\n    injector: this.createInjector({ recordingProgressTime: this.recordingProgressTime.value }),\n  };\n\n  updateRecordTimerWidget = (\n    recordingProgressTime: string = this.recordingProgressTime.value,\n  ): { component: any; injector: Injector } => {\n    const recordTimerWidget = {\n      component: RecordTimerWidget,\n      injector: this.createInjector({ recordingProgressTime: recordingProgressTime }),\n    };\n\n    this.recordTimerWidget = { ...recordTimerWidget };\n\n    this.cdr.markForCheck();\n\n    return recordTimerWidget;\n  };\n\n  recordButtons: MainButtonAlt[] = [];\n\n  recordButtonsArray: MainButtonAlt[] = [\n    {\n      icon: this.faPlayCircle,\n      active: () => !this.recordPaused.value,\n      onPress: () =>\n        this.updateRecording.updateRecording({\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      alternateIcon: this.faPauseCircle,\n      show: () => true,\n    },\n    {\n      icon: this.faStopCircle,\n      active: () => false,\n      onPress: () =>\n        this.stopRecording.stopRecording({\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'black',\n      show: () => true,\n    },\n    {\n      customComponent: () => this.updateRecordTimerWidget(),\n      show: () => true,\n      active: () => false,\n    },\n    {\n      icon: this.faDotCircle,\n      active: () => false,\n      onPress: () => console.log('Status pressed'),\n      activeColor: 'black',\n      inActiveColor: () => (this.recordPaused.value ? 'yellow' : 'red'),\n      show: () => true,\n    },\n    {\n      icon: this.faCog,\n      active: () => false,\n      onPress: () =>\n        this.launchRecording.launchRecording({\n          updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n          isRecordingModalVisible: this.isRecordingModalVisible.value,\n          showAlert: this.showAlert.bind(this),\n          stopLaunchRecord: this.stopLaunchRecord.value,\n          canLaunchRecord: this.canLaunchRecord.value,\n          recordingAudioSupport: this.recordingAudioSupport.value,\n          recordingVideoSupport: this.recordingVideoSupport.value,\n          updateCanRecord: this.updateCanRecord.bind(this),\n          updateClearedToRecord: this.updateClearedToRecord.bind(this),\n          recordStarted: this.recordStarted.value,\n          recordPaused: this.recordPaused.value,\n          localUIMode: this.localUIMode.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'black',\n      show: () => true,\n    },\n  ];\n\n  async updateRecordButtons() {\n    const recordButtons = this.recordButtonsArray.map((button) => {\n      return {\n        ...button,\n        active: typeof button.active === 'function' ? button.active() : button.active,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        customComponent: button.customComponent\n          ? typeof button.customComponent === 'function'\n            ? button.customComponent()\n            : button.customComponent\n          : undefined,\n        activeColor:\n          typeof button.inActiveColor === 'function'\n            ? button.inActiveColor()\n            : button.inActiveColor,\n        inActiveColor:\n          typeof button.inActiveColor === 'function'\n            ? button.inActiveColor()\n            : button.inActiveColor,\n      };\n    });\n    this.recordButtons = [...recordButtons];\n    await this.updateMenuRecordWidget(recordButtons);\n    this.updateCustomMenuButtons();\n\n    this.cdr.markForCheck();\n  }\n\n  // Create instances of the custom widgets\n  menuWidget = {\n    component: MenuWidget,\n    injector: this.createInjector({\n      icon: this.faBars,\n      badgeValue: this.totalReqWait.value,\n      iconColor: 'black',\n      showBadge: true,\n    }),\n  };\n\n  messageWidget = {\n    component: MessageWidget,\n    injector: this.createInjector({\n      icon: this.faComments,\n      showBadge: this.showMessagesBadge.value,\n      badgeValue: 1,\n      iconColor: 'black',\n    }),\n  };\n\n  menuRecordWidget = {\n    component: MenuRecordWidget,\n    injector: this.createInjector({\n      buttons: this.recordButtons,\n      showAspect: true,\n      direction: 'horizontal',\n    }),\n  };\n\n  updateMenuRecordWidget = (recordButtons: MainButtonAlt[] = this.recordButtons): any => {\n    const menuRecordWidget = {\n      component: MenuRecordWidget,\n      injector: this.createInjector({\n        buttons: recordButtons,\n        showAspect: true,\n        direction: 'horizontal',\n      }),\n    };\n\n    this.menuRecordWidget = { ...menuRecordWidget };\n\n    this.cdr.markForCheck();\n\n    return menuRecordWidget;\n  };\n\n  menuParticipantsWidget = {\n    component: MenuParticipantsWidget,\n    injector: this.createInjector({\n      icon: this.faChartBar,\n      participantsCounter: this.participantsCounter.value,\n      iconColor: 'black',\n    }),\n  };\n\n  updateMenuParticipantsWidget = (count: number = this.participantsCounter.value): any => {\n    const menuParticipantsWidget = {\n      component: MenuParticipantsWidget,\n      injector: this.createInjector({\n        icon: this.faChartBar,\n        participantsCounter: count,\n        iconColor: 'black',\n      }),\n    };\n\n    this.menuParticipantsWidget = { ...menuParticipantsWidget };\n\n    this.cdr.markForCheck();\n\n    return menuParticipantsWidget;\n  };\n\n  customMenuButtonsArray: MainCustomButton[] = [\n    {\n      icon: this.faRecordVinyl,\n      text: 'Record',\n      action: () =>\n        this.launchRecording.launchRecording({\n          updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n          isRecordingModalVisible: this.isRecordingModalVisible.value,\n          showAlert: this.showAlert.bind(this),\n          stopLaunchRecord: this.stopLaunchRecord.value,\n          canLaunchRecord: this.canLaunchRecord.value,\n          recordingAudioSupport: this.recordingAudioSupport.value,\n          recordingVideoSupport: this.recordingVideoSupport.value,\n          updateCanRecord: this.updateCanRecord.bind(this),\n          updateClearedToRecord: this.updateClearedToRecord.bind(this),\n          recordStarted: this.recordStarted.value,\n          recordPaused: this.recordPaused.value,\n          localUIMode: this.localUIMode.value,\n        }),\n      show: () => !this.showRecordButtons.value && this.islevel.value == '2',\n    },\n    {\n      customComponent: () => this.updateMenuRecordWidget(),\n      show: () => this.showRecordButtons.value && this.islevel.value == '2',\n      action: () => console.log('record buttons pressed'),\n    },\n    {\n      icon: this.faCog,\n      text: 'Event Settings',\n      action: () =>\n        this.launchSettings.launchSettings({\n          updateIsSettingsModalVisible: this.updateIsSettingsModalVisible.bind(this),\n          isSettingsModalVisible: this.isSettingsModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faUsers,\n      text: 'Requests',\n      action: () =>\n        this.launchRequests.launchRequests({\n          updateIsRequestsModalVisible: this.updateIsRequestsModalVisible.bind(this),\n          isRequestsModalVisible: this.isRequestsModalVisible.value,\n        }),\n      show: () =>\n        this.islevel.value == '2' ||\n        (this.coHostResponsibility.value &&\n          this.coHost.value &&\n          this.coHost.value === this.member.value &&\n          !!this.coHostResponsibility?.value?.find((item) => item.name === 'media')?.value) ||\n        false,\n    },\n    {\n      icon: this.faClock,\n      text: 'Waiting',\n      action: () =>\n        this.launchWaiting.launchWaiting({\n          updateIsWaitingModalVisible: this.updateIsWaitingModalVisible.bind(this),\n          isWaitingModalVisible: this.isWaitingModalVisible.value,\n        }),\n      show: () =>\n        this.islevel.value == '2' ||\n        (this.coHostResponsibility.value &&\n          this.coHost.value &&\n          this.coHost.value === this.member.value &&\n          this.coHostResponsibility?.value?.find((item) => item.name === 'waiting')?.value ===\n            true) ||\n        false,\n    },\n    {\n      icon: this.faUserPlus,\n      text: 'Co-host',\n      action: () =>\n        this.launchCoHost.launchCoHost({\n          updateIsCoHostModalVisible: this.updateIsCoHostModalVisible.bind(this),\n          isCoHostModalVisible: this.isCoHostModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faTools,\n      text: 'Set Media',\n      action: () =>\n        this.launchMediaSettings.launchMediaSettings({\n          updateIsMediaSettingsModalVisible: this.updateIsMediaSettingsModalVisible.bind(this),\n          isMediaSettingsModalVisible: this.isMediaSettingsModalVisible.value,\n          audioInputs: this.audioInputs.value,\n          videoInputs: this.videoInputs.value,\n          updateAudioInputs: this.updateAudioInputs.bind(this),\n          updateVideoInputs: this.updateVideoInputs.bind(this),\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faDesktop,\n      text: 'Display',\n      action: () =>\n        this.launchDisplaySettings.launchDisplaySettings({\n          updateIsDisplaySettingsModalVisible: this.updateIsDisplaySettingsModalVisible.bind(this),\n          isDisplaySettingsModalVisible: this.isDisplaySettingsModalVisible.value,\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faPoll,\n      text: 'Poll',\n      action: () =>\n        this.launchPoll.launchPoll({\n          updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n          isPollModalVisible: this.isPollModalVisible.value,\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faUserFriends,\n      text: 'Breakout Rooms',\n      action: () =>\n        this.launchBreakoutRooms.launchBreakoutRooms({\n          updateIsBreakoutRoomsModalVisible: this.updateIsBreakoutRoomsModalVisible.bind(this),\n          isBreakoutRoomsModalVisible: this.isBreakoutRoomsModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faChalkboardTeacher,\n      text: 'Whiteboard',\n      action: () =>\n        this.launchConfigureWhiteboard.launchConfigureWhiteboard({\n          updateIsConfigureWhiteboardModalVisible:\n            this.updateIsConfigureWhiteboardModalVisible.bind(this),\n          isConfigureWhiteboardModalVisible: this.isConfigureWhiteboardModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n  ];\n\n  customMenuButtons: MainCustomButton[] = [];\n\n  updateCustomMenuButtons() {\n    this.customMenuButtons = this.customMenuButtonsArray.map((button) => {\n      return {\n        ...button,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        customComponent: button.customComponent\n          ? typeof button.customComponent === 'function'\n            ? button.customComponent()\n            : button.customComponent\n          : undefined,\n      };\n    });\n  }\n\n  screenShareWidget = {\n    component: ScreenShareWidget,\n    injector: this.createInjector({ disabled: !this.screenShareActive.value }),\n  };\n\n  controlButtons = [\n    {\n      icon: this.faMicrophoneSlash,\n      alternateIcon: this.faMicrophone,\n      active: this.micActive.value,\n      onPress: () =>\n        this.clickAudio.clickAudio({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: this.audioSwitching.value,\n      show: true,\n    },\n    {\n      icon: this.faVideoSlash,\n      alternateIcon: this.faVideo,\n      active: this.videoActive.value,\n      onPress: () =>\n        this.clickVideo.clickVideo({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n            MediaStream,\n            MediaStreamTrack,\n            mediaDevices: MediaDevices,\n            device: this.device.value,\n            socket: this.socket.value,\n            showAlert: this.showAlert.bind(this),\n            checkPermission: this.checkPermission.checkPermission,\n            streamSuccessVideo: this.streamSuccessVideo.streamSuccessVideo,\n            hasCameraPermission: this.hasCameraPermission.value,\n            requestPermissionCamera: this.requestPermissionCamera.bind(this),\n            checkMediaPermission: 'web' !== 'web',\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: this.videoSwitching.value,\n      show: true,\n    },\n    {\n      //inverted active for inactive state\n      icon: faDesktop,\n      alternateIconComponent: this.screenShareWidget,\n      active: true,\n      onPress: () =>\n        this.clickScreenShare.clickScreenShare({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: false,\n      show: true,\n    },\n    {\n      icon: this.faPhone,\n      active: this.endCallActive.value,\n      onPress: () =>\n        this.launchConfirmExit.launchConfirmExit({\n          updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n          isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: false,\n      show: true,\n    },\n    {\n      icon: this.faUsers,\n      active: this.participantsActive.value,\n      onPress: () =>\n        this.launchParticipants.launchParticipants({\n          updateIsParticipantsModalVisible: this.updateIsParticipantsModalVisible.bind(this),\n          isParticipantsModalVisible: this.isParticipantsModalVisible.value,\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      disabled: false,\n      show: true,\n    },\n    {\n      customComponent: this.menuWidget,\n      customName: 'Menu',\n      onPress: () =>\n        this.launchMenuModal.launchMenuModal({\n          updateIsMenuModalVisible: this.updateIsMenuModalVisible.bind(this),\n          isMenuModalVisible: this.isMenuModalVisible.value,\n        }),\n      show: true,\n    },\n    {\n      customComponent: this.messageWidget,\n      customName: 'Messages',\n      onPress: () =>\n        this.launchMessages.launchMessages({\n          updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n          isMessagesModalVisible: this.isMessagesModalVisible.value,\n        }),\n      show: true,\n    },\n  ];\n\n  async connect_Socket(\n    apiUserName: string,\n    apiKey: string,\n    apiToken: string,\n  ): Promise<Socket | null> {\n    if (this.socket.value && this.socket.value.id) {\n      this.socket.value.on('disconnect', async () => {\n        await this.disconnect.disconnect({\n          showAlert: this.showAlert.bind(this),\n          redirectURL: this.redirectURL.value,\n          onWeb: true,\n          updateValidated: this.updateValidated.bind(this),\n        });\n        if (this.videoAlreadyOn.value) {\n          await this.clickVideo.clickVideo({\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        }\n        if (this.audioAlreadyOn.value) {\n          await this.clickAudio.clickAudio({\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        }\n\n        await this.closeAndReset();\n      });\n\n      this.socket.value.on('allMembers', async (membersData: AllMembersData) => {\n        if (membersData) {\n          await this.allMembers.allMembers({\n            apiUserName: apiUserName,\n            apiKey: '', //not recommended - use apiToken instead. Use for testing/development only\n            apiToken: apiToken,\n            members: membersData.members,\n            requestss: membersData.requests ? membersData.requests : this.requestList.value,\n            coHoste: membersData.coHost ? membersData.coHost : this.coHost.value,\n            coHostRes: membersData.coHostResponsibilities\n              ? membersData.coHostResponsibilities\n              : this.coHostResponsibility.value,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            consume_sockets: this.consume_sockets.value,\n          });\n        }\n      });\n\n      this.socket.value.on('allMembersRest', async (membersData: AllMembersRestData) => {\n        if (membersData) {\n          await this.allMembersRest.allMembersRest({\n            apiUserName: apiUserName,\n            apiKey: '', // not recommended - use apiToken instead. Use for testing/development only\n            members: membersData.members,\n            apiToken: apiToken,\n            settings: membersData.settings,\n            coHoste: membersData.coHost ? membersData.coHost : this.coHost.value,\n            coHostRes: membersData.coHostResponsibilities\n              ? membersData.coHostResponsibilities\n              : this.coHostResponsibility.value,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            consume_sockets: this.consume_sockets.value,\n          });\n        }\n      });\n\n      this.socket.value.on('userWaiting', async ({ name }: { name: string }) => {\n        await this.userWaiting.userWaiting({\n          name,\n          showAlert: this.showAlert.bind(this),\n          totalReqWait: this.totalReqWait.value,\n          updateTotalReqWait: this.updateTotalReqWait.bind(this),\n        });\n      });\n\n      this.socket.value.on('personJoined', async ({ name }: { name: string }) => {\n        this.personJoined.personJoined({\n          name,\n          showAlert: this.showAlert.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'allWaitingRoomMembers',\n        async (waiting_data: AllWaitingRoomMembersData) => {\n          await this.allWaitingRoomMembers.allWaitingRoomMembers({\n            waitingParticipants: waiting_data.waitingParticipants\n              ? waiting_data.waitingParticipants\n              : waiting_data.waitingParticipantss\n              ? waiting_data.waitingParticipantss\n              : this.waitingRoomList.value,\n            updateTotalReqWait: this.updateTotalReqWait.bind(this),\n            updateWaitingRoomList: this.updateWaitingRoomList.bind(this),\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'roomRecordParams',\n        async ({ recordParams }: { recordParams: RecordParams }) => {\n          this.roomRecordParams.roomRecordParams({\n            recordParams,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('ban', async ({ name }: { name: string }) => {\n        await this.banParticipant.banParticipant({\n          name,\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        });\n      });\n\n      this.socket.value.on('updatedCoHost', async (cohost_data: UpdatedCoHostData) => {\n        await this.updatedCoHost.updatedCoHost({\n          coHost: cohost_data.coHost ? cohost_data.coHost : this.coHost.value,\n          coHostResponsibility: cohost_data.coHostResponsibilities\n            ? cohost_data.coHostResponsibilities\n            : this.coHostResponsibility.value,\n          youAreCoHost: this.youAreCoHost.value,\n          updateCoHost: this.updateCoHost.bind(this),\n          updateCoHostResponsibility: this.updateCoHostResponsibility.bind(this),\n          updateYouAreCoHost: this.updateYouAreCoHost.bind(this),\n          showAlert: this.showAlert.bind(this),\n          eventType: this.eventType.value,\n          islevel: this.islevel.value,\n          member: this.member.value,\n        });\n      });\n\n      this.socket.value.on(\n        'participantRequested',\n        async ({ userRequest }: { userRequest: Request }) => {\n          await this.participantRequested.participantRequested({\n            userRequest,\n            requestList: this.requestList.value,\n            waitingRoomList: this.waitingRoomList.value,\n            updateTotalReqWait: this.updateTotalReqWait.bind(this),\n            updateRequestList: this.updateRequestList.bind(this),\n          });\n        },\n      );\n\n      this.socket.value.on('screenProducerId', async ({ producerId }: { producerId: string }) => {\n        this.screenProducerId.screenProducerId({\n          producerId,\n          screenId: this.screenId.value,\n          membersReceived: this.membersReceived.value,\n          shareScreenStarted: this.shareScreenStarted.value,\n          deferScreenReceived: this.deferScreenReceived.value,\n          participants: this.participants.value,\n          updateScreenId: this.updateScreenId.bind(this),\n          updateShareScreenStarted: this.updateShareScreenStarted.bind(this),\n          updateDeferScreenReceived: this.updateDeferScreenReceived.bind(this),\n        });\n      });\n      //settings, updateAudioSetting, updateVideoSetting, updateScreenshareSetting, updateChatSetting\n      this.socket.value.on('updateMediaSettings', async ({ settings }: { settings: Settings }) => {\n        this.updateMediaSettings.updateMediaSettings({\n          settings,\n          updateAudioSetting: this.updateAudioSetting.bind(this),\n          updateVideoSetting: this.updateVideoSetting.bind(this),\n          updateScreenshareSetting: this.updateScreenshareSetting.bind(this),\n          updateChatSetting: this.updateChatSetting.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'producer-media-paused',\n        async ({\n          producerId,\n          kind,\n          name,\n        }: {\n          producerId: string;\n          kind: 'video' | 'audio' | 'screenshare' | 'screen';\n          name: string;\n        }) => {\n          await this.producerMediaPaused.producerMediaPaused({\n            producerId,\n            kind,\n            name,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'producer-media-resumed',\n        async ({ kind, name }: { kind: 'audio'; name: string }) => {\n          await this.producerMediaResumed.producerMediaResumed({\n            kind,\n            name,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'producer-media-closed',\n        async ({\n          producerId,\n          kind,\n        }: {\n          producerId: string;\n          kind: 'video' | 'audio' | 'screenshare' | 'screen';\n        }) => {\n          if (producerId && kind) {\n            await this.producerMediaClosed.producerMediaClosed({\n              producerId,\n              kind,\n              parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            });\n          }\n        },\n      );\n\n      this.socket.value.on(\n        'controlMediaHost',\n        async ({ type }: { type: 'video' | 'audio' | 'screenshare' | 'chat' | 'all' }) => {\n          await this.controlMediaHost.controlMediaHost({\n            type,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('meetingEnded', async () => {\n        await this.meetingEnded.meetingEnded({\n          showAlert: this.showAlert.bind(this),\n          redirectURL: this.redirectURL.value,\n          onWeb: true,\n          eventType: this.eventType.value,\n          updateValidated: this.updateValidated.bind(this),\n        });\n\n        if (this.videoAlreadyOn.value) {\n          await this.clickVideo.clickVideo({\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        }\n        if (this.audioAlreadyOn.value) {\n          await this.clickAudio.clickAudio({\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        }\n\n        await this.closeAndReset();\n      });\n\n      this.socket.value.on('disconnectUserSelf', async () => {\n        await this.disconnectUserSelf.disconnectUserSelf({\n          socket: this.socket.value,\n          member: this.member.value,\n          roomName: this.roomName.value,\n        });\n      });\n\n      this.socket.value.on('receiveMessage', async ({ message }: { message: Message }) => {\n        await this.receiveMessage.receiveMessage({\n          message,\n          messages: this.messages.value,\n          participantsAll: this.participantsAll.value,\n          member: this.member.value,\n          eventType: this.eventType.value,\n          islevel: this.islevel.value,\n          coHost: this.coHost.value,\n          updateMessages: this.updateMessages.bind(this),\n          updateShowMessagesBadge: this.updateShowMessagesBadge.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'meetingTimeRemaining',\n        async ({ timeRemaining }: { timeRemaining: number }) => {\n          await this.meetingTimeRemaining.meetingTimeRemaining({\n            timeRemaining,\n            showAlert: this.showAlert.bind(this),\n            eventType: this.eventType.value,\n          });\n        },\n      );\n\n      this.socket.value.on('meetingStillThere', async () => {\n        this.meetingStillThere.meetingStillThere({\n          updateIsConfirmHereModalVisible: this.updateIsConfirmHereModalVisible.bind(this),\n        });\n      });\n\n      this.socket.value.on('startRecords', async () => {\n        await this.startRecords.startRecords({\n          roomName: this.roomName.value,\n          member: this.member.value,\n          socket: this.socket.value,\n        });\n      });\n\n      this.socket.value.on('reInitiateRecording', async () => {\n        await this.reInitiateRecording.reInitiateRecording({\n          roomName: this.roomName.value,\n          member: this.member.value,\n          socket: this.socket.value,\n          adminRestrictSetting: this.adminRestrictSetting.value,\n        });\n      });\n\n      this.socket.value.on(\n        'updateConsumingDomains',\n        async ({ domains, alt_domains }: UpdateConsumingDomainsData) => {\n          await this.updateConsumingDomains.updateConsumingDomains({\n            domains,\n            alt_domains,\n            apiUserName,\n            apiKey,\n            apiToken,\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'RecordingNotice',\n        async ({ state, userRecordingParam, pauseCount, timeDone }: RecordingNoticeData) => {\n          await this.recordingNotice.RecordingNotice({\n            state,\n            userRecordingParam,\n            pauseCount,\n            timeDone,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('timeLeftRecording', async ({ timeLeft }: { timeLeft: number }) => {\n        this.timeLeftRecording.timeLeftRecording({\n          timeLeft,\n          showAlert: this.showAlert.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'stoppedRecording',\n        async ({ state, reason }: { state: string; reason: string }) => {\n          await this.stoppedRecording.stoppedRecording({\n            state,\n            reason,\n            showAlert: this.showAlert.bind(this),\n          });\n        },\n      );\n      this.socket.value.on(\n        'hostRequestResponse',\n        ({ requestResponse }: HostRequestResponseData) => {\n          this.hostRequestResponse.hostRequestResponse({\n            requestResponse,\n            showAlert: this.showAlert.bind(this),\n            requestList: this.requestList.value,\n            updateRequestList: this.updateRequestList.bind(this),\n            updateMicAction: this.updateMicAction.bind(this),\n            updateVideoAction: this.updateVideoAction.bind(this),\n            updateScreenAction: this.updateScreenAction.bind(this),\n            updateChatAction: this.updateChatAction.bind(this),\n            updateAudioRequestState: this.updateAudioRequestState.bind(this),\n            updateVideoRequestState: this.updateVideoRequestState.bind(this),\n            updateScreenRequestState: this.updateScreenRequestState.bind(this),\n            updateChatRequestState: this.updateChatRequestState.bind(this),\n            updateAudioRequestTime: this.updateAudioRequestTime.bind(this),\n            updateVideoRequestTime: this.updateVideoRequestTime.bind(this),\n            updateScreenRequestTime: this.updateScreenRequestTime.bind(this),\n            updateChatRequestTime: this.updateChatRequestTime.bind(this),\n            updateRequestIntervalSeconds: this.updateRequestIntervalSeconds.value,\n          });\n        },\n      );\n      this.socket.value.on('pollUpdated', async (data: PollUpdatedData) => {\n        try {\n          await this.pollUpdated.pollUpdated({\n            data,\n            polls: this.polls.value,\n            poll: this.poll.value ? this.poll.value : ({} as Poll),\n            member: this.member.value,\n            islevel: this.islevel.value,\n            showAlert: this.showAlert.bind(this),\n            updatePolls: this.updatePolls.bind(this),\n            updatePoll: this.updatePoll.bind(this),\n            updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n          });\n        } catch {\n          /* handle error */\n        }\n      });\n\n      this.socket.value.on('breakoutRoomUpdated', async (data: BreakoutRoomUpdatedData) => {\n        try {\n          await this.breakoutRoomUpdated.breakoutRoomUpdated({\n            data,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        } catch {\n          /* handle error */\n        }\n      });\n\n      await this.join_Room({\n        socket: this.socket.value,\n        roomName: this.roomName.value,\n        islevel: this.islevel.value,\n        member: this.member.value,\n        sec: this.apiToken.value,\n        apiUserName: this.apiUserName.value,\n      });\n      await this.receiveRoomMessages.receiveRoomMessages({\n        socket: this.socket.value,\n        roomName: this.roomName.value,\n        updateMessages: this.updateMessages.bind(this),\n      });\n      this.prepopulateUserMedia.prepopulateUserMedia({\n        name: this.hostLabel.value,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n\n      return this.socket.value;\n    } else {\n      return null;\n    }\n  }\n}\n","import {\n  Component,\n  HostListener,\n  Injector,\n  ChangeDetectorRef,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { Socket } from 'socket.io-client';\nimport {\n  faPlayCircle,\n  faPauseCircle,\n  faStopCircle,\n  faDotCircle,\n  faRecordVinyl,\n  faCog,\n  faUsers,\n  faClock,\n  faUserPlus,\n  faTools,\n  faDesktop,\n  faPoll,\n  faUserFriends,\n  faChalkboardTeacher,\n  faMicrophone,\n  faMicrophoneSlash,\n  faVideo,\n  faVideoSlash,\n  faPhone,\n  faBars,\n  faComments,\n  faChartBar,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { initialValuesState } from '../../methods/utils/initial-values.util';\n\nimport { MainAspectComponent } from '../display-components/main-aspect-component/main-aspect-component.component';\nimport { LoadingModal } from '../display-components/loading-modal/loading-modal.component';\nimport { ControlButtonsComponent } from '../display-components/control-buttons-component/control-buttons-component.component';\nimport { ControlButtonsAltComponent } from '../display-components/control-buttons-alt-component/control-buttons-alt-component.component';\nimport { OtherGridComponent } from '../display-components/other-grid-component/other-grid-component.component';\nimport { MainScreenComponent } from '../display-components/main-screen-component/main-screen-component.component';\nimport { MainGridComponent } from '../display-components/main-grid-component/main-grid-component.component';\nimport { SubAspectComponent } from '../display-components/sub-aspect-component/sub-aspect-component.component';\nimport { MainContainerComponent } from '../display-components/main-container-component/main-container-component.component';\nimport { AlertComponent } from '../display-components/alert-component/alert.component.component';\nimport { MenuModal } from '../menu-components/menu-modal/menu-modal.component';\nimport { RecordingModal } from '../recording-components/recording-modal/recording-modal.component';\nimport { RequestsModal } from '../requests-components/requests-modal/requests-modal.component';\nimport { WaitingRoomModal } from '../waiting-components/waiting-room-modal.component';\nimport { DisplaySettingsModal } from '../display-settings-components/display-settings-modal.component';\nimport { EventSettingsModal } from '../event-settings-components/event-settings-modal/event-settings-modal.component';\nimport { CoHostModal } from '../co-host-components/co-host-modal/co-host-modal.component';\nimport { ParticipantsModal } from '../participants-components/participants-modal/participants-modal.component';\nimport { MessagesModal } from '../message-components/messages-modal/messages-modal.component';\nimport { MediaSettingsModal } from '../media-settings-components/media-settings-modal/media-settings-modal.component';\nimport { ConfirmExitModal } from '../exit-components/confirm-exit-modal/confirm-exit-modal.component';\nimport { ConfirmHereModal } from '../misc-components/confirm-here-modal/confirm-here-modal.component';\nimport { ShareEventModal } from '../misc-components/share-event-modal/share-event-modal.component';\nimport {\n  WelcomePage,\n  WelcomePageOptions,\n} from '../misc-components/welcome-page/welcome-page.component';\n\nimport { PollModal } from '../polls-components/poll-modal/poll-modal.component';\nimport { BackgroundModal } from '../background-components/background-modal/background-modal.component';\nimport { BreakoutRoomsModal } from '../breakout-components/breakout-rooms-modal.component';\nimport { ConfigureWhiteboardModal } from '../whiteboard-components/configure-whiteboard-modal/configure-whiteboard-modal.component';\nimport { Whiteboard } from '../whiteboard-components/whiteboard/whiteboard.component';\nimport { Screenboard } from '../screenboard-components/screenboard/screenboard.component';\nimport { ScreenboardModal } from '../screenboard-components/screenboard-modal/screenboard-modal.component';\n// pagination and display of media (samples)\nimport { Pagination } from '../display-components/pagination/pagination.component';\nimport { FlexibleGrid } from '../display-components/flexible-grid/flexible-grid.component';\nimport { FlexibleVideo } from '../display-components/flexible-video/flexible-video.component';\nimport { AudioGrid } from '../display-components/audio-grid/audio-grid.component';\n\nimport { MenuWidget } from '../display-components/control-widgets/menu-widget.component';\nimport { MessageWidget } from '../display-components/control-widgets/message-widget.component';\nimport { MenuRecordWidget } from '../display-components/control-widgets/menu-record-widget.component';\nimport { RecordTimerWidget } from '../display-components/control-widgets/record-timer-widget.component';\nimport { MenuParticipantsWidget } from '../display-components/control-widgets/menu-participants-widget.component';\nimport { ScreenShareWidget } from '../display-components/control-widgets/screenshare-widget.component';\n\nimport {\n  ResponseJoinRoom,\n  CoHostResponsibility,\n  EventType,\n  Participant,\n  ConsumeSocket,\n  MeetingRoomParams,\n  VidCons,\n  HParamsType,\n  VParamsType,\n  ScreenParamsType,\n  AParamsType,\n  UserRecordingParams,\n  Stream,\n  AudioDecibels,\n  ScreenState,\n  GridSizes,\n  CustomMediaComponent,\n  Message,\n  WaitingRoomParticipant,\n  ComponentSizes,\n  Transport as TransportType,\n  Shape,\n  Poll,\n  BreakoutParticipant,\n  WhiteboardUser,\n  Request,\n  AllMembersData,\n  AllMembersRestData,\n  BreakoutRoomUpdatedData,\n  AllWaitingRoomMembersData,\n  MainButtonAlt,\n  MainCustomButton,\n  RecordParams,\n  SeedData,\n  UpdatedCoHostData,\n  Settings,\n  UpdateConsumingDomainsData,\n  RecordingNoticeData,\n  HostRequestResponseData,\n  PollUpdatedData,\n  PreJoinPageOptions,\n} from '../../@types/types';\n\n//import methods for control (samples)\n// Import methods for control (samples)\nimport { LaunchMenuModal } from '../../methods/menu-methods/launch-menu-modal.service';\nimport { LaunchRecording } from '../../methods/recording-methods/launch-recording.service';\nimport { StartRecording } from '../../methods/recording-methods/start-recording.service';\nimport { ConfirmRecording } from '../../methods/recording-methods/confirm-recording.service';\nimport { LaunchWaiting } from '../../methods/waiting-methods/launch-waiting.service';\nimport { launchCoHost } from '../../methods/co-host-methods/launch-co-host.service';\nimport { LaunchMediaSettings } from '../../methods/media-settings-methods/launch-media-settings.service';\nimport { LaunchDisplaySettings } from '../../methods/display-settings-methods/launch-display-settings.service';\nimport { LaunchSettings } from '../../methods/settings-methods/launch-settings.service';\nimport { LaunchRequests } from '../../methods/requests-methods/launch-requests.service';\nimport { LaunchParticipants } from '../../methods/participants-methods/launch-participants.service';\nimport { LaunchMessages } from '../../methods/message-methods/launch-messages.service';\nimport { LaunchConfirmExit } from '../../methods/exit-methods/launch-confirm-exit.service';\n\nimport { LaunchPoll } from '../../methods/polls-methods/launch-poll.service';\nimport { LaunchBreakoutRooms } from '../../methods/breakout-room-methods/launch-breakout-rooms.service';\nimport { LaunchConfigureWhiteboard } from '../../methods/whiteboard-methods/launch-configure-whiteboard.service';\n\n// mediasfu functions -- examples\nimport { SocketManager } from '../../sockets/socket-manager.service';\nimport { JoinRoomClient } from '../../producer-client/producer-client-emits/join-room-client.service';\nimport { UpdateRoomParametersClient } from '../../producer-client/producer-client-emits/update-room-parameters-client.service';\nimport { CreateDeviceClient } from '../../producer-client/producer-client-emits/create-device-client.service';\n\nimport { ClickVideo } from '../../methods/stream-methods/click-video.service';\nimport { ClickAudio } from '../../methods/stream-methods/click-audio.service';\nimport { ClickScreenShare } from '../../methods/stream-methods/click-screen-share.service';\nimport { StreamSuccessVideo } from '../../consumers/stream-success-video.service';\nimport { StreamSuccessAudio } from '../../consumers/stream-success-audio.service';\nimport { StreamSuccessScreen } from '../../consumers/stream-success-screen.service';\nimport { StreamSuccessAudioSwitch } from '../../consumers/stream-success-audio-switch.service';\nimport { CheckPermission } from '../../consumers/check-permission.service';\n\n// mediasfu functions\nimport { UpdateMiniCardsGrid } from '../../consumers/update-mini-cards-grid.service';\nimport { MixStreams } from '../../consumers/mix-streams.service';\nimport { DispStreams } from '../../consumers/disp-streams.service';\nimport { StopShareScreen } from '../../consumers/stop-share-screen.service';\nimport { CheckScreenShare } from '../../consumers/check-screen-share.service';\nimport { StartShareScreen } from '../../consumers/start-share-screen.service';\nimport { RequestScreenShare } from '../../consumers/request-screen-share.service';\nimport { ReorderStreams } from '../../consumers/reorder-streams.service';\nimport { PrepopulateUserMedia } from '../../consumers/prepopulate-user-media.service';\nimport { GetVideos } from '../../consumers/get-videos.service';\nimport { RePort } from '../../consumers/re-port.service';\nimport { Trigger } from '../../consumers/trigger.service';\nimport { ConsumerResume } from '../../consumers/consumer-resume.service';\nimport { ConnectSendTransportAudio } from '../../consumers/connect-send-transport-audio.service';\nimport { ConnectSendTransportVideo } from '../../consumers/connect-send-transport-video.service';\nimport { ConnectSendTransportScreen } from '../../consumers/connect-send-transport-screen.service';\nimport { ProcessConsumerTransports } from '../../consumers/process-consumer-transports.service';\nimport { ResumePauseStreams } from '../../consumers/resume-pause-streams.service';\nimport { Readjust } from '../../consumers/readjust.service';\nimport { CheckGrid } from '../../consumers/check-grid.service';\nimport { GetEstimate } from '../../consumers/get-estimate.service';\nimport { CalculateRowsAndColumns } from '../../consumers/calculate-rows-and-columns.service';\nimport { AddVideosGrid } from '../../consumers/add-videos-grid.service';\nimport { OnScreenChanges } from '../../consumers/on-screen-changes.service';\nimport { sleep } from '../../methods/utils/sleep.util';\nimport { ChangeVids } from '../../consumers/change-vids.service';\nimport { CompareActiveNames } from '../../consumers/compare-active-names.service';\nimport { CompareScreenStates } from '../../consumers/compare-screen-states.service';\nimport { CreateSendTransport } from '../../consumers/create-send-transport.service';\nimport { ResumeSendTransportAudio } from '../../consumers/resume-send-transport-audio.service';\nimport { ReceiveAllPipedTransports } from '../../consumers/receive-all-piped-transports.service';\nimport { DisconnectSendTransportVideo } from '../../consumers/disconnect-send-transport-video.service';\nimport { DisconnectSendTransportAudio } from '../../consumers/disconnect-send-transport-audio.service';\nimport { DisconnectSendTransportScreen } from '../../consumers/disconnect-send-transport-screen.service';\nimport { ConnectSendTransport } from '../../consumers/connect-send-transport.service';\nimport { GetPipedProducersAlt } from '../../consumers/get-piped-producers-alt.service';\nimport { SignalNewConsumerTransport } from '../../consumers/signal-new-consumer-transport.service';\nimport { ConnectRecvTransport } from '../../consumers/connect-recv-transport.service';\nimport { ReUpdateInter } from '../../consumers/re-update-inter.service';\nimport { UpdateParticipantAudioDecibels } from '../../consumers/update-participant-audio-decibels.service';\nimport { CloseAndResize } from '../../consumers/close-and-resize.service';\nimport { AutoAdjust } from '../../consumers/auto-adjust.service';\nimport { SwitchUserVideoAlt } from '../../consumers/switch-user-video-alt.service';\nimport { SwitchUserVideo } from '../../consumers/switch-user-video.service';\nimport { SwitchUserAudio } from '../../consumers/switch-user-audio.service';\nimport { ReceiveRoomMessages } from '../../consumers/receive-room-messages.service';\nimport { FormatNumber } from '../../methods/utils/format-number.service';\nimport { ConnectIps } from '../../consumers/connect-ips.service';\n\nimport { PollUpdated } from '../../methods/polls-methods/poll-updated.service';\nimport { HandleCreatePoll } from '../../methods/polls-methods/handle-create-poll.service';\nimport { HandleVotePoll } from '../../methods/polls-methods/handle-vote-poll.service';\nimport { HandleEndPoll } from '../../methods/polls-methods/handle-end-poll.service';\n\nimport { BreakoutRoomUpdated } from '../../methods/breakout-room-methods/breakout-room-updated.service';\n\nimport { StartMeetingProgressTimer } from '../../methods/utils/meeting-timer/start-meeting-progress-timer.service';\nimport { UpdateRecording } from '../../methods/recording-methods/update-recording.service';\nimport { StopRecording } from '../../methods/recording-methods/stop-recording.service';\n\nimport { UserWaiting } from '../../producers/socket-receive-methods/user-waiting.service';\nimport { PersonJoined } from '../../producers/socket-receive-methods/person-joined.service';\nimport { AllWaitingRoomMembers } from '../../producers/socket-receive-methods/all-waiting-room-members.service';\nimport { RoomRecordParams } from '../../producers/socket-receive-methods/room-record-params.service';\nimport { BanParticipant } from '../../producers/socket-receive-methods/ban-participant.service';\nimport { UpdatedCoHost } from '../../producers/socket-receive-methods/updated-co-host.service';\nimport { ParticipantRequested } from '../../producers/socket-receive-methods/participant-requested.service';\nimport { ScreenProducerId } from '../../producers/socket-receive-methods/screen-producer-id.service';\nimport { UpdateMediaSettings } from '../../producers/socket-receive-methods/update-media-settings.service';\nimport { ProducerMediaPaused } from '../../producers/socket-receive-methods/producer-media-paused.service';\nimport { ProducerMediaResumed } from '../../producers/socket-receive-methods/producer-media-resumed.service';\nimport { ProducerMediaClosed } from '../../producers/socket-receive-methods/producer-media-closed.service';\nimport { ControlMediaHost } from '../../producers/socket-receive-methods/control-media-host.service';\nimport { MeetingEnded } from '../../producers/socket-receive-methods/meeting-ended.service';\nimport { DisconnectUserSelf } from '../../producers/socket-receive-methods/disconnect-user-self.service';\nimport { ReceiveMessage } from '../../producers/socket-receive-methods/receive-message.service';\nimport { MeetingTimeRemaining } from '../../producers/socket-receive-methods/meeting-time-remaining.service';\nimport { MeetingStillThere } from '../../producers/socket-receive-methods/meeting-still-there.service';\nimport { StartRecords } from '../../producers/socket-receive-methods/start-records.service';\nimport { ReInitiateRecording } from '../../producers/socket-receive-methods/re-initiate-recording.service';\nimport { GetDomains } from '../../producers/socket-receive-methods/get-domains.service';\nimport { UpdateConsumingDomains } from '../../producers/socket-receive-methods/update-consuming-domains.service';\nimport { RecordingNotice } from '../../producers/socket-receive-methods/recording-notice.service';\nimport { TimeLeftRecording } from '../../producers/socket-receive-methods/time-left-recording.service';\nimport { StoppedRecording } from '../../producers/socket-receive-methods/stopped-recording.service';\nimport { HostRequestResponse } from '../../producers/socket-receive-methods/host-request-response.service';\nimport { AllMembers } from '../../producers/socket-receive-methods/all-members.service';\nimport { AllMembersRest } from '../../producers/socket-receive-methods/all-members-rest.service';\nimport { Disconnect } from '../../producers/socket-receive-methods/disconnect.service';\n\nimport { CaptureCanvasStream } from '../../methods/whiteboard-methods/capture-canvas-stream.service';\nimport { ResumePauseAudioStreams } from '../../consumers/resume-pause-audio-streams.service';\nimport { ProcessConsumerTransportsAudio } from '../../consumers/process-consumer-transports-audio.service';\n\nimport {\n  Device,\n  Producer,\n  ProducerOptions,\n  RtpCapabilities,\n  Transport,\n} from 'mediasoup-client/lib/types';\nimport { SelfieSegmentation } from '@mediapipe/selfie_segmentation';\n\n/**\n * Options for configuring the MediasfuConference component.\n *\n * @typedef {Object} MediasfuConferenceOptions\n * @property {(options: PreJoinPageOptions | WelcomePageOptions) => HTMLElement} [PrejoinPage] - A function that returns an HTMLElement for the pre-join page.\n * @property {{ apiUserName: string; apiKey: string }} [credentials] - Credentials for API access, including username and API key.\n * @property {boolean} [useLocalUIMode] - Flag to determine if the local UI mode should be used.\n * @property {SeedData} [seedData] - Data used for seeding the component.\n * @property {boolean} [useSeed] - Flag to determine if seed data should be used.\n * @property {string} [imgSrc] - Source URL for an image to be used in the component.\n */\nexport type MediasfuConferenceOptions = {\n  PrejoinPage?: (options: PreJoinPageOptions | WelcomePageOptions) => HTMLElement;\n  credentials?: { apiUserName: string; apiKey: string };\n  useLocalUIMode?: boolean;\n  seedData?: SeedData;\n  useSeed?: boolean;\n  imgSrc?: string;\n};\n\n@Component({\n  selector: 'app-mediasfu-conference',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    CommonModule,\n    BreakoutRoomsModal,\n    BackgroundModal,\n    CoHostModal,\n    AlertComponent,\n    AudioGrid,\n    ControlButtonsAltComponent,\n    ControlButtonsComponent,\n    FlexibleGrid,\n    FlexibleVideo,\n    LoadingModal,\n    Pagination,\n    SubAspectComponent,\n    DisplaySettingsModal,\n    EventSettingsModal,\n    ConfirmExitModal,\n    MediaSettingsModal,\n    MenuModal,\n    MessagesModal,\n    ConfirmHereModal,\n    ShareEventModal,\n    WelcomePage,\n    ParticipantsModal,\n    PollModal,\n    RecordingModal,\n    RequestsModal,\n    MainAspectComponent,\n    MainContainerComponent,\n    MainGridComponent,\n    MainScreenComponent,\n    OtherGridComponent,\n    Screenboard,\n    ScreenboardModal,\n    Whiteboard,\n    ConfigureWhiteboardModal,\n    WaitingRoomModal,\n    MenuWidget,\n    MessageWidget,\n    MenuRecordWidget,\n    RecordTimerWidget,\n    MenuParticipantsWidget,\n    ScreenShareWidget,\n  ],\n  template: `\n    <div\n      class=\"MediaSFU\"\n      [ngStyle]=\"{\n        height: '100vh',\n        width: '100vw',\n        maxWidth: '100vw',\n        maxHeight: '100vh',\n        overflow: 'hidden'\n      }\"\n    >\n      <ng-container *ngIf=\"!validated.value; else mainContent\">\n        <ng-container\n          *ngComponentOutlet=\"\n            PrejoinPageComponent.component;\n            injector: PrejoinPageComponent.injector\n          \"\n        >\n        </ng-container>\n      </ng-container>\n\n      <ng-template #mainContent>\n        <app-main-container-component>\n          <app-main-aspect-component\n            [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n            [defaultFraction]=\"1 - controlHeight.value\"\n            [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n            [updateIsWideScreen]=\"updateIsWideScreen\"\n            [updateIsMediumScreen]=\"updateIsMediumScreen\"\n            [updateIsSmallScreen]=\"updateIsSmallScreen\"\n          >\n            <app-main-screen-component\n              [doStack]=\"true\"\n              [mainSize]=\"mainHeightWidth.value\"\n              [defaultFraction]=\"1 - controlHeight.value\"\n              [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n              [updateComponentSizes]=\"updateComponentSizes\"\n            >\n              <app-main-grid-component\n                [height]=\"componentSizes.value.mainHeight\"\n                [width]=\"componentSizes.value.mainWidth\"\n                [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                [mainSize]=\"mainHeightWidth.value\"\n                [showAspect]=\"mainHeightWidth.value > 0\"\n                [timeBackgroundColor]=\"recordState.value\"\n                [meetingProgressTime]=\"meetingProgressTime.value\"\n              >\n                <app-flexible-video\n                  [customWidth]=\"componentSizes.value.mainWidth\"\n                  [customHeight]=\"componentSizes.value.mainHeight\"\n                  [rows]=\"1\"\n                  [columns]=\"1\"\n                  [componentsToRender]=\"mainGridStream.value\"\n                  [showAspect]=\"\n                    mainGridStream.value.length > 0 &&\n                    !(whiteboardStarted.value && !whiteboardEnded.value)\n                  \"\n                  [localStreamScreen]=\"localStreamScreen.value!\"\n                  [annotateScreenStream]=\"annotateScreenStream.value\"\n                  [Screenboard]=\"shared.value ? ScreenboardWidget : undefined\"\n                >\n                </app-flexible-video>\n                <app-whiteboard\n                  [customWidth]=\"componentSizes.value.mainWidth\"\n                  [customHeight]=\"componentSizes.value.mainHeight\"\n                  [parameters]=\"mediaSFUParameters\"\n                  [showAspect]=\"whiteboardStarted.value && !whiteboardEnded.value\"\n                ></app-whiteboard>\n              </app-main-grid-component>\n\n              <app-other-grid-component\n                [height]=\"componentSizes.value.otherHeight\"\n                [width]=\"componentSizes.value.otherWidth\"\n                [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                [showAspect]=\"mainHeightWidth.value !== 100\"\n                [timeBackgroundColor]=\"recordState.value\"\n                [showTimer]=\"mainHeightWidth.value === 0\"\n                [meetingProgressTime]=\"meetingProgressTime.value\"\n              >\n                <div\n                  *ngIf=\"doPaginate.value\"\n                  [ngStyle]=\"{\n                    width:\n                      paginationDirection.value == 'horizontal'\n                        ? componentSizes.value.otherWidth\n                        : paginationHeightWidth.value,\n                    height:\n                      paginationDirection.value == 'horizontal'\n                        ? paginationHeightWidth.value\n                        : componentSizes.value.otherHeight,\n                    display: doPaginate.value ? 'flex' : 'none',\n                    'flex-direction': paginationDirection.value == 'horizontal' ? 'row' : 'column',\n                    'justify-content': 'center',\n                    'align-items': 'center',\n                    padding: '0',\n                    margin: '0'\n                  }\"\n                >\n                  <app-pagination\n                    [totalPages]=\"numberPages.value\"\n                    [currentUserPage]=\"currentUserPage.value\"\n                    [showAspect]=\"doPaginate.value\"\n                    [paginationHeight]=\"paginationHeightWidth.value\"\n                    [direction]=\"paginationDirection.value\"\n                    [parameters]=\"mediaSFUParameters\"\n                  ></app-pagination>\n                </div>\n\n                <app-audio-grid [componentsToRender]=\"audioOnlyStreams.value\"></app-audio-grid>\n\n                <app-flexible-grid\n                  [customWidth]=\"gridSizes.value.gridWidth!\"\n                  [customHeight]=\"gridSizes.value.gridHeight!\"\n                  [rows]=\"gridRows.value\"\n                  [columns]=\"gridCols.value\"\n                  [componentsToRender]=\"otherGridStreams.value[0]\"\n                  [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                ></app-flexible-grid>\n                <app-flexible-grid\n                  [customWidth]=\"gridSizes.value.altGridWidth!\"\n                  [customHeight]=\"gridSizes.value.altGridHeight!\"\n                  [rows]=\"altGridRows.value\"\n                  [columns]=\"altGridCols.value\"\n                  [componentsToRender]=\"otherGridStreams.value[1]\"\n                  [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                ></app-flexible-grid>\n              </app-other-grid-component>\n            </app-main-screen-component>\n          </app-main-aspect-component>\n\n          <app-sub-aspect-component\n            [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n            [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n            [defaultFractionSub]=\"controlHeight.value\"\n          >\n            <app-control-buttons-component\n              [buttons]=\"controlButtons\"\n              [buttonColor]=\"'black'\"\n              [buttonBackgroundColor]=\"{\n                default: 'transparent',\n                pressed: 'transparent'\n              }\"\n              [alignment]=\"'space-between'\"\n              [vertical]=\"false\"\n              [buttonsContainerStyle]=\"{\n                marginTop: '0',\n                marginBottom: '0',\n                backgroundColor: 'transparent'\n              }\"\n            ></app-control-buttons-component>\n          </app-sub-aspect-component>\n        </app-main-container-component>\n      </ng-template>\n\n      <app-menu-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isVisible]=\"isMenuModalVisible.value\"\n        [onClose]=\"onCloseMenuModal\"\n        [customButtons]=\"customMenuButtons\"\n        [roomName]=\"roomName.value\"\n        [adminPasscode]=\"adminPasscode.value\"\n        [islevel]=\"islevel.value\"\n      ></app-menu-modal>\n\n      <app-event-settings-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isEventSettingsModalVisible]=\"isSettingsModalVisible.value\"\n        [onEventSettingsClose]=\"onEventSettingsClose\"\n        [audioSetting]=\"audioSetting.value\"\n        [videoSetting]=\"videoSetting.value\"\n        [screenshareSetting]=\"screenshareSetting.value\"\n        [chatSetting]=\"chatSetting.value\"\n        [updateAudioSetting]=\"updateAudioSetting\"\n        [updateVideoSetting]=\"updateVideoSetting\"\n        [updateScreenshareSetting]=\"updateScreenshareSetting\"\n        [updateChatSetting]=\"updateChatSetting\"\n        [updateIsSettingsModalVisible]=\"updateIsSettingsModalVisible\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [showAlert]=\"showAlert\"\n      ></app-event-settings-modal>\n\n      <app-requests-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isRequestsModalVisible]=\"isRequestsModalVisible.value\"\n        [onRequestClose]=\"onRequestClose\"\n        [requestCounter]=\"requestCounter.value\"\n        [onRequestFilterChange]=\"onRequestFilterChange\"\n        [updateRequestList]=\"updateRequestList\"\n        [requestList]=\"filteredRequestList.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-requests-modal>\n\n      <app-waiting-room-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isWaitingModalVisible]=\"isWaitingModalVisible.value\"\n        [onWaitingRoomClose]=\"onWaitingRoomClose\"\n        [waitingRoomCounter]=\"waitingRoomCounter.value\"\n        [onWaitingRoomFilterChange]=\"onWaitingRoomFilterChange\"\n        [waitingRoomList]=\"filteredWaitingRoomList.value\"\n        [updateWaitingList]=\"updateWaitingRoomList\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [parameters]=\"{\n                      filteredWaitingRoomList: waitingRoomList.value,\n                      getUpdatedAllParams: getUpdatedAllParams,\n                    }\"\n      ></app-waiting-room-modal>\n\n      <app-co-host-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isCoHostModalVisible]=\"isCoHostModalVisible.value\"\n        [onCoHostClose]=\"onCoHostClose\"\n        [coHostResponsibility]=\"coHostResponsibility.value\"\n        [participants]=\"participants.value\"\n        [currentCohost]=\"coHost.value\"\n        [roomName]=\"roomName.value\"\n        [showAlert]=\"showAlert\"\n        [updateCoHostResponsibility]=\"updateCoHostResponsibility\"\n        [updateCoHost]=\"updateCoHost\"\n        [updateIsCoHostModalVisible]=\"updateIsCoHostModalVisible\"\n        [socket]=\"socket.value\"\n      ></app-co-host-modal>\n\n      <app-media-settings-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isMediaSettingsModalVisible]=\"isMediaSettingsModalVisible.value\"\n        [onMediaSettingsClose]=\"onMediaSettingsClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-media-settings-modal>\n\n      <app-participants-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isParticipantsModalVisible]=\"isParticipantsModalVisible.value\"\n        [onParticipantsClose]=\"onParticipantsClose\"\n        [participantsCounter]=\"participantsCounter.value\"\n        [onParticipantsFilterChange]=\"onParticipantsFilterChange\"\n        [parameters]=\"{\n              updateParticipants: updateParticipants,\n              filteredParticipants: filteredParticipants.value,\n              updateIsParticipantsModalVisible: updateIsParticipantsModalVisible,\n              updateDirectMessageDetails: updateDirectMessageDetails,\n              updateStartDirectMessage: updateStartDirectMessage,\n              updateIsMessagesModalVisible: updateIsMessagesModalVisible,\n              showAlert: showAlert,\n              participants: filteredParticipants.value,\n              roomName: roomName.value,\n              islevel: islevel.value,\n              member: member.value,\n              coHostResponsibility: coHostResponsibility.value,\n              coHost: coHost.value,\n              eventType: eventType.value,\n              startDirectMessage: startDirectMessage.value,\n              directMessageDetails: directMessageDetails.value,\n              socket: socket.value,\n              getUpdatedAllParams: getUpdatedAllParams,\n            }\"\n      ></app-participants-modal>\n\n      <app-display-settings-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isDisplaySettingsModalVisible]=\"isDisplaySettingsModalVisible.value\"\n        [onDisplaySettingsClose]=\"onDisplaySettingsClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-display-settings-modal>\n\n      <app-recording-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isRecordingModalVisible]=\"isRecordingModalVisible.value\"\n        [onClose]=\"onRecordingClose\"\n        [startRecording]=\"startRecording.startRecording\"\n        [confirmRecording]=\"confirmRecording.confirmRecording\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-recording-modal>\n\n      <app-messages-modal\n        [backgroundColor]=\"\n          eventType.value === 'webinar' || eventType.value === 'conference'\n            ? '#f5f5f5'\n            : 'rgba(255, 255, 255, 0.25)'\n        \"\n        [isMessagesModalVisible]=\"isMessagesModalVisible.value\"\n        [onMessagesClose]=\"onMessagesClose\"\n        [messages]=\"messages.value\"\n        [eventType]=\"eventType.value\"\n        [member]=\"member.value\"\n        [islevel]=\"islevel.value\"\n        [coHostResponsibility]=\"coHostResponsibility.value\"\n        [coHost]=\"coHost.value\"\n        [startDirectMessage]=\"startDirectMessage.value\"\n        [directMessageDetails]=\"directMessageDetails.value\"\n        [updateStartDirectMessage]=\"updateStartDirectMessage\"\n        [updateDirectMessageDetails]=\"updateDirectMessageDetails\"\n        [showAlert]=\"showAlert\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [chatSetting]=\"chatSetting.value\"\n      ></app-messages-modal>\n\n      <app-confirm-exit-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isConfirmExitModalVisible]=\"isConfirmExitModalVisible.value\"\n        [onConfirmExitClose]=\"onConfirmExitClose\"\n        [position]=\"'topRight'\"\n        [member]=\"member.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [islevel]=\"islevel.value\"\n      ></app-confirm-exit-modal>\n\n      <app-confirm-here-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isConfirmHereModalVisible]=\"isConfirmHereModalVisible.value\"\n        [onConfirmHereClose]=\"onConfirmHereClose\"\n        [member]=\"member.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n      ></app-confirm-here-modal>\n\n      <app-share-event-modal\n        [isShareEventModalVisible]=\"isShareEventModalVisible.value\"\n        [onShareEventClose]=\"onShareEventClose\"\n        [roomName]=\"roomName.value\"\n        [islevel]=\"islevel.value\"\n        [adminPasscode]=\"adminPasscode.value\"\n        [eventType]=\"eventType.value\"\n      ></app-share-event-modal>\n\n      <app-poll-modal\n        [isPollModalVisible]=\"isPollModalVisible.value\"\n        [onClose]=\"onPollClose\"\n        [member]=\"member.value\"\n        [islevel]=\"islevel.value\"\n        [polls]=\"polls.value\"\n        [poll]=\"poll.value\"\n        [socket]=\"socket.value\"\n        [roomName]=\"roomName.value\"\n        [showAlert]=\"showAlert\"\n        [updateIsPollModalVisible]=\"updateIsPollModalVisible\"\n        [handleCreatePoll]=\"handleCreatePoll.handleCreatePoll\"\n        [handleEndPoll]=\"handleEndPoll.handleEndPoll\"\n        [handleVotePoll]=\"handleVotePoll.handleVotePoll\"\n      ></app-poll-modal>\n\n      <app-background-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isBackgroundModalVisible.value\"\n        [onClose]=\"onBackgroundClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-background-modal>\n\n      <app-breakout-rooms-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isBreakoutRoomsModalVisible.value\"\n        [onBreakoutRoomsClose]=\"onBreakoutRoomsClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-breakout-rooms-modal>\n\n      <app-configure-whiteboard-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isConfigureWhiteboardModalVisible.value\"\n        [onConfigureWhiteboardClose]=\"onConfigureWhiteboardClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-configure-whiteboard-modal>\n\n      <app-screenboard-modal\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        [isVisible]=\"isScreenboardModalVisible.value\"\n        [onClose]=\"onScreenboardClose\"\n        [parameters]=\"mediaSFUParameters\"\n      ></app-screenboard-modal>\n\n      <app-alert-component\n        [visible]=\"alertVisible.value\"\n        [message]=\"alertMessage.value\"\n        [type]=\"alertType.value\"\n        [duration]=\"alertDuration.value\"\n        [onHide]=\"onAlertHide\"\n        textColor=\"#ffffff\"\n      ></app-alert-component>\n\n      <app-loading-modal\n        [isVisible]=\"isLoadingModalVisible.value\"\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        displayColor=\"black\"\n      ></app-loading-modal>\n    </div>\n  `,\n  styles: [\n    `\n      .MediaSFU {\n        /* Add any component-specific styles here */\n      }\n    `,\n  ],\n  providers: [CookieService],\n})\nexport class MediasfuConference implements OnInit, OnDestroy {\n  @Input()\n  PrejoinPage: any = WelcomePage;\n  @Input() credentials: { apiUserName: string; apiKey: string } = { apiUserName: '', apiKey: '' };\n  @Input() useLocalUIMode = false;\n  @Input() seedData?: SeedData;\n  @Input() useSeed = false;\n  @Input() imgSrc = 'https://mediasfu.com/images/logo192.png';\n\n  title = 'MediaSFU-Conference';\n\n  private mainHeightWidthSubscription: Subscription | undefined;\n  private validatedSubscription: Subscription | undefined;\n  private islevelSubscription: Subscription | undefined;\n  private coHostSubscription: Subscription | undefined;\n  private buttonSubscriptions: Subscription[] = [];\n  private ScreenboardSubscription: Subscription | undefined;\n  private recordingSubscription: Subscription | undefined;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private injector: Injector,\n    public updateMiniCardsGrid: UpdateMiniCardsGrid,\n    public mixStreams: MixStreams,\n    public dispStreams: DispStreams,\n    public stopShareScreen: StopShareScreen,\n    public checkScreenShare: CheckScreenShare,\n    public startShareScreen: StartShareScreen,\n    public requestScreenShare: RequestScreenShare,\n    public reorderStreams: ReorderStreams,\n    public prepopulateUserMedia: PrepopulateUserMedia,\n    public getVideos: GetVideos,\n    public rePort: RePort,\n    public trigger: Trigger,\n    public consumerResume: ConsumerResume,\n    public connectSendTransport: ConnectSendTransport,\n    public connectSendTransportAudio: ConnectSendTransportAudio,\n    public connectSendTransportVideo: ConnectSendTransportVideo,\n    public connectSendTransportScreen: ConnectSendTransportScreen,\n    public processConsumerTransports: ProcessConsumerTransports,\n    public resumePauseStreams: ResumePauseStreams,\n    public readjust: Readjust,\n    public checkGrid: CheckGrid,\n    public getEstimate: GetEstimate,\n    public calculateRowsAndColumns: CalculateRowsAndColumns,\n    public addVideosGrid: AddVideosGrid,\n    public onScreenChanges: OnScreenChanges,\n    public changeVids: ChangeVids,\n    public compareActiveNames: CompareActiveNames,\n    public compareScreenStates: CompareScreenStates,\n    public createSendTransport: CreateSendTransport,\n    public resumeSendTransportAudio: ResumeSendTransportAudio,\n    public receiveAllPipedTransports: ReceiveAllPipedTransports,\n    public disconnectSendTransportVideo: DisconnectSendTransportVideo,\n    public disconnectSendTransportAudio: DisconnectSendTransportAudio,\n    public disconnectSendTransportScreen: DisconnectSendTransportScreen,\n    public getPipedProducersAlt: GetPipedProducersAlt,\n    public signalNewConsumerTransport: SignalNewConsumerTransport,\n    public connectRecvTransport: ConnectRecvTransport,\n    public reUpdateInter: ReUpdateInter,\n    public updateParticipantAudioDecibels: UpdateParticipantAudioDecibels,\n    public closeAndResize: CloseAndResize,\n    public autoAdjust: AutoAdjust,\n    public switchUserVideoAlt: SwitchUserVideoAlt,\n    public switchUserVideo: SwitchUserVideo,\n    public switchUserAudio: SwitchUserAudio,\n    public getDomains: GetDomains,\n    public formatNumber: FormatNumber,\n    public connectIps: ConnectIps,\n    public createDeviceClient: CreateDeviceClient,\n    public handleCreatePoll: HandleCreatePoll,\n    public handleEndPoll: HandleEndPoll,\n    public handleVotePoll: HandleVotePoll,\n    public captureCanvasStream: CaptureCanvasStream,\n    public resumePauseAudioStreams: ResumePauseAudioStreams,\n    public processConsumerTransportsAudio: ProcessConsumerTransportsAudio,\n\n    public launchMenuModal: LaunchMenuModal,\n    public launchRecording: LaunchRecording,\n    public startRecording: StartRecording,\n    public confirmRecording: ConfirmRecording,\n    public launchWaiting: LaunchWaiting,\n    public launchCoHost: launchCoHost,\n    public launchMediaSettings: LaunchMediaSettings,\n    public launchDisplaySettings: LaunchDisplaySettings,\n    public launchSettings: LaunchSettings,\n    public launchRequests: LaunchRequests,\n    public launchParticipants: LaunchParticipants,\n    public launchMessages: LaunchMessages,\n    public launchConfirmExit: LaunchConfirmExit,\n    public launchPoll: LaunchPoll,\n    public launchBreakoutRooms: LaunchBreakoutRooms,\n    public launchConfigureWhiteboard: LaunchConfigureWhiteboard,\n    public startMeetingProgressTimer: StartMeetingProgressTimer,\n    public updateRecording: UpdateRecording,\n    public stopRecording: StopRecording,\n    public userWaiting: UserWaiting,\n    public personJoined: PersonJoined,\n    public allWaitingRoomMembers: AllWaitingRoomMembers,\n    public roomRecordParams: RoomRecordParams,\n    public banParticipant: BanParticipant,\n    public updatedCoHost: UpdatedCoHost,\n    public participantRequested: ParticipantRequested,\n    public screenProducerId: ScreenProducerId,\n    public updateMediaSettings: UpdateMediaSettings,\n    public producerMediaPaused: ProducerMediaPaused,\n    public producerMediaResumed: ProducerMediaResumed,\n    public producerMediaClosed: ProducerMediaClosed,\n    public controlMediaHost: ControlMediaHost,\n    public meetingEnded: MeetingEnded,\n    public disconnectUserSelf: DisconnectUserSelf,\n    public receiveMessage: ReceiveMessage,\n    public meetingTimeRemaining: MeetingTimeRemaining,\n    public meetingStillThere: MeetingStillThere,\n    public startRecords: StartRecords,\n    public reInitiateRecording: ReInitiateRecording,\n    public recordingNotice: RecordingNotice,\n    public timeLeftRecording: TimeLeftRecording,\n    public stoppedRecording: StoppedRecording,\n    public hostRequestResponse: HostRequestResponse,\n    public allMembers: AllMembers,\n    public allMembersRest: AllMembersRest,\n    public disconnect: Disconnect,\n    public pollUpdated: PollUpdated,\n    public breakoutRoomUpdated: BreakoutRoomUpdated,\n    public socketManager: SocketManager,\n    public joinRoomClient: JoinRoomClient,\n    public updateRoomParametersClient: UpdateRoomParametersClient,\n    public clickVideo: ClickVideo,\n    public clickAudio: ClickAudio,\n    public clickScreenShare: ClickScreenShare,\n    public streamSuccessVideo: StreamSuccessVideo,\n    public streamSuccessAudio: StreamSuccessAudio,\n    public streamSuccessScreen: StreamSuccessScreen,\n    public streamSuccessAudioSwitch: StreamSuccessAudioSwitch,\n    public checkPermission: CheckPermission,\n    public updateConsumingDomains: UpdateConsumingDomains,\n    public receiveRoomMessages: ReceiveRoomMessages,\n  ) {}\n\n  createInjector(inputs: any) {\n    const inj = Injector.create({\n      providers: Object.keys(inputs).map((key) => ({ provide: key, useValue: inputs[key] })),\n      parent: this.injector,\n    });\n\n    return inj;\n  }\n\n  // Initial values\n  mediaSFUFunctions = () => {\n    return {\n      updateMiniCardsGrid:\n        this.updateMiniCardsGrid?.updateMiniCardsGrid ||\n        (() => {\n          console.log('none');\n        }),\n      mixStreams:\n        this.mixStreams?.mixStreams ||\n        (() => {\n          console.log('none');\n        }),\n      dispStreams:\n        this.dispStreams?.dispStreams ||\n        (() => {\n          console.log('none');\n        }),\n      stopShareScreen:\n        this.stopShareScreen?.stopShareScreen ||\n        (() => {\n          console.log('none');\n        }),\n      checkScreenShare:\n        this.checkScreenShare?.checkScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      startShareScreen:\n        this.startShareScreen?.startShareScreen ||\n        (() => {\n          console.log('none');\n        }),\n      requestScreenShare:\n        this.requestScreenShare?.requestScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      reorderStreams:\n        this.reorderStreams?.reorderStreams ||\n        (() => {\n          console.log('none');\n        }),\n      prepopulateUserMedia:\n        this.prepopulateUserMedia?.prepopulateUserMedia ||\n        (() => {\n          console.log('none');\n        }),\n      getVideos:\n        this.getVideos?.getVideos ||\n        (() => {\n          console.log('none');\n        }),\n      rePort:\n        this.rePort?.rePort ||\n        (() => {\n          console.log('none');\n        }),\n      trigger:\n        this.trigger?.trigger ||\n        (() => {\n          console.log('none');\n        }),\n      consumerResume:\n        this.consumerResume?.consumerResume ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransport:\n        this.connectSendTransport?.connectSendTransport ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportAudio:\n        this.connectSendTransportAudio?.connectSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportVideo:\n        this.connectSendTransportVideo?.connectSendTransportVideo ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportScreen:\n        this.connectSendTransportScreen?.connectSendTransportScreen ||\n        (() => {\n          console.log('none');\n        }),\n      processConsumerTransports:\n        this.processConsumerTransports?.processConsumerTransports ||\n        (() => {\n          console.log('none');\n        }),\n      resumePauseStreams:\n        this.resumePauseStreams?.resumePauseStreams ||\n        (() => {\n          console.log('none');\n        }),\n      readjust:\n        this.readjust?.readjust ||\n        (() => {\n          console.log('none');\n        }),\n      checkGrid:\n        this.checkGrid?.checkGrid ||\n        (() => {\n          console.log('none');\n        }),\n      getEstimate:\n        this.getEstimate?.getEstimate ||\n        (() => {\n          console.log('none');\n        }),\n      calculateRowsAndColumns:\n        this.calculateRowsAndColumns?.calculateRowsAndColumns ||\n        (() => {\n          console.log('none');\n        }),\n      addVideosGrid:\n        this.addVideosGrid?.addVideosGrid ||\n        (() => {\n          console.log('none');\n        }),\n      onScreenChanges:\n        this.onScreenChanges?.onScreenChanges ||\n        (() => {\n          console.log('none');\n        }),\n      sleep:\n        sleep ||\n        (() => {\n          console.log('none');\n        }),\n      changeVids:\n        this.changeVids?.changeVids ||\n        (() => {\n          console.log('none');\n        }),\n      compareActiveNames:\n        this.compareActiveNames?.compareActiveNames ||\n        (() => {\n          console.log('none');\n        }),\n      compareScreenStates:\n        this.compareScreenStates?.compareScreenStates ||\n        (() => {\n          console.log('none');\n        }),\n      createSendTransport:\n        this.createSendTransport?.createSendTransport ||\n        (() => {\n          console.log('none');\n        }),\n      resumeSendTransportAudio:\n        this.resumeSendTransportAudio?.resumeSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      receiveAllPipedTransports:\n        this.receiveAllPipedTransports?.receiveAllPipedTransports ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportVideo:\n        this.disconnectSendTransportVideo?.disconnectSendTransportVideo ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportAudio:\n        this.disconnectSendTransportAudio?.disconnectSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportScreen:\n        this.disconnectSendTransportScreen?.disconnectSendTransportScreen ||\n        (() => {\n          console.log('none');\n        }),\n      getPipedProducersAlt:\n        this.getPipedProducersAlt?.getPipedProducersAlt ||\n        (() => {\n          console.log('none');\n        }),\n      signalNewConsumerTransport:\n        this.signalNewConsumerTransport?.signalNewConsumerTransport ||\n        (() => {\n          console.log('none');\n        }),\n      connectRecvTransport:\n        this.connectRecvTransport?.connectRecvTransport ||\n        (() => {\n          console.log('none');\n        }),\n      reUpdateInter:\n        this.reUpdateInter?.reUpdateInter ||\n        (() => {\n          console.log('none');\n        }),\n      updateParticipantAudioDecibels:\n        this.updateParticipantAudioDecibels?.updateParticipantAudioDecibels ||\n        (() => {\n          console.log('none');\n        }),\n      closeAndResize:\n        this.closeAndResize?.closeAndResize ||\n        (() => {\n          console.log('none');\n        }),\n      autoAdjust:\n        this.autoAdjust?.autoAdjust ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserVideoAlt:\n        this.switchUserVideoAlt?.switchUserVideoAlt ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserVideo:\n        this.switchUserVideo?.switchUserVideo ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserAudio:\n        this.switchUserAudio?.switchUserAudio ||\n        (() => {\n          console.log('none');\n        }),\n      getDomains:\n        this.getDomains?.getDomains ||\n        (() => {\n          console.log('none');\n        }),\n      formatNumber:\n        this.formatNumber?.formatNumber ||\n        (() => {\n          console.log('none');\n        }),\n      connectIps:\n        this.connectIps?.connectIps ||\n        (() => {\n          console.log('none');\n        }),\n      createDeviceClient:\n        this.createDeviceClient?.createDeviceClient ||\n        (() => {\n          console.log('none');\n        }),\n      handleCreatePoll:\n        this.handleCreatePoll?.handleCreatePoll ||\n        (() => {\n          console.log('none');\n        }),\n      handleEndPoll:\n        this.handleEndPoll?.handleEndPoll ||\n        (() => {\n          console.log('none');\n        }),\n      handleVotePoll:\n        this.handleVotePoll?.handleVotePoll ||\n        (() => {\n          console.log('none');\n        }),\n      captureCanvasStream:\n        this.captureCanvasStream?.captureCanvasStream ||\n        (() => {\n          console.log('none');\n        }),\n      resumePauseAudioStreams:\n        this.resumePauseAudioStreams?.resumePauseAudioStreams ||\n        (() => {\n          console.log('none');\n        }),\n      processConsumerTransportsAudio:\n        this.processConsumerTransportsAudio?.processConsumerTransportsAudio ||\n        (() => {\n          console.log('none');\n        }),\n      checkPermission:\n        this.checkPermission?.checkPermission ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessVideo:\n        this.streamSuccessVideo?.streamSuccessVideo ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessAudio:\n        this.streamSuccessAudio?.streamSuccessAudio ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessScreen:\n        this.streamSuccessScreen?.streamSuccessScreen ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessAudioSwitch:\n        this.streamSuccessAudioSwitch?.streamSuccessAudioSwitch ||\n        (() => {\n          console.log('none');\n        }),\n      clickVideo:\n        this.clickVideo?.clickVideo ||\n        (() => {\n          console.log('none');\n        }),\n      clickAudio:\n        this.clickAudio?.clickAudio ||\n        (() => {\n          console.log('none');\n        }),\n      clickScreenShare:\n        this.clickScreenShare?.clickScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      requestPermissionCamera:\n        this.requestPermissionCamera ||\n        (() => {\n          console.log('none');\n        }),\n      requestPermissionAudio:\n        this.requestPermissionAudio ||\n        (() => {\n          console.log('none');\n        }),\n    };\n  };\n\n  validated = new BehaviorSubject<boolean>(false);\n  localUIMode = new BehaviorSubject<boolean>(false);\n  socket = new BehaviorSubject<Socket>({} as Socket);\n  roomData = new BehaviorSubject<ResponseJoinRoom | null>(null);\n  device = new BehaviorSubject<Device | null>(null);\n  apiKey = new BehaviorSubject<string>(\n    '021193742c935c4434d25d7592362575fcb6d6590b6c38334a2f3e06c83af758',\n  );\n  apiUserName = new BehaviorSubject<string>('abcdefgh');\n  apiToken = new BehaviorSubject<string>('');\n  link = new BehaviorSubject<string>('');\n\n  roomName = new BehaviorSubject<string>('');\n  member = new BehaviorSubject<string>('');\n  adminPasscode = new BehaviorSubject<string>('');\n  islevel = new BehaviorSubject<string>('1');\n  coHost = new BehaviorSubject<string>('No coHost');\n  coHostResponsibility = new BehaviorSubject<CoHostResponsibility[]>([\n    { name: 'participants', value: false, dedicated: false },\n    { name: 'media', value: false, dedicated: false },\n    { name: 'waiting', value: false, dedicated: false },\n    { name: 'chat', value: false, dedicated: false },\n  ]);\n  youAreCoHost = new BehaviorSubject<boolean>(false);\n  youAreHost = new BehaviorSubject<boolean>(false);\n  confirmedToRecord = new BehaviorSubject<boolean>(false);\n  meetingDisplayType = new BehaviorSubject<string>('media');\n  meetingVideoOptimized = new BehaviorSubject<boolean>(false);\n  eventType = new BehaviorSubject<EventType>('conference');\n  participants = new BehaviorSubject<Participant[]>([]);\n  filteredParticipants = new BehaviorSubject<Participant[]>([]);\n  participantsCounter = new BehaviorSubject<number>(0);\n  participantsFilter = new BehaviorSubject<string>('');\n\n  consume_sockets = new BehaviorSubject<ConsumeSocket[]>([]);\n  rtpCapabilities = new BehaviorSubject<RtpCapabilities | null>(null);\n  roomRecvIPs = new BehaviorSubject<string[]>([]);\n  meetingRoomParams = new BehaviorSubject<MeetingRoomParams | null>(null);\n  itemPageLimit = new BehaviorSubject<number>(4);\n  audioOnlyRoom = new BehaviorSubject<boolean>(false);\n  addForBasic = new BehaviorSubject<boolean>(false);\n  screenPageLimit = new BehaviorSubject<number>(4);\n  shareScreenStarted = new BehaviorSubject<boolean>(false);\n  shared = new BehaviorSubject<boolean>(false);\n  targetOrientation = new BehaviorSubject<string>('landscape');\n  targetResolution = new BehaviorSubject<string>('sd');\n  targetResolutionHost = new BehaviorSubject<string>('sd');\n  vidCons = new BehaviorSubject<VidCons>({ width: 640, height: 360 });\n  frameRate = new BehaviorSubject<number>(10);\n  hParams = new BehaviorSubject<HParamsType>({} as HParamsType);\n  vParams = new BehaviorSubject<VParamsType>({} as VParamsType);\n  screenParams = new BehaviorSubject<ScreenParamsType>({} as ScreenParamsType);\n  aParams = new BehaviorSubject<AParamsType>({} as AParamsType);\n\n  recordingAudioPausesLimit = new BehaviorSubject<number>(0);\n  recordingAudioPausesCount = new BehaviorSubject<number>(0);\n  recordingAudioSupport = new BehaviorSubject<boolean>(false);\n  recordingAudioPeopleLimit = new BehaviorSubject<number>(0);\n  recordingAudioParticipantsTimeLimit = new BehaviorSubject<number>(0);\n  recordingVideoPausesCount = new BehaviorSubject<number>(0);\n  recordingVideoPausesLimit = new BehaviorSubject<number>(0);\n  recordingVideoSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoPeopleLimit = new BehaviorSubject<number>(0);\n  recordingVideoParticipantsTimeLimit = new BehaviorSubject<number>(0);\n  recordingAllParticipantsSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoParticipantsSupport = new BehaviorSubject<boolean>(false);\n  recordingAllParticipantsFullRoomSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoParticipantsFullRoomSupport = new BehaviorSubject<boolean>(false);\n  recordingPreferredOrientation = new BehaviorSubject<string>('landscape');\n  recordingSupportForOtherOrientation = new BehaviorSubject<boolean>(false);\n  recordingMultiFormatsSupport = new BehaviorSubject<boolean>(false);\n\n  userRecordingParams = new BehaviorSubject<UserRecordingParams>({\n    mainSpecs: {\n      mediaOptions: 'video', // 'audio', 'video'\n      audioOptions: 'all', // 'all', 'onScreen', 'host'\n      videoOptions: 'all', // 'all', 'mainScreen'\n      videoType: 'fullDisplay', // 'all', 'bestDisplay', 'fullDisplay'\n      videoOptimized: false, // true, false\n      recordingDisplayType: 'media', // 'media', 'video', 'all'\n      addHLS: false, // true, false\n    },\n    dispSpecs: {\n      nameTags: true, // true, false\n      backgroundColor: '#000000', // '#000000', '#ffffff'\n      nameTagsColor: '#ffffff', // '#000000', '#ffffff'\n      orientationVideo: 'portrait', // 'landscape', 'portrait', 'all'\n    },\n  });\n\n  canRecord = new BehaviorSubject<boolean>(false);\n  startReport = new BehaviorSubject<boolean>(false);\n  endReport = new BehaviorSubject<boolean>(false);\n  recordTimerInterval = new BehaviorSubject<NodeJS.Timeout | null>(null);\n  recordStartTime = new BehaviorSubject<number>(0);\n  recordElapsedTime = new BehaviorSubject<number>(0);\n  isTimerRunning = new BehaviorSubject<boolean>(false);\n  canPauseResume = new BehaviorSubject<boolean>(false);\n  recordChangeSeconds = new BehaviorSubject<number>(15000);\n  pauseLimit = new BehaviorSubject<number>(0);\n  pauseRecordCount = new BehaviorSubject<number>(0);\n  canLaunchRecord = new BehaviorSubject<boolean>(true);\n  stopLaunchRecord = new BehaviorSubject<boolean>(false);\n\n  participantsAll = new BehaviorSubject<Participant[]>([]);\n\n  firstAll = new BehaviorSubject<boolean>(false);\n  updateMainWindow = new BehaviorSubject<boolean>(false);\n  first_round = new BehaviorSubject<boolean>(false);\n  landScaped = new BehaviorSubject<boolean>(false);\n  lock_screen = new BehaviorSubject<boolean>(false);\n  screenId = new BehaviorSubject<string>('');\n  allVideoStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  newLimitedStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  newLimitedStreamsIDs = new BehaviorSubject<string[]>([]);\n  activeSounds = new BehaviorSubject<string[]>([]);\n  screenShareIDStream = new BehaviorSubject<string>('');\n  screenShareNameStream = new BehaviorSubject<string>('');\n  adminIDStream = new BehaviorSubject<string>('');\n  adminNameStream = new BehaviorSubject<string>('');\n  youYouStream = new BehaviorSubject<(Participant | Stream)[]>([]);\n  youYouStreamIDs = new BehaviorSubject<string[]>([]);\n  localStream = new BehaviorSubject<MediaStream | null>(null);\n  recordStarted = new BehaviorSubject<boolean>(false);\n  recordResumed = new BehaviorSubject<boolean>(false);\n  recordPaused = new BehaviorSubject<boolean>(false);\n  recordStopped = new BehaviorSubject<boolean>(false);\n  adminRestrictSetting = new BehaviorSubject<boolean>(false);\n  videoRequestState = new BehaviorSubject<string | null>(null);\n  videoRequestTime = new BehaviorSubject<number>(0);\n  videoAction = new BehaviorSubject<boolean>(false);\n  localStreamVideo = new BehaviorSubject<MediaStream | null>(null);\n  userDefaultVideoInputDevice = new BehaviorSubject<string>('');\n  currentFacingMode = new BehaviorSubject<string>('user');\n  prevFacingMode = new BehaviorSubject<string>('user');\n  defVideoID = new BehaviorSubject<string>('');\n  allowed = new BehaviorSubject<boolean>(false);\n  dispActiveNames = new BehaviorSubject<string[]>([]);\n  p_dispActiveNames = new BehaviorSubject<string[]>([]);\n  activeNames = new BehaviorSubject<string[]>([]);\n  prevActiveNames = new BehaviorSubject<string[]>([]);\n  p_activeNames = new BehaviorSubject<string[]>([]);\n  membersReceived = new BehaviorSubject<boolean>(false);\n  deferScreenReceived = new BehaviorSubject<boolean>(false);\n  hostFirstSwitch = new BehaviorSubject<boolean>(false);\n  micAction = new BehaviorSubject<boolean>(false);\n  screenAction = new BehaviorSubject<boolean>(false);\n  chatAction = new BehaviorSubject<boolean>(false);\n  audioRequestState = new BehaviorSubject<string | null>(null);\n  screenRequestState = new BehaviorSubject<string | null>(null);\n  chatRequestState = new BehaviorSubject<string | null>(null);\n  audioRequestTime = new BehaviorSubject<number>(0);\n  screenRequestTime = new BehaviorSubject<number>(0);\n  chatRequestTime = new BehaviorSubject<number>(0);\n  updateRequestIntervalSeconds = new BehaviorSubject<number>(240);\n  oldSoundIds = new BehaviorSubject<string[]>([]);\n  hostLabel = new BehaviorSubject<string>('Host');\n  mainScreenFilled = new BehaviorSubject<boolean>(false);\n  localStreamScreen = new BehaviorSubject<MediaStream | null>(null);\n  screenAlreadyOn = new BehaviorSubject<boolean>(false);\n  chatAlreadyOn = new BehaviorSubject<boolean>(false);\n  redirectURL = new BehaviorSubject<string>('');\n  oldAllStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  adminVidID = new BehaviorSubject<string>('');\n  streamNames = new BehaviorSubject<Stream[]>([]);\n  non_alVideoStreams = new BehaviorSubject<Participant[]>([]);\n  sortAudioLoudness = new BehaviorSubject<boolean>(false);\n  audioDecibels = new BehaviorSubject<AudioDecibels[]>([]);\n  mixed_alVideoStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  non_alVideoStreams_muted = new BehaviorSubject<Participant[]>([]);\n  paginatedStreams = new BehaviorSubject<(Participant | Stream)[][]>([]);\n  localStreamAudio = new BehaviorSubject<MediaStream | null>(null);\n  defAudioID = new BehaviorSubject<string>('');\n  userDefaultAudioInputDevice = new BehaviorSubject<string>('');\n  userDefaultAudioOutputDevice = new BehaviorSubject<string>('');\n  prevAudioInputDevice = new BehaviorSubject<string>('');\n  prevVideoInputDevice = new BehaviorSubject<string>('');\n  audioPaused = new BehaviorSubject<boolean>(false);\n  mainScreenPerson = new BehaviorSubject<string>('');\n  adminOnMainScreen = new BehaviorSubject<boolean>(false);\n  screenStates = new BehaviorSubject<ScreenState[]>([\n    {\n      mainScreenPerson: '',\n      mainScreenProducerId: '',\n      mainScreenFilled: false,\n      adminOnMainScreen: false,\n    },\n  ]);\n  prevScreenStates = new BehaviorSubject<ScreenState[]>([\n    {\n      mainScreenPerson: '',\n      mainScreenProducerId: '',\n      mainScreenFilled: false,\n      adminOnMainScreen: false,\n    },\n  ]);\n  updateDateState = new BehaviorSubject<number | null>(null);\n  lastUpdate = new BehaviorSubject<number | null>(null);\n  nForReadjustRecord = new BehaviorSubject<number>(0);\n  fixedPageLimit = new BehaviorSubject<number>(4);\n  removeAltGrid = new BehaviorSubject<boolean>(false);\n  nForReadjust = new BehaviorSubject<number>(0);\n  reorderInterval = new BehaviorSubject<number>(30000);\n  fastReorderInterval = new BehaviorSubject<number>(10000);\n  lastReorderTime = new BehaviorSubject<number>(0);\n  audStreamNames = new BehaviorSubject<Stream[]>([]);\n  currentUserPage = new BehaviorSubject<number>(0);\n  mainHeightWidth = new BehaviorSubject<number>(\n    this.eventType.value == 'webinar' ? 67 : this.eventType.value == 'broadcast' ? 100 : 0,\n  );\n  prevMainHeightWidth = new BehaviorSubject<number>(this.mainHeightWidth.value);\n  prevDoPaginate = new BehaviorSubject<boolean>(false);\n  doPaginate = new BehaviorSubject<boolean>(false);\n  shareEnded = new BehaviorSubject<boolean>(false);\n  lStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  chatRefStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  controlHeight = new BehaviorSubject<number>(\n    this.eventType.value === 'webinar' || this.eventType.value === 'conference' ? 0 : 0.06,\n  );\n  isWideScreen = new BehaviorSubject<boolean>(false);\n  isMediumScreen = new BehaviorSubject<boolean>(false);\n  isSmallScreen = new BehaviorSubject<boolean>(false);\n  addGrid = new BehaviorSubject<boolean>(false);\n  addAltGrid = new BehaviorSubject<boolean>(false);\n  gridRows = new BehaviorSubject<number>(0);\n  gridCols = new BehaviorSubject<number>(0);\n  altGridRows = new BehaviorSubject<number>(0);\n  altGridCols = new BehaviorSubject<number>(0);\n  numberPages = new BehaviorSubject<number>(0);\n  currentStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  showMiniView = new BehaviorSubject<boolean>(false);\n  nStream = new BehaviorSubject<MediaStream | null>(null);\n  defer_receive = new BehaviorSubject<boolean>(false);\n  allAudioStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  remoteScreenStream = new BehaviorSubject<Stream[]>([]);\n  screenProducer = new BehaviorSubject<Producer | null>(null);\n  gotAllVids = new BehaviorSubject<boolean>(false);\n  paginationHeightWidth = new BehaviorSubject<number>(40);\n  paginationDirection = new BehaviorSubject<'horizontal' | 'vertical'>('horizontal');\n  gridSizes = new BehaviorSubject<GridSizes>({\n    gridWidth: 0,\n    gridHeight: 0,\n    altGridWidth: 0,\n    altGridHeight: 0,\n  });\n  screenForceFullDisplay = new BehaviorSubject<boolean>(false);\n  mainGridStream = new BehaviorSubject<CustomMediaComponent[]>([]);\n  otherGridStreams = new BehaviorSubject<CustomMediaComponent[][]>([]);\n  audioOnlyStreams = new BehaviorSubject<CustomMediaComponent[]>([]);\n  videoInputs = new BehaviorSubject<MediaDeviceInfo[]>([]);\n  audioInputs = new BehaviorSubject<MediaDeviceInfo[]>([]);\n  meetingProgressTime = new BehaviorSubject<string>('00:00:00');\n  meetingElapsedTime = new BehaviorSubject<number>(0);\n  ref_participants = new BehaviorSubject<Participant[]>([]);\n\n  updateValidated = (value: boolean) => {\n    this.validated.next(value);\n  };\n\n  updateSocket = (value: Socket) => {\n    this.socket.next(value);\n  };\n\n  updateDevice = (value: Device | null) => {\n    this.device.next(value);\n  };\n\n  updateRoomData = (value: ResponseJoinRoom | null) => {\n    this.roomData.next(value);\n  };\n\n  updateApiKey = (value: string) => {\n    this.apiKey.next(value);\n  };\n\n  updateApiUserName = (value: string) => {\n    this.apiUserName.next(value);\n  };\n\n  updateApiToken = (value: string) => {\n    this.apiToken.next(value);\n  };\n\n  updateLink = (value: string) => {\n    this.link.next(value);\n  };\n\n  updateRoomName = (value: string) => {\n    this.roomName.next(value);\n  };\n\n  updateMember = (value: string) => {\n    this.member.next(value);\n  };\n\n  updateAdminPasscode = (value: string) => {\n    this.adminPasscode.next(value);\n  };\n\n  updateIslevel = (value: string) => {\n    this.islevel.next(value);\n  };\n\n  updateCoHost = (value: string) => {\n    this.coHost.next(value);\n  };\n\n  updateCoHostResponsibility = (value: CoHostResponsibility[]) => {\n    this.coHostResponsibility.next(value);\n  };\n\n  updateYouAreCoHost = (value: boolean) => {\n    this.youAreCoHost.next(value);\n  };\n\n  updateYouAreHost = (value: boolean) => {\n    this.youAreHost.next(value);\n  };\n\n  updateConfirmedToRecord = (value: boolean) => {\n    this.confirmedToRecord.next(value);\n  };\n\n  updateMeetingDisplayType = (value: string) => {\n    this.meetingDisplayType.next(value);\n  };\n\n  updateMeetingVideoOptimized = (value: boolean) => {\n    this.meetingVideoOptimized.next(value);\n  };\n\n  updateEventType = (value: EventType) => {\n    this.eventType.next(value);\n    if (value != 'none') {\n      try {\n        setTimeout(() => {\n          this.handleResize();\n        }, 2000);\n      } catch {\n        /* handle error */\n      }\n    }\n  };\n\n  updateParticipants = (value: Participant[]) => {\n    this.participants.next(value);\n    this.participantsCounter.next(value.length);\n    this.filteredParticipants.next(this.participants.value);\n  };\n\n  updateFilteredParticipants = (value: Participant[]) => {\n    this.filteredParticipants.next(value);\n  };\n\n  updateParticipantsCounter = (value: number) => {\n    this.participantsCounter.next(value);\n  };\n\n  updateParticipantsFilter = (value: string) => {\n    this.participantsFilter.next(value);\n  };\n\n  updateConsume_sockets = (value: ConsumeSocket[]) => {\n    this.consume_sockets.next(value);\n  };\n\n  updateRtpCapabilities = (value: RtpCapabilities | null) => {\n    this.rtpCapabilities.next(value);\n  };\n\n  updateRoomRecvIPs = (value: string[]) => {\n    this.roomRecvIPs.next(value);\n  };\n\n  updateMeetingRoomParams = (value: MeetingRoomParams | null) => {\n    this.meetingRoomParams.next(value);\n  };\n\n  updateItemPageLimit = (value: number) => {\n    this.itemPageLimit.next(value);\n  };\n\n  updateAudioOnlyRoom = (value: boolean) => {\n    this.audioOnlyRoom.next(value);\n  };\n\n  updateAddForBasic = (value: boolean) => {\n    this.addForBasic.next(value);\n  };\n\n  updateScreenPageLimit = (value: number) => {\n    this.screenPageLimit.next(value);\n  };\n\n  updateShareScreenStarted = (value: boolean) => {\n    this.shareScreenStarted.next(value);\n  };\n\n  updateShared = (value: boolean) => {\n    this.shared.next(value);\n    this.screenShareActive.next(value);\n    if (value) {\n      setTimeout(async () => {\n        window.dispatchEvent(new Event('resize'));\n      }, 2000);\n    }\n  };\n\n  updateTargetOrientation = (value: string) => {\n    this.targetOrientation.next(value);\n  };\n\n  updateTargetResolution = (value: string) => {\n    this.targetResolution.next(value);\n  };\n\n  updateTargetResolutionHost = (value: string) => {\n    this.targetResolutionHost.next(value);\n  };\n\n  updateVidCons = (value: VidCons) => {\n    this.vidCons.next(value);\n  };\n\n  updateFrameRate = (value: number) => {\n    this.frameRate.next(value);\n  };\n\n  updateHParams = (value: HParamsType) => {\n    this.hParams.next(value);\n  };\n\n  updateVParams = (value: VParamsType) => {\n    this.vParams.next(value);\n  };\n\n  updateScreenParams = (value: ScreenParamsType) => {\n    this.screenParams.next(value);\n  };\n\n  updateAParams = (value: AParamsType) => {\n    this.aParams.next(value);\n  };\n\n  updateRecordingAudioPausesLimit = (value: number) => {\n    this.recordingAudioPausesLimit.next(value);\n  };\n\n  updateRecordingAudioPausesCount = (value: number) => {\n    this.recordingAudioPausesCount.next(value);\n  };\n\n  updateRecordingAudioSupport = (value: boolean) => {\n    this.recordingAudioSupport.next(value);\n  };\n\n  updateRecordingAudioPeopleLimit = (value: number) => {\n    this.recordingAudioPeopleLimit.next(value);\n  };\n\n  updateRecordingAudioParticipantsTimeLimit = (value: number) => {\n    this.recordingAudioParticipantsTimeLimit.next(value);\n  };\n\n  updateRecordingVideoPausesCount = (value: number) => {\n    this.recordingVideoPausesCount.next(value);\n  };\n\n  updateRecordingVideoPausesLimit = (value: number) => {\n    this.recordingVideoPausesLimit.next(value);\n  };\n\n  updateRecordingVideoSupport = (value: boolean) => {\n    this.recordingVideoSupport.next(value);\n  };\n\n  updateRecordingVideoPeopleLimit = (value: number) => {\n    this.recordingVideoPeopleLimit.next(value);\n  };\n\n  updateRecordingVideoParticipantsTimeLimit = (value: number) => {\n    this.recordingVideoParticipantsTimeLimit.next(value);\n  };\n\n  updateRecordingAllParticipantsSupport = (value: boolean) => {\n    this.recordingAllParticipantsSupport.next(value);\n  };\n\n  updateRecordingVideoParticipantsSupport = (value: boolean) => {\n    this.recordingVideoParticipantsSupport.next(value);\n  };\n\n  updateRecordingAllParticipantsFullRoomSupport = (value: boolean) => {\n    this.recordingAllParticipantsFullRoomSupport.next(value);\n  };\n\n  updateRecordingVideoParticipantsFullRoomSupport = (value: boolean) => {\n    this.recordingVideoParticipantsFullRoomSupport.next(value);\n  };\n\n  updateRecordingPreferredOrientation = (value: string) => {\n    this.recordingPreferredOrientation.next(value);\n  };\n\n  updateRecordingSupportForOtherOrientation = (value: boolean) => {\n    this.recordingSupportForOtherOrientation.next(value);\n  };\n\n  updateRecordingMultiFormatsSupport = (value: boolean) => {\n    this.recordingMultiFormatsSupport.next(value);\n  };\n\n  updateUserRecordingParams = (value: UserRecordingParams) => {\n    this.userRecordingParams.next(value);\n  };\n\n  updateCanRecord = (value: boolean) => {\n    this.canRecord.next(value);\n  };\n\n  updateStartReport = (value: boolean) => {\n    this.startReport.next(value);\n  };\n\n  updateEndReport = (value: boolean) => {\n    this.endReport.next(value);\n  };\n\n  updateRecordTimerInterval = (value: NodeJS.Timeout | null) => {\n    this.recordTimerInterval.next(value);\n  };\n\n  updateRecordStartTime = (value: number) => {\n    this.recordStartTime.next(value);\n  };\n\n  updateRecordElapsedTime = (value: number) => {\n    this.recordElapsedTime.next(value);\n  };\n\n  updateIsTimerRunning = (value: boolean) => {\n    this.isTimerRunning.next(value);\n  };\n\n  updateCanPauseResume = (value: boolean) => {\n    this.canPauseResume.next(value);\n  };\n\n  updateRecordChangeSeconds = (value: number) => {\n    this.recordChangeSeconds.next(value);\n  };\n\n  updatePauseLimit = (value: number) => {\n    this.pauseLimit.next(value);\n  };\n\n  updatePauseRecordCount = (value: number) => {\n    this.pauseRecordCount.next(value);\n  };\n\n  updateCanLaunchRecord = (value: boolean) => {\n    this.canLaunchRecord.next(value);\n  };\n\n  updateStopLaunchRecord = (value: boolean) => {\n    this.stopLaunchRecord.next(value);\n  };\n\n  updateParticipantsAll = (value: Participant[]) => {\n    this.participantsAll.next(value);\n  };\n\n  updateFirstAll = (value: boolean) => {\n    this.firstAll.next(value);\n  };\n\n  updateUpdateMainWindow = (value: boolean) => {\n    this.updateMainWindow.next(value);\n  };\n\n  updateFirst_round = (value: boolean) => {\n    this.first_round.next(value);\n  };\n\n  updateLandScaped = (value: boolean) => {\n    this.landScaped.next(value);\n  };\n\n  updateLock_screen = (value: boolean) => {\n    this.lock_screen.next(value);\n  };\n\n  updateScreenId = (value: string) => {\n    this.screenId.next(value);\n  };\n\n  updateAllVideoStreams = (value: (Participant | Stream)[]) => {\n    this.allVideoStreams.next(value);\n  };\n\n  updateNewLimitedStreams = (value: (Participant | Stream)[]) => {\n    this.newLimitedStreams.next(value);\n  };\n\n  updateNewLimitedStreamsIDs = (value: string[]) => {\n    this.newLimitedStreamsIDs.next(value);\n  };\n\n  updateActiveSounds = (value: string[]) => {\n    this.activeSounds.next(value);\n  };\n\n  updateScreenShareIDStream = (value: string) => {\n    this.screenShareIDStream.next(value);\n  };\n\n  updateScreenShareNameStream = (value: string) => {\n    this.screenShareNameStream.next(value);\n  };\n\n  updateAdminIDStream = (value: string) => {\n    this.adminIDStream.next(value);\n  };\n\n  updateAdminNameStream = (value: string) => {\n    this.adminNameStream.next(value);\n  };\n\n  updateYouYouStream = (value: (Participant | Stream)[]) => {\n    this.youYouStream.next(value);\n  };\n\n  updateYouYouStreamIDs = (value: string[]) => {\n    this.youYouStreamIDs.next(value);\n  };\n\n  updateLocalStream = (value: MediaStream | null) => {\n    this.localStream.next(value);\n  };\n\n  updateRecordStarted = (value: boolean) => {\n    this.recordStarted.next(value);\n  };\n\n  updateRecordResumed = (value: boolean) => {\n    this.recordResumed.next(value);\n  };\n\n  updateRecordPaused = (value: boolean) => {\n    this.recordPaused.next(value);\n  };\n\n  updateRecordStopped = (value: boolean) => {\n    this.recordStopped.next(value);\n  };\n\n  updateAdminRestrictSetting = (value: boolean) => {\n    this.adminRestrictSetting.next(value);\n  };\n\n  updateVideoRequestState = (value: string | null) => {\n    this.videoRequestState.next(value);\n  };\n\n  updateVideoRequestTime = (value: number) => {\n    this.videoRequestTime.next(value);\n  };\n\n  updateVideoAction = (value: boolean) => {\n    this.videoAction.next(value);\n  };\n\n  updateLocalStreamVideo = (value: MediaStream | null) => {\n    this.localStreamVideo.next(value);\n  };\n\n  updateUserDefaultVideoInputDevice = (value: string) => {\n    this.userDefaultVideoInputDevice.next(value);\n  };\n\n  updateCurrentFacingMode = (value: string) => {\n    this.currentFacingMode.next(value);\n  };\n\n  updatePrevFacingMode = (value: string) => {\n    this.prevFacingMode.next(value);\n  };\n\n  updateDefVideoID = (value: string) => {\n    this.defVideoID.next(value);\n  };\n\n  updateAllowed = (value: boolean) => {\n    this.allowed.next(value);\n  };\n\n  updateDispActiveNames = (value: string[]) => {\n    this.dispActiveNames.next(value);\n  };\n\n  updateP_dispActiveNames = (value: string[]) => {\n    this.p_dispActiveNames.next(value);\n  };\n\n  updateActiveNames = (value: string[]) => {\n    this.activeNames.next(value);\n  };\n\n  updatePrevActiveNames = (value: string[]) => {\n    this.prevActiveNames.next(value);\n  };\n\n  updateP_activeNames = (value: string[]) => {\n    this.p_activeNames.next(value);\n  };\n\n  updateMembersReceived = (value: boolean) => {\n    this.membersReceived.next(value);\n  };\n\n  updateDeferScreenReceived = (value: boolean) => {\n    this.deferScreenReceived.next(value);\n  };\n\n  updateHostFirstSwitch = (value: boolean) => {\n    this.hostFirstSwitch.next(value);\n  };\n\n  updateMicAction = (value: boolean) => {\n    this.micAction.next(value);\n  };\n\n  updateScreenAction = (value: boolean) => {\n    this.screenAction.next(value);\n  };\n\n  updateChatAction = (value: boolean) => {\n    this.chatAction.next(value);\n  };\n\n  updateAudioRequestState = (value: string | null) => {\n    this.audioRequestState.next(value);\n  };\n\n  updateScreenRequestState = (value: string | null) => {\n    this.screenRequestState.next(value);\n  };\n\n  updateChatRequestState = (value: string | null) => {\n    this.chatRequestState.next(value);\n  };\n\n  updateAudioRequestTime = (value: number) => {\n    this.audioRequestTime.next(value);\n  };\n\n  updateScreenRequestTime = (value: number) => {\n    this.screenRequestTime.next(value);\n  };\n\n  updateChatRequestTime = (value: number) => {\n    this.chatRequestTime.next(value);\n  };\n\n  updateOldSoundIds = (value: string[]) => {\n    this.oldSoundIds.next(value);\n  };\n\n  updateHostLabel = (value: string) => {\n    this.hostLabel.next(value);\n  };\n\n  updateMainScreenFilled = (value: boolean) => {\n    this.mainScreenFilled.next(value);\n  };\n\n  updateLocalStreamScreen = (value: MediaStream | null) => {\n    this.localStreamScreen.next(value);\n  };\n\n  updateScreenAlreadyOn = (value: boolean) => {\n    this.screenAlreadyOn.next(value);\n  };\n\n  updateChatAlreadyOn = (value: boolean) => {\n    this.chatAlreadyOn.next(value);\n  };\n\n  updateRedirectURL = (value: string) => {\n    this.redirectURL.next(value);\n  };\n\n  updateOldAllStreams = (value: (Participant | Stream)[]) => {\n    this.oldAllStreams.next(value);\n  };\n\n  updateAdminVidID = (value: string) => {\n    this.adminVidID.next(value);\n  };\n\n  updateStreamNames = (value: Stream[]) => {\n    this.streamNames.next(value);\n  };\n\n  updateNon_alVideoStreams = (value: Participant[]) => {\n    this.non_alVideoStreams.next(value);\n  };\n\n  updateSortAudioLoudness = (value: boolean) => {\n    this.sortAudioLoudness.next(value);\n  };\n\n  updateAudioDecibels = (value: AudioDecibels[]) => {\n    this.audioDecibels.next(value);\n  };\n\n  updateMixed_alVideoStreams = (value: (Participant | Stream)[]) => {\n    this.mixed_alVideoStreams.next(value);\n  };\n\n  updateNon_alVideoStreams_muted = (value: Participant[]) => {\n    this.non_alVideoStreams_muted.next(value);\n  };\n\n  updatePaginatedStreams = (value: (Participant | Stream)[][]) => {\n    this.paginatedStreams.next(value);\n  };\n\n  updateLocalStreamAudio = (value: MediaStream | null) => {\n    this.localStreamAudio.next(value);\n  };\n\n  updateDefAudioID = (value: string) => {\n    this.defAudioID.next(value);\n  };\n\n  updateUserDefaultAudioInputDevice = (value: string) => {\n    this.userDefaultAudioInputDevice.next(value);\n  };\n\n  updateUserDefaultAudioOutputDevice = (value: string) => {\n    this.userDefaultAudioOutputDevice.next(value);\n  };\n\n  updatePrevAudioInputDevice = (value: string) => {\n    this.prevAudioInputDevice.next(value);\n  };\n\n  updatePrevVideoInputDevice = (value: string) => {\n    this.prevVideoInputDevice.next(value);\n  };\n\n  updateAudioPaused = (value: boolean) => {\n    this.audioPaused.next(value);\n  };\n\n  updateMainScreenPerson = (value: string) => {\n    this.mainScreenPerson.next(value);\n  };\n\n  updateAdminOnMainScreen = (value: boolean) => {\n    this.adminOnMainScreen.next(value);\n  };\n\n  updateScreenStates = (value: ScreenState[]) => {\n    this.screenStates.next(value);\n  };\n\n  updatePrevScreenStates = (value: ScreenState[]) => {\n    this.prevScreenStates.next(value);\n  };\n\n  updateUpdateDateState = (value: number | null) => {\n    this.updateDateState.next(value);\n  };\n\n  updateLastUpdate = (value: number | null) => {\n    this.lastUpdate.next(value);\n  };\n\n  updateNForReadjustRecord = (value: number) => {\n    this.nForReadjustRecord.next(value);\n  };\n\n  updateFixedPageLimit = (value: number) => {\n    this.fixedPageLimit.next(value);\n  };\n\n  updateRemoveAltGrid = (value: boolean) => {\n    this.removeAltGrid.next(value);\n  };\n\n  updateNForReadjust = (value: number) => {\n    this.nForReadjust.next(value);\n  };\n\n  updateLastReorderTime = (value: number) => {\n    this.lastReorderTime.next(value);\n  };\n\n  updateAudStreamNames = (value: Stream[]) => {\n    this.audStreamNames.next(value);\n  };\n\n  updateCurrentUserPage = (value: number) => {\n    this.currentUserPage.next(value);\n  };\n\n  updateMainHeightWidth = (value: number) => {\n    this.mainHeightWidth.next(value);\n  };\n\n  updatePrevMainHeightWidth = (value: number) => {\n    this.prevMainHeightWidth.next(value);\n  };\n\n  updatePrevDoPaginate = (value: boolean) => {\n    this.prevDoPaginate.next(value);\n  };\n\n  updateDoPaginate = (value: boolean) => {\n    this.doPaginate.next(value);\n  };\n\n  updateShareEnded = (value: boolean) => {\n    this.shareEnded.next(value);\n  };\n\n  updateLStreams = (value: (Participant | Stream)[]) => {\n    this.lStreams.next(value);\n  };\n\n  updateChatRefStreams = (value: (Participant | Stream)[]) => {\n    this.chatRefStreams.next(value);\n  };\n\n  updateControlHeight = (value: number) => {\n    this.controlHeight.next(value);\n  };\n\n  updateIsWideScreen = (value: boolean) => {\n    this.isWideScreen.next(value);\n  };\n\n  updateIsMediumScreen = (value: boolean) => {\n    this.isMediumScreen.next(value);\n  };\n\n  updateIsSmallScreen = (value: boolean) => {\n    this.isSmallScreen.next(value);\n  };\n\n  updateAddGrid = (value: boolean) => {\n    this.addGrid.next(value);\n  };\n\n  updateAddAltGrid = (value: boolean) => {\n    this.addAltGrid.next(value);\n  };\n\n  updateGridRows = (value: number) => {\n    this.gridRows.next(value);\n  };\n\n  updateGridCols = (value: number) => {\n    this.gridCols.next(value);\n  };\n\n  updateAltGridRows = (value: number) => {\n    this.altGridRows.next(value);\n  };\n\n  updateAltGridCols = (value: number) => {\n    this.altGridCols.next(value);\n  };\n\n  updateNumberPages = (value: number) => {\n    this.numberPages.next(value);\n  };\n\n  updateCurrentStreams = (value: (Participant | Stream)[]) => {\n    this.currentStreams.next(value);\n  };\n\n  updateShowMiniView = (value: boolean) => {\n    this.showMiniView.next(value);\n  };\n\n  updateNStream = (value: MediaStream | null) => {\n    this.nStream.next(value);\n  };\n\n  updateDefer_receive = (value: boolean) => {\n    this.defer_receive.next(value);\n  };\n\n  updateAllAudioStreams = (value: (Participant | Stream)[]) => {\n    this.allAudioStreams.next(value);\n  };\n\n  updateRemoteScreenStream = (value: Stream[]) => {\n    this.remoteScreenStream.next(value);\n  };\n\n  updateScreenProducer = (value: Producer | null) => {\n    this.screenProducer.next(value);\n  };\n\n  updateGotAllVids = (value: boolean) => {\n    this.gotAllVids.next(value);\n  };\n\n  updatePaginationHeightWidth = (value: number) => {\n    this.paginationHeightWidth.next(value);\n  };\n\n  updatePaginationDirection = (value: 'horizontal' | 'vertical') => {\n    this.paginationDirection.next(value);\n  };\n\n  updateGridSizes = (value: GridSizes) => {\n    this.gridSizes.next(value);\n  };\n\n  updateScreenForceFullDisplay = (value: boolean) => {\n    this.screenForceFullDisplay.next(value);\n  };\n\n  updateMainGridStream = (value: CustomMediaComponent[]) => {\n    this.mainGridStream.next(value);\n  };\n\n  updateOtherGridStreams = (value: CustomMediaComponent[][]) => {\n    this.otherGridStreams.next(value);\n  };\n\n  updateAudioOnlyStreams = (value: CustomMediaComponent[]) => {\n    this.audioOnlyStreams.next(value);\n  };\n\n  updateVideoInputs = (value: MediaDeviceInfo[]) => {\n    this.videoInputs.next(value);\n  };\n\n  updateAudioInputs = (value: MediaDeviceInfo[]) => {\n    this.audioInputs.next(value);\n  };\n\n  updateMeetingProgressTime = (value: string) => {\n    this.meetingProgressTime.next(value);\n  };\n\n  updateMeetingElapsedTime = (value: number) => {\n    this.meetingElapsedTime.next(value);\n  };\n\n  updateRef_participants = (value: Participant[]) => {\n    this.ref_participants.next(value);\n  };\n\n  // Messages\n  messages = new BehaviorSubject<Message[]>([]);\n  startDirectMessage = new BehaviorSubject<boolean>(false);\n  directMessageDetails = new BehaviorSubject<Participant | null>(null);\n  showMessagesBadge = new BehaviorSubject<boolean>(false);\n\n  // Event Settings\n  audioSetting = new BehaviorSubject<string>('allow');\n  videoSetting = new BehaviorSubject<string>('allow');\n  screenshareSetting = new BehaviorSubject<string>('allow');\n  chatSetting = new BehaviorSubject<string>('allow');\n\n  // Display Settings\n  displayOption = new BehaviorSubject<string>('media');\n  autoWave = new BehaviorSubject<boolean>(true);\n  forceFullDisplay = new BehaviorSubject<boolean>(true);\n  prevForceFullDisplay = new BehaviorSubject<boolean>(false);\n  prevMeetingDisplayType = new BehaviorSubject<string>('video');\n\n  // Waiting Room\n  waitingRoomFilter = new BehaviorSubject<string>('');\n  waitingRoomList = new BehaviorSubject<WaitingRoomParticipant[]>(\n    this.useSeed && this.seedData?.waitingList ? this.seedData.waitingList : [],\n  );\n  waitingRoomCounter = new BehaviorSubject<number>(0);\n  filteredWaitingRoomList = new BehaviorSubject<WaitingRoomParticipant[]>(\n    this.useSeed && this.seedData?.waitingList ? this.seedData.waitingList : [],\n  );\n\n  // Requests\n  requestFilter = new BehaviorSubject<string>('');\n  requestList = new BehaviorSubject<Request[]>(\n    this.useSeed && this.seedData?.requests ? this.seedData.requests : [],\n  );\n  requestCounter = new BehaviorSubject<number>(0);\n  filteredRequestList = new BehaviorSubject<Request[]>(\n    this.useSeed && this.seedData?.requests ? this.seedData.requests : [],\n  );\n\n  // Total Requests and Waiting Room\n  totalReqWait = new BehaviorSubject<number>(0);\n\n  // Alerts\n  alertVisible = new BehaviorSubject<boolean>(false);\n  alertMessage = new BehaviorSubject<string>('');\n  alertType = new BehaviorSubject<'success' | 'danger'>('success');\n  alertDuration = new BehaviorSubject<number>(3000);\n\n  // Progress Timer\n  progressTimerVisible = new BehaviorSubject<boolean>(true);\n  progressTimerValue = new BehaviorSubject<number>(0);\n\n  // Menu Modals\n  isMenuModalVisible = new BehaviorSubject<boolean>(false);\n  isRecordingModalVisible = new BehaviorSubject<boolean>(false);\n  isSettingsModalVisible = new BehaviorSubject<boolean>(false);\n  isRequestsModalVisible = new BehaviorSubject<boolean>(false);\n  isWaitingModalVisible = new BehaviorSubject<boolean>(false);\n  isCoHostModalVisible = new BehaviorSubject<boolean>(false);\n  isMediaSettingsModalVisible = new BehaviorSubject<boolean>(false);\n  isDisplaySettingsModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Other Modals\n  isParticipantsModalVisible = new BehaviorSubject<boolean>(false);\n  isMessagesModalVisible = new BehaviorSubject<boolean>(false);\n  isConfirmExitModalVisible = new BehaviorSubject<boolean>(false);\n  isConfirmHereModalVisible = new BehaviorSubject<boolean>(false);\n  isShareEventModalVisible = new BehaviorSubject<boolean>(false);\n  isLoadingModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Recording Options\n  recordingMediaOptions = new BehaviorSubject<string>('video');\n  recordingAudioOptions = new BehaviorSubject<string>('all');\n  recordingVideoOptions = new BehaviorSubject<string>('all');\n  recordingVideoType = new BehaviorSubject<string>('fullDisplay');\n  recordingVideoOptimized = new BehaviorSubject<boolean>(false);\n  recordingDisplayType = new BehaviorSubject<'video' | 'media' | 'all'>('video');\n  recordingAddHLS = new BehaviorSubject<boolean>(true);\n  recordingNameTags = new BehaviorSubject<boolean>(true);\n  recordingBackgroundColor = new BehaviorSubject<string>('#83c0e9');\n  recordingNameTagsColor = new BehaviorSubject<string>('#ffffff');\n  recordingAddText = new BehaviorSubject<boolean>(false);\n  recordingCustomText = new BehaviorSubject<string>('Add Text');\n  recordingCustomTextPosition = new BehaviorSubject<string>('top');\n  recordingCustomTextColor = new BehaviorSubject<string>('#ffffff');\n  recordingOrientationVideo = new BehaviorSubject<string>('landscape');\n  clearedToResume = new BehaviorSubject<boolean>(true);\n  clearedToRecord = new BehaviorSubject<boolean>(true);\n  recordState = new BehaviorSubject<string>('green');\n  showRecordButtons = new BehaviorSubject<boolean>(false);\n  recordingProgressTime = new BehaviorSubject<string>('00:00:00');\n  audioSwitching = new BehaviorSubject<boolean>(false);\n  videoSwitching = new BehaviorSubject<boolean>(false);\n\n  // Media States\n  videoAlreadyOn = new BehaviorSubject<boolean>(false);\n  audioAlreadyOn = new BehaviorSubject<boolean>(false);\n\n  componentSizes = new BehaviorSubject<ComponentSizes>({\n    mainHeight: 0,\n    otherHeight: 0,\n    mainWidth: 0,\n    otherWidth: 0,\n  });\n\n  // Permissions\n  hasCameraPermission = new BehaviorSubject<boolean>(false);\n  hasAudioPermission = new BehaviorSubject<boolean>(false);\n\n  // Transports\n  transportCreated = new BehaviorSubject<boolean>(false);\n  transportCreatedVideo = new BehaviorSubject<boolean>(false);\n  transportCreatedAudio = new BehaviorSubject<boolean>(false);\n  transportCreatedScreen = new BehaviorSubject<boolean>(false);\n  producerTransport = new BehaviorSubject<Transport | null>(null);\n  videoProducer = new BehaviorSubject<Producer | null>(null);\n  params = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  videoParams = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  audioParams = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  audioProducer = new BehaviorSubject<Producer | null>(null);\n  consumerTransports = new BehaviorSubject<TransportType[]>([]);\n  consumingTransports = new BehaviorSubject<string[]>([]);\n\n  // Polls\n  polls = new BehaviorSubject<Poll[]>(\n    this.useSeed && this.seedData?.polls ? this.seedData.polls : [],\n  );\n  poll = new BehaviorSubject<Poll | null>(null);\n  isPollModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Background\n  customImage = new BehaviorSubject<string>('');\n  selectedImage = new BehaviorSubject<string>('');\n  segmentVideo = new BehaviorSubject<MediaStream | null>(null);\n  selfieSegmentation = new BehaviorSubject<SelfieSegmentation | null>(null);\n  pauseSegmentation = new BehaviorSubject<boolean>(false);\n  processedStream = new BehaviorSubject<MediaStream | null>(null);\n  keepBackground = new BehaviorSubject<boolean>(false);\n  backgroundHasChanged = new BehaviorSubject<boolean>(false);\n  virtualStream = new BehaviorSubject<MediaStream | null>(null);\n  mainCanvas = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  prevKeepBackground = new BehaviorSubject<boolean>(false);\n  appliedBackground = new BehaviorSubject<boolean>(false);\n  isBackgroundModalVisible = new BehaviorSubject<boolean>(false);\n  autoClickBackground = new BehaviorSubject<boolean>(false);\n\n  // Breakout Rooms\n  breakoutRooms = new BehaviorSubject<BreakoutParticipant[][]>(\n    this.useSeed && this.seedData?.breakoutRooms ? this.seedData.breakoutRooms : [],\n  );\n  currentRoomIndex = new BehaviorSubject<number>(0);\n  canStartBreakout = new BehaviorSubject<boolean>(false);\n  breakOutRoomStarted = new BehaviorSubject<boolean>(false);\n  breakOutRoomEnded = new BehaviorSubject<boolean>(false);\n  hostNewRoom = new BehaviorSubject<number>(-1);\n  limitedBreakRoom = new BehaviorSubject<BreakoutParticipant[]>([]);\n  mainRoomsLength = new BehaviorSubject<number>(0);\n  memberRoom = new BehaviorSubject<number>(-1);\n  isBreakoutRoomsModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Whiteboard\n  whiteboardUsers = new BehaviorSubject<WhiteboardUser[]>(\n    this.useSeed && this.seedData?.whiteboardUsers ? this.seedData.whiteboardUsers : [],\n  );\n  currentWhiteboardIndex = new BehaviorSubject<number>(0);\n  canStartWhiteboard = new BehaviorSubject<boolean>(false);\n  whiteboardStarted = new BehaviorSubject<boolean>(false);\n  whiteboardEnded = new BehaviorSubject<boolean>(false);\n  whiteboardLimit = new BehaviorSubject<number>(4);\n  isWhiteboardModalVisible = new BehaviorSubject<boolean>(false);\n  isConfigureWhiteboardModalVisible = new BehaviorSubject<boolean>(false);\n  shapes = new BehaviorSubject<Shape[]>([]);\n  useImageBackground = new BehaviorSubject<boolean>(true);\n  redoStack = new BehaviorSubject<Shape[]>([]);\n  undoStack = new BehaviorSubject<string[]>([]);\n  canvasStream = new BehaviorSubject<MediaStream | null>(null);\n  canvasWhiteboard = new BehaviorSubject<HTMLCanvasElement | null>(null);\n\n  // Screenboard\n  canvasScreenboard = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  processedScreenStream = new BehaviorSubject<MediaStream | null>(null);\n  annotateScreenStream = new BehaviorSubject<boolean>(false);\n  mainScreenCanvas = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  isScreenboardModalVisible = new BehaviorSubject<boolean>(false);\n\n  //state variables for the control buttons\n  micActive = new BehaviorSubject<boolean>(\n    this.audioAlreadyOn.value ? this.audioAlreadyOn.value : false,\n  );\n  videoActive = new BehaviorSubject<boolean>(\n    this.videoAlreadyOn.value ? this.videoAlreadyOn.value : false,\n  );\n  screenShareActive = new BehaviorSubject<boolean>(false);\n  endCallActive = new BehaviorSubject<boolean>(false);\n  participantsActive = new BehaviorSubject<boolean>(false);\n  menuActive = new BehaviorSubject<boolean>(false);\n  commentsActive = new BehaviorSubject<boolean>(false);\n\n  // Update functions\n  updateMessages = (value: Message[]) => {\n    this.messages.next(value);\n  };\n\n  updateStartDirectMessage = (value: boolean) => {\n    this.startDirectMessage.next(value);\n  };\n\n  updateDirectMessageDetails = (value: Participant | null) => {\n    this.directMessageDetails.next(value);\n  };\n\n  updateShowMessagesBadge = (value: boolean) => {\n    this.showMessagesBadge.next(value);\n  };\n\n  updateAudioSetting = (value: string) => {\n    this.audioSetting.next(value);\n  };\n\n  updateVideoSetting = (value: string) => {\n    this.videoSetting.next(value);\n  };\n\n  updateScreenshareSetting = (value: string) => {\n    this.screenshareSetting.next(value);\n  };\n\n  updateChatSetting = (value: string) => {\n    this.chatSetting.next(value);\n  };\n\n  updateDisplayOption = (value: string) => {\n    this.displayOption.next(value);\n  };\n\n  updateAutoWave = (value: boolean) => {\n    this.autoWave.next(value);\n  };\n\n  updateForceFullDisplay = (value: boolean) => {\n    this.forceFullDisplay.next(value);\n  };\n\n  updatePrevForceFullDisplay = (value: boolean) => {\n    this.prevForceFullDisplay.next(value);\n  };\n\n  updatePrevMeetingDisplayType = (value: string) => {\n    this.prevMeetingDisplayType.next(value);\n  };\n\n  updateWaitingRoomCounter = (value: number) => {\n    this.waitingRoomCounter.next(value);\n  };\n\n  updateWaitingRoomFilter = (value: string) => {\n    this.waitingRoomFilter.next(value);\n  };\n\n  updateWaitingRoomList = (value: WaitingRoomParticipant[]) => {\n    this.waitingRoomList.next(value);\n    this.filteredWaitingRoomList.next(value);\n    this.waitingRoomCounter.next(value.length);\n  };\n\n  onWaitingRoomFilterChange = (value: string) => {\n    if (value !== '' && value.length > 0) {\n      const filteredWaitingRoom = this.waitingRoomList\n        .getValue()\n        .filter((waitingRoom: WaitingRoomParticipant) => {\n          return waitingRoom.name.toLowerCase().includes(value.toLowerCase());\n        });\n      this.filteredWaitingRoomList.next(filteredWaitingRoom);\n      this.waitingRoomCounter.next(filteredWaitingRoom.length);\n    } else {\n      this.filteredWaitingRoomList.next(this.waitingRoomList.getValue());\n      this.waitingRoomCounter.next(this.waitingRoomList.getValue().length);\n    }\n  };\n\n  onWaitingRoomClose = () => {\n    this.updateIsWaitingModalVisible(false);\n  };\n\n  updateRequestCounter = (value: number) => {\n    this.requestCounter.next(value);\n  };\n\n  updateRequestFilter = (value: string) => {\n    this.requestFilter.next(value);\n  };\n\n  updateRequestList = (value: Request[]) => {\n    this.requestList.next(value);\n    this.filteredRequestList.next(value);\n    this.requestCounter.next(value.length);\n  };\n\n  onRequestFilterChange = (value: string) => {\n    if (value !== '' && value.length > 0) {\n      const filteredRequest = this.requestList.getValue().filter((request: Request) => {\n        return request?.name?.toLowerCase().includes(value.toLowerCase());\n      });\n      this.filteredRequestList.next(filteredRequest);\n      this.requestCounter.next(filteredRequest.length);\n    } else {\n      this.filteredRequestList.next(this.requestList.getValue());\n      this.requestCounter.next(this.requestList.getValue().length);\n    }\n  };\n\n  onRequestClose = () => {\n    this.updateIsRequestsModalVisible(false);\n  };\n\n  updateTotalReqWait = (value: number) => {\n    this.totalReqWait.next(value);\n  };\n\n  updateAlertVisible = (value: boolean) => {\n    this.alertVisible.next(value);\n  };\n\n  updateAlertMessage = (value: string) => {\n    this.alertMessage.next(value);\n  };\n\n  updateAlertType = (value: 'success' | 'danger') => {\n    this.alertType.next(value);\n  };\n\n  updateAlertDuration = (value: number) => {\n    this.alertDuration.next(value);\n  };\n\n  updateProgressTimerVisible = (value: boolean) => {\n    this.progressTimerVisible.next(value);\n  };\n\n  updateProgressTimerValue = (value: number) => {\n    this.progressTimerValue.next(value);\n  };\n\n  updateIsMenuModalVisible = (value: boolean) => {\n    this.isMenuModalVisible.next(value);\n  };\n\n  updateIsRecordingModalVisible = (value: boolean) => {\n    this.isRecordingModalVisible.next(value);\n    if (value) {\n      this.updateConfirmedToRecord(false);\n    } else {\n      if (\n        this.clearedToRecord.getValue() &&\n        this.clearedToResume.getValue() &&\n        this.recordStarted.getValue()\n      ) {\n        this.updateShowRecordButtons(true);\n      }\n    }\n  };\n\n  updateIsSettingsModalVisible = (value: boolean) => {\n    this.isSettingsModalVisible.next(value);\n  };\n\n  updateIsRequestsModalVisible = (value: boolean) => {\n    this.isRequestsModalVisible.next(value);\n  };\n\n  updateIsWaitingModalVisible = (value: boolean) => {\n    this.isWaitingModalVisible.next(value);\n  };\n\n  updateIsCoHostModalVisible = (value: boolean) => {\n    this.isCoHostModalVisible.next(value);\n  };\n\n  updateIsMediaSettingsModalVisible = (value: boolean) => {\n    this.isMediaSettingsModalVisible.next(value);\n  };\n\n  updateIsDisplaySettingsModalVisible = (value: boolean) => {\n    this.isDisplaySettingsModalVisible.next(value);\n  };\n\n  updateIsParticipantsModalVisible = (value: boolean) => {\n    this.isParticipantsModalVisible.next(value);\n  };\n\n  updateIsMessagesModalVisible = (value: boolean) => {\n    this.isMessagesModalVisible.next(value);\n    if (!value) {\n      this.updateShowMessagesBadge(false);\n    }\n  };\n\n  updateIsConfirmExitModalVisible = (value: boolean) => {\n    this.isConfirmExitModalVisible.next(value);\n  };\n\n  updateIsConfirmHereModalVisible = (value: boolean) => {\n    this.isConfirmHereModalVisible.next(value);\n  };\n\n  updateIsLoadingModalVisible = (value: boolean) => {\n    this.isLoadingModalVisible.next(value);\n  };\n\n  updateIsShareEventModalVisible = (value: boolean) => {\n    this.isShareEventModalVisible.next(value);\n  };\n\n  updateRecordingMediaOptions = (value: string) => {\n    this.recordingMediaOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAudioOptions = (value: string) => {\n    this.recordingAudioOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoOptions = (value: string) => {\n    this.recordingVideoOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoType = (value: string) => {\n    this.recordingVideoType.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoOptimized = (value: boolean) => {\n    this.recordingVideoOptimized.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingDisplayType = (value: 'video' | 'media' | 'all') => {\n    this.recordingDisplayType.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAddHLS = (value: boolean) => {\n    this.recordingAddHLS.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAddText = (value: boolean) => {\n    this.recordingAddText.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomText = (value: string) => {\n    this.recordingCustomText.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomTextPosition = (value: string) => {\n    this.recordingCustomTextPosition.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomTextColor = (value: string) => {\n    this.recordingCustomTextColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingNameTags = (value: boolean) => {\n    this.recordingNameTags.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingBackgroundColor = (value: string) => {\n    this.recordingBackgroundColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingNameTagsColor = (value: string) => {\n    this.recordingNameTagsColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingOrientationVideo = (value: string) => {\n    this.recordingOrientationVideo.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateClearedToResume = (value: boolean) => {\n    this.clearedToResume.next(value);\n  };\n\n  updateClearedToRecord = (value: boolean) => {\n    this.clearedToRecord.next(value);\n  };\n\n  updateRecordState = (value: string) => {\n    if (this.recordStarted.value && !this.recordStopped.value) {\n      if (!this.recordPaused.value) {\n        this.recordState.next('red');\n      } else {\n        this.recordState.next('yellow');\n      }\n    } else {\n      this.recordState.next(value);\n    }\n    this.recordState.next(value);\n  };\n\n  updateShowRecordButtons = (value: boolean) => {\n    this.showRecordButtons.next(value);\n  };\n\n  updateRecordingProgressTime = (value: string) => {\n    this.recordingProgressTime.next(value);\n    this.updateRecordTimerWidget();\n  };\n\n  updateAudioSwitching = (value: boolean) => {\n    this.audioSwitching.next(value);\n  };\n\n  updateVideoSwitching = (value: boolean) => {\n    this.videoSwitching.next(value);\n  };\n\n  updateVideoAlreadyOn = (value: boolean) => {\n    this.videoAlreadyOn.next(value);\n    this.videoActive.next(value);\n  };\n\n  updateAudioAlreadyOn = (value: boolean) => {\n    this.audioAlreadyOn.next(value);\n    this.micActive.next(value);\n  };\n\n  updateComponentSizes = (sizes: ComponentSizes) => {\n    this.componentSizes.next(sizes);\n  };\n\n  updateHasCameraPermission = (value: boolean) => {\n    this.hasCameraPermission.next(value);\n  };\n\n  updateHasAudioPermission = (value: boolean) => {\n    this.hasAudioPermission.next(value);\n  };\n\n  requestPermissionCamera(): Promise<string> {\n    // Implement the request permission logic here\n    return Promise.resolve('granted');\n  }\n\n  requestPermissionAudio(): Promise<string> {\n    // Implement the request permission logic here\n    return Promise.resolve('granted');\n  }\n\n  updateTransportCreated = (value: boolean) => {\n    this.transportCreated.next(value);\n  };\n\n  updateTransportCreatedVideo = (value: boolean) => {\n    this.transportCreatedVideo.next(value);\n  };\n\n  updateTransportCreatedAudio = (value: boolean) => {\n    this.transportCreatedAudio.next(value);\n  };\n\n  updateTransportCreatedScreen = (value: boolean) => {\n    this.transportCreatedScreen.next(value);\n  };\n\n  updateProducerTransport = (value: Transport | null) => {\n    this.producerTransport.next(value);\n  };\n\n  updateVideoProducer = (value: Producer | null) => {\n    this.videoProducer.next(value);\n  };\n\n  updateParams = (value: ProducerOptions) => {\n    this.params.next(value);\n  };\n\n  updateVideoParams = (value: ProducerOptions) => {\n    this.videoParams.next(value);\n  };\n\n  updateAudioParams = (value: ProducerOptions) => {\n    this.audioParams.next(value);\n  };\n\n  updateAudioProducer = (value: Producer | null) => {\n    this.audioProducer.next(value);\n  };\n\n  updateConsumerTransports = (value: TransportType[]) => {\n    this.consumerTransports.next(value);\n  };\n\n  updateConsumingTransports = (value: string[]) => {\n    this.consumingTransports.next(value);\n  };\n\n  updatePolls = (value: Poll[]) => {\n    this.polls.next(value);\n  };\n\n  updatePoll = (value: Poll | null) => {\n    this.poll.next(value);\n  };\n\n  updateIsPollModalVisible = (value: boolean) => {\n    this.isPollModalVisible.next(value);\n  };\n\n  updateCustomImage = (value: string) => {\n    this.customImage.next(value);\n  };\n\n  updateSelectedImage = (value: string) => {\n    this.selectedImage.next(value);\n  };\n\n  updateSegmentVideo = (value: MediaStream | null) => {\n    this.segmentVideo.next(value);\n  };\n\n  updateSelfieSegmentation = (value: SelfieSegmentation | null) => {\n    this.selfieSegmentation.next(value);\n  };\n\n  updatePauseSegmentation = (value: boolean) => {\n    this.pauseSegmentation.next(value);\n  };\n\n  updateProcessedStream = (value: MediaStream | null) => {\n    this.processedStream.next(value);\n  };\n\n  updateKeepBackground = (value: boolean) => {\n    this.keepBackground.next(value);\n  };\n\n  updateBackgroundHasChanged = (value: boolean) => {\n    this.backgroundHasChanged.next(value);\n  };\n\n  updateVirtualStream = (value: MediaStream | null) => {\n    this.virtualStream.next(value);\n  };\n\n  updateMainCanvas = (value: HTMLCanvasElement | null) => {\n    this.mainCanvas.next(value);\n  };\n\n  updatePrevKeepBackground = (value: boolean) => {\n    this.prevKeepBackground.next(value);\n  };\n\n  updateAppliedBackground = (value: boolean) => {\n    this.appliedBackground.next(value);\n  };\n\n  updateIsBackgroundModalVisible = (value: boolean) => {\n    this.isBackgroundModalVisible.next(value);\n  };\n\n  updateAutoClickBackground = (value: boolean) => {\n    this.autoClickBackground.next(value);\n  };\n\n  updateBreakoutRooms = (value: BreakoutParticipant[][]) => {\n    this.breakoutRooms.next(value);\n  };\n\n  updateCurrentRoomIndex = (value: number) => {\n    this.currentRoomIndex.next(value);\n  };\n\n  updateCanStartBreakout = (value: boolean) => {\n    this.canStartBreakout.next(value);\n  };\n\n  updateBreakOutRoomStarted = (value: boolean) => {\n    this.breakOutRoomStarted.next(value);\n  };\n\n  updateBreakOutRoomEnded = (value: boolean) => {\n    this.breakOutRoomEnded.next(value);\n  };\n\n  updateHostNewRoom = (value: number) => {\n    this.hostNewRoom.next(value);\n  };\n\n  updateLimitedBreakRoom = (value: BreakoutParticipant[]) => {\n    this.limitedBreakRoom.next(value);\n  };\n\n  updateMainRoomsLength = (value: number) => {\n    this.mainRoomsLength.next(value);\n  };\n\n  updateMemberRoom = (value: number) => {\n    this.memberRoom.next(value);\n  };\n\n  updateIsBreakoutRoomsModalVisible = (value: boolean) => {\n    this.isBreakoutRoomsModalVisible.next(value);\n  };\n\n  updateWhiteboardUsers = (value: WhiteboardUser[]) => {\n    this.whiteboardUsers.next(value);\n  };\n\n  updateCurrentWhiteboardIndex = (value: number) => {\n    this.currentWhiteboardIndex.next(value);\n  };\n\n  updateCanStartWhiteboard = (value: boolean) => {\n    this.canStartWhiteboard.next(value);\n  };\n\n  updateWhiteboardStarted = (value: boolean) => {\n    this.whiteboardStarted.next(value);\n  };\n\n  updateWhiteboardEnded = (value: boolean) => {\n    this.whiteboardEnded.next(value);\n  };\n\n  updateWhiteboardLimit = (value: number) => {\n    this.whiteboardLimit.next(value);\n  };\n\n  updateIsWhiteboardModalVisible = (value: boolean) => {\n    this.isWhiteboardModalVisible.next(value);\n  };\n\n  updateIsConfigureWhiteboardModalVisible = (value: boolean) => {\n    this.isConfigureWhiteboardModalVisible.next(value);\n  };\n\n  updateShapes = (value: Shape[]) => {\n    this.shapes.next(value);\n  };\n\n  updateUseImageBackground = (value: boolean) => {\n    this.useImageBackground.next(value);\n  };\n\n  updateRedoStack = (value: Shape[]) => {\n    this.redoStack.next(value);\n  };\n\n  updateUndoStack = (value: string[]) => {\n    this.undoStack.next(value);\n  };\n\n  updateCanvasStream = (value: MediaStream | null) => {\n    this.canvasStream.next(value);\n  };\n\n  updateCanvasWhiteboard = (value: HTMLCanvasElement | null) => {\n    this.canvasWhiteboard.next(value);\n  };\n\n  updateCanvasScreenboard = (value: HTMLCanvasElement | null) => {\n    this.canvasScreenboard.next(value);\n  };\n\n  updateProcessedScreenStream = (value: MediaStream | null) => {\n    this.processedScreenStream.next(value);\n  };\n\n  updateAnnotateScreenStream = (value: boolean) => {\n    this.annotateScreenStream.next(value);\n  };\n\n  updateMainScreenCanvas = (value: HTMLCanvasElement | null) => {\n    this.mainScreenCanvas.next(value);\n  };\n\n  updateIsScreenboardModalVisible = (value: boolean) => {\n    this.isScreenboardModalVisible.next(value);\n  };\n\n  checkOrientation = () => {\n    const isPortrait = window.matchMedia('(orientation: portrait)').matches;\n    return isPortrait ? 'portrait' : 'landscape';\n  };\n\n  showAlert = ({\n    message,\n    type,\n    duration = 3000,\n  }: {\n    message: string;\n    type: 'success' | 'danger';\n    duration?: number;\n  }) => {\n    this.updateAlertMessage(message);\n    this.updateAlertType(type);\n    this.updateAlertDuration(duration);\n    this.updateAlertVisible(true);\n  };\n\n  getAllParams() {\n    return {\n      localUIMode: this.localUIMode.value, // Local UI mode\n\n      // Room Details\n      roomName: this.roomName.value,\n      member: this.member.value,\n      adminPasscode: this.adminPasscode.value,\n      youAreCoHost: this.youAreCoHost.value,\n      youAreHost: this.youAreHost.value,\n      islevel: this.islevel.value,\n      confirmedToRecord: this.confirmedToRecord.value,\n      meetingDisplayType: this.meetingDisplayType.value,\n      meetingVideoOptimized: this.meetingVideoOptimized.value,\n      eventType: this.eventType.value,\n      participants: this.participants.value,\n      filteredParticipants: this.filteredParticipants.value,\n      participantsCounter: this.participantsCounter.value,\n      participantsFilter: this.participantsFilter.value,\n\n      // More room details - media\n      consume_sockets: this.consume_sockets.value,\n      rtpCapabilities: this.rtpCapabilities.value,\n      roomRecvIPs: this.roomRecvIPs.value,\n      meetingRoomParams: this.meetingRoomParams.value,\n      itemPageLimit: this.itemPageLimit.value,\n      audioOnlyRoom: this.audioOnlyRoom.value,\n      addForBasic: this.addForBasic.value,\n      screenPageLimit: this.screenPageLimit.value,\n      shareScreenStarted: this.shareScreenStarted.value,\n      shared: this.shared.value,\n      targetOrientation: this.targetOrientation.value,\n      targetResolution: this.targetResolution.value,\n      targetResolutionHost: this.targetResolutionHost.value,\n      vidCons: this.vidCons.value,\n      frameRate: this.frameRate.value,\n      hParams: this.hParams.value,\n      vParams: this.vParams.value,\n      screenParams: this.screenParams.value,\n      aParams: this.aParams.value,\n\n      // More room details - recording\n      recordingAudioPausesLimit: this.recordingAudioPausesLimit.value,\n      recordingAudioPausesCount: this.recordingAudioPausesCount.value,\n      recordingAudioSupport: this.recordingAudioSupport.value,\n      recordingAudioPeopleLimit: this.recordingAudioPeopleLimit.value,\n      recordingAudioParticipantsTimeLimit: this.recordingAudioParticipantsTimeLimit.value,\n      recordingVideoPausesCount: this.recordingVideoPausesCount.value,\n      recordingVideoPausesLimit: this.recordingVideoPausesLimit.value,\n      recordingVideoSupport: this.recordingVideoSupport.value,\n      recordingVideoPeopleLimit: this.recordingVideoPeopleLimit.value,\n      recordingVideoParticipantsTimeLimit: this.recordingVideoParticipantsTimeLimit.value,\n      recordingAllParticipantsSupport: this.recordingAllParticipantsSupport.value,\n      recordingVideoParticipantsSupport: this.recordingVideoParticipantsSupport.value,\n      recordingAllParticipantsFullRoomSupport: this.recordingAllParticipantsFullRoomSupport.value,\n      recordingVideoParticipantsFullRoomSupport:\n        this.recordingVideoParticipantsFullRoomSupport.value,\n      recordingPreferredOrientation: this.recordingPreferredOrientation.value,\n      recordingSupportForOtherOrientation: this.recordingSupportForOtherOrientation.value,\n      recordingMultiFormatsSupport: this.recordingMultiFormatsSupport.value,\n\n      userRecordingParams: this.userRecordingParams.value,\n      canRecord: this.canRecord.value,\n      startReport: this.startReport.value,\n      endReport: this.endReport.value,\n      recordStartTime: this.recordStartTime.value,\n      recordElapsedTime: this.recordElapsedTime.value,\n      isTimerRunning: this.isTimerRunning.value,\n      canPauseResume: this.canPauseResume.value,\n      recordChangeSeconds: this.recordChangeSeconds.value,\n      pauseLimit: this.pauseLimit.value,\n      pauseRecordCount: this.pauseRecordCount.value,\n      canLaunchRecord: this.canLaunchRecord.value,\n      stopLaunchRecord: this.stopLaunchRecord.value,\n\n      participantsAll: this.participantsAll.value,\n\n      firstAll: this.firstAll.value,\n      updateMainWindow: this.updateMainWindow.value,\n      first_round: this.first_round.value,\n      landScaped: this.landScaped.value,\n      lock_screen: this.lock_screen.value,\n      screenId: this.screenId.value,\n      allVideoStreams: this.allVideoStreams.value,\n      newLimitedStreams: this.newLimitedStreams.value,\n      newLimitedStreamsIDs: this.newLimitedStreamsIDs.value,\n      activeSounds: this.activeSounds.value,\n      screenShareIDStream: this.screenShareIDStream.value,\n      screenShareNameStream: this.screenShareNameStream.value,\n      adminIDStream: this.adminIDStream.value,\n      adminNameStream: this.adminNameStream.value,\n      youYouStream: this.youYouStream.value,\n      youYouStreamIDs: this.youYouStreamIDs.value,\n      localStream: this.localStream.value,\n      recordStarted: this.recordStarted.value,\n      recordResumed: this.recordResumed.value,\n      recordPaused: this.recordPaused.value,\n      recordStopped: this.recordStopped.value,\n      adminRestrictSetting: this.adminRestrictSetting.value,\n      videoRequestState: this.videoRequestState.value,\n      videoRequestTime: this.videoRequestTime.value,\n      videoAction: this.videoAction.value,\n      localStreamVideo: this.localStreamVideo.value,\n      userDefaultVideoInputDevice: this.userDefaultVideoInputDevice.value,\n      currentFacingMode: this.currentFacingMode.value,\n      prevFacingMode: this.prevFacingMode.value,\n      defVideoID: this.defVideoID.value,\n      allowed: this.allowed.value,\n      dispActiveNames: this.dispActiveNames.value,\n      p_dispActiveNames: this.p_dispActiveNames.value,\n      activeNames: this.activeNames.value,\n      prevActiveNames: this.prevActiveNames.value,\n      p_activeNames: this.p_activeNames.value,\n      membersReceived: this.membersReceived.value,\n      deferScreenReceived: this.deferScreenReceived.value,\n      hostFirstSwitch: this.hostFirstSwitch.value,\n      micAction: this.micAction.value,\n      screenAction: this.screenAction.value,\n      chatAction: this.chatAction.value,\n      audioRequestState: this.audioRequestState.value,\n      screenRequestState: this.screenRequestState.value,\n      chatRequestState: this.chatRequestState.value,\n      audioRequestTime: this.audioRequestTime.value,\n      screenRequestTime: this.screenRequestTime.value,\n      chatRequestTime: this.chatRequestTime.value,\n      updateRequestIntervalSeconds: this.updateRequestIntervalSeconds.value,\n      oldSoundIds: this.oldSoundIds.value,\n      hostLabel: this.hostLabel.value,\n      mainScreenFilled: this.mainScreenFilled.value,\n      localStreamScreen: this.localStreamScreen.value,\n      screenAlreadyOn: this.screenAlreadyOn.value,\n      chatAlreadyOn: this.chatAlreadyOn.value,\n      redirectURL: this.redirectURL.value,\n      oldAllStreams: this.oldAllStreams.value,\n      adminVidID: this.adminVidID.value,\n      streamNames: this.streamNames.value,\n      non_alVideoStreams: this.non_alVideoStreams.value,\n      sortAudioLoudness: this.sortAudioLoudness.value,\n      audioDecibels: this.audioDecibels.value,\n      mixed_alVideoStreams: this.mixed_alVideoStreams.value,\n      non_alVideoStreams_muted: this.non_alVideoStreams_muted.value,\n      paginatedStreams: this.paginatedStreams.value,\n      localStreamAudio: this.localStreamAudio.value,\n      defAudioID: this.defAudioID.value,\n      userDefaultAudioInputDevice: this.userDefaultAudioInputDevice.value,\n      userDefaultAudioOutputDevice: this.userDefaultAudioOutputDevice.value,\n      prevAudioInputDevice: this.prevAudioInputDevice.value,\n      prevVideoInputDevice: this.prevVideoInputDevice.value,\n      audioPaused: this.audioPaused.value,\n      mainScreenPerson: this.mainScreenPerson.value,\n      adminOnMainScreen: this.adminOnMainScreen.value,\n      screenStates: this.screenStates.value,\n      prevScreenStates: this.prevScreenStates.value,\n      updateDateState: this.updateDateState.value,\n      lastUpdate: this.lastUpdate.value,\n      nForReadjustRecord: this.nForReadjustRecord.value,\n      fixedPageLimit: this.fixedPageLimit.value,\n      removeAltGrid: this.removeAltGrid.value,\n      nForReadjust: this.nForReadjust.value,\n      lastReorderTime: this.lastReorderTime.value,\n      reorderInterval: this.reorderInterval.value,\n      fastReorderInterval: this.fastReorderInterval.value,\n      audStreamNames: this.audStreamNames.value,\n      currentUserPage: this.currentUserPage.value,\n      mainHeightWidth: this.mainHeightWidth.value,\n      prevMainHeightWidth: this.prevMainHeightWidth.value,\n      prevDoPaginate: this.prevDoPaginate.value,\n      doPaginate: this.doPaginate.value,\n      shareEnded: this.shareEnded.value,\n      lStreams: this.lStreams.value,\n      chatRefStreams: this.chatRefStreams.value,\n      controlHeight: this.controlHeight.value,\n      isWideScreen: this.isWideScreen.value,\n      isMediumScreen: this.isMediumScreen.value,\n      isSmallScreen: this.isSmallScreen.value,\n      addGrid: this.addGrid.value,\n      addAltGrid: this.addAltGrid.value,\n      gridRows: this.gridRows.value,\n      gridCols: this.gridCols.value,\n      altGridRows: this.altGridRows.value,\n      altGridCols: this.altGridCols.value,\n      numberPages: this.numberPages.value,\n      currentStreams: this.currentStreams.value,\n      showMiniView: this.showMiniView.value,\n      nStream: this.nStream.value,\n      defer_receive: this.defer_receive.value,\n      allAudioStreams: this.allAudioStreams.value,\n      screenProducer: this.screenProducer.value,\n      remoteScreenStream: this.remoteScreenStream.value,\n      gotAllVids: this.gotAllVids.value,\n      paginationHeightWidth: this.paginationHeightWidth.value,\n      paginationDirection: this.paginationDirection.value,\n      gridSizes: this.gridSizes.value,\n      screenForceFullDisplay: this.screenForceFullDisplay.value,\n      mainGridStream: this.mainGridStream.value,\n      otherGridStreams: this.otherGridStreams.value,\n      audioOnlyStreams: this.audioOnlyStreams.value,\n      videoInputs: this.videoInputs.value,\n      audioInputs: this.audioInputs.value,\n      meetingProgressTime: this.meetingProgressTime.value,\n      meetingElapsedTime: this.meetingElapsedTime.value,\n\n      ref_participants: this.ref_participants.value,\n\n      messages: this.messages.value,\n      startDirectMessage: this.startDirectMessage.value,\n      directMessageDetails: this.directMessageDetails.value,\n      coHost: this.coHost.value,\n      coHostResponsibility: this.coHostResponsibility.value,\n\n      // Event settings\n      audioSetting: this.audioSetting.value,\n      videoSetting: this.videoSetting.value,\n      screenshareSetting: this.screenshareSetting.value,\n      chatSetting: this.chatSetting.value,\n\n      // Display settings\n      autoWave: this.autoWave.value,\n      forceFullDisplay: this.forceFullDisplay.value,\n      prevForceFullDisplay: this.prevForceFullDisplay.value,\n      prevMeetingDisplayType: this.prevMeetingDisplayType.value,\n\n      // Waiting room\n      waitingRoomFilter: this.waitingRoomFilter.value,\n      waitingRoomList: this.waitingRoomList.value,\n      waitingRoomCounter: this.waitingRoomCounter.value,\n      filteredWaitingRoomList: this.filteredWaitingRoomList.value,\n\n      // Requests\n      requestFilter: this.requestFilter.value,\n      requestList: this.requestList.value,\n      requestCounter: this.requestCounter.value,\n      filteredRequestList: this.filteredRequestList.value,\n\n      // Total requests and waiting room\n      totalReqWait: this.totalReqWait.value,\n\n      // Alerts\n      alertVisible: this.alertVisible.value,\n      alertMessage: this.alertMessage.value,\n      alertType: this.alertType.value,\n      alertDuration: this.alertDuration.value,\n\n      // Progress Timer\n      progressTimerVisible: this.progressTimerVisible.value,\n      progressTimerValue: this.progressTimerValue.value,\n\n      // Menu modals\n      isMenuModalVisible: this.isMenuModalVisible.value,\n      isRecordingModalVisible: this.isRecordingModalVisible.value,\n      isSettingsModalVisible: this.isSettingsModalVisible.value,\n      isRequestsModalVisible: this.isRequestsModalVisible.value,\n      isWaitingModalVisible: this.isWaitingModalVisible.value,\n      isCoHostModalVisible: this.isCoHostModalVisible.value,\n      isMediaSettingsModalVisible: this.isMediaSettingsModalVisible.value,\n      isDisplaySettingsModalVisible: this.isDisplaySettingsModalVisible.value,\n\n      // Other Modals\n      isParticipantsModalVisible: this.isParticipantsModalVisible.value,\n      isMessagesModalVisible: this.isMessagesModalVisible.value,\n      isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n      isConfirmHereModalVisible: this.isConfirmHereModalVisible.value,\n      isLoadingModalVisible: this.isLoadingModalVisible.value,\n\n      // Recording Options\n      recordingMediaOptions: this.recordingMediaOptions.value,\n      recordingAudioOptions: this.recordingAudioOptions.value,\n      recordingVideoOptions: this.recordingVideoOptions.value,\n      recordingVideoType: this.recordingVideoType.value,\n      recordingVideoOptimized: this.recordingVideoOptimized.value,\n      recordingDisplayType: this.recordingDisplayType.value,\n      recordingAddHLS: this.recordingAddHLS.value,\n      recordingAddText: this.recordingAddText.value,\n      recordingCustomText: this.recordingCustomText.value,\n      recordingCustomTextPosition: this.recordingCustomTextPosition.value,\n      recordingCustomTextColor: this.recordingCustomTextColor.value,\n      recordingNameTags: this.recordingNameTags.value,\n      recordingBackgroundColor: this.recordingBackgroundColor.value,\n      recordingNameTagsColor: this.recordingNameTagsColor.value,\n      recordingOrientationVideo: this.recordingOrientationVideo.value,\n      clearedToResume: this.clearedToResume.value,\n      clearedToRecord: this.clearedToRecord.value,\n      recordState: this.recordState.value,\n      showRecordButtons: this.showRecordButtons.value,\n      recordingProgressTime: this.recordingProgressTime.value,\n      audioSwitching: this.audioSwitching.value,\n      videoSwitching: this.videoSwitching.value,\n\n      // Media states\n      videoAlreadyOn: this.videoAlreadyOn.value,\n      audioAlreadyOn: this.audioAlreadyOn.value,\n      componentSizes: this.componentSizes.value,\n\n      // Permissions\n      hasCameraPermission: this.hasCameraPermission.value,\n      hasAudioPermission: this.hasAudioPermission.value,\n\n      // Transports\n      transportCreated: this.transportCreated.value,\n      transportCreatedVideo: this.transportCreatedVideo.value,\n      transportCreatedAudio: this.transportCreatedAudio.value,\n      transportCreatedScreen: this.transportCreatedScreen.value,\n      producerTransport: this.producerTransport.value,\n      videoProducer: this.videoProducer.value,\n      params: this.params.value,\n      videoParams: this.videoParams.value,\n      audioParams: this.audioParams.value,\n      audioProducer: this.audioProducer.value,\n      consumerTransports: this.consumerTransports.value,\n      consumingTransports: this.consumingTransports.value,\n\n      // Polls\n      polls: this.polls.value,\n      poll: this.poll.value,\n      isPollModalVisible: this.isPollModalVisible.value,\n\n      // Background\n      customImage: this.customImage.value,\n      selectedImage: this.selectedImage.value,\n      segmentVideo: this.segmentVideo.value,\n      selfieSegmentation: this.selfieSegmentation.value,\n      pauseSegmentation: this.pauseSegmentation.value,\n      processedStream: this.processedStream.value,\n      keepBackground: this.keepBackground.value,\n      backgroundHasChanged: this.backgroundHasChanged.value,\n      virtualStream: this.virtualStream.value,\n      mainCanvas: this.mainCanvas.value,\n      prevKeepBackground: this.prevKeepBackground.value,\n      appliedBackground: this.appliedBackground.value,\n      isBackgroundModalVisible: this.isBackgroundModalVisible.value,\n      autoClickBackground: this.autoClickBackground.value,\n\n      // Breakout rooms\n      breakoutRooms: this.breakoutRooms.value,\n      currentRoomIndex: this.currentRoomIndex.value,\n      canStartBreakout: this.canStartBreakout.value,\n      breakOutRoomStarted: this.breakOutRoomStarted.value,\n      breakOutRoomEnded: this.breakOutRoomEnded.value,\n      hostNewRoom: this.hostNewRoom.value,\n      limitedBreakRoom: this.limitedBreakRoom.value,\n      mainRoomsLength: this.mainRoomsLength.value,\n      memberRoom: this.memberRoom.value,\n      isBreakoutRoomsModalVisible: this.isBreakoutRoomsModalVisible.value,\n\n      // Whiteboard\n      whiteboardUsers: this.whiteboardUsers.value,\n      currentWhiteboardIndex: this.currentWhiteboardIndex.value,\n      canStartWhiteboard: this.canStartWhiteboard.value,\n      whiteboardStarted: this.whiteboardStarted.value,\n      whiteboardEnded: this.whiteboardEnded.value,\n      whiteboardLimit: this.whiteboardLimit.value,\n      isWhiteboardModalVisible: this.isWhiteboardModalVisible.value,\n      isConfigureWhiteboardModalVisible: this.isConfigureWhiteboardModalVisible.value,\n      shapes: this.shapes.value,\n      useImageBackground: this.useImageBackground.value,\n      redoStack: this.redoStack.value,\n      undoStack: this.undoStack.value,\n      canvasStream: this.canvasStream.value,\n      canvasWhiteboard: this.canvasWhiteboard.value,\n\n      // Screenboard\n      canvasScreenboard: this.canvasScreenboard.value,\n      processedScreenStream: this.processedScreenStream.value,\n      annotateScreenStream: this.annotateScreenStream.value,\n      mainScreenCanvas: this.mainScreenCanvas.value,\n      isScreenboardModalVisible: this.isScreenboardModalVisible.value,\n\n      validated: this.validated.value,\n      device: this.device.value,\n      socket: this.socket.value,\n      checkMediaPermission: false,\n      onWeb: true,\n\n      // Update functions\n      updateRoomName: this.updateRoomName.bind(this),\n      updateMember: this.updateMember.bind(this),\n      updateAdminPasscode: this.updateAdminPasscode.bind(this),\n      updateYouAreCoHost: this.updateYouAreCoHost.bind(this),\n      updateYouAreHost: this.updateYouAreHost.bind(this),\n      updateIslevel: this.updateIslevel.bind(this),\n      updateCoHost: this.updateCoHost.bind(this),\n      updateCoHostResponsibility: this.updateCoHostResponsibility.bind(this),\n      updateConfirmedToRecord: this.updateConfirmedToRecord.bind(this),\n      updateMeetingDisplayType: this.updateMeetingDisplayType.bind(this),\n      updateMeetingVideoOptimized: this.updateMeetingVideoOptimized.bind(this),\n      updateEventType: this.updateEventType.bind(this),\n      updateParticipants: this.updateParticipants.bind(this),\n      updateParticipantsCounter: this.updateParticipantsCounter.bind(this),\n      updateParticipantsFilter: this.updateParticipantsFilter.bind(this),\n\n      // More update functions for media details\n      updateConsume_sockets: this.updateConsume_sockets.bind(this),\n      updateRtpCapabilities: this.updateRtpCapabilities.bind(this),\n      updateRoomRecvIPs: this.updateRoomRecvIPs.bind(this),\n      updateMeetingRoomParams: this.updateMeetingRoomParams.bind(this),\n      updateItemPageLimit: this.updateItemPageLimit.bind(this),\n      updateAudioOnlyRoom: this.updateAudioOnlyRoom.bind(this),\n      updateAddForBasic: this.updateAddForBasic.bind(this),\n      updateScreenPageLimit: this.updateScreenPageLimit.bind(this),\n      updateShareScreenStarted: this.updateShareScreenStarted.bind(this),\n      updateShared: this.updateShared.bind(this),\n      updateTargetOrientation: this.updateTargetOrientation.bind(this),\n      updateTargetResolution: this.updateTargetResolution.bind(this),\n      updateTargetResolutionHost: this.updateTargetResolutionHost.bind(this),\n      updateVidCons: this.updateVidCons.bind(this),\n      updateFrameRate: this.updateFrameRate.bind(this),\n      updateHParams: this.updateHParams.bind(this),\n      updateVParams: this.updateVParams.bind(this),\n      updateScreenParams: this.updateScreenParams.bind(this),\n      updateAParams: this.updateAParams.bind(this),\n\n      // More update functions for recording details\n      updateRecordingAudioPausesLimit: this.updateRecordingAudioPausesLimit.bind(this),\n      updateRecordingAudioPausesCount: this.updateRecordingAudioPausesCount.bind(this),\n      updateRecordingAudioSupport: this.updateRecordingAudioSupport.bind(this),\n      updateRecordingAudioPeopleLimit: this.updateRecordingAudioPeopleLimit.bind(this),\n      updateRecordingAudioParticipantsTimeLimit:\n        this.updateRecordingAudioParticipantsTimeLimit.bind(this),\n      updateRecordingVideoPausesCount: this.updateRecordingVideoPausesCount.bind(this),\n      updateRecordingVideoPausesLimit: this.updateRecordingVideoPausesLimit.bind(this),\n      updateRecordingVideoSupport: this.updateRecordingVideoSupport.bind(this),\n      updateRecordingVideoPeopleLimit: this.updateRecordingVideoPeopleLimit.bind(this),\n      updateRecordingVideoParticipantsTimeLimit:\n        this.updateRecordingVideoParticipantsTimeLimit.bind(this),\n      updateRecordingAllParticipantsSupport: this.updateRecordingAllParticipantsSupport.bind(this),\n      updateRecordingVideoParticipantsSupport:\n        this.updateRecordingVideoParticipantsSupport.bind(this),\n      updateRecordingAllParticipantsFullRoomSupport:\n        this.updateRecordingAllParticipantsFullRoomSupport.bind(this),\n      updateRecordingVideoParticipantsFullRoomSupport:\n        this.updateRecordingVideoParticipantsFullRoomSupport.bind(this),\n      updateRecordingPreferredOrientation: this.updateRecordingPreferredOrientation.bind(this),\n      updateRecordingSupportForOtherOrientation:\n        this.updateRecordingSupportForOtherOrientation.bind(this),\n      updateRecordingMultiFormatsSupport: this.updateRecordingMultiFormatsSupport.bind(this),\n\n      updateUserRecordingParams: this.updateUserRecordingParams.bind(this),\n      updateCanRecord: this.updateCanRecord.bind(this),\n      updateStartReport: this.updateStartReport.bind(this),\n      updateEndReport: this.updateEndReport.bind(this),\n      updateRecordTimerInterval: this.updateRecordTimerInterval.bind(this),\n      updateRecordStartTime: this.updateRecordStartTime.bind(this),\n      updateRecordElapsedTime: this.updateRecordElapsedTime.bind(this),\n      updateIsTimerRunning: this.updateIsTimerRunning.bind(this),\n      updateCanPauseResume: this.updateCanPauseResume.bind(this),\n      updateRecordChangeSeconds: this.updateRecordChangeSeconds.bind(this),\n      updatePauseLimit: this.updatePauseLimit.bind(this),\n      updatePauseRecordCount: this.updatePauseRecordCount.bind(this),\n      updateCanLaunchRecord: this.updateCanLaunchRecord.bind(this),\n      updateStopLaunchRecord: this.updateStopLaunchRecord.bind(this),\n\n      updateParticipantsAll: this.updateParticipantsAll.bind(this),\n\n      updateFirstAll: this.updateFirstAll.bind(this),\n      updateUpdateMainWindow: this.updateUpdateMainWindow.bind(this),\n      updateFirst_round: this.updateFirst_round.bind(this),\n      updateLandScaped: this.updateLandScaped.bind(this),\n      updateLock_screen: this.updateLock_screen.bind(this),\n      updateScreenId: this.updateScreenId.bind(this),\n      updateAllVideoStreams: this.updateAllVideoStreams.bind(this),\n      updateNewLimitedStreams: this.updateNewLimitedStreams.bind(this),\n      updateNewLimitedStreamsIDs: this.updateNewLimitedStreamsIDs.bind(this),\n      updateActiveSounds: this.updateActiveSounds.bind(this),\n      updateScreenShareIDStream: this.updateScreenShareIDStream.bind(this),\n      updateScreenShareNameStream: this.updateScreenShareNameStream.bind(this),\n      updateAdminIDStream: this.updateAdminIDStream.bind(this),\n      updateAdminNameStream: this.updateAdminNameStream.bind(this),\n      updateYouYouStream: this.updateYouYouStream.bind(this),\n      updateYouYouStreamIDs: this.updateYouYouStreamIDs.bind(this),\n      updateLocalStream: this.updateLocalStream.bind(this),\n      updateRecordStarted: this.updateRecordStarted.bind(this),\n      updateRecordResumed: this.updateRecordResumed.bind(this),\n      updateRecordPaused: this.updateRecordPaused.bind(this),\n      updateRecordStopped: this.updateRecordStopped.bind(this),\n      updateAdminRestrictSetting: this.updateAdminRestrictSetting.bind(this),\n      updateVideoRequestState: this.updateVideoRequestState.bind(this),\n      updateVideoRequestTime: this.updateVideoRequestTime.bind(this),\n      updateVideoAction: this.updateVideoAction.bind(this),\n      updateLocalStreamVideo: this.updateLocalStreamVideo.bind(this),\n      updateUserDefaultVideoInputDevice: this.updateUserDefaultVideoInputDevice.bind(this),\n      updateCurrentFacingMode: this.updateCurrentFacingMode.bind(this),\n      updatePrevFacingMode: this.updatePrevFacingMode.bind(this),\n      updateDefVideoID: this.updateDefVideoID.bind(this),\n      updateAllowed: this.updateAllowed.bind(this),\n      updateDispActiveNames: this.updateDispActiveNames.bind(this),\n      updateP_dispActiveNames: this.updateP_dispActiveNames.bind(this),\n      updateActiveNames: this.updateActiveNames.bind(this),\n      updatePrevActiveNames: this.updatePrevActiveNames.bind(this),\n      updateP_activeNames: this.updateP_activeNames.bind(this),\n      updateMembersReceived: this.updateMembersReceived.bind(this),\n      updateDeferScreenReceived: this.updateDeferScreenReceived.bind(this),\n      updateHostFirstSwitch: this.updateHostFirstSwitch.bind(this),\n      updateMicAction: this.updateMicAction.bind(this),\n      updateScreenAction: this.updateScreenAction.bind(this),\n      updateChatAction: this.updateChatAction.bind(this),\n      updateAudioRequestState: this.updateAudioRequestState.bind(this),\n      updateScreenRequestState: this.updateScreenRequestState.bind(this),\n      updateChatRequestState: this.updateChatRequestState.bind(this),\n      updateAudioRequestTime: this.updateAudioRequestTime.bind(this),\n      updateScreenRequestTime: this.updateScreenRequestTime.bind(this),\n      updateChatRequestTime: this.updateChatRequestTime.bind(this),\n      updateOldSoundIds: this.updateOldSoundIds.bind(this),\n      updateHostLabel: this.updateHostLabel.bind(this),\n      updateMainScreenFilled: this.updateMainScreenFilled.bind(this),\n      updateLocalStreamScreen: this.updateLocalStreamScreen.bind(this),\n      updateScreenAlreadyOn: this.updateScreenAlreadyOn.bind(this),\n      updateChatAlreadyOn: this.updateChatAlreadyOn.bind(this),\n      updateRedirectURL: this.updateRedirectURL.bind(this),\n      updateOldAllStreams: this.updateOldAllStreams.bind(this),\n      updateAdminVidID: this.updateAdminVidID.bind(this),\n      updateStreamNames: this.updateStreamNames.bind(this),\n      updateNon_alVideoStreams: this.updateNon_alVideoStreams.bind(this),\n      updateSortAudioLoudness: this.updateSortAudioLoudness.bind(this),\n      updateAudioDecibels: this.updateAudioDecibels.bind(this),\n      updateMixed_alVideoStreams: this.updateMixed_alVideoStreams.bind(this),\n      updateNon_alVideoStreams_muted: this.updateNon_alVideoStreams_muted.bind(this),\n      updatePaginatedStreams: this.updatePaginatedStreams.bind(this),\n      updateLocalStreamAudio: this.updateLocalStreamAudio.bind(this),\n      updateDefAudioID: this.updateDefAudioID.bind(this),\n      updateUserDefaultAudioInputDevice: this.updateUserDefaultAudioInputDevice.bind(this),\n      updateUserDefaultAudioOutputDevice: this.updateUserDefaultAudioOutputDevice.bind(this),\n      updatePrevAudioInputDevice: this.updatePrevAudioInputDevice.bind(this),\n      updatePrevVideoInputDevice: this.updatePrevVideoInputDevice.bind(this),\n      updateAudioPaused: this.updateAudioPaused.bind(this),\n      updateMainScreenPerson: this.updateMainScreenPerson.bind(this),\n      updateAdminOnMainScreen: this.updateAdminOnMainScreen.bind(this),\n      updateScreenStates: this.updateScreenStates.bind(this),\n      updatePrevScreenStates: this.updatePrevScreenStates.bind(this),\n      updateUpdateDateState: this.updateUpdateDateState.bind(this),\n      updateLastUpdate: this.updateLastUpdate.bind(this),\n      updateNForReadjustRecord: this.updateNForReadjustRecord.bind(this),\n      updateFixedPageLimit: this.updateFixedPageLimit.bind(this),\n      updateRemoveAltGrid: this.updateRemoveAltGrid.bind(this),\n      updateNForReadjust: this.updateNForReadjust.bind(this),\n      updateLastReorderTime: this.updateLastReorderTime.bind(this),\n      updateAudStreamNames: this.updateAudStreamNames.bind(this),\n      updateCurrentUserPage: this.updateCurrentUserPage.bind(this),\n      updateMainHeightWidth: this.updateMainHeightWidth.bind(this),\n      updatePrevMainHeightWidth: this.updatePrevMainHeightWidth.bind(this),\n      updatePrevDoPaginate: this.updatePrevDoPaginate.bind(this),\n      updateDoPaginate: this.updateDoPaginate.bind(this),\n      updateShareEnded: this.updateShareEnded.bind(this),\n      updateLStreams: this.updateLStreams.bind(this),\n      updateChatRefStreams: this.updateChatRefStreams.bind(this),\n      updateControlHeight: this.updateControlHeight.bind(this),\n      updateIsWideScreen: this.updateIsWideScreen.bind(this),\n      updateIsMediumScreen: this.updateIsMediumScreen.bind(this),\n      updateIsSmallScreen: this.updateIsSmallScreen.bind(this),\n      updateAddGrid: this.updateAddGrid.bind(this),\n      updateAddAltGrid: this.updateAddAltGrid.bind(this),\n      updateGridRows: this.updateGridRows.bind(this),\n      updateGridCols: this.updateGridCols.bind(this),\n      updateAltGridRows: this.updateAltGridRows.bind(this),\n      updateAltGridCols: this.updateAltGridCols.bind(this),\n      updateNumberPages: this.updateNumberPages.bind(this),\n      updateCurrentStreams: this.updateCurrentStreams.bind(this),\n      updateShowMiniView: this.updateShowMiniView.bind(this),\n      updateNStream: this.updateNStream.bind(this),\n      updateDefer_receive: this.updateDefer_receive.bind(this),\n      updateAllAudioStreams: this.updateAllAudioStreams.bind(this),\n      updateRemoteScreenStream: this.updateRemoteScreenStream.bind(this),\n      updateScreenProducer: this.updateScreenProducer.bind(this),\n      updateGotAllVids: this.updateGotAllVids.bind(this),\n      updatePaginationHeightWidth: this.updatePaginationHeightWidth.bind(this),\n      updatePaginationDirection: this.updatePaginationDirection.bind(this),\n      updateGridSizes: this.updateGridSizes.bind(this),\n      updateScreenForceFullDisplay: this.updateScreenForceFullDisplay.bind(this),\n      updateMainGridStream: this.updateMainGridStream.bind(this),\n      updateOtherGridStreams: this.updateOtherGridStreams.bind(this),\n      updateAudioOnlyStreams: this.updateAudioOnlyStreams.bind(this),\n      updateVideoInputs: this.updateVideoInputs.bind(this),\n      updateAudioInputs: this.updateAudioInputs.bind(this),\n      updateMeetingProgressTime: this.updateMeetingProgressTime.bind(this),\n      updateMeetingElapsedTime: this.updateMeetingElapsedTime.bind(this),\n      updateRef_participants: this.updateRef_participants.bind(this),\n\n      updateMessages: this.updateMessages.bind(this),\n      updateStartDirectMessage: this.updateStartDirectMessage.bind(this),\n      updateDirectMessageDetails: this.updateDirectMessageDetails.bind(this),\n      updateShowMessagesBadge: this.updateShowMessagesBadge.bind(this),\n\n      // Event settings\n      updateAudioSetting: this.updateAudioSetting.bind(this),\n      updateVideoSetting: this.updateVideoSetting.bind(this),\n      updateScreenshareSetting: this.updateScreenshareSetting.bind(this),\n      updateChatSetting: this.updateChatSetting.bind(this),\n\n      // Display settings\n      updateAutoWave: this.updateAutoWave.bind(this),\n      updateForceFullDisplay: this.updateForceFullDisplay.bind(this),\n      updatePrevForceFullDisplay: this.updatePrevForceFullDisplay.bind(this),\n      updatePrevMeetingDisplayType: this.updatePrevMeetingDisplayType.bind(this),\n\n      // Waiting room\n      updateWaitingRoomFilter: this.updateWaitingRoomFilter.bind(this),\n      updateWaitingRoomList: this.updateWaitingRoomList.bind(this),\n      updateWaitingRoomCounter: this.updateWaitingRoomCounter.bind(this),\n\n      // Requests\n      updateRequestFilter: this.updateRequestFilter.bind(this),\n      updateRequestList: this.updateRequestList.bind(this),\n      updateRequestCounter: this.updateRequestCounter.bind(this),\n\n      // Total requests and waiting room\n      updateTotalReqWait: this.updateTotalReqWait.bind(this),\n\n      // Menu modals\n      updateIsMenuModalVisible: this.updateIsMenuModalVisible.bind(this),\n      updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n      updateIsSettingsModalVisible: this.updateIsSettingsModalVisible.bind(this),\n      updateIsRequestsModalVisible: this.updateIsRequestsModalVisible.bind(this),\n      updateIsWaitingModalVisible: this.updateIsWaitingModalVisible.bind(this),\n      updateIsCoHostModalVisible: this.updateIsCoHostModalVisible.bind(this),\n      updateIsMediaSettingsModalVisible: this.updateIsMediaSettingsModalVisible.bind(this),\n      updateIsDisplaySettingsModalVisible: this.updateIsDisplaySettingsModalVisible.bind(this),\n\n      // Other modals\n      updateIsParticipantsModalVisible: this.updateIsParticipantsModalVisible.bind(this),\n      updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n      updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n      updateIsConfirmHereModalVisible: this.updateIsConfirmHereModalVisible.bind(this),\n      updateIsLoadingModalVisible: this.updateIsLoadingModalVisible.bind(this),\n\n      // Recording Options\n      updateRecordingMediaOptions: this.updateRecordingMediaOptions.bind(this),\n      updateRecordingAudioOptions: this.updateRecordingAudioOptions.bind(this),\n      updateRecordingVideoOptions: this.updateRecordingVideoOptions.bind(this),\n      updateRecordingVideoType: this.updateRecordingVideoType.bind(this),\n      updateRecordingVideoOptimized: this.updateRecordingVideoOptimized.bind(this),\n      updateRecordingDisplayType: this.updateRecordingDisplayType.bind(this),\n      updateRecordingAddHLS: this.updateRecordingAddHLS.bind(this),\n      updateRecordingAddText: this.updateRecordingAddText.bind(this),\n      updateRecordingCustomText: this.updateRecordingCustomText.bind(this),\n      updateRecordingCustomTextPosition: this.updateRecordingCustomTextPosition.bind(this),\n      updateRecordingCustomTextColor: this.updateRecordingCustomTextColor.bind(this),\n      updateRecordingNameTags: this.updateRecordingNameTags.bind(this),\n      updateRecordingBackgroundColor: this.updateRecordingBackgroundColor.bind(this),\n      updateRecordingNameTagsColor: this.updateRecordingNameTagsColor.bind(this),\n      updateRecordingOrientationVideo: this.updateRecordingOrientationVideo.bind(this),\n      updateClearedToResume: this.updateClearedToResume.bind(this),\n      updateClearedToRecord: this.updateClearedToRecord.bind(this),\n      updateRecordState: this.updateRecordState.bind(this),\n      updateShowRecordButtons: this.updateShowRecordButtons.bind(this),\n      updateRecordingProgressTime: this.updateRecordingProgressTime.bind(this),\n      updateAudioSwitching: this.updateAudioSwitching.bind(this),\n      updateVideoSwitching: this.updateVideoSwitching.bind(this),\n\n      // Media states\n      updateVideoAlreadyOn: this.updateVideoAlreadyOn.bind(this),\n      updateAudioAlreadyOn: this.updateAudioAlreadyOn.bind(this),\n      updateComponentSizes: this.updateComponentSizes.bind(this),\n\n      // Permissions\n      updateHasCameraPermission: this.updateHasCameraPermission.bind(this),\n      updateHasAudioPermission: this.updateHasAudioPermission.bind(this),\n\n      // Transports\n      updateTransportCreated: this.updateTransportCreated.bind(this),\n      updateTransportCreatedVideo: this.updateTransportCreatedVideo.bind(this),\n      updateTransportCreatedAudio: this.updateTransportCreatedAudio.bind(this),\n      updateTransportCreatedScreen: this.updateTransportCreatedScreen.bind(this),\n      updateProducerTransport: this.updateProducerTransport.bind(this),\n      updateVideoProducer: this.updateVideoProducer.bind(this),\n      updateParams: this.updateParams.bind(this),\n      updateVideoParams: this.updateVideoParams.bind(this),\n      updateAudioParams: this.updateAudioParams.bind(this),\n      updateAudioProducer: this.updateAudioProducer.bind(this),\n      updateConsumerTransports: this.updateConsumerTransports.bind(this),\n      updateConsumingTransports: this.updateConsumingTransports.bind(this),\n\n      // Polls\n      updatePolls: this.updatePolls.bind(this),\n      updatePoll: this.updatePoll.bind(this),\n      updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n\n      // Background\n      updateCustomImage: this.updateCustomImage.bind(this),\n      updateSelectedImage: this.updateSelectedImage.bind(this),\n      updateSegmentVideo: this.updateSegmentVideo.bind(this),\n      updateSelfieSegmentation: this.updateSelfieSegmentation.bind(this),\n      updatePauseSegmentation: this.updatePauseSegmentation.bind(this),\n      updateProcessedStream: this.updateProcessedStream.bind(this),\n      updateKeepBackground: this.updateKeepBackground.bind(this),\n      updateBackgroundHasChanged: this.updateBackgroundHasChanged.bind(this),\n      updateVirtualStream: this.updateVirtualStream.bind(this),\n      updateMainCanvas: this.updateMainCanvas.bind(this),\n      updatePrevKeepBackground: this.updatePrevKeepBackground.bind(this),\n      updateAppliedBackground: this.updateAppliedBackground.bind(this),\n      updateIsBackgroundModalVisible: this.updateIsBackgroundModalVisible.bind(this),\n      updateAutoClickBackground: this.updateAutoClickBackground.bind(this),\n\n      // Breakout rooms\n      updateBreakoutRooms: this.updateBreakoutRooms.bind(this),\n      updateCurrentRoomIndex: this.updateCurrentRoomIndex.bind(this),\n      updateCanStartBreakout: this.updateCanStartBreakout.bind(this),\n      updateBreakOutRoomStarted: this.updateBreakOutRoomStarted.bind(this),\n      updateBreakOutRoomEnded: this.updateBreakOutRoomEnded.bind(this),\n      updateHostNewRoom: this.updateHostNewRoom.bind(this),\n      updateLimitedBreakRoom: this.updateLimitedBreakRoom.bind(this),\n      updateMainRoomsLength: this.updateMainRoomsLength.bind(this),\n      updateMemberRoom: this.updateMemberRoom.bind(this),\n      updateIsBreakoutRoomsModalVisible: this.updateIsBreakoutRoomsModalVisible.bind(this),\n\n      // Whiteboard\n      updateWhiteboardUsers: this.updateWhiteboardUsers.bind(this),\n      updateCurrentWhiteboardIndex: this.updateCurrentWhiteboardIndex.bind(this),\n      updateCanStartWhiteboard: this.updateCanStartWhiteboard.bind(this),\n      updateWhiteboardStarted: this.updateWhiteboardStarted.bind(this),\n      updateWhiteboardEnded: this.updateWhiteboardEnded.bind(this),\n      updateWhiteboardLimit: this.updateWhiteboardLimit.bind(this),\n      updateIsWhiteboardModalVisible: this.updateIsWhiteboardModalVisible.bind(this),\n      updateIsConfigureWhiteboardModalVisible:\n        this.updateIsConfigureWhiteboardModalVisible.bind(this),\n      updateShapes: this.updateShapes.bind(this),\n      updateUseImageBackground: this.updateUseImageBackground.bind(this),\n      updateRedoStack: this.updateRedoStack.bind(this),\n      updateUndoStack: this.updateUndoStack.bind(this),\n      updateCanvasStream: this.updateCanvasStream.bind(this),\n      updateCanvasWhiteboard: this.updateCanvasWhiteboard.bind(this),\n\n      // Screenboard\n      updateCanvasScreenboard: this.updateCanvasScreenboard.bind(this),\n      updateProcessedScreenStream: this.updateProcessedScreenStream.bind(this),\n      updateAnnotateScreenStream: this.updateAnnotateScreenStream.bind(this),\n      updateMainScreenCanvas: this.updateMainScreenCanvas.bind(this),\n      updateIsScreenboardModalVisible: this.updateIsScreenboardModalVisible.bind(this),\n\n      // Other functions\n      checkOrientation: this.checkOrientation.bind(this),\n\n      updateDevice: this.updateDevice.bind(this),\n      updateSocket: this.updateSocket.bind(this),\n      updateValidated: this.updateValidated.bind(this),\n\n      showAlert: this.showAlert.bind(this),\n      getUpdatedAllParams: () => {\n        return {\n          ...this.getAllParams(),\n          ...this.mediaSFUFunctions(),\n        };\n      },\n    };\n  }\n\n  mediaSFUParameters = {\n    ...this.getAllParams(),\n    ...this.mediaSFUFunctions(),\n  };\n\n  getUpdatedAllParams = () => {\n    return {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n  };\n\n  updateButtonState(buttonType: string, value: boolean) {\n    this.controlButtons = this.controlButtons.map((button) => {\n      if (buttonType === 'micActive' && button.icon === this.faMicrophoneSlash) {\n        return { ...button, active: value };\n      }\n      if (buttonType === 'videoActive' && button.icon === this.faVideoSlash) {\n        return { ...button, active: value };\n      }\n      if (buttonType === 'screenShareActive' && button.icon === this.faDesktop) {\n        if (button.alternateIconComponent) {\n          const updatedInjector = this.createInjector({\n            disabled: !value,\n          });\n          return {\n            ...button,\n            active: true,\n            alternateIconComponent: { ...this.screenShareWidget, injector: updatedInjector },\n          }; //always default to true for active\n        } else {\n          return { ...button, active: true }; //always default to true for active\n        }\n      }\n      if (buttonType === 'endCallActive' && button.icon === this.faPhone) {\n        return { ...button, active: value };\n      }\n      if (buttonType === 'participantsActive' && button.icon === this.faUsers) {\n        return { ...button, active: value };\n      }\n      if (\n        buttonType === 'showMessagesBadge' &&\n        button.customName &&\n        button.customName === 'Messages'\n      ) {\n        const updatedInjector = this.createInjector({\n          icon: this.faComments,\n          badgeValue: value ? '*' : '',\n          iconColor: 'black',\n          showBadge: value,\n        });\n        return { ...button, customComponent: { ...this.messageWidget, injector: updatedInjector } };\n      }\n      if (buttonType === 'showMenuBadge' && button.customName && button.customName === 'Menu') {\n        const updatedInjector = this.createInjector({\n          icon: this.faBars,\n          badgeValue: this.totalReqWait.value,\n          iconColor: 'black',\n          showBadge: true,\n        });\n        return { ...button, customComponent: { ...this.menuWidget, injector: updatedInjector } };\n      }\n\n      return button;\n    });\n\n    this.cdr.detectChanges();\n  }\n\n  PrejoinPageComponent: any = {\n    component: this.PrejoinPage,\n    injector: null,\n  };\n\n  updatePrejoinPageComponent = () => {\n    const PrejoinComp = {\n      component: this.PrejoinPage,\n      injector: this.createInjector({\n        parameters: {\n          showAlert:\n            this.showAlert ||\n            (() => {\n              console.log('showAlert not defined');\n            }),\n          updateIsLoadingModalVisible: this.updateIsLoadingModalVisible,\n          connectSocket: this.socketManager.connectSocket,\n          updateSocket: this.updateSocket,\n          updateValidated: this.updateValidated,\n          updateApiUserName: this.updateApiUserName,\n          updateApiToken: this.updateApiToken,\n          updateLink: this.updateLink,\n          updateRoomName: this.updateRoomName,\n          updateMember: this.updateMember,\n        },\n        credentials: this.credentials,\n      }),\n    };\n\n    this.PrejoinPageComponent = { ...PrejoinComp };\n\n    this.cdr.detectChanges();\n  };\n\n  ngOnInit() {\n    if (this.PrejoinPage) {\n      this.updatePrejoinPageComponent();\n    }\n\n    this.setupResizeListener();\n    if (this.validated) {\n      this.connectAndAddSocketMethods();\n    }\n\n    this.mainHeightWidthSubscription = this.mainHeightWidth.subscribe(() => {\n      this.updateMainVideoSize();\n    });\n\n    this.recordingSubscription = combineLatest([\n      this.recordPaused,\n      this.recordStarted,\n      this.recordStopped,\n      this.recordResumed,\n      this.recordingProgressTime,\n      this.showRecordButtons,\n      this.islevel,\n    ]).subscribe(\n      ([\n        recordPaused,\n        recordStarted,\n        recordStopped,\n        recordResumed,\n        recordingProgressTime,\n        showRecordButtons,\n        islevel,\n      ]) => {\n        if (\n          recordPaused ||\n          recordStarted ||\n          recordStopped ||\n          recordResumed ||\n          recordingProgressTime ||\n          showRecordButtons ||\n          islevel\n        ) {\n          this.updateRecordButtons();\n        }\n      },\n    );\n\n    this.ScreenboardSubscription = combineLatest([\n      this.shared,\n      this.componentSizes,\n      this.annotateScreenStream,\n    ]).subscribe(([shared, componentSizes]) => {\n      this.ScreenboardWidget = {\n        component: Screenboard,\n        inputs: {\n          customWidth: componentSizes.mainWidth,\n          customHeight: componentSizes.mainHeight,\n          parameters: this.mediaSFUParameters,\n          showAspect: shared,\n        },\n      };\n    });\n    this.validatedSubscription = this.validated.subscribe((validated) => {\n      if (validated) {\n        this.handleValidated();\n      }\n    });\n    this.islevelSubscription = this.islevel.subscribe((islevel) => {\n      if (islevel) {\n        this.updateCustomMenuButtons();\n      }\n    });\n    this.coHostSubscription = combineLatest([this.coHost, this.coHostResponsibility]).subscribe(\n      ([coHost, coHostResponsibility]) => {\n        if (coHost || coHostResponsibility) {\n          this.updateCustomMenuButtons();\n        }\n      },\n    );\n\n    // Subscribe to changes in BehaviorSubject and update the buttons accordingly\n    this.buttonSubscriptions.push(\n      this.micActive.subscribe((value) => {\n        this.updateButtonState('micActive', value);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.videoActive.subscribe((value) => {\n        this.updateButtonState('videoActive', value);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.screenShareActive.subscribe((value) => {\n        this.updateButtonState('screenShareActive', value);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.showMessagesBadge.subscribe((value) => {\n        this.updateButtonState('showMessagesBadge', value);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.totalReqWait.subscribe(() => {\n        this.updateButtonState('showMenuBadge', true);\n      }),\n    );\n\n    this.buttonSubscriptions.push(\n      this.participantsCounter.subscribe((value) => {\n        this.updateMenuParticipantsWidget(value);\n      }),\n    );\n\n    this.mediaSFUParameters = {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('orientationchange', this.handleResize);\n    if (this.mainHeightWidthSubscription) {\n      this.mainHeightWidthSubscription.unsubscribe();\n    }\n    if (this.validatedSubscription) {\n      this.validatedSubscription.unsubscribe();\n    }\n    if (this.islevelSubscription) {\n      this.islevelSubscription.unsubscribe();\n    }\n    if (this.coHostSubscription) {\n      this.coHostSubscription.unsubscribe();\n    }\n    if (this.ScreenboardSubscription) {\n      this.ScreenboardSubscription.unsubscribe();\n    }\n    if (this.recordingSubscription) {\n      this.recordingSubscription.unsubscribe();\n    }\n  }\n\n  updateMainVideoSize = async () => {\n    if (!this.lock_screen.value && !this.shared.value) {\n      this.prepopulateUserMedia.prepopulateUserMedia({\n        name: this.hostLabel.value,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n    } else {\n      if (!this.first_round.value) {\n        this.prepopulateUserMedia.prepopulateUserMedia({\n          name: this.hostLabel.value,\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        });\n      }\n    }\n  };\n\n  async connectAndAddSocketMethods() {\n    this.mediaSFUParameters = {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n    const socket_ = await this.connect_Socket(this.apiUserName.value, '', this.apiToken.value);\n    if (socket_) {\n      this.updateSocket(socket_);\n    }\n  }\n\n  async handleValidated() {\n    this.updateAllVideoStreams([\n      { producerId: 'youyou', stream: undefined, id: 'youyou', name: 'youyou' },\n    ]);\n\n    this.updateStreamNames([{ id: 'youyou', name: 'youyou', producerId: '' }]);\n\n    if (this.validated.value) {\n\n      try {\n        if (!this.localUIMode.value) {\n          await this.connectAndAddSocketMethods();\n          this.updateIsLoadingModalVisible(true);\n        } else {\n          this.updateIsLoadingModalVisible(false);\n        }\n      } catch (error) {\n        console.log('error connectAndaAddSocketMethods', error);\n      }\n\n      this.startMeetingProgressTimer.startMeetingProgressTimer({\n        startTime: Date.now() / 1000,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n\n    }\n  }\n\n  @HostListener('window:resize')\n  @HostListener('window:orientationchange')\n  async handleResize() {\n    let fraction = 0;\n\n    if (\n      window.innerHeight < window.innerWidth &&\n      (this.eventType.value == 'webinar' || this.eventType.value == 'conference')\n    ) {\n      const currentHeight = window.innerHeight;\n      fraction = Number((40 / currentHeight).toFixed(3));\n      if (fraction != this.controlHeight.value) {\n        this.updateControlHeight(Number(fraction));\n      }\n    } else {\n      // Set default control button height for portrait mode or other event types\n      const currentHeight = window.innerHeight;\n      fraction = Number((40 / currentHeight).toFixed(3));\n      fraction = Number(fraction);\n      if (fraction != this.controlHeight.value) {\n        this.updateControlHeight(Number(fraction));\n      }\n    }\n\n    const dimensions = this.computeDimensionsMethod({\n      containerWidthFraction: 1,\n      containerHeightFraction: 1,\n      mainSize: this.mainHeightWidth.value,\n      doStack: true,\n      defaultFraction:\n        this.eventType.value == 'webinar' || this.eventType.value == 'conference'\n          ? 1 - fraction\n          : 1,\n    });\n\n    this.updateComponentSizes(dimensions);\n\n    const orientation = this.checkOrientation();\n    if (orientation == 'portrait') {\n      if (!this.isWideScreen.value) {\n        if (this.shareScreenStarted.value || this.shared.value) {\n          this.updateScreenForceFullDisplay(true);\n        }\n      }\n    }\n\n    // Updates the main grid view\n    await this.prepopulateUserMedia.prepopulateUserMedia({\n      name: this.hostLabel.value,\n      parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n    });\n    // Updates the mini grid view\n    await this.onScreenChanges.onScreenChanges({\n      changed: true,\n      parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n    });\n  }\n\n  async disconnectAllSockets(consume_sockets: ConsumeSocket[]): Promise<void> {\n    for (const socket of consume_sockets) {\n      try {\n        const ip = Object.keys(socket)[0];\n        await socket[ip].disconnect();\n      } catch (error) {\n        console.log(`Error disconnecting socket with IP: ${Object.keys(socket)[0]}`, error);\n      }\n    }\n  }\n\n  async closeAndReset() {\n    //close and clean up all sockets, modals,... and reset all states to initial values\n\n    this.updateIsMessagesModalVisible(false);\n    this.updateIsParticipantsModalVisible(false);\n    this.updateIsWaitingModalVisible(false);\n    this.updateIsRequestsModalVisible(false);\n    this.updateIsCoHostModalVisible(false);\n    this.updateIsSettingsModalVisible(false);\n    this.updateIsDisplaySettingsModalVisible(false);\n    this.updateIsMediaSettingsModalVisible(false);\n    this.updateIsMenuModalVisible(false);\n    this.updateIsShareEventModalVisible(false);\n    this.updateIsConfirmExitModalVisible(false);\n    await this.disconnectAllSockets(this.consume_sockets.value);\n    await this.updateStatesToInitialValues();\n    this.updateMeetingProgressTime('00:00:00');\n    this.updateMeetingElapsedTime(0);\n    this.updateRecordingProgressTime('00:00:00');\n    this.updateRecordElapsedTime(0);\n    this.updateShowRecordButtons(false);\n\n    this.updateIsConfigureWhiteboardModalVisible(false);\n    this.updateIsWhiteboardModalVisible(false);\n    this.updateIsMenuModalVisible(false);\n    this.updateIsRecordingModalVisible(false);\n    this.updateIsPollModalVisible(false);\n    this.updateIsBreakoutRoomsModalVisible(false);\n    this.updateIsBackgroundModalVisible(false);\n    this.updateIsLoadingModalVisible(false);\n    this.updateIsConfirmHereModalVisible(false);\n\n    await sleep({ ms: 500 });\n    this.updateValidated(false);\n    //if on web, reload the page\n    window.location.reload();\n  }\n\n  computeDimensionsMethod = ({\n    containerWidthFraction = 1,\n    containerHeightFraction = 1,\n    mainSize,\n    doStack = true,\n    defaultFraction,\n  }: {\n    containerWidthFraction?: number;\n    containerHeightFraction?: number;\n    mainSize: number;\n    doStack?: boolean;\n    defaultFraction: number;\n  }): ComponentSizes => {\n    const parentWidth = window.innerWidth * containerWidthFraction;\n    const parentHeight = window.innerHeight * containerHeightFraction * defaultFraction;\n    let isWideScreen = parentWidth >= 768;\n\n    if (!isWideScreen && parentWidth > 1.5 * parentHeight) {\n      isWideScreen = true;\n    }\n\n    this.updateIsWideScreen(isWideScreen);\n\n    const dimensions = this.calculateDimensions({\n      parentWidth,\n      parentHeight,\n      isWideScreen,\n      mainSize,\n      doStack,\n    });\n    return dimensions;\n  };\n\n  calculateDimensions({\n    parentWidth,\n    parentHeight,\n    isWideScreen,\n    mainSize,\n    doStack,\n  }: {\n    parentWidth: number;\n    parentHeight: number;\n    isWideScreen: boolean;\n    mainSize: number;\n    doStack: boolean;\n  }): ComponentSizes {\n    if (doStack) {\n      return isWideScreen\n        ? {\n            mainHeight: Math.floor(parentHeight),\n            otherHeight: Math.floor(parentHeight),\n            mainWidth: Math.floor((mainSize / 100) * parentWidth),\n            otherWidth: Math.floor(((100 - mainSize) / 100) * parentWidth),\n          }\n        : {\n            mainHeight: Math.floor((mainSize / 100) * parentHeight),\n            otherHeight: Math.floor(((100 - mainSize) / 100) * parentHeight),\n            mainWidth: Math.floor(parentWidth),\n            otherWidth: Math.floor(parentWidth),\n          };\n    } else {\n      return {\n        mainHeight: Math.floor(parentHeight),\n        otherHeight: Math.floor(parentHeight),\n        mainWidth: Math.floor(parentWidth),\n        otherWidth: Math.floor(parentWidth),\n      };\n    }\n  }\n\n  handleOrientationChange() {\n    window.addEventListener('resize', this.handleResize.bind(this));\n    window.addEventListener('orientationchange', this.handleResize.bind(this));\n  }\n\n  setupResizeListener() {\n    this.handleResize();\n  }\n\n  orientation = window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';\n\n  async joinRoom(data: {\n    socket: Socket;\n    roomName: string;\n    islevel: string;\n    member: string;\n    sec: string;\n    apiUserName: string;\n  }): Promise<ResponseJoinRoom | null> {\n    const { socket, roomName, islevel, member, sec, apiUserName } = data;\n\n    try {\n      const response: ResponseJoinRoom | null = await this.joinRoomClient.joinRoomClient({\n        socket,\n        roomName,\n        islevel,\n        member,\n        sec,\n        apiUserName,\n      });\n\n      return response;\n    } catch (error) {\n      console.log('Error joining room:', error);\n      throw new Error('Failed to join the room. Please check your connection and try again.');\n    }\n  }\n\n  async join_Room({\n    socket,\n    roomName,\n    islevel,\n    member,\n    sec,\n    apiUserName,\n  }: {\n    socket: Socket;\n    roomName: string;\n    islevel: string;\n    member: string;\n    sec: string;\n    apiUserName: string;\n  }): Promise<void> {\n    const data: ResponseJoinRoom | null = await this.joinRoom({\n      socket: socket,\n      roomName: roomName,\n      islevel: islevel,\n      member: member,\n      sec: sec,\n      apiUserName: apiUserName,\n    });\n\n    if (data && data.success) {\n      this.roomData.next(data);\n\n      try {\n        this.updateRoomParametersClient.updateRoomParametersClient({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n            data: data,\n          },\n        });\n\n        if (data.isHost) {\n          this.updateIslevel('2');\n        } else {\n          this.updateIslevel('1');\n        }\n\n        if (data.secureCode) {\n          this.updateAdminPasscode(data.secureCode);\n        }\n\n        if (data.rtpCapabilities) {\n          const device_ = await this.createDeviceClient.createDeviceClient({\n            rtpCapabilities: data.rtpCapabilities,\n          });\n\n          if (device_) {\n            this.device.next(device_);\n          }\n        }\n      } catch {\n        /* handle error */\n      }\n    } else {\n      this.updateValidated(false);\n      try {\n        if (this.showAlert && data?.reason) {\n          this.showAlert({ message: data?.reason, type: 'danger', duration: 3000 });\n        }\n      } catch {\n        /* handle error */\n      }\n    }\n  }\n\n  onParticipantsFilterChange = (value: string): void => {\n    if (value && value.length > 0) {\n      this.filteredParticipants.next(\n        this.participants.value.filter((participant) =>\n          participant.name.toLowerCase().includes(value.toLowerCase()),\n        ),\n      );\n      this.participantsCounter.next(this.filteredParticipants.value.length);\n    } else {\n      this.filteredParticipants.next(this.participants.value);\n      this.participantsCounter.next(this.participants.value.length);\n    }\n  };\n\n  updateStatesToInitialValues = async () => {\n    const initialValues = initialValuesState as { [key: string]: any };\n    const updateFunctions = this.getAllParams() as unknown as {\n      [key: string]: (value: any) => void;\n    };\n\n    for (const key in initialValues) {\n      if (Object.prototype.hasOwnProperty.call(initialValues, key)) {\n        const updateFunctionName = `update${key.charAt(0).toUpperCase() + key.slice(1)}`;\n        const updateFunction = updateFunctions[updateFunctionName];\n\n        if (typeof updateFunction === 'function') {\n          try {\n            updateFunction(initialValues[key]);\n          } catch {\n            /* handle error */\n          }\n        }\n      }\n    }\n  };\n\n  faRecordVinyl = faRecordVinyl;\n  faPlayCircle = faPlayCircle;\n  faPauseCircle = faPauseCircle;\n  faStopCircle = faStopCircle;\n  faDotCircle = faDotCircle;\n  faCog = faCog;\n  faUsers = faUsers;\n  faClock = faClock;\n  faUserPlus = faUserPlus;\n  faTools = faTools;\n  faDesktop = faDesktop;\n  faPoll = faPoll;\n  faUserFriends = faUserFriends;\n  faChalkboardTeacher = faChalkboardTeacher;\n  faMicrophone = faMicrophone;\n  faMicrophoneSlash = faMicrophoneSlash;\n  faVideo = faVideo;\n  faVideoSlash = faVideoSlash;\n  faPhone = faPhone;\n  faBars = faBars;\n  faComments = faComments;\n  faChartBar = faChartBar;\n\n  onCloseMenuModal = () => {\n    this.updateIsMenuModalVisible(false);\n  };\n\n  onEventSettingsClose = () => {\n    this.updateIsSettingsModalVisible(false);\n  };\n\n  onCoHostClose = () => {\n    this.updateIsCoHostModalVisible(false);\n  };\n\n  onMediaSettingsClose = () => {\n    this.updateIsMediaSettingsModalVisible(false);\n  };\n\n  onDisplaySettingsClose = () => {\n    this.updateIsDisplaySettingsModalVisible(false);\n  };\n\n  onPollClose = () => {\n    this.updateIsPollModalVisible(false);\n  };\n\n  onBreakoutRoomsClose = () => {\n    this.updateIsBreakoutRoomsModalVisible(false);\n  };\n\n  onConfigureWhiteboardClose = () => {\n    this.updateIsConfigureWhiteboardModalVisible(false);\n  };\n\n  onMessagesClose = () => {\n    this.updateIsMessagesModalVisible(false);\n  };\n\n  onRecordingClose = () => {\n    this.updateIsRecordingModalVisible(false);\n  };\n\n  onParticipantsClose = () => {\n    this.updateIsParticipantsModalVisible(false);\n  };\n\n  onBackgroundClose = () => {\n    this.updateIsBackgroundModalVisible(false);\n  };\n\n  onConfirmExitClose = () => {\n    this.updateIsConfirmExitModalVisible(false);\n  };\n\n  onConfirmHereClose = () => {\n    this.updateIsConfirmHereModalVisible(false);\n  };\n\n  onScreenboardClose = () => {\n    this.updateIsScreenboardModalVisible(false);\n  };\n\n  onShareEventClose = () => {\n    this.updateIsShareEventModalVisible(false);\n  };\n\n  onAlertHide = () => {\n    this.updateAlertVisible(false);\n  };\n\n  ScreenboardWidget = {\n    component: Screenboard,\n    inputs: {\n      customWidth: this.componentSizes.value.mainWidth,\n      customHeight: this.componentSizes.value.mainHeight,\n      parameters: this.mediaSFUParameters,\n      showAspect: this.shared.value,\n    },\n  };\n\n  recordTimerWidget = {\n    component: RecordTimerWidget,\n    injector: this.createInjector({ recordingProgressTime: this.recordingProgressTime.value }),\n  };\n\n  updateRecordTimerWidget = (\n    recordingProgressTime: string = this.recordingProgressTime.value,\n  ): { component: any; injector: Injector } => {\n    const recordTimerWidget = {\n      component: RecordTimerWidget,\n      injector: this.createInjector({ recordingProgressTime: recordingProgressTime }),\n    };\n\n    this.recordTimerWidget = { ...recordTimerWidget };\n\n    this.cdr.markForCheck();\n\n    return recordTimerWidget;\n  };\n\n  recordButtons: MainButtonAlt[] = [];\n\n  recordButtonsArray: MainButtonAlt[] = [\n    {\n      icon: this.faPlayCircle,\n      active: () => !this.recordPaused.value,\n      onPress: () =>\n        this.updateRecording.updateRecording({\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      alternateIcon: this.faPauseCircle,\n      show: () => true,\n    },\n    {\n      icon: this.faStopCircle,\n      active: () => false,\n      onPress: () =>\n        this.stopRecording.stopRecording({\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'black',\n      show: () => true,\n    },\n    {\n      customComponent: () => this.updateRecordTimerWidget(),\n      show: () => true,\n      active: () => false,\n    },\n    {\n      icon: this.faDotCircle,\n      active: () => false,\n      onPress: () => console.log('Status pressed'),\n      activeColor: 'black',\n      inActiveColor: () => (this.recordPaused.value ? 'yellow' : 'red'),\n      show: () => true,\n    },\n    {\n      icon: this.faCog,\n      active: () => false,\n      onPress: () =>\n        this.launchRecording.launchRecording({\n          updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n          isRecordingModalVisible: this.isRecordingModalVisible.value,\n          showAlert: this.showAlert.bind(this),\n          stopLaunchRecord: this.stopLaunchRecord.value,\n          canLaunchRecord: this.canLaunchRecord.value,\n          recordingAudioSupport: this.recordingAudioSupport.value,\n          recordingVideoSupport: this.recordingVideoSupport.value,\n          updateCanRecord: this.updateCanRecord.bind(this),\n          updateClearedToRecord: this.updateClearedToRecord.bind(this),\n          recordStarted: this.recordStarted.value,\n          recordPaused: this.recordPaused.value,\n          localUIMode: this.localUIMode.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'black',\n      show: () => true,\n    },\n  ];\n\n  async updateRecordButtons() {\n    const recordButtons = this.recordButtonsArray.map((button) => {\n      return {\n        ...button,\n        active: typeof button.active === 'function' ? button.active() : button.active,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        customComponent: button.customComponent\n          ? typeof button.customComponent === 'function'\n            ? button.customComponent()\n            : button.customComponent\n          : undefined,\n        activeColor:\n          typeof button.inActiveColor === 'function'\n            ? button.inActiveColor()\n            : button.inActiveColor,\n        inActiveColor:\n          typeof button.inActiveColor === 'function'\n            ? button.inActiveColor()\n            : button.inActiveColor,\n      };\n    });\n    this.recordButtons = [...recordButtons];\n    await this.updateMenuRecordWidget(recordButtons);\n    this.updateCustomMenuButtons();\n\n    this.cdr.markForCheck();\n  }\n\n  // Create instances of the custom widgets\n  menuWidget = {\n    component: MenuWidget,\n    injector: this.createInjector({\n      icon: this.faBars,\n      badgeValue: this.totalReqWait.value,\n      iconColor: 'black',\n      showBadge: true,\n    }),\n  };\n\n  messageWidget = {\n    component: MessageWidget,\n    injector: this.createInjector({\n      icon: this.faComments,\n      showBadge: this.showMessagesBadge.value,\n      badgeValue: 1,\n      iconColor: 'black',\n    }),\n  };\n\n  menuRecordWidget = {\n    component: MenuRecordWidget,\n    injector: this.createInjector({\n      buttons: this.recordButtons,\n      showAspect: true,\n      direction: 'horizontal',\n    }),\n  };\n\n  updateMenuRecordWidget = (recordButtons: MainButtonAlt[] = this.recordButtons): any => {\n    const menuRecordWidget = {\n      component: MenuRecordWidget,\n      injector: this.createInjector({\n        buttons: recordButtons,\n        showAspect: true,\n        direction: 'horizontal',\n      }),\n    };\n\n    this.menuRecordWidget = { ...menuRecordWidget };\n\n    this.cdr.markForCheck();\n\n    return menuRecordWidget;\n  };\n\n  menuParticipantsWidget = {\n    component: MenuParticipantsWidget,\n    injector: this.createInjector({\n      icon: this.faChartBar,\n      participantsCounter: this.participantsCounter.value,\n      iconColor: 'black',\n    }),\n  };\n\n  updateMenuParticipantsWidget = (count: number = this.participantsCounter.value): any => {\n    const menuParticipantsWidget = {\n      component: MenuParticipantsWidget,\n      injector: this.createInjector({\n        icon: this.faChartBar,\n        participantsCounter: count,\n        iconColor: 'black',\n      }),\n    };\n\n    this.menuParticipantsWidget = { ...menuParticipantsWidget };\n\n    this.cdr.markForCheck();\n\n    return menuParticipantsWidget;\n  };\n\n  customMenuButtonsArray: MainCustomButton[] = [\n    {\n      icon: this.faRecordVinyl,\n      text: 'Record',\n      action: () =>\n        this.launchRecording.launchRecording({\n          updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n          isRecordingModalVisible: this.isRecordingModalVisible.value,\n          showAlert: this.showAlert.bind(this),\n          stopLaunchRecord: this.stopLaunchRecord.value,\n          canLaunchRecord: this.canLaunchRecord.value,\n          recordingAudioSupport: this.recordingAudioSupport.value,\n          recordingVideoSupport: this.recordingVideoSupport.value,\n          updateCanRecord: this.updateCanRecord.bind(this),\n          updateClearedToRecord: this.updateClearedToRecord.bind(this),\n          recordStarted: this.recordStarted.value,\n          recordPaused: this.recordPaused.value,\n          localUIMode: this.localUIMode.value,\n        }),\n      show: () => !this.showRecordButtons.value && this.islevel.value == '2',\n    },\n    {\n      customComponent: () => this.updateMenuRecordWidget(),\n      show: () => this.showRecordButtons.value && this.islevel.value == '2',\n      action: () => console.log('record buttons pressed'),\n    },\n    {\n      icon: this.faCog,\n      text: 'Event Settings',\n      action: () =>\n        this.launchSettings.launchSettings({\n          updateIsSettingsModalVisible: this.updateIsSettingsModalVisible.bind(this),\n          isSettingsModalVisible: this.isSettingsModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faUsers,\n      text: 'Requests',\n      action: () =>\n        this.launchRequests.launchRequests({\n          updateIsRequestsModalVisible: this.updateIsRequestsModalVisible.bind(this),\n          isRequestsModalVisible: this.isRequestsModalVisible.value,\n        }),\n      show: () =>\n        this.islevel.value == '2' ||\n        ((this.coHostResponsibility.value &&\n          this.coHost.value &&\n          this.coHost.value === this.member.value &&\n          !!this.coHostResponsibility?.value?.find((item) => item.name === 'media')?.value) ??\n          false) ||\n        false,\n    },\n    {\n      icon: this.faClock,\n      text: 'Waiting',\n      action: () =>\n        this.launchWaiting.launchWaiting({\n          updateIsWaitingModalVisible: this.updateIsWaitingModalVisible.bind(this),\n          isWaitingModalVisible: this.isWaitingModalVisible.value,\n        }),\n      show: () =>\n        this.islevel.value == '2' ||\n        (this.coHostResponsibility.value &&\n          this.coHost.value &&\n          this.coHost.value === this.member.value &&\n          this.coHostResponsibility?.value?.find((item) => item.name === 'waiting')?.value ===\n            true) ||\n        false,\n    },\n    {\n      icon: this.faUserPlus,\n      text: 'Co-host',\n      action: () =>\n        this.launchCoHost.launchCoHost({\n          updateIsCoHostModalVisible: this.updateIsCoHostModalVisible.bind(this),\n          isCoHostModalVisible: this.isCoHostModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faTools,\n      text: 'Set Media',\n      action: () =>\n        this.launchMediaSettings.launchMediaSettings({\n          updateIsMediaSettingsModalVisible: this.updateIsMediaSettingsModalVisible.bind(this),\n          isMediaSettingsModalVisible: this.isMediaSettingsModalVisible.value,\n          audioInputs: this.audioInputs.value,\n          videoInputs: this.videoInputs.value,\n          updateAudioInputs: this.updateAudioInputs.bind(this),\n          updateVideoInputs: this.updateVideoInputs.bind(this),\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faDesktop,\n      text: 'Display',\n      action: () =>\n        this.launchDisplaySettings.launchDisplaySettings({\n          updateIsDisplaySettingsModalVisible: this.updateIsDisplaySettingsModalVisible.bind(this),\n          isDisplaySettingsModalVisible: this.isDisplaySettingsModalVisible.value,\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faPoll,\n      text: 'Poll',\n      action: () =>\n        this.launchPoll.launchPoll({\n          updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n          isPollModalVisible: this.isPollModalVisible.value,\n        }),\n      show: () => true,\n    },\n    {\n      icon: this.faUserFriends,\n      text: 'Breakout Rooms',\n      action: () =>\n        this.launchBreakoutRooms.launchBreakoutRooms({\n          updateIsBreakoutRoomsModalVisible: this.updateIsBreakoutRoomsModalVisible.bind(this),\n          isBreakoutRoomsModalVisible: this.isBreakoutRoomsModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n    {\n      icon: this.faChalkboardTeacher,\n      text: 'Whiteboard',\n      action: () =>\n        this.launchConfigureWhiteboard.launchConfigureWhiteboard({\n          updateIsConfigureWhiteboardModalVisible:\n            this.updateIsConfigureWhiteboardModalVisible.bind(this),\n          isConfigureWhiteboardModalVisible: this.isConfigureWhiteboardModalVisible.value,\n        }),\n      show: () => this.islevel.value == '2',\n    },\n  ];\n\n  customMenuButtons: MainCustomButton[] = [];\n\n  updateCustomMenuButtons() {\n    this.customMenuButtons = this.customMenuButtonsArray.map((button) => {\n      return {\n        ...button,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        customComponent: button.customComponent\n          ? typeof button.customComponent === 'function'\n            ? button.customComponent()\n            : button.customComponent\n          : undefined,\n      };\n    });\n  }\n\n  screenShareWidget = {\n    component: ScreenShareWidget,\n    injector: this.createInjector({ disabled: !this.screenShareActive.value }),\n  };\n\n  controlButtons = [\n    {\n      icon: this.faMicrophoneSlash,\n      alternateIcon: this.faMicrophone,\n      active: this.micActive.value,\n      onPress: () =>\n        this.clickAudio.clickAudio({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: this.audioSwitching.value,\n      show: true,\n    },\n    {\n      icon: this.faVideoSlash,\n      alternateIcon: this.faVideo,\n      active: this.videoActive.value,\n      onPress: () =>\n        this.clickVideo.clickVideo({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n            MediaStream,\n            MediaStreamTrack,\n            mediaDevices: MediaDevices,\n            device: this.device.value,\n            socket: this.socket.value,\n            showAlert: this.showAlert.bind(this),\n            checkPermission: this.checkPermission.checkPermission,\n            streamSuccessVideo: this.streamSuccessVideo.streamSuccessVideo,\n            hasCameraPermission: this.hasCameraPermission.value,\n            requestPermissionCamera: this.requestPermissionCamera.bind(this),\n            checkMediaPermission: 'web' !== 'web',\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: this.videoSwitching.value,\n      show: true,\n    },\n    {\n      //inverted active for inactive state\n      icon: faDesktop,\n      alternateIconComponent: this.screenShareWidget,\n      active: true,\n      onPress: () =>\n        this.clickScreenShare.clickScreenShare({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: false,\n      show: true,\n    },\n    {\n      icon: this.faPhone,\n      active: this.endCallActive.value,\n      onPress: () =>\n        this.launchConfirmExit.launchConfirmExit({\n          updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n          isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      disabled: false,\n      show: true,\n    },\n    {\n      icon: this.faUsers,\n      active: this.participantsActive.value,\n      onPress: () =>\n        this.launchParticipants.launchParticipants({\n          updateIsParticipantsModalVisible: this.updateIsParticipantsModalVisible.bind(this),\n          isParticipantsModalVisible: this.isParticipantsModalVisible.value,\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      disabled: false,\n      show: true,\n    },\n    {\n      customComponent: this.menuWidget,\n      customName: 'Menu',\n      onPress: () =>\n        this.launchMenuModal.launchMenuModal({\n          updateIsMenuModalVisible: this.updateIsMenuModalVisible.bind(this),\n          isMenuModalVisible: this.isMenuModalVisible.value,\n        }),\n      show: true,\n    },\n    {\n      customComponent: this.messageWidget,\n      customName: 'Messages',\n      onPress: () =>\n        this.launchMessages.launchMessages({\n          updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n          isMessagesModalVisible: this.isMessagesModalVisible.value,\n        }),\n      show: true,\n    },\n  ];\n\n  async connect_Socket(\n    apiUserName: string,\n    apiKey: string,\n    apiToken: string,\n  ): Promise<Socket | null> {\n    if (this.socket.value && this.socket.value.id) {\n      this.socket.value.on('disconnect', async () => {\n        await this.disconnect.disconnect({\n          showAlert: this.showAlert.bind(this),\n          redirectURL: this.redirectURL.value,\n          onWeb: true,\n          updateValidated: this.updateValidated.bind(this),\n        });\n        if (this.videoAlreadyOn.value) {\n          await this.clickVideo.clickVideo({\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        }\n        if (this.audioAlreadyOn.value) {\n          await this.clickAudio.clickAudio({\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        }\n\n        await this.closeAndReset();\n      });\n\n      this.socket.value.on('allMembers', async (membersData: AllMembersData) => {\n        if (membersData) {\n          await this.allMembers.allMembers({\n            apiUserName: apiUserName,\n            apiKey: '', //not recommended - use apiToken instead. Use for testing/development only\n            apiToken: apiToken,\n            members: membersData.members,\n            requestss: membersData.requests ? membersData.requests : this.requestList.value,\n            coHoste: membersData.coHost ? membersData.coHost : this.coHost.value,\n            coHostRes: membersData.coHostResponsibilities\n              ? membersData.coHostResponsibilities\n              : this.coHostResponsibility.value,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            consume_sockets: this.consume_sockets.value,\n          });\n        }\n      });\n\n      this.socket.value.on('allMembersRest', async (membersData: AllMembersRestData) => {\n        if (membersData) {\n          await this.allMembersRest.allMembersRest({\n            apiUserName: apiUserName,\n            apiKey: '', // not recommended - use apiToken instead. Use for testing/development only\n            members: membersData.members,\n            apiToken: apiToken,\n            settings: membersData.settings,\n            coHoste: membersData.coHost ? membersData.coHost : this.coHost.value,\n            coHostRes: membersData.coHostResponsibilities\n              ? membersData.coHostResponsibilities\n              : this.coHostResponsibility.value,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            consume_sockets: this.consume_sockets.value,\n          });\n        }\n      });\n\n      this.socket.value.on('userWaiting', async ({ name }: { name: string }) => {\n        await this.userWaiting.userWaiting({\n          name,\n          showAlert: this.showAlert.bind(this),\n          totalReqWait: this.totalReqWait.value,\n          updateTotalReqWait: this.updateTotalReqWait.bind(this),\n        });\n      });\n\n      this.socket.value.on('personJoined', async ({ name }: { name: string }) => {\n        this.personJoined.personJoined({\n          name,\n          showAlert: this.showAlert.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'allWaitingRoomMembers',\n        async (waiting_data: AllWaitingRoomMembersData) => {\n          await this.allWaitingRoomMembers.allWaitingRoomMembers({\n            waitingParticipants: waiting_data.waitingParticipants\n              ? waiting_data.waitingParticipants\n              : waiting_data.waitingParticipantss\n              ? waiting_data.waitingParticipantss\n              : this.waitingRoomList.value,\n            updateTotalReqWait: this.updateTotalReqWait.bind(this),\n            updateWaitingRoomList: this.updateWaitingRoomList.bind(this),\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'roomRecordParams',\n        async ({ recordParams }: { recordParams: RecordParams }) => {\n          this.roomRecordParams.roomRecordParams({\n            recordParams,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('ban', async ({ name }: { name: string }) => {\n        await this.banParticipant.banParticipant({\n          name,\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        });\n      });\n\n      this.socket.value.on('updatedCoHost', async (cohost_data: UpdatedCoHostData) => {\n        await this.updatedCoHost.updatedCoHost({\n          coHost: cohost_data.coHost ? cohost_data.coHost : this.coHost.value,\n          coHostResponsibility: cohost_data.coHostResponsibilities\n            ? cohost_data.coHostResponsibilities\n            : this.coHostResponsibility.value,\n          youAreCoHost: this.youAreCoHost.value,\n          updateCoHost: this.updateCoHost.bind(this),\n          updateCoHostResponsibility: this.updateCoHostResponsibility.bind(this),\n          updateYouAreCoHost: this.updateYouAreCoHost.bind(this),\n          showAlert: this.showAlert.bind(this),\n          eventType: this.eventType.value,\n          islevel: this.islevel.value,\n          member: this.member.value,\n        });\n      });\n\n      this.socket.value.on(\n        'participantRequested',\n        async ({ userRequest }: { userRequest: Request }) => {\n          await this.participantRequested.participantRequested({\n            userRequest,\n            requestList: this.requestList.value,\n            waitingRoomList: this.waitingRoomList.value,\n            updateTotalReqWait: this.updateTotalReqWait.bind(this),\n            updateRequestList: this.updateRequestList.bind(this),\n          });\n        },\n      );\n\n      this.socket.value.on('screenProducerId', async ({ producerId }: { producerId: string }) => {\n        this.screenProducerId.screenProducerId({\n          producerId,\n          screenId: this.screenId.value,\n          membersReceived: this.membersReceived.value,\n          shareScreenStarted: this.shareScreenStarted.value,\n          deferScreenReceived: this.deferScreenReceived.value,\n          participants: this.participants.value,\n          updateScreenId: this.updateScreenId.bind(this),\n          updateShareScreenStarted: this.updateShareScreenStarted.bind(this),\n          updateDeferScreenReceived: this.updateDeferScreenReceived.bind(this),\n        });\n      });\n      //settings, updateAudioSetting, updateVideoSetting, updateScreenshareSetting, updateChatSetting\n      this.socket.value.on('updateMediaSettings', async ({ settings }: { settings: Settings }) => {\n        this.updateMediaSettings.updateMediaSettings({\n          settings,\n          updateAudioSetting: this.updateAudioSetting.bind(this),\n          updateVideoSetting: this.updateVideoSetting.bind(this),\n          updateScreenshareSetting: this.updateScreenshareSetting.bind(this),\n          updateChatSetting: this.updateChatSetting.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'producer-media-paused',\n        async ({\n          producerId,\n          kind,\n          name,\n        }: {\n          producerId: string;\n          kind: 'video' | 'audio' | 'screenshare' | 'screen';\n          name: string;\n        }) => {\n          await this.producerMediaPaused.producerMediaPaused({\n            producerId,\n            kind,\n            name,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'producer-media-resumed',\n        async ({ kind, name }: { kind: 'audio'; name: string }) => {\n          await this.producerMediaResumed.producerMediaResumed({\n            kind,\n            name,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'producer-media-closed',\n        async ({\n          producerId,\n          kind,\n        }: {\n          producerId: string;\n          kind: 'video' | 'audio' | 'screenshare' | 'screen';\n        }) => {\n          if (producerId && kind) {\n            await this.producerMediaClosed.producerMediaClosed({\n              producerId,\n              kind,\n              parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            });\n          }\n        },\n      );\n\n      this.socket.value.on(\n        'controlMediaHost',\n        async ({ type }: { type: 'video' | 'audio' | 'screenshare' | 'chat' | 'all' }) => {\n          await this.controlMediaHost.controlMediaHost({\n            type,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('meetingEnded', async () => {\n        await this.meetingEnded.meetingEnded({\n          showAlert: this.showAlert.bind(this),\n          redirectURL: this.redirectURL.value,\n          onWeb: true,\n          eventType: this.eventType.value,\n          updateValidated: this.updateValidated.bind(this),\n        });\n\n        if (this.videoAlreadyOn.value) {\n          await this.clickVideo.clickVideo({\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        }\n        if (this.audioAlreadyOn.value) {\n          await this.clickAudio.clickAudio({\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        }\n\n        await this.closeAndReset();\n      });\n\n      this.socket.value.on('disconnectUserSelf', async () => {\n        await this.disconnectUserSelf.disconnectUserSelf({\n          socket: this.socket.value,\n          member: this.member.value,\n          roomName: this.roomName.value,\n        });\n      });\n\n      this.socket.value.on('receiveMessage', async ({ message }: { message: Message }) => {\n        await this.receiveMessage.receiveMessage({\n          message,\n          messages: this.messages.value,\n          participantsAll: this.participantsAll.value,\n          member: this.member.value,\n          eventType: this.eventType.value,\n          islevel: this.islevel.value,\n          coHost: this.coHost.value,\n          updateMessages: this.updateMessages.bind(this),\n          updateShowMessagesBadge: this.updateShowMessagesBadge.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'meetingTimeRemaining',\n        async ({ timeRemaining }: { timeRemaining: number }) => {\n          await this.meetingTimeRemaining.meetingTimeRemaining({\n            timeRemaining,\n            showAlert: this.showAlert.bind(this),\n            eventType: this.eventType.value,\n          });\n        },\n      );\n\n      this.socket.value.on('meetingStillThere', async () => {\n        this.meetingStillThere.meetingStillThere({\n          updateIsConfirmHereModalVisible: this.updateIsConfirmHereModalVisible.bind(this),\n        });\n      });\n\n      this.socket.value.on('startRecords', async () => {\n        await this.startRecords.startRecords({\n          roomName: this.roomName.value,\n          member: this.member.value,\n          socket: this.socket.value,\n        });\n      });\n\n      this.socket.value.on('reInitiateRecording', async () => {\n        await this.reInitiateRecording.reInitiateRecording({\n          roomName: this.roomName.value,\n          member: this.member.value,\n          socket: this.socket.value,\n          adminRestrictSetting: this.adminRestrictSetting.value,\n        });\n      });\n\n      this.socket.value.on(\n        'updateConsumingDomains',\n        async ({ domains, alt_domains }: UpdateConsumingDomainsData) => {\n          await this.updateConsumingDomains.updateConsumingDomains({\n            domains,\n            alt_domains,\n            apiUserName,\n            apiKey,\n            apiToken,\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'RecordingNotice',\n        async ({ state, userRecordingParam, pauseCount, timeDone }: RecordingNoticeData) => {\n          await this.recordingNotice.RecordingNotice({\n            state,\n            userRecordingParam,\n            pauseCount,\n            timeDone,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on('timeLeftRecording', async ({ timeLeft }: { timeLeft: number }) => {\n        this.timeLeftRecording.timeLeftRecording({\n          timeLeft,\n          showAlert: this.showAlert.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'stoppedRecording',\n        async ({ state, reason }: { state: string; reason: string }) => {\n          await this.stoppedRecording.stoppedRecording({\n            state,\n            reason,\n            showAlert: this.showAlert.bind(this),\n          });\n        },\n      );\n      this.socket.value.on(\n        'hostRequestResponse',\n        ({ requestResponse }: HostRequestResponseData) => {\n          this.hostRequestResponse.hostRequestResponse({\n            requestResponse,\n            showAlert: this.showAlert.bind(this),\n            requestList: this.requestList.value,\n            updateRequestList: this.updateRequestList.bind(this),\n            updateMicAction: this.updateMicAction.bind(this),\n            updateVideoAction: this.updateVideoAction.bind(this),\n            updateScreenAction: this.updateScreenAction.bind(this),\n            updateChatAction: this.updateChatAction.bind(this),\n            updateAudioRequestState: this.updateAudioRequestState.bind(this),\n            updateVideoRequestState: this.updateVideoRequestState.bind(this),\n            updateScreenRequestState: this.updateScreenRequestState.bind(this),\n            updateChatRequestState: this.updateChatRequestState.bind(this),\n            updateAudioRequestTime: this.updateAudioRequestTime.bind(this),\n            updateVideoRequestTime: this.updateVideoRequestTime.bind(this),\n            updateScreenRequestTime: this.updateScreenRequestTime.bind(this),\n            updateChatRequestTime: this.updateChatRequestTime.bind(this),\n            updateRequestIntervalSeconds: this.updateRequestIntervalSeconds.value,\n          });\n        },\n      );\n      this.socket.value.on('pollUpdated', async (data: PollUpdatedData) => {\n        try {\n          await this.pollUpdated.pollUpdated({\n            data,\n            polls: this.polls.value,\n            poll: this.poll.value ? this.poll.value : ({} as Poll),\n            member: this.member.value,\n            islevel: this.islevel.value,\n            showAlert: this.showAlert.bind(this),\n            updatePolls: this.updatePolls.bind(this),\n            updatePoll: this.updatePoll.bind(this),\n            updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n          });\n        } catch {\n          /* handle error */\n        }\n      });\n\n      this.socket.value.on('breakoutRoomUpdated', async (data: BreakoutRoomUpdatedData) => {\n        try {\n          await this.breakoutRoomUpdated.breakoutRoomUpdated({\n            data,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        } catch {\n          /* handle error */\n        }\n      });\n\n      await this.join_Room({\n        socket: this.socket.value,\n        roomName: this.roomName.value,\n        islevel: this.islevel.value,\n        member: this.member.value,\n        sec: this.apiToken.value,\n        apiUserName: this.apiUserName.value,\n      });\n      await this.receiveRoomMessages.receiveRoomMessages({\n        socket: this.socket.value,\n        roomName: this.roomName.value,\n        updateMessages: this.updateMessages.bind(this),\n      });\n      this.prepopulateUserMedia.prepopulateUserMedia({\n        name: this.hostLabel.value,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n\n      return this.socket.value;\n    } else {\n      return null;\n    }\n  }\n}\n","import {\n  Component,\n  HostListener,\n  Injector,\n  ChangeDetectorRef,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { Socket } from 'socket.io-client';\nimport {\n  faMicrophoneSlash,\n  faVideoSlash,\n  faPhone,\n  faComments,\n  faShareAlt,\n  faSync,\n  faVideo,\n  faMicrophone,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { initialValuesState } from '../../methods/utils/initial-values.util';\n\n// Components for display\nimport { MainAspectComponent } from '../display-components/main-aspect-component/main-aspect-component.component';\nimport { LoadingModal } from '../display-components/loading-modal/loading-modal.component';\nimport { ControlButtonsComponentTouch } from '../display-components/control-buttons-component-touch/control-buttons-component-touch.component';\nimport { OtherGridComponent } from '../display-components/other-grid-component/other-grid-component.component';\nimport { MainScreenComponent } from '../display-components/main-screen-component/main-screen-component.component';\nimport { MainContainerComponent } from '../display-components/main-container-component/main-container-component.component';\nimport { AlertComponent } from '../display-components/alert-component/alert.component.component';\nimport { MessagesModal } from '../message-components/messages-modal/messages-modal.component';\nimport { ConfirmExitModal } from '../exit-components/confirm-exit-modal/confirm-exit-modal.component';\nimport { ConfirmHereModal } from '../misc-components/confirm-here-modal/confirm-here-modal.component';\nimport { ShareEventModal } from '../misc-components/share-event-modal/share-event-modal.component';\nimport {\n  WelcomePage,\n  WelcomePageOptions,\n} from '../misc-components/welcome-page/welcome-page.component';\n\n// Pagination and display of media\nimport { FlexibleGrid } from '../display-components/flexible-grid/flexible-grid.component';\nimport { AudioGrid } from '../display-components/audio-grid/audio-grid.component';\n\nimport { MessageWidget } from '../display-components/control-widgets/message-widget.component';\n\nimport {\n  ButtonTouch,\n  ResponseJoinRoom,\n  CoHostResponsibility,\n  EventType,\n  Participant,\n  ConsumeSocket,\n  MeetingRoomParams,\n  VidCons,\n  HParamsType,\n  VParamsType,\n  ScreenParamsType,\n  AParamsType,\n  UserRecordingParams,\n  Stream,\n  AudioDecibels,\n  ScreenState,\n  GridSizes,\n  CustomMediaComponent,\n  Message,\n  WaitingRoomParticipant,\n  ComponentSizes,\n  Transport as TransportType,\n  Shape,\n  Poll,\n  BreakoutParticipant,\n  WhiteboardUser,\n  Request,\n  AllMembersData,\n  AllMembersRestData,\n  SeedData,\n  UpdateConsumingDomainsData,\n  PreJoinPageOptions,\n} from '../../@types/types';\n// Import methods for control\nimport { LaunchMessages } from '../../methods/message-methods/launch-messages.service';\nimport { LaunchConfirmExit } from '../../methods/exit-methods/launch-confirm-exit.service';\n\n// Mediasfu functions -- examples\nimport { SocketManager } from '../../sockets/socket-manager.service';\nimport { JoinRoomClient } from '../../producer-client/producer-client-emits/join-room-client.service';\nimport { UpdateRoomParametersClient } from '../../producer-client/producer-client-emits/update-room-parameters-client.service';\nimport { CreateDeviceClient } from '../../producer-client/producer-client-emits/create-device-client.service';\n\nimport { SwitchVideoAlt } from '../../methods/stream-methods/switch-video-alt.service';\nimport { ClickVideo } from '../../methods/stream-methods/click-video.service';\nimport { ClickAudio } from '../../methods/stream-methods/click-audio.service';\nimport { ClickScreenShare } from '../../methods/stream-methods/click-screen-share.service';\nimport { StreamSuccessVideo } from '../../consumers/stream-success-video.service';\nimport { StreamSuccessAudio } from '../../consumers/stream-success-audio.service';\nimport { StreamSuccessScreen } from '../../consumers/stream-success-screen.service';\nimport { StreamSuccessAudioSwitch } from '../../consumers/stream-success-audio-switch.service';\nimport { CheckPermission } from '../../consumers/check-permission.service';\n\n// Mediasfu consumer functions\nimport { UpdateMiniCardsGrid } from '../../consumers/update-mini-cards-grid.service';\nimport { MixStreams } from '../../consumers/mix-streams.service';\nimport { DispStreams } from '../../consumers/disp-streams.service';\nimport { StopShareScreen } from '../../consumers/stop-share-screen.service';\nimport { CheckScreenShare } from '../../consumers/check-screen-share.service';\nimport { StartShareScreen } from '../../consumers/start-share-screen.service';\nimport { RequestScreenShare } from '../../consumers/request-screen-share.service';\nimport { ReorderStreams } from '../../consumers/reorder-streams.service';\nimport { PrepopulateUserMedia } from '../../consumers/prepopulate-user-media.service';\nimport { GetVideos } from '../../consumers/get-videos.service';\nimport { RePort } from '../../consumers/re-port.service';\nimport { Trigger } from '../../consumers/trigger.service';\nimport { ConsumerResume } from '../../consumers/consumer-resume.service';\nimport { ConnectSendTransportAudio } from '../../consumers/connect-send-transport-audio.service';\nimport { ConnectSendTransportVideo } from '../../consumers/connect-send-transport-video.service';\nimport { ConnectSendTransportScreen } from '../../consumers/connect-send-transport-screen.service';\nimport { ProcessConsumerTransports } from '../../consumers/process-consumer-transports.service';\nimport { ResumePauseStreams } from '../../consumers/resume-pause-streams.service';\nimport { Readjust } from '../../consumers/readjust.service';\nimport { CheckGrid } from '../../consumers/check-grid.service';\nimport { GetEstimate } from '../../consumers/get-estimate.service';\nimport { CalculateRowsAndColumns } from '../../consumers/calculate-rows-and-columns.service';\nimport { AddVideosGrid } from '../../consumers/add-videos-grid.service';\nimport { OnScreenChanges } from '../../consumers/on-screen-changes.service';\nimport { sleep } from '../../methods/utils/sleep.util';\nimport { ChangeVids } from '../../consumers/change-vids.service';\nimport { CompareActiveNames } from '../../consumers/compare-active-names.service';\nimport { CompareScreenStates } from '../../consumers/compare-screen-states.service';\nimport { CreateSendTransport } from '../../consumers/create-send-transport.service';\nimport { ResumeSendTransportAudio } from '../../consumers/resume-send-transport-audio.service';\nimport { ReceiveAllPipedTransports } from '../../consumers/receive-all-piped-transports.service';\nimport { DisconnectSendTransportVideo } from '../../consumers/disconnect-send-transport-video.service';\nimport { DisconnectSendTransportAudio } from '../../consumers/disconnect-send-transport-audio.service';\nimport { DisconnectSendTransportScreen } from '../../consumers/disconnect-send-transport-screen.service';\nimport { ConnectSendTransport } from '../../consumers/connect-send-transport.service';\nimport { GetPipedProducersAlt } from '../../consumers/get-piped-producers-alt.service';\nimport { SignalNewConsumerTransport } from '../../consumers/signal-new-consumer-transport.service';\nimport { ConnectRecvTransport } from '../../consumers/connect-recv-transport.service';\nimport { ReUpdateInter } from '../../consumers/re-update-inter.service';\nimport { UpdateParticipantAudioDecibels } from '../../consumers/update-participant-audio-decibels.service';\nimport { CloseAndResize } from '../../consumers/close-and-resize.service';\nimport { AutoAdjust } from '../../consumers/auto-adjust.service';\nimport { SwitchUserVideoAlt } from '../../consumers/switch-user-video-alt.service';\nimport { SwitchUserVideo } from '../../consumers/switch-user-video.service';\nimport { SwitchUserAudio } from '../../consumers/switch-user-audio.service';\nimport { ReceiveRoomMessages } from '../../consumers/receive-room-messages.service';\nimport { FormatNumber } from '../../methods/utils/format-number.service';\nimport { ConnectIps } from '../../consumers/connect-ips.service';\n\n// Utility imports for meeting and recording functionality\nimport { StartMeetingProgressTimer } from '../../methods/utils/meeting-timer/start-meeting-progress-timer.service';\n\n// Socket methods for participant and meeting management\nimport { ProducerMediaPaused } from '../../producers/socket-receive-methods/producer-media-paused.service';\nimport { ProducerMediaResumed } from '../../producers/socket-receive-methods/producer-media-resumed.service';\nimport { ProducerMediaClosed } from '../../producers/socket-receive-methods/producer-media-closed.service';\nimport { MeetingEnded } from '../../producers/socket-receive-methods/meeting-ended.service';\nimport { DisconnectUserSelf } from '../../producers/socket-receive-methods/disconnect-user-self.service';\nimport { ReceiveMessage } from '../../producers/socket-receive-methods/receive-message.service';\nimport { MeetingTimeRemaining } from '../../producers/socket-receive-methods/meeting-time-remaining.service';\nimport { MeetingStillThere } from '../../producers/socket-receive-methods/meeting-still-there.service';\n\nimport { GetDomains } from '../../producers/socket-receive-methods/get-domains.service';\nimport { UpdateConsumingDomains } from '../../producers/socket-receive-methods/update-consuming-domains.service';\nimport { AllMembers } from '../../producers/socket-receive-methods/all-members.service';\nimport { AllMembersRest } from '../../producers/socket-receive-methods/all-members-rest.service';\nimport { Disconnect } from '../../producers/socket-receive-methods/disconnect.service';\n\nimport { CaptureCanvasStream } from '../../methods/whiteboard-methods/capture-canvas-stream.service';\nimport { ResumePauseAudioStreams } from '../../consumers/resume-pause-audio-streams.service';\nimport { ProcessConsumerTransportsAudio } from '../../consumers/process-consumer-transports-audio.service';\n\nimport {\n  Device,\n  Producer,\n  ProducerOptions,\n  RtpCapabilities,\n  Transport,\n} from 'mediasoup-client/lib/types';\nimport { SelfieSegmentation } from '@mediapipe/selfie_segmentation';\n\nexport type MediasfuChatOptions = {\n  PrejoinPage?: (options: PreJoinPageOptions | WelcomePageOptions) => HTMLElement;\n  credentials?: { apiUserName: string; apiKey: string };\n  useLocalUIMode?: boolean;\n  seedData?: SeedData;\n  useSeed?: boolean;\n  imgSrc?: string;\n};\n\n@Component({\n  selector: 'app-mediasfu-chat',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    CommonModule,\n    AlertComponent,\n    AudioGrid,\n    ControlButtonsComponentTouch,\n    FlexibleGrid,\n    LoadingModal,\n    ConfirmExitModal,\n    MessagesModal,\n    ConfirmHereModal,\n    ShareEventModal,\n    WelcomePage,\n    MainAspectComponent,\n    MainContainerComponent,\n    MainScreenComponent,\n    OtherGridComponent,\n    MessageWidget,\n  ],\n  template: `\n    <div\n      class=\"MediaSFU\"\n      [ngStyle]=\"{\n        height: '100vh',\n        width: '100vw',\n        maxWidth: '100vw',\n        maxHeight: '100vh',\n        overflow: 'hidden'\n      }\"\n    >\n      <ng-container *ngIf=\"!validated.value; else mainContent\">\n        <ng-container\n          *ngComponentOutlet=\"\n            PrejoinPageComponent.component;\n            injector: PrejoinPageComponent.injector\n          \"\n        >\n        </ng-container>\n      </ng-container>\n\n      <ng-template #mainContent>\n        <app-main-container-component>\n          <app-main-aspect-component\n            [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n            [defaultFraction]=\"1 - controlHeight.value\"\n            [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n            [updateIsWideScreen]=\"updateIsWideScreen\"\n            [updateIsMediumScreen]=\"updateIsMediumScreen\"\n            [updateIsSmallScreen]=\"updateIsSmallScreen\"\n          >\n            <app-main-screen-component\n              [doStack]=\"true\"\n              [mainSize]=\"mainHeightWidth.value\"\n              [defaultFraction]=\"1 - controlHeight.value\"\n              [showControls]=\"eventType.value === 'webinar' || eventType.value === 'conference'\"\n              [updateComponentSizes]=\"updateComponentSizes\"\n            >\n              <!-- MainGridComponent removed -->\n\n              <!-- OtherGridComponent -->\n              <app-other-grid-component\n                [height]=\"componentSizes.value.otherHeight\"\n                [width]=\"componentSizes.value.otherWidth\"\n                [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                [showAspect]=\"mainHeightWidth.value !== 100\"\n                [timeBackgroundColor]=\"recordState.value\"\n                [showTimer]=\"mainHeightWidth.value === 0\"\n                [meetingProgressTime]=\"meetingProgressTime.value\"\n              >\n                <!-- AudioGrid -->\n                <app-audio-grid [componentsToRender]=\"audioOnlyStreams.value\"></app-audio-grid>\n\n                <!-- Control Buttons for Chat -->\n                <app-control-buttons-component-touch\n                  [buttons]=\"controlChatButtons\"\n                  [position]=\"'right'\"\n                  [location]=\"'bottom'\"\n                  [direction]=\"'vertical'\"\n                  [showAspect]=\"eventType.value === 'chat'\"\n                ></app-control-buttons-component-touch>\n\n                <!-- Flexible Grid -->\n                <app-flexible-grid\n                  [customWidth]=\"gridSizes.value.gridWidth!\"\n                  [customHeight]=\"gridSizes.value.gridHeight!\"\n                  [rows]=\"gridRows.value\"\n                  [columns]=\"gridCols.value\"\n                  [componentsToRender]=\"otherGridStreams.value[0]\"\n                  [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n                ></app-flexible-grid>\n              </app-other-grid-component>\n            </app-main-screen-component>\n          </app-main-aspect-component>\n\n          <!-- SubAspectComponent removed -->\n        </app-main-container-component>\n      </ng-template>\n\n      <!-- Modals to include -->\n      <app-messages-modal\n        [backgroundColor]=\"\n          eventType.value === 'webinar' || eventType.value === 'conference'\n            ? '#f5f5f5'\n            : 'rgba(255, 255, 255, 0.25)'\n        \"\n        [isMessagesModalVisible]=\"isMessagesModalVisible.value\"\n        [onMessagesClose]=\"onMessagesClose\"\n        [messages]=\"messages.value\"\n        [eventType]=\"eventType.value\"\n        [member]=\"member.value\"\n        [islevel]=\"islevel.value\"\n        [coHostResponsibility]=\"coHostResponsibility.value\"\n        [coHost]=\"coHost.value\"\n        [startDirectMessage]=\"startDirectMessage.value\"\n        [directMessageDetails]=\"directMessageDetails.value\"\n        [updateStartDirectMessage]=\"updateStartDirectMessage\"\n        [updateDirectMessageDetails]=\"updateDirectMessageDetails\"\n        [showAlert]=\"showAlert\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [chatSetting]=\"chatSetting.value\"\n      ></app-messages-modal>\n\n      <app-confirm-exit-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isConfirmExitModalVisible]=\"isConfirmExitModalVisible.value\"\n        [onConfirmExitClose]=\"onConfirmExitClose\"\n        [position]=\"'topRight'\"\n        [member]=\"member.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n        [islevel]=\"islevel.value\"\n      ></app-confirm-exit-modal>\n\n      <app-confirm-here-modal\n        [backgroundColor]=\"'rgba(181, 233, 229, 0.97)'\"\n        [isConfirmHereModalVisible]=\"isConfirmHereModalVisible.value\"\n        [onConfirmHereClose]=\"onConfirmHereClose\"\n        [member]=\"member.value\"\n        [roomName]=\"roomName.value\"\n        [socket]=\"socket.value\"\n      ></app-confirm-here-modal>\n\n      <app-share-event-modal\n        [isShareEventModalVisible]=\"isShareEventModalVisible.value\"\n        [onShareEventClose]=\"onShareEventClose\"\n        [roomName]=\"roomName.value\"\n        [islevel]=\"islevel.value\"\n        [adminPasscode]=\"adminPasscode.value\"\n        [eventType]=\"eventType.value\"\n      ></app-share-event-modal>\n\n      <app-alert-component\n        [visible]=\"alertVisible.value\"\n        [message]=\"alertMessage.value\"\n        [type]=\"alertType.value\"\n        [duration]=\"alertDuration.value\"\n        [onHide]=\"onAlertHide\"\n        textColor=\"#ffffff\"\n      ></app-alert-component>\n\n      <app-loading-modal\n        [isVisible]=\"isLoadingModalVisible.value\"\n        [backgroundColor]=\"'rgba(217, 227, 234, 0.99)'\"\n        displayColor=\"black\"\n      ></app-loading-modal>\n    </div>\n  `,\n  styles: [\n    `\n      .MediaSFU {\n        /* Add any component-specific styles here */\n      }\n    `,\n  ],\n  providers: [CookieService],\n})\nexport class MediasfuChat implements OnInit, OnDestroy {\n  @Input()\n  PrejoinPage: any = WelcomePage;\n  @Input() credentials: { apiUserName: string; apiKey: string } = { apiUserName: '', apiKey: '' };\n  @Input() useLocalUIMode = false;\n  @Input() seedData?: SeedData;\n  @Input() useSeed = false;\n  @Input() imgSrc = 'https://mediasfu.com/images/logo192.png';\n\n  title = 'MediaSFU-Chat';\n\n  private mainHeightWidthSubscription: Subscription | undefined;\n  private validatedSubscription: Subscription | undefined;\n  private islevelSubscription: Subscription | undefined;\n  private coHostSubscription: Subscription | undefined;\n  private ScreenboardSubscription: Subscription | undefined;\n  private recordingSubscription: Subscription | undefined;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private injector: Injector,\n    public updateMiniCardsGrid: UpdateMiniCardsGrid,\n    public mixStreams: MixStreams,\n    public dispStreams: DispStreams,\n    public stopShareScreen: StopShareScreen,\n    public checkScreenShare: CheckScreenShare,\n    public startShareScreen: StartShareScreen,\n    public requestScreenShare: RequestScreenShare,\n    public reorderStreams: ReorderStreams,\n    public prepopulateUserMedia: PrepopulateUserMedia,\n    public getVideos: GetVideos,\n    public rePort: RePort,\n    public trigger: Trigger,\n    public consumerResume: ConsumerResume,\n    public connectSendTransport: ConnectSendTransport,\n    public connectSendTransportAudio: ConnectSendTransportAudio,\n    public connectSendTransportVideo: ConnectSendTransportVideo,\n    public connectSendTransportScreen: ConnectSendTransportScreen,\n    public processConsumerTransports: ProcessConsumerTransports,\n    public resumePauseStreams: ResumePauseStreams,\n    public readjust: Readjust,\n    public checkGrid: CheckGrid,\n    public getEstimate: GetEstimate,\n    public calculateRowsAndColumns: CalculateRowsAndColumns,\n    public addVideosGrid: AddVideosGrid,\n    public onScreenChanges: OnScreenChanges,\n    public changeVids: ChangeVids,\n    public compareActiveNames: CompareActiveNames,\n    public compareScreenStates: CompareScreenStates,\n    public createSendTransport: CreateSendTransport,\n    public resumeSendTransportAudio: ResumeSendTransportAudio,\n    public receiveAllPipedTransports: ReceiveAllPipedTransports,\n    public disconnectSendTransportVideo: DisconnectSendTransportVideo,\n    public disconnectSendTransportAudio: DisconnectSendTransportAudio,\n    public disconnectSendTransportScreen: DisconnectSendTransportScreen,\n    public getPipedProducersAlt: GetPipedProducersAlt,\n    public signalNewConsumerTransport: SignalNewConsumerTransport,\n    public connectRecvTransport: ConnectRecvTransport,\n    public reUpdateInter: ReUpdateInter,\n    public updateParticipantAudioDecibels: UpdateParticipantAudioDecibels,\n    public closeAndResize: CloseAndResize,\n    public autoAdjust: AutoAdjust,\n    public switchUserVideoAlt: SwitchUserVideoAlt,\n    public switchUserVideo: SwitchUserVideo,\n    public switchUserAudio: SwitchUserAudio,\n    public getDomains: GetDomains,\n    public formatNumber: FormatNumber,\n    public connectIps: ConnectIps,\n    public createDeviceClient: CreateDeviceClient,\n\n    public captureCanvasStream: CaptureCanvasStream,\n    public resumePauseAudioStreams: ResumePauseAudioStreams,\n    public processConsumerTransportsAudio: ProcessConsumerTransportsAudio,\n\n    public launchMessages: LaunchMessages,\n    public launchConfirmExit: LaunchConfirmExit,\n\n    public startMeetingProgressTimer: StartMeetingProgressTimer,\n\n    public producerMediaPaused: ProducerMediaPaused,\n    public producerMediaResumed: ProducerMediaResumed,\n    public producerMediaClosed: ProducerMediaClosed,\n    public meetingEnded: MeetingEnded,\n    public disconnectUserSelf: DisconnectUserSelf,\n    public receiveMessage: ReceiveMessage,\n    public meetingTimeRemaining: MeetingTimeRemaining,\n    public meetingStillThere: MeetingStillThere,\n\n    public allMembers: AllMembers,\n    public allMembersRest: AllMembersRest,\n    public disconnect: Disconnect,\n\n    public socketManager: SocketManager,\n    public joinRoomClient: JoinRoomClient,\n    public updateRoomParametersClient: UpdateRoomParametersClient,\n    public clickVideo: ClickVideo,\n    public clickAudio: ClickAudio,\n    public clickScreenShare: ClickScreenShare,\n    public switchVideoAlt: SwitchVideoAlt,\n    public streamSuccessVideo: StreamSuccessVideo,\n    public streamSuccessAudio: StreamSuccessAudio,\n    public streamSuccessScreen: StreamSuccessScreen,\n    public streamSuccessAudioSwitch: StreamSuccessAudioSwitch,\n    public checkPermission: CheckPermission,\n\n    public updateConsumingDomains: UpdateConsumingDomains,\n    public receiveRoomMessages: ReceiveRoomMessages,\n  ) {}\n\n  createInjector(inputs: any) {\n    const inj = Injector.create({\n      providers: Object.keys(inputs).map((key) => ({ provide: key, useValue: inputs[key] })),\n      parent: this.injector,\n    });\n\n    return inj;\n  }\n\n  // Initial values\n  mediaSFUFunctions = () => {\n    return {\n      updateMiniCardsGrid:\n        this.updateMiniCardsGrid?.updateMiniCardsGrid ||\n        (() => {\n          console.log('none');\n        }),\n      mixStreams:\n        this.mixStreams?.mixStreams ||\n        (() => {\n          console.log('none');\n        }),\n      dispStreams:\n        this.dispStreams?.dispStreams ||\n        (() => {\n          console.log('none');\n        }),\n      stopShareScreen:\n        this.stopShareScreen?.stopShareScreen ||\n        (() => {\n          console.log('none');\n        }),\n      checkScreenShare:\n        this.checkScreenShare?.checkScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      startShareScreen:\n        this.startShareScreen?.startShareScreen ||\n        (() => {\n          console.log('none');\n        }),\n      requestScreenShare:\n        this.requestScreenShare?.requestScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      reorderStreams:\n        this.reorderStreams?.reorderStreams ||\n        (() => {\n          console.log('none');\n        }),\n      prepopulateUserMedia:\n        this.prepopulateUserMedia?.prepopulateUserMedia ||\n        (() => {\n          console.log('none');\n        }),\n      getVideos:\n        this.getVideos?.getVideos ||\n        (() => {\n          console.log('none');\n        }),\n      rePort:\n        this.rePort?.rePort ||\n        (() => {\n          console.log('none');\n        }),\n      trigger:\n        this.trigger?.trigger ||\n        (() => {\n          console.log('none');\n        }),\n      consumerResume:\n        this.consumerResume?.consumerResume ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransport:\n        this.connectSendTransport?.connectSendTransport ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportAudio:\n        this.connectSendTransportAudio?.connectSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportVideo:\n        this.connectSendTransportVideo?.connectSendTransportVideo ||\n        (() => {\n          console.log('none');\n        }),\n      connectSendTransportScreen:\n        this.connectSendTransportScreen?.connectSendTransportScreen ||\n        (() => {\n          console.log('none');\n        }),\n      processConsumerTransports:\n        this.processConsumerTransports?.processConsumerTransports ||\n        (() => {\n          console.log('none');\n        }),\n      resumePauseStreams:\n        this.resumePauseStreams?.resumePauseStreams ||\n        (() => {\n          console.log('none');\n        }),\n      readjust:\n        this.readjust?.readjust ||\n        (() => {\n          console.log('none');\n        }),\n      checkGrid:\n        this.checkGrid?.checkGrid ||\n        (() => {\n          console.log('none');\n        }),\n      getEstimate:\n        this.getEstimate?.getEstimate ||\n        (() => {\n          console.log('none');\n        }),\n      calculateRowsAndColumns:\n        this.calculateRowsAndColumns?.calculateRowsAndColumns ||\n        (() => {\n          console.log('none');\n        }),\n      addVideosGrid:\n        this.addVideosGrid?.addVideosGrid ||\n        (() => {\n          console.log('none');\n        }),\n      onScreenChanges:\n        this.onScreenChanges?.onScreenChanges ||\n        (() => {\n          console.log('none');\n        }),\n      sleep:\n        sleep ||\n        (() => {\n          console.log('none');\n        }),\n      changeVids:\n        this.changeVids?.changeVids ||\n        (() => {\n          console.log('none');\n        }),\n      compareActiveNames:\n        this.compareActiveNames?.compareActiveNames ||\n        (() => {\n          console.log('none');\n        }),\n      compareScreenStates:\n        this.compareScreenStates?.compareScreenStates ||\n        (() => {\n          console.log('none');\n        }),\n      createSendTransport:\n        this.createSendTransport?.createSendTransport ||\n        (() => {\n          console.log('none');\n        }),\n      resumeSendTransportAudio:\n        this.resumeSendTransportAudio?.resumeSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      receiveAllPipedTransports:\n        this.receiveAllPipedTransports?.receiveAllPipedTransports ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportVideo:\n        this.disconnectSendTransportVideo?.disconnectSendTransportVideo ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportAudio:\n        this.disconnectSendTransportAudio?.disconnectSendTransportAudio ||\n        (() => {\n          console.log('none');\n        }),\n      disconnectSendTransportScreen:\n        this.disconnectSendTransportScreen?.disconnectSendTransportScreen ||\n        (() => {\n          console.log('none');\n        }),\n      getPipedProducersAlt:\n        this.getPipedProducersAlt?.getPipedProducersAlt ||\n        (() => {\n          console.log('none');\n        }),\n      signalNewConsumerTransport:\n        this.signalNewConsumerTransport?.signalNewConsumerTransport ||\n        (() => {\n          console.log('none');\n        }),\n      connectRecvTransport:\n        this.connectRecvTransport?.connectRecvTransport ||\n        (() => {\n          console.log('none');\n        }),\n      reUpdateInter:\n        this.reUpdateInter?.reUpdateInter ||\n        (() => {\n          console.log('none');\n        }),\n      updateParticipantAudioDecibels:\n        this.updateParticipantAudioDecibels?.updateParticipantAudioDecibels ||\n        (() => {\n          console.log('none');\n        }),\n      closeAndResize:\n        this.closeAndResize?.closeAndResize ||\n        (() => {\n          console.log('none');\n        }),\n      autoAdjust:\n        this.autoAdjust?.autoAdjust ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserVideoAlt:\n        this.switchUserVideoAlt?.switchUserVideoAlt ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserVideo:\n        this.switchUserVideo?.switchUserVideo ||\n        (() => {\n          console.log('none');\n        }),\n      switchUserAudio:\n        this.switchUserAudio?.switchUserAudio ||\n        (() => {\n          console.log('none');\n        }),\n      getDomains:\n        this.getDomains?.getDomains ||\n        (() => {\n          console.log('none');\n        }),\n      formatNumber:\n        this.formatNumber?.formatNumber ||\n        (() => {\n          console.log('none');\n        }),\n      connectIps:\n        this.connectIps?.connectIps ||\n        (() => {\n          console.log('none');\n        }),\n      createDeviceClient:\n        this.createDeviceClient?.createDeviceClient ||\n        (() => {\n          console.log('none');\n        }),\n      captureCanvasStream:\n        this.captureCanvasStream?.captureCanvasStream ||\n        (() => {\n          console.log('none');\n        }),\n      resumePauseAudioStreams:\n        this.resumePauseAudioStreams?.resumePauseAudioStreams ||\n        (() => {\n          console.log('none');\n        }),\n      processConsumerTransportsAudio:\n        this.processConsumerTransportsAudio?.processConsumerTransportsAudio ||\n        (() => {\n          console.log('none');\n        }),\n      checkPermission:\n        this.checkPermission?.checkPermission ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessVideo:\n        this.streamSuccessVideo?.streamSuccessVideo ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessAudio:\n        this.streamSuccessAudio?.streamSuccessAudio ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessScreen:\n        this.streamSuccessScreen?.streamSuccessScreen ||\n        (() => {\n          console.log('none');\n        }),\n      streamSuccessAudioSwitch:\n        this.streamSuccessAudioSwitch?.streamSuccessAudioSwitch ||\n        (() => {\n          console.log('none');\n        }),\n      clickVideo:\n        this.clickVideo?.clickVideo ||\n        (() => {\n          console.log('none');\n        }),\n      clickAudio:\n        this.clickAudio?.clickAudio ||\n        (() => {\n          console.log('none');\n        }),\n      clickScreenShare:\n        this.clickScreenShare?.clickScreenShare ||\n        (() => {\n          console.log('none');\n        }),\n      switchVideoAlt:\n        this.switchVideoAlt?.switchVideoAlt ||\n        (() => {\n          console.log('none');\n        }),\n      requestPermissionCamera:\n        this.requestPermissionCamera ||\n        (() => {\n          console.log('none');\n        }),\n      requestPermissionAudio:\n        this.requestPermissionAudio ||\n        (() => {\n          console.log('none');\n        }),\n    };\n  };\n\n  validated = new BehaviorSubject<boolean>(false);\n  localUIMode = new BehaviorSubject<boolean>(false);\n  socket = new BehaviorSubject<Socket>({} as Socket);\n  roomData = new BehaviorSubject<ResponseJoinRoom | null>(null);\n  device = new BehaviorSubject<Device | null>(null);\n  apiKey = new BehaviorSubject<string>('');\n  apiUserName = new BehaviorSubject<string>('');\n  apiToken = new BehaviorSubject<string>('');\n  link = new BehaviorSubject<string>('');\n\n  roomName = new BehaviorSubject<string>('');\n  member = new BehaviorSubject<string>('');\n  adminPasscode = new BehaviorSubject<string>('');\n  islevel = new BehaviorSubject<string>('1');\n  coHost = new BehaviorSubject<string>('No coHost');\n  coHostResponsibility = new BehaviorSubject<CoHostResponsibility[]>([\n    { name: 'participants', value: false, dedicated: false },\n    { name: 'media', value: false, dedicated: false },\n    { name: 'waiting', value: false, dedicated: false },\n    { name: 'chat', value: false, dedicated: false },\n  ]);\n  youAreCoHost = new BehaviorSubject<boolean>(false);\n  youAreHost = new BehaviorSubject<boolean>(false);\n  confirmedToRecord = new BehaviorSubject<boolean>(false);\n  meetingDisplayType = new BehaviorSubject<string>('media');\n  meetingVideoOptimized = new BehaviorSubject<boolean>(false);\n  eventType = new BehaviorSubject<EventType>('chat');\n  participants = new BehaviorSubject<Participant[]>([]);\n  filteredParticipants = new BehaviorSubject<Participant[]>([]);\n  participantsCounter = new BehaviorSubject<number>(0);\n  participantsFilter = new BehaviorSubject<string>('');\n\n  consume_sockets = new BehaviorSubject<ConsumeSocket[]>([]);\n  rtpCapabilities = new BehaviorSubject<RtpCapabilities | null>(null);\n  roomRecvIPs = new BehaviorSubject<string[]>([]);\n  meetingRoomParams = new BehaviorSubject<MeetingRoomParams | null>(null);\n  itemPageLimit = new BehaviorSubject<number>(4);\n  audioOnlyRoom = new BehaviorSubject<boolean>(false);\n  addForBasic = new BehaviorSubject<boolean>(false);\n  screenPageLimit = new BehaviorSubject<number>(4);\n  shareScreenStarted = new BehaviorSubject<boolean>(false);\n  shared = new BehaviorSubject<boolean>(false);\n  targetOrientation = new BehaviorSubject<string>('landscape');\n  targetResolution = new BehaviorSubject<string>('sd');\n  targetResolutionHost = new BehaviorSubject<string>('sd');\n  vidCons = new BehaviorSubject<VidCons>({ width: 640, height: 360 });\n  frameRate = new BehaviorSubject<number>(10);\n  hParams = new BehaviorSubject<HParamsType>({} as HParamsType);\n  vParams = new BehaviorSubject<VParamsType>({} as VParamsType);\n  screenParams = new BehaviorSubject<ScreenParamsType>({} as ScreenParamsType);\n  aParams = new BehaviorSubject<AParamsType>({} as AParamsType);\n\n  recordingAudioPausesLimit = new BehaviorSubject<number>(0);\n  recordingAudioPausesCount = new BehaviorSubject<number>(0);\n  recordingAudioSupport = new BehaviorSubject<boolean>(false);\n  recordingAudioPeopleLimit = new BehaviorSubject<number>(0);\n  recordingAudioParticipantsTimeLimit = new BehaviorSubject<number>(0);\n  recordingVideoPausesCount = new BehaviorSubject<number>(0);\n  recordingVideoPausesLimit = new BehaviorSubject<number>(0);\n  recordingVideoSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoPeopleLimit = new BehaviorSubject<number>(0);\n  recordingVideoParticipantsTimeLimit = new BehaviorSubject<number>(0);\n  recordingAllParticipantsSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoParticipantsSupport = new BehaviorSubject<boolean>(false);\n  recordingAllParticipantsFullRoomSupport = new BehaviorSubject<boolean>(false);\n  recordingVideoParticipantsFullRoomSupport = new BehaviorSubject<boolean>(false);\n  recordingPreferredOrientation = new BehaviorSubject<string>('landscape');\n  recordingSupportForOtherOrientation = new BehaviorSubject<boolean>(false);\n  recordingMultiFormatsSupport = new BehaviorSubject<boolean>(false);\n\n  userRecordingParams = new BehaviorSubject<UserRecordingParams>({\n    mainSpecs: {\n      mediaOptions: 'video', // 'audio', 'video'\n      audioOptions: 'all', // 'all', 'onScreen', 'host'\n      videoOptions: 'all', // 'all', 'mainScreen'\n      videoType: 'fullDisplay', // 'all', 'bestDisplay', 'fullDisplay'\n      videoOptimized: false, // true, false\n      recordingDisplayType: 'media', // 'media', 'video', 'all'\n      addHLS: false, // true, false\n    },\n    dispSpecs: {\n      nameTags: true, // true, false\n      backgroundColor: '#000000', // '#000000', '#ffffff'\n      nameTagsColor: '#ffffff', // '#000000', '#ffffff'\n      orientationVideo: 'portrait', // 'landscape', 'portrait', 'all'\n    },\n  });\n\n  canRecord = new BehaviorSubject<boolean>(false);\n  startReport = new BehaviorSubject<boolean>(false);\n  endReport = new BehaviorSubject<boolean>(false);\n  recordTimerInterval = new BehaviorSubject<NodeJS.Timeout | null>(null);\n  recordStartTime = new BehaviorSubject<number>(0);\n  recordElapsedTime = new BehaviorSubject<number>(0);\n  isTimerRunning = new BehaviorSubject<boolean>(false);\n  canPauseResume = new BehaviorSubject<boolean>(false);\n  recordChangeSeconds = new BehaviorSubject<number>(15000);\n  pauseLimit = new BehaviorSubject<number>(0);\n  pauseRecordCount = new BehaviorSubject<number>(0);\n  canLaunchRecord = new BehaviorSubject<boolean>(true);\n  stopLaunchRecord = new BehaviorSubject<boolean>(false);\n\n  participantsAll = new BehaviorSubject<Participant[]>([]);\n\n  firstAll = new BehaviorSubject<boolean>(false);\n  updateMainWindow = new BehaviorSubject<boolean>(false);\n  first_round = new BehaviorSubject<boolean>(false);\n  landScaped = new BehaviorSubject<boolean>(false);\n  lock_screen = new BehaviorSubject<boolean>(false);\n  screenId = new BehaviorSubject<string>('');\n  allVideoStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  newLimitedStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  newLimitedStreamsIDs = new BehaviorSubject<string[]>([]);\n  activeSounds = new BehaviorSubject<string[]>([]);\n  screenShareIDStream = new BehaviorSubject<string>('');\n  screenShareNameStream = new BehaviorSubject<string>('');\n  adminIDStream = new BehaviorSubject<string>('');\n  adminNameStream = new BehaviorSubject<string>('');\n  youYouStream = new BehaviorSubject<(Participant | Stream)[]>([]);\n  youYouStreamIDs = new BehaviorSubject<string[]>([]);\n  localStream = new BehaviorSubject<MediaStream | null>(null);\n  recordStarted = new BehaviorSubject<boolean>(false);\n  recordResumed = new BehaviorSubject<boolean>(false);\n  recordPaused = new BehaviorSubject<boolean>(false);\n  recordStopped = new BehaviorSubject<boolean>(false);\n  adminRestrictSetting = new BehaviorSubject<boolean>(false);\n  videoRequestState = new BehaviorSubject<string | null>(null);\n  videoRequestTime = new BehaviorSubject<number>(0);\n  videoAction = new BehaviorSubject<boolean>(false);\n  localStreamVideo = new BehaviorSubject<MediaStream | null>(null);\n  userDefaultVideoInputDevice = new BehaviorSubject<string>('');\n  currentFacingMode = new BehaviorSubject<string>('user');\n  prevFacingMode = new BehaviorSubject<string>('user');\n  defVideoID = new BehaviorSubject<string>('');\n  allowed = new BehaviorSubject<boolean>(false);\n  dispActiveNames = new BehaviorSubject<string[]>([]);\n  p_dispActiveNames = new BehaviorSubject<string[]>([]);\n  activeNames = new BehaviorSubject<string[]>([]);\n  prevActiveNames = new BehaviorSubject<string[]>([]);\n  p_activeNames = new BehaviorSubject<string[]>([]);\n  membersReceived = new BehaviorSubject<boolean>(false);\n  deferScreenReceived = new BehaviorSubject<boolean>(false);\n  hostFirstSwitch = new BehaviorSubject<boolean>(false);\n  micAction = new BehaviorSubject<boolean>(false);\n  screenAction = new BehaviorSubject<boolean>(false);\n  chatAction = new BehaviorSubject<boolean>(false);\n  audioRequestState = new BehaviorSubject<string | null>(null);\n  screenRequestState = new BehaviorSubject<string | null>(null);\n  chatRequestState = new BehaviorSubject<string | null>(null);\n  audioRequestTime = new BehaviorSubject<number>(0);\n  screenRequestTime = new BehaviorSubject<number>(0);\n  chatRequestTime = new BehaviorSubject<number>(0);\n  updateRequestIntervalSeconds = new BehaviorSubject<number>(240);\n  oldSoundIds = new BehaviorSubject<string[]>([]);\n  hostLabel = new BehaviorSubject<string>('Host');\n  mainScreenFilled = new BehaviorSubject<boolean>(false);\n  localStreamScreen = new BehaviorSubject<MediaStream | null>(null);\n  screenAlreadyOn = new BehaviorSubject<boolean>(false);\n  chatAlreadyOn = new BehaviorSubject<boolean>(false);\n  redirectURL = new BehaviorSubject<string>('');\n  oldAllStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  adminVidID = new BehaviorSubject<string>('');\n  streamNames = new BehaviorSubject<Stream[]>([]);\n  non_alVideoStreams = new BehaviorSubject<Participant[]>([]);\n  sortAudioLoudness = new BehaviorSubject<boolean>(false);\n  audioDecibels = new BehaviorSubject<AudioDecibels[]>([]);\n  mixed_alVideoStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  non_alVideoStreams_muted = new BehaviorSubject<Participant[]>([]);\n  paginatedStreams = new BehaviorSubject<(Participant | Stream)[][]>([]);\n  localStreamAudio = new BehaviorSubject<MediaStream | null>(null);\n  defAudioID = new BehaviorSubject<string>('');\n  userDefaultAudioInputDevice = new BehaviorSubject<string>('');\n  userDefaultAudioOutputDevice = new BehaviorSubject<string>('');\n  prevAudioInputDevice = new BehaviorSubject<string>('');\n  prevVideoInputDevice = new BehaviorSubject<string>('');\n  audioPaused = new BehaviorSubject<boolean>(false);\n  mainScreenPerson = new BehaviorSubject<string>('');\n  adminOnMainScreen = new BehaviorSubject<boolean>(false);\n  screenStates = new BehaviorSubject<ScreenState[]>([\n    {\n      mainScreenPerson: '',\n      mainScreenProducerId: '',\n      mainScreenFilled: false,\n      adminOnMainScreen: false,\n    },\n  ]);\n  prevScreenStates = new BehaviorSubject<ScreenState[]>([\n    {\n      mainScreenPerson: '',\n      mainScreenProducerId: '',\n      mainScreenFilled: false,\n      adminOnMainScreen: false,\n    },\n  ]);\n  updateDateState = new BehaviorSubject<number | null>(null);\n  lastUpdate = new BehaviorSubject<number | null>(null);\n  nForReadjustRecord = new BehaviorSubject<number>(0);\n  fixedPageLimit = new BehaviorSubject<number>(4);\n  removeAltGrid = new BehaviorSubject<boolean>(false);\n  nForReadjust = new BehaviorSubject<number>(0);\n  reorderInterval = new BehaviorSubject<number>(30000);\n  fastReorderInterval = new BehaviorSubject<number>(10000);\n  lastReorderTime = new BehaviorSubject<number>(0);\n  audStreamNames = new BehaviorSubject<Stream[]>([]);\n  currentUserPage = new BehaviorSubject<number>(0);\n  mainHeightWidth = new BehaviorSubject<number>(0);\n  prevMainHeightWidth = new BehaviorSubject<number>(this.mainHeightWidth.value);\n  prevDoPaginate = new BehaviorSubject<boolean>(false);\n  doPaginate = new BehaviorSubject<boolean>(false);\n  shareEnded = new BehaviorSubject<boolean>(false);\n  lStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  chatRefStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  controlHeight = new BehaviorSubject<number>(\n    this.eventType.value === 'webinar' || this.eventType.value === 'conference' ? 0 : 0.06,\n  );\n  isWideScreen = new BehaviorSubject<boolean>(false);\n  isMediumScreen = new BehaviorSubject<boolean>(false);\n  isSmallScreen = new BehaviorSubject<boolean>(false);\n  addGrid = new BehaviorSubject<boolean>(false);\n  addAltGrid = new BehaviorSubject<boolean>(false);\n  gridRows = new BehaviorSubject<number>(0);\n  gridCols = new BehaviorSubject<number>(0);\n  altGridRows = new BehaviorSubject<number>(0);\n  altGridCols = new BehaviorSubject<number>(0);\n  numberPages = new BehaviorSubject<number>(0);\n  currentStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  showMiniView = new BehaviorSubject<boolean>(false);\n  nStream = new BehaviorSubject<MediaStream | null>(null);\n  defer_receive = new BehaviorSubject<boolean>(false);\n  allAudioStreams = new BehaviorSubject<(Participant | Stream)[]>([]);\n  remoteScreenStream = new BehaviorSubject<Stream[]>([]);\n  screenProducer = new BehaviorSubject<Producer | null>(null);\n  gotAllVids = new BehaviorSubject<boolean>(false);\n  paginationHeightWidth = new BehaviorSubject<number>(40);\n  paginationDirection = new BehaviorSubject<'horizontal' | 'vertical'>('horizontal');\n  gridSizes = new BehaviorSubject<GridSizes>({\n    gridWidth: 0,\n    gridHeight: 0,\n    altGridWidth: 0,\n    altGridHeight: 0,\n  });\n  screenForceFullDisplay = new BehaviorSubject<boolean>(false);\n  mainGridStream = new BehaviorSubject<CustomMediaComponent[]>([]);\n  otherGridStreams = new BehaviorSubject<CustomMediaComponent[][]>([]);\n  audioOnlyStreams = new BehaviorSubject<CustomMediaComponent[]>([]);\n  videoInputs = new BehaviorSubject<MediaDeviceInfo[]>([]);\n  audioInputs = new BehaviorSubject<MediaDeviceInfo[]>([]);\n  meetingProgressTime = new BehaviorSubject<string>('00:00:00');\n  meetingElapsedTime = new BehaviorSubject<number>(0);\n  ref_participants = new BehaviorSubject<Participant[]>([]);\n\n  updateValidated = (value: boolean) => {\n    this.validated.next(value);\n  };\n\n  updateSocket = (value: Socket) => {\n    this.socket.next(value);\n  };\n\n  updateDevice = (value: Device | null) => {\n    this.device.next(value);\n  };\n\n  updateRoomData = (value: ResponseJoinRoom | null) => {\n    this.roomData.next(value);\n  };\n\n  updateApiKey = (value: string) => {\n    this.apiKey.next(value);\n  };\n\n  updateApiUserName = (value: string) => {\n    this.apiUserName.next(value);\n  };\n\n  updateApiToken = (value: string) => {\n    this.apiToken.next(value);\n  };\n\n  updateLink = (value: string) => {\n    this.link.next(value);\n  };\n\n  updateRoomName = (value: string) => {\n    this.roomName.next(value);\n  };\n\n  updateMember = (value: string) => {\n    this.member.next(value);\n  };\n\n  updateAdminPasscode = (value: string) => {\n    this.adminPasscode.next(value);\n  };\n\n  updateIslevel = (value: string) => {\n    this.islevel.next(value);\n  };\n\n  updateCoHost = (value: string) => {\n    this.coHost.next(value);\n  };\n\n  updateCoHostResponsibility = (value: CoHostResponsibility[]) => {\n    this.coHostResponsibility.next(value);\n  };\n\n  updateYouAreCoHost = (value: boolean) => {\n    this.youAreCoHost.next(value);\n  };\n\n  updateYouAreHost = (value: boolean) => {\n    this.youAreHost.next(value);\n  };\n\n  updateConfirmedToRecord = (value: boolean) => {\n    this.confirmedToRecord.next(value);\n  };\n\n  updateMeetingDisplayType = (value: string) => {\n    this.meetingDisplayType.next(value);\n  };\n\n  updateMeetingVideoOptimized = (value: boolean) => {\n    this.meetingVideoOptimized.next(value);\n  };\n\n  updateEventType = (value: EventType) => {\n    this.eventType.next(value);\n  };\n\n  updateParticipants = (value: Participant[]) => {\n    this.participants.next(value);\n    this.participantsCounter.next(value.length);\n    this.filteredParticipants.next(this.participants.value);\n  };\n\n  updateFilteredParticipants = (value: Participant[]) => {\n    this.filteredParticipants.next(value);\n  };\n\n  updateParticipantsCounter = (value: number) => {\n    this.participantsCounter.next(value);\n  };\n\n  updateParticipantsFilter = (value: string) => {\n    this.participantsFilter.next(value);\n  };\n\n  updateConsume_sockets = (value: ConsumeSocket[]) => {\n    this.consume_sockets.next(value);\n  };\n\n  updateRtpCapabilities = (value: RtpCapabilities | null) => {\n    this.rtpCapabilities.next(value);\n  };\n\n  updateRoomRecvIPs = (value: string[]) => {\n    this.roomRecvIPs.next(value);\n  };\n\n  updateMeetingRoomParams = (value: MeetingRoomParams | null) => {\n    this.meetingRoomParams.next(value);\n  };\n\n  updateItemPageLimit = (value: number) => {\n    this.itemPageLimit.next(value);\n  };\n\n  updateAudioOnlyRoom = (value: boolean) => {\n    this.audioOnlyRoom.next(value);\n  };\n\n  updateAddForBasic = (value: boolean) => {\n    this.addForBasic.next(value);\n  };\n\n  updateScreenPageLimit = (value: number) => {\n    this.screenPageLimit.next(value);\n  };\n\n  updateShareScreenStarted = (value: boolean) => {\n    this.shareScreenStarted.next(value);\n  };\n\n  updateShared = (value: boolean) => {\n    this.shared.next(value);\n  };\n\n  updateTargetOrientation = (value: string) => {\n    this.targetOrientation.next(value);\n  };\n\n  updateTargetResolution = (value: string) => {\n    this.targetResolution.next(value);\n  };\n\n  updateTargetResolutionHost = (value: string) => {\n    this.targetResolutionHost.next(value);\n  };\n\n  updateVidCons = (value: VidCons) => {\n    this.vidCons.next(value);\n  };\n\n  updateFrameRate = (value: number) => {\n    this.frameRate.next(value);\n  };\n\n  updateHParams = (value: HParamsType) => {\n    this.hParams.next(value);\n  };\n\n  updateVParams = (value: VParamsType) => {\n    this.vParams.next(value);\n  };\n\n  updateScreenParams = (value: ScreenParamsType) => {\n    this.screenParams.next(value);\n  };\n\n  updateAParams = (value: AParamsType) => {\n    this.aParams.next(value);\n  };\n\n  updateRecordingAudioPausesLimit = (value: number) => {\n    this.recordingAudioPausesLimit.next(value);\n  };\n\n  updateRecordingAudioPausesCount = (value: number) => {\n    this.recordingAudioPausesCount.next(value);\n  };\n\n  updateRecordingAudioSupport = (value: boolean) => {\n    this.recordingAudioSupport.next(value);\n  };\n\n  updateRecordingAudioPeopleLimit = (value: number) => {\n    this.recordingAudioPeopleLimit.next(value);\n  };\n\n  updateRecordingAudioParticipantsTimeLimit = (value: number) => {\n    this.recordingAudioParticipantsTimeLimit.next(value);\n  };\n\n  updateRecordingVideoPausesCount = (value: number) => {\n    this.recordingVideoPausesCount.next(value);\n  };\n\n  updateRecordingVideoPausesLimit = (value: number) => {\n    this.recordingVideoPausesLimit.next(value);\n  };\n\n  updateRecordingVideoSupport = (value: boolean) => {\n    this.recordingVideoSupport.next(value);\n  };\n\n  updateRecordingVideoPeopleLimit = (value: number) => {\n    this.recordingVideoPeopleLimit.next(value);\n  };\n\n  updateRecordingVideoParticipantsTimeLimit = (value: number) => {\n    this.recordingVideoParticipantsTimeLimit.next(value);\n  };\n\n  updateRecordingAllParticipantsSupport = (value: boolean) => {\n    this.recordingAllParticipantsSupport.next(value);\n  };\n\n  updateRecordingVideoParticipantsSupport = (value: boolean) => {\n    this.recordingVideoParticipantsSupport.next(value);\n  };\n\n  updateRecordingAllParticipantsFullRoomSupport = (value: boolean) => {\n    this.recordingAllParticipantsFullRoomSupport.next(value);\n  };\n\n  updateRecordingVideoParticipantsFullRoomSupport = (value: boolean) => {\n    this.recordingVideoParticipantsFullRoomSupport.next(value);\n  };\n\n  updateRecordingPreferredOrientation = (value: string) => {\n    this.recordingPreferredOrientation.next(value);\n  };\n\n  updateRecordingSupportForOtherOrientation = (value: boolean) => {\n    this.recordingSupportForOtherOrientation.next(value);\n  };\n\n  updateRecordingMultiFormatsSupport = (value: boolean) => {\n    this.recordingMultiFormatsSupport.next(value);\n  };\n\n  updateUserRecordingParams = (value: UserRecordingParams) => {\n    this.userRecordingParams.next(value);\n  };\n\n  updateCanRecord = (value: boolean) => {\n    this.canRecord.next(value);\n  };\n\n  updateStartReport = (value: boolean) => {\n    this.startReport.next(value);\n  };\n\n  updateEndReport = (value: boolean) => {\n    this.endReport.next(value);\n  };\n\n  updateRecordTimerInterval = (value: NodeJS.Timeout | null) => {\n    this.recordTimerInterval.next(value);\n  };\n\n  updateRecordStartTime = (value: number) => {\n    this.recordStartTime.next(value);\n  };\n\n  updateRecordElapsedTime = (value: number) => {\n    this.recordElapsedTime.next(value);\n  };\n\n  updateIsTimerRunning = (value: boolean) => {\n    this.isTimerRunning.next(value);\n  };\n\n  updateCanPauseResume = (value: boolean) => {\n    this.canPauseResume.next(value);\n  };\n\n  updateRecordChangeSeconds = (value: number) => {\n    this.recordChangeSeconds.next(value);\n  };\n\n  updatePauseLimit = (value: number) => {\n    this.pauseLimit.next(value);\n  };\n\n  updatePauseRecordCount = (value: number) => {\n    this.pauseRecordCount.next(value);\n  };\n\n  updateCanLaunchRecord = (value: boolean) => {\n    this.canLaunchRecord.next(value);\n  };\n\n  updateStopLaunchRecord = (value: boolean) => {\n    this.stopLaunchRecord.next(value);\n  };\n\n  updateParticipantsAll = (value: Participant[]) => {\n    this.participantsAll.next(value);\n  };\n\n  updateFirstAll = (value: boolean) => {\n    this.firstAll.next(value);\n  };\n\n  updateUpdateMainWindow = (value: boolean) => {\n    this.updateMainWindow.next(value);\n  };\n\n  updateFirst_round = (value: boolean) => {\n    this.first_round.next(value);\n  };\n\n  updateLandScaped = (value: boolean) => {\n    this.landScaped.next(value);\n  };\n\n  updateLock_screen = (value: boolean) => {\n    this.lock_screen.next(value);\n  };\n\n  updateScreenId = (value: string) => {\n    this.screenId.next(value);\n  };\n\n  updateAllVideoStreams = (value: (Participant | Stream)[]) => {\n    this.allVideoStreams.next(value);\n  };\n\n  updateNewLimitedStreams = (value: (Participant | Stream)[]) => {\n    this.newLimitedStreams.next(value);\n  };\n\n  updateNewLimitedStreamsIDs = (value: string[]) => {\n    this.newLimitedStreamsIDs.next(value);\n  };\n\n  updateActiveSounds = (value: string[]) => {\n    this.activeSounds.next(value);\n  };\n\n  updateScreenShareIDStream = (value: string) => {\n    this.screenShareIDStream.next(value);\n  };\n\n  updateScreenShareNameStream = (value: string) => {\n    this.screenShareNameStream.next(value);\n  };\n\n  updateAdminIDStream = (value: string) => {\n    this.adminIDStream.next(value);\n  };\n\n  updateAdminNameStream = (value: string) => {\n    this.adminNameStream.next(value);\n  };\n\n  updateYouYouStream = (value: (Participant | Stream)[]) => {\n    this.youYouStream.next(value);\n  };\n\n  updateYouYouStreamIDs = (value: string[]) => {\n    this.youYouStreamIDs.next(value);\n  };\n\n  updateLocalStream = (value: MediaStream | null) => {\n    this.localStream.next(value);\n  };\n\n  updateRecordStarted = (value: boolean) => {\n    this.recordStarted.next(value);\n  };\n\n  updateRecordResumed = (value: boolean) => {\n    this.recordResumed.next(value);\n  };\n\n  updateRecordPaused = (value: boolean) => {\n    this.recordPaused.next(value);\n  };\n\n  updateRecordStopped = (value: boolean) => {\n    this.recordStopped.next(value);\n  };\n\n  updateAdminRestrictSetting = (value: boolean) => {\n    this.adminRestrictSetting.next(value);\n  };\n\n  updateVideoRequestState = (value: string | null) => {\n    this.videoRequestState.next(value);\n  };\n\n  updateVideoRequestTime = (value: number) => {\n    this.videoRequestTime.next(value);\n  };\n\n  updateVideoAction = (value: boolean) => {\n    this.videoAction.next(value);\n  };\n\n  updateLocalStreamVideo = (value: MediaStream | null) => {\n    this.localStreamVideo.next(value);\n  };\n\n  updateUserDefaultVideoInputDevice = (value: string) => {\n    this.userDefaultVideoInputDevice.next(value);\n  };\n\n  updateCurrentFacingMode = (value: string) => {\n    this.currentFacingMode.next(value);\n  };\n\n  updatePrevFacingMode = (value: string) => {\n    this.prevFacingMode.next(value);\n  };\n\n  updateDefVideoID = (value: string) => {\n    this.defVideoID.next(value);\n  };\n\n  updateAllowed = (value: boolean) => {\n    this.allowed.next(value);\n  };\n\n  updateDispActiveNames = (value: string[]) => {\n    this.dispActiveNames.next(value);\n  };\n\n  updateP_dispActiveNames = (value: string[]) => {\n    this.p_dispActiveNames.next(value);\n  };\n\n  updateActiveNames = (value: string[]) => {\n    this.activeNames.next(value);\n  };\n\n  updatePrevActiveNames = (value: string[]) => {\n    this.prevActiveNames.next(value);\n  };\n\n  updateP_activeNames = (value: string[]) => {\n    this.p_activeNames.next(value);\n  };\n\n  updateMembersReceived = (value: boolean) => {\n    this.membersReceived.next(value);\n  };\n\n  updateDeferScreenReceived = (value: boolean) => {\n    this.deferScreenReceived.next(value);\n  };\n\n  updateHostFirstSwitch = (value: boolean) => {\n    this.hostFirstSwitch.next(value);\n  };\n\n  updateMicAction = (value: boolean) => {\n    this.micAction.next(value);\n  };\n\n  updateScreenAction = (value: boolean) => {\n    this.screenAction.next(value);\n  };\n\n  updateChatAction = (value: boolean) => {\n    this.chatAction.next(value);\n  };\n\n  updateAudioRequestState = (value: string | null) => {\n    this.audioRequestState.next(value);\n  };\n\n  updateScreenRequestState = (value: string | null) => {\n    this.screenRequestState.next(value);\n  };\n\n  updateChatRequestState = (value: string | null) => {\n    this.chatRequestState.next(value);\n  };\n\n  updateAudioRequestTime = (value: number) => {\n    this.audioRequestTime.next(value);\n  };\n\n  updateScreenRequestTime = (value: number) => {\n    this.screenRequestTime.next(value);\n  };\n\n  updateChatRequestTime = (value: number) => {\n    this.chatRequestTime.next(value);\n  };\n\n  updateOldSoundIds = (value: string[]) => {\n    this.oldSoundIds.next(value);\n  };\n\n  updateHostLabel = (value: string) => {\n    this.hostLabel.next(value);\n  };\n\n  updateMainScreenFilled = (value: boolean) => {\n    this.mainScreenFilled.next(value);\n  };\n\n  updateLocalStreamScreen = (value: MediaStream | null) => {\n    this.localStreamScreen.next(value);\n  };\n\n  updateScreenAlreadyOn = (value: boolean) => {\n    this.screenAlreadyOn.next(value);\n  };\n\n  updateChatAlreadyOn = (value: boolean) => {\n    this.chatAlreadyOn.next(value);\n  };\n\n  updateRedirectURL = (value: string) => {\n    this.redirectURL.next(value);\n  };\n\n  updateOldAllStreams = (value: (Participant | Stream)[]) => {\n    this.oldAllStreams.next(value);\n  };\n\n  updateAdminVidID = (value: string) => {\n    this.adminVidID.next(value);\n  };\n\n  updateStreamNames = (value: Stream[]) => {\n    this.streamNames.next(value);\n  };\n\n  updateNon_alVideoStreams = (value: Participant[]) => {\n    this.non_alVideoStreams.next(value);\n  };\n\n  updateSortAudioLoudness = (value: boolean) => {\n    this.sortAudioLoudness.next(value);\n  };\n\n  updateAudioDecibels = (value: AudioDecibels[]) => {\n    this.audioDecibels.next(value);\n  };\n\n  updateMixed_alVideoStreams = (value: (Participant | Stream)[]) => {\n    this.mixed_alVideoStreams.next(value);\n  };\n\n  updateNon_alVideoStreams_muted = (value: Participant[]) => {\n    this.non_alVideoStreams_muted.next(value);\n  };\n\n  updatePaginatedStreams = (value: (Participant | Stream)[][]) => {\n    this.paginatedStreams.next(value);\n  };\n\n  updateLocalStreamAudio = (value: MediaStream | null) => {\n    this.localStreamAudio.next(value);\n  };\n\n  updateDefAudioID = (value: string) => {\n    this.defAudioID.next(value);\n  };\n\n  updateUserDefaultAudioInputDevice = (value: string) => {\n    this.userDefaultAudioInputDevice.next(value);\n  };\n\n  updateUserDefaultAudioOutputDevice = (value: string) => {\n    this.userDefaultAudioOutputDevice.next(value);\n  };\n\n  updatePrevAudioInputDevice = (value: string) => {\n    this.prevAudioInputDevice.next(value);\n  };\n\n  updatePrevVideoInputDevice = (value: string) => {\n    this.prevVideoInputDevice.next(value);\n  };\n\n  updateAudioPaused = (value: boolean) => {\n    this.audioPaused.next(value);\n  };\n\n  updateMainScreenPerson = (value: string) => {\n    this.mainScreenPerson.next(value);\n  };\n\n  updateAdminOnMainScreen = (value: boolean) => {\n    this.adminOnMainScreen.next(value);\n  };\n\n  updateScreenStates = (value: ScreenState[]) => {\n    this.screenStates.next(value);\n  };\n\n  updatePrevScreenStates = (value: ScreenState[]) => {\n    this.prevScreenStates.next(value);\n  };\n\n  updateUpdateDateState = (value: number | null) => {\n    this.updateDateState.next(value);\n  };\n\n  updateLastUpdate = (value: number | null) => {\n    this.lastUpdate.next(value);\n  };\n\n  updateNForReadjustRecord = (value: number) => {\n    this.nForReadjustRecord.next(value);\n  };\n\n  updateFixedPageLimit = (value: number) => {\n    this.fixedPageLimit.next(value);\n  };\n\n  updateRemoveAltGrid = (value: boolean) => {\n    this.removeAltGrid.next(value);\n  };\n\n  updateNForReadjust = (value: number) => {\n    this.nForReadjust.next(value);\n  };\n\n  updateLastReorderTime = (value: number) => {\n    this.lastReorderTime.next(value);\n  };\n\n  updateAudStreamNames = (value: Stream[]) => {\n    this.audStreamNames.next(value);\n  };\n\n  updateCurrentUserPage = (value: number) => {\n    this.currentUserPage.next(value);\n  };\n\n  updateMainHeightWidth = (value: number) => {\n    this.mainHeightWidth.next(value);\n  };\n\n  updatePrevMainHeightWidth = (value: number) => {\n    this.prevMainHeightWidth.next(value);\n  };\n\n  updatePrevDoPaginate = (value: boolean) => {\n    this.prevDoPaginate.next(value);\n  };\n\n  updateDoPaginate = (value: boolean) => {\n    this.doPaginate.next(value);\n  };\n\n  updateShareEnded = (value: boolean) => {\n    this.shareEnded.next(value);\n  };\n\n  updateLStreams = (value: (Participant | Stream)[]) => {\n    this.lStreams.next(value);\n  };\n\n  updateChatRefStreams = (value: (Participant | Stream)[]) => {\n    this.chatRefStreams.next(value);\n  };\n\n  updateControlHeight = (value: number) => {\n    this.controlHeight.next(value);\n  };\n\n  updateIsWideScreen = (value: boolean) => {\n    this.isWideScreen.next(value);\n  };\n\n  updateIsMediumScreen = (value: boolean) => {\n    this.isMediumScreen.next(value);\n  };\n\n  updateIsSmallScreen = (value: boolean) => {\n    this.isSmallScreen.next(value);\n  };\n\n  updateAddGrid = (value: boolean) => {\n    this.addGrid.next(value);\n  };\n\n  updateAddAltGrid = (value: boolean) => {\n    this.addAltGrid.next(value);\n  };\n\n  updateGridRows = (value: number) => {\n    this.gridRows.next(value);\n  };\n\n  updateGridCols = (value: number) => {\n    this.gridCols.next(value);\n  };\n\n  updateAltGridRows = (value: number) => {\n    this.altGridRows.next(value);\n  };\n\n  updateAltGridCols = (value: number) => {\n    this.altGridCols.next(value);\n  };\n\n  updateNumberPages = (value: number) => {\n    this.numberPages.next(value);\n  };\n\n  updateCurrentStreams = (value: (Participant | Stream)[]) => {\n    this.currentStreams.next(value);\n  };\n\n  updateShowMiniView = (value: boolean) => {\n    this.showMiniView.next(value);\n  };\n\n  updateNStream = (value: MediaStream | null) => {\n    this.nStream.next(value);\n  };\n\n  updateDefer_receive = (value: boolean) => {\n    this.defer_receive.next(value);\n  };\n\n  updateAllAudioStreams = (value: (Participant | Stream)[]) => {\n    this.allAudioStreams.next(value);\n  };\n\n  updateRemoteScreenStream = (value: Stream[]) => {\n    this.remoteScreenStream.next(value);\n  };\n\n  updateScreenProducer = (value: Producer | null) => {\n    this.screenProducer.next(value);\n  };\n\n  updateGotAllVids = (value: boolean) => {\n    this.gotAllVids.next(value);\n  };\n\n  updatePaginationHeightWidth = (value: number) => {\n    this.paginationHeightWidth.next(value);\n  };\n\n  updatePaginationDirection = (value: 'horizontal' | 'vertical') => {\n    this.paginationDirection.next(value);\n  };\n\n  updateGridSizes = (value: GridSizes) => {\n    this.gridSizes.next(value);\n  };\n\n  updateScreenForceFullDisplay = (value: boolean) => {\n    this.screenForceFullDisplay.next(value);\n  };\n\n  updateMainGridStream = (value: CustomMediaComponent[]) => {\n    this.mainGridStream.next(value);\n  };\n\n  updateOtherGridStreams = (value: CustomMediaComponent[][]) => {\n    this.otherGridStreams.next(value);\n  };\n\n  updateAudioOnlyStreams = (value: CustomMediaComponent[]) => {\n    this.audioOnlyStreams.next(value);\n  };\n\n  updateVideoInputs = (value: MediaDeviceInfo[]) => {\n    this.videoInputs.next(value);\n  };\n\n  updateAudioInputs = (value: MediaDeviceInfo[]) => {\n    this.audioInputs.next(value);\n  };\n\n  updateMeetingProgressTime = (value: string) => {\n    this.meetingProgressTime.next(value);\n  };\n\n  updateMeetingElapsedTime = (value: number) => {\n    this.meetingElapsedTime.next(value);\n  };\n\n  updateRef_participants = (value: Participant[]) => {\n    this.ref_participants.next(value);\n  };\n\n  // Messages\n  messages = new BehaviorSubject<Message[]>([]);\n  startDirectMessage = new BehaviorSubject<boolean>(false);\n  directMessageDetails = new BehaviorSubject<Participant | null>(null);\n  showMessagesBadge = new BehaviorSubject<boolean>(false);\n\n  // Event Settings\n  audioSetting = new BehaviorSubject<string>('allow');\n  videoSetting = new BehaviorSubject<string>('allow');\n  screenshareSetting = new BehaviorSubject<string>('allow');\n  chatSetting = new BehaviorSubject<string>('allow');\n\n  // Display Settings\n  displayOption = new BehaviorSubject<string>('media');\n  autoWave = new BehaviorSubject<boolean>(true);\n  forceFullDisplay = new BehaviorSubject<boolean>(true);\n  prevForceFullDisplay = new BehaviorSubject<boolean>(false);\n  prevMeetingDisplayType = new BehaviorSubject<string>('video');\n\n  // Waiting Room\n  waitingRoomFilter = new BehaviorSubject<string>('');\n  waitingRoomList = new BehaviorSubject<WaitingRoomParticipant[]>([]);\n  waitingRoomCounter = new BehaviorSubject<number>(0);\n  filteredWaitingRoomList = new BehaviorSubject<WaitingRoomParticipant[]>([]);\n\n  // Requests\n  requestFilter = new BehaviorSubject<string>('');\n  requestList = new BehaviorSubject<Request[]>([]);\n  requestCounter = new BehaviorSubject<number>(0);\n  filteredRequestList = new BehaviorSubject<Request[]>([]);\n\n  // Total Requests and Waiting Room\n  totalReqWait = new BehaviorSubject<number>(0);\n\n  // Alerts\n  alertVisible = new BehaviorSubject<boolean>(false);\n  alertMessage = new BehaviorSubject<string>('');\n  alertType = new BehaviorSubject<'success' | 'danger'>('success');\n  alertDuration = new BehaviorSubject<number>(3000);\n\n  // Progress Timer\n  progressTimerVisible = new BehaviorSubject<boolean>(true);\n  progressTimerValue = new BehaviorSubject<number>(0);\n\n  // Menu Modals\n  isMenuModalVisible = new BehaviorSubject<boolean>(false);\n  isRecordingModalVisible = new BehaviorSubject<boolean>(false);\n  isSettingsModalVisible = new BehaviorSubject<boolean>(false);\n  isRequestsModalVisible = new BehaviorSubject<boolean>(false);\n  isWaitingModalVisible = new BehaviorSubject<boolean>(false);\n  isCoHostModalVisible = new BehaviorSubject<boolean>(false);\n  isMediaSettingsModalVisible = new BehaviorSubject<boolean>(false);\n  isDisplaySettingsModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Other Modals\n  isParticipantsModalVisible = new BehaviorSubject<boolean>(false);\n  isMessagesModalVisible = new BehaviorSubject<boolean>(false);\n  isConfirmExitModalVisible = new BehaviorSubject<boolean>(false);\n  isConfirmHereModalVisible = new BehaviorSubject<boolean>(false);\n  isShareEventModalVisible = new BehaviorSubject<boolean>(false);\n  isLoadingModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Recording Options\n  recordingMediaOptions = new BehaviorSubject<string>('video');\n  recordingAudioOptions = new BehaviorSubject<string>('all');\n  recordingVideoOptions = new BehaviorSubject<string>('all');\n  recordingVideoType = new BehaviorSubject<string>('fullDisplay');\n  recordingVideoOptimized = new BehaviorSubject<boolean>(false);\n  recordingDisplayType = new BehaviorSubject<'video' | 'media' | 'all'>('video');\n  recordingAddHLS = new BehaviorSubject<boolean>(true);\n  recordingNameTags = new BehaviorSubject<boolean>(true);\n  recordingBackgroundColor = new BehaviorSubject<string>('#83c0e9');\n  recordingNameTagsColor = new BehaviorSubject<string>('#ffffff');\n  recordingAddText = new BehaviorSubject<boolean>(false);\n  recordingCustomText = new BehaviorSubject<string>('Add Text');\n  recordingCustomTextPosition = new BehaviorSubject<string>('top');\n  recordingCustomTextColor = new BehaviorSubject<string>('#ffffff');\n  recordingOrientationVideo = new BehaviorSubject<string>('landscape');\n  clearedToResume = new BehaviorSubject<boolean>(true);\n  clearedToRecord = new BehaviorSubject<boolean>(true);\n  recordState = new BehaviorSubject<string>('green');\n  showRecordButtons = new BehaviorSubject<boolean>(false);\n  recordingProgressTime = new BehaviorSubject<string>('00:00:00');\n  audioSwitching = new BehaviorSubject<boolean>(false);\n  videoSwitching = new BehaviorSubject<boolean>(false);\n\n  // Media States\n  videoAlreadyOn = new BehaviorSubject<boolean>(false);\n  audioAlreadyOn = new BehaviorSubject<boolean>(false);\n\n  componentSizes = new BehaviorSubject<ComponentSizes>({\n    mainHeight: 0,\n    otherHeight: 0,\n    mainWidth: 0,\n    otherWidth: 0,\n  });\n\n  // Permissions\n  hasCameraPermission = new BehaviorSubject<boolean>(false);\n  hasAudioPermission = new BehaviorSubject<boolean>(false);\n\n  // Transports\n  transportCreated = new BehaviorSubject<boolean>(false);\n  transportCreatedVideo = new BehaviorSubject<boolean>(false);\n  transportCreatedAudio = new BehaviorSubject<boolean>(false);\n  transportCreatedScreen = new BehaviorSubject<boolean>(false);\n  producerTransport = new BehaviorSubject<Transport | null>(null);\n  videoProducer = new BehaviorSubject<Producer | null>(null);\n  params = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  videoParams = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  audioParams = new BehaviorSubject<ProducerOptions>({} as ProducerOptions);\n  audioProducer = new BehaviorSubject<Producer | null>(null);\n  consumerTransports = new BehaviorSubject<TransportType[]>([]);\n  consumingTransports = new BehaviorSubject<string[]>([]);\n\n  // Polls\n  polls = new BehaviorSubject<Poll[]>([]);\n  poll = new BehaviorSubject<Poll | null>(null);\n  isPollModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Background\n  customImage = new BehaviorSubject<string>('');\n  selectedImage = new BehaviorSubject<string>('');\n  segmentVideo = new BehaviorSubject<MediaStream | null>(null);\n  selfieSegmentation = new BehaviorSubject<SelfieSegmentation | null>(null);\n  pauseSegmentation = new BehaviorSubject<boolean>(false);\n  processedStream = new BehaviorSubject<MediaStream | null>(null);\n  keepBackground = new BehaviorSubject<boolean>(false);\n  backgroundHasChanged = new BehaviorSubject<boolean>(false);\n  virtualStream = new BehaviorSubject<MediaStream | null>(null);\n  mainCanvas = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  prevKeepBackground = new BehaviorSubject<boolean>(false);\n  appliedBackground = new BehaviorSubject<boolean>(false);\n  isBackgroundModalVisible = new BehaviorSubject<boolean>(false);\n  autoClickBackground = new BehaviorSubject<boolean>(false);\n\n  // Breakout Rooms\n  breakoutRooms = new BehaviorSubject<BreakoutParticipant[][]>([]);\n  currentRoomIndex = new BehaviorSubject<number>(0);\n  canStartBreakout = new BehaviorSubject<boolean>(false);\n  breakOutRoomStarted = new BehaviorSubject<boolean>(false);\n  breakOutRoomEnded = new BehaviorSubject<boolean>(false);\n  hostNewRoom = new BehaviorSubject<number>(-1);\n  limitedBreakRoom = new BehaviorSubject<BreakoutParticipant[]>([]);\n  mainRoomsLength = new BehaviorSubject<number>(0);\n  memberRoom = new BehaviorSubject<number>(-1);\n  isBreakoutRoomsModalVisible = new BehaviorSubject<boolean>(false);\n\n  // Whiteboard\n  whiteboardUsers = new BehaviorSubject<WhiteboardUser[]>([]);\n  currentWhiteboardIndex = new BehaviorSubject<number>(0);\n  canStartWhiteboard = new BehaviorSubject<boolean>(false);\n  whiteboardStarted = new BehaviorSubject<boolean>(false);\n  whiteboardEnded = new BehaviorSubject<boolean>(false);\n  whiteboardLimit = new BehaviorSubject<number>(4);\n  isWhiteboardModalVisible = new BehaviorSubject<boolean>(false);\n  isConfigureWhiteboardModalVisible = new BehaviorSubject<boolean>(false);\n  shapes = new BehaviorSubject<Shape[]>([]);\n  useImageBackground = new BehaviorSubject<boolean>(true);\n  redoStack = new BehaviorSubject<Shape[]>([]);\n  undoStack = new BehaviorSubject<string[]>([]);\n  canvasStream = new BehaviorSubject<MediaStream | null>(null);\n  canvasWhiteboard = new BehaviorSubject<HTMLCanvasElement | null>(null);\n\n  // Screenboard\n  canvasScreenboard = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  processedScreenStream = new BehaviorSubject<MediaStream | null>(null);\n  annotateScreenStream = new BehaviorSubject<boolean>(false);\n  mainScreenCanvas = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  isScreenboardModalVisible = new BehaviorSubject<boolean>(false);\n\n  //state variables for the control buttons\n  micActive = new BehaviorSubject<boolean>(\n    this.audioAlreadyOn.value ? this.audioAlreadyOn.value : false,\n  );\n  videoActive = new BehaviorSubject<boolean>(\n    this.videoAlreadyOn.value ? this.videoAlreadyOn.value : false,\n  );\n  screenShareActive = new BehaviorSubject<boolean>(false);\n  endCallActive = new BehaviorSubject<boolean>(false);\n  participantsActive = new BehaviorSubject<boolean>(false);\n  menuActive = new BehaviorSubject<boolean>(false);\n  commentsActive = new BehaviorSubject<boolean>(false);\n\n  // Update functions\n  updateMessages = (value: Message[]) => {\n    this.messages.next(value);\n  };\n\n  updateStartDirectMessage = (value: boolean) => {\n    this.startDirectMessage.next(value);\n  };\n\n  updateDirectMessageDetails = (value: Participant | null) => {\n    this.directMessageDetails.next(value);\n  };\n\n  updateShowMessagesBadge = (value: boolean) => {\n    this.showMessagesBadge.next(value);\n  };\n\n  updateAudioSetting = (value: string) => {\n    this.audioSetting.next(value);\n  };\n\n  updateVideoSetting = (value: string) => {\n    this.videoSetting.next(value);\n  };\n\n  updateScreenshareSetting = (value: string) => {\n    this.screenshareSetting.next(value);\n  };\n\n  updateChatSetting = (value: string) => {\n    this.chatSetting.next(value);\n  };\n\n  updateDisplayOption = (value: string) => {\n    this.displayOption.next(value);\n  };\n\n  updateAutoWave = (value: boolean) => {\n    this.autoWave.next(value);\n  };\n\n  updateForceFullDisplay = (value: boolean) => {\n    this.forceFullDisplay.next(value);\n  };\n\n  updatePrevForceFullDisplay = (value: boolean) => {\n    this.prevForceFullDisplay.next(value);\n  };\n\n  updatePrevMeetingDisplayType = (value: string) => {\n    this.prevMeetingDisplayType.next(value);\n  };\n\n  updateWaitingRoomCounter = (value: number) => {\n    this.waitingRoomCounter.next(value);\n  };\n\n  updateWaitingRoomFilter = (value: string) => {\n    this.waitingRoomFilter.next(value);\n  };\n\n  updateWaitingRoomList = (value: WaitingRoomParticipant[]) => {\n    this.waitingRoomList.next(value);\n    this.filteredWaitingRoomList.next(value);\n    this.waitingRoomCounter.next(value.length);\n  };\n\n  onWaitingRoomClose = () => {\n    this.updateIsWaitingModalVisible(false);\n  };\n\n  updateRequestCounter = (value: number) => {\n    this.requestCounter.next(value);\n  };\n\n  updateRequestFilter = (value: string) => {\n    this.requestFilter.next(value);\n  };\n\n  updateRequestList = (value: Request[]) => {\n    this.requestList.next(value);\n    this.filteredRequestList.next(value);\n    this.requestCounter.next(value.length);\n  };\n\n  onRequestClose = () => {\n    this.updateIsRequestsModalVisible(false);\n  };\n\n  updateTotalReqWait = (value: number) => {\n    this.totalReqWait.next(value);\n  };\n\n  updateAlertVisible = (value: boolean) => {\n    this.alertVisible.next(value);\n  };\n\n  updateAlertMessage = (value: string) => {\n    this.alertMessage.next(value);\n  };\n\n  updateAlertType = (value: 'success' | 'danger') => {\n    this.alertType.next(value);\n  };\n\n  updateAlertDuration = (value: number) => {\n    this.alertDuration.next(value);\n  };\n\n  updateProgressTimerVisible = (value: boolean) => {\n    this.progressTimerVisible.next(value);\n  };\n\n  updateProgressTimerValue = (value: number) => {\n    this.progressTimerValue.next(value);\n  };\n\n  updateIsMenuModalVisible = (value: boolean) => {\n    this.isMenuModalVisible.next(value);\n  };\n\n  updateIsRecordingModalVisible = (value: boolean) => {\n    this.isRecordingModalVisible.next(value);\n    if (value) {\n      this.updateConfirmedToRecord(false);\n    } else {\n      if (\n        this.clearedToRecord.getValue() &&\n        this.clearedToResume.getValue() &&\n        this.recordStarted.getValue()\n      ) {\n        this.updateShowRecordButtons(true);\n      }\n    }\n  };\n\n  updateIsSettingsModalVisible = (value: boolean) => {\n    this.isSettingsModalVisible.next(value);\n  };\n\n  updateIsRequestsModalVisible = (value: boolean) => {\n    this.isRequestsModalVisible.next(value);\n  };\n\n  updateIsWaitingModalVisible = (value: boolean) => {\n    this.isWaitingModalVisible.next(value);\n  };\n\n  updateIsCoHostModalVisible = (value: boolean) => {\n    this.isCoHostModalVisible.next(value);\n  };\n\n  updateIsMediaSettingsModalVisible = (value: boolean) => {\n    this.isMediaSettingsModalVisible.next(value);\n  };\n\n  updateIsDisplaySettingsModalVisible = (value: boolean) => {\n    this.isDisplaySettingsModalVisible.next(value);\n  };\n\n  updateIsParticipantsModalVisible = (value: boolean) => {\n    this.isParticipantsModalVisible.next(value);\n  };\n\n  updateIsMessagesModalVisible = (value: boolean) => {\n    this.isMessagesModalVisible.next(value);\n    if (!value) {\n      this.updateShowMessagesBadge(false);\n    }\n  };\n\n  updateIsConfirmExitModalVisible = (value: boolean) => {\n    this.isConfirmExitModalVisible.next(value);\n  };\n\n  updateIsConfirmHereModalVisible = (value: boolean) => {\n    this.isConfirmHereModalVisible.next(value);\n  };\n\n  updateIsLoadingModalVisible = (value: boolean) => {\n    this.isLoadingModalVisible.next(value);\n  };\n\n  updateIsShareEventModalVisible = (value: boolean) => {\n    this.isShareEventModalVisible.next(value);\n  };\n\n  updateRecordingMediaOptions = (value: string) => {\n    this.recordingMediaOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAudioOptions = (value: string) => {\n    this.recordingAudioOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoOptions = (value: string) => {\n    this.recordingVideoOptions.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoType = (value: string) => {\n    this.recordingVideoType.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingVideoOptimized = (value: boolean) => {\n    this.recordingVideoOptimized.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingDisplayType = (value: 'video' | 'media' | 'all') => {\n    this.recordingDisplayType.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAddHLS = (value: boolean) => {\n    this.recordingAddHLS.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingAddText = (value: boolean) => {\n    this.recordingAddText.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomText = (value: string) => {\n    this.recordingCustomText.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomTextPosition = (value: string) => {\n    this.recordingCustomTextPosition.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingCustomTextColor = (value: string) => {\n    this.recordingCustomTextColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingNameTags = (value: boolean) => {\n    this.recordingNameTags.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingBackgroundColor = (value: string) => {\n    this.recordingBackgroundColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingNameTagsColor = (value: string) => {\n    this.recordingNameTagsColor.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateRecordingOrientationVideo = (value: string) => {\n    this.recordingOrientationVideo.next(value);\n    this.clearedToRecord.next(false);\n  };\n\n  updateClearedToResume = (value: boolean) => {\n    this.clearedToResume.next(value);\n  };\n\n  updateClearedToRecord = (value: boolean) => {\n    this.clearedToRecord.next(value);\n  };\n\n  updateRecordState = (value: string) => {\n    if (this.recordStarted.value && !this.recordStopped.value) {\n      if (!this.recordPaused.value) {\n        this.recordState.next('red');\n      } else {\n        this.recordState.next('yellow');\n      }\n    } else {\n      this.recordState.next(value);\n    }\n    this.recordState.next(value);\n  };\n\n  updateShowRecordButtons = (value: boolean) => {\n    this.showRecordButtons.next(value);\n  };\n\n  updateRecordingProgressTime = (value: string) => {\n    this.recordingProgressTime.next(value);\n  };\n\n  updateAudioSwitching = (value: boolean) => {\n    this.audioSwitching.next(value);\n  };\n\n  updateVideoSwitching = (value: boolean) => {\n    this.videoSwitching.next(value);\n  };\n\n  updateVideoAlreadyOn = (value: boolean) => {\n    this.videoAlreadyOn.next(value);\n    this.videoActive.next(value);\n  };\n\n  updateAudioAlreadyOn = (value: boolean) => {\n    this.audioAlreadyOn.next(value);\n    this.micActive.next(value);\n  };\n\n  updateComponentSizes = (sizes: ComponentSizes) => {\n    this.componentSizes.next(sizes);\n  };\n\n  updateHasCameraPermission = (value: boolean) => {\n    this.hasCameraPermission.next(value);\n  };\n\n  updateHasAudioPermission = (value: boolean) => {\n    this.hasAudioPermission.next(value);\n  };\n\n  requestPermissionCamera(): Promise<string> {\n    // Implement the request permission logic here\n    return Promise.resolve('granted');\n  }\n\n  requestPermissionAudio(): Promise<string> {\n    // Implement the request permission logic here\n    return Promise.resolve('granted');\n  }\n\n  updateTransportCreated = (value: boolean) => {\n    this.transportCreated.next(value);\n  };\n\n  updateTransportCreatedVideo = (value: boolean) => {\n    this.transportCreatedVideo.next(value);\n  };\n\n  updateTransportCreatedAudio = (value: boolean) => {\n    this.transportCreatedAudio.next(value);\n  };\n\n  updateTransportCreatedScreen = (value: boolean) => {\n    this.transportCreatedScreen.next(value);\n  };\n\n  updateProducerTransport = (value: Transport | null) => {\n    this.producerTransport.next(value);\n  };\n\n  updateVideoProducer = (value: Producer | null) => {\n    this.videoProducer.next(value);\n  };\n\n  updateParams = (value: ProducerOptions) => {\n    this.params.next(value);\n  };\n\n  updateVideoParams = (value: ProducerOptions) => {\n    this.videoParams.next(value);\n  };\n\n  updateAudioParams = (value: ProducerOptions) => {\n    this.audioParams.next(value);\n  };\n\n  updateAudioProducer = (value: Producer | null) => {\n    this.audioProducer.next(value);\n  };\n\n  updateConsumerTransports = (value: TransportType[]) => {\n    this.consumerTransports.next(value);\n  };\n\n  updateConsumingTransports = (value: string[]) => {\n    this.consumingTransports.next(value);\n  };\n\n  updatePolls = (value: Poll[]) => {\n    this.polls.next(value);\n  };\n\n  updatePoll = (value: Poll | null) => {\n    this.poll.next(value);\n  };\n\n  updateIsPollModalVisible = (value: boolean) => {\n    this.isPollModalVisible.next(value);\n  };\n\n  updateCustomImage = (value: string) => {\n    this.customImage.next(value);\n  };\n\n  updateSelectedImage = (value: string) => {\n    this.selectedImage.next(value);\n  };\n\n  updateSegmentVideo = (value: MediaStream | null) => {\n    this.segmentVideo.next(value);\n  };\n\n  updateSelfieSegmentation = (value: SelfieSegmentation | null) => {\n    this.selfieSegmentation.next(value);\n  };\n\n  updatePauseSegmentation = (value: boolean) => {\n    this.pauseSegmentation.next(value);\n  };\n\n  updateProcessedStream = (value: MediaStream | null) => {\n    this.processedStream.next(value);\n  };\n\n  updateKeepBackground = (value: boolean) => {\n    this.keepBackground.next(value);\n  };\n\n  updateBackgroundHasChanged = (value: boolean) => {\n    this.backgroundHasChanged.next(value);\n  };\n\n  updateVirtualStream = (value: MediaStream | null) => {\n    this.virtualStream.next(value);\n  };\n\n  updateMainCanvas = (value: HTMLCanvasElement | null) => {\n    this.mainCanvas.next(value);\n  };\n\n  updatePrevKeepBackground = (value: boolean) => {\n    this.prevKeepBackground.next(value);\n  };\n\n  updateAppliedBackground = (value: boolean) => {\n    this.appliedBackground.next(value);\n  };\n\n  updateIsBackgroundModalVisible = (value: boolean) => {\n    this.isBackgroundModalVisible.next(value);\n  };\n\n  updateAutoClickBackground = (value: boolean) => {\n    this.autoClickBackground.next(value);\n  };\n\n  updateBreakoutRooms = (value: BreakoutParticipant[][]) => {\n    this.breakoutRooms.next(value);\n  };\n\n  updateCurrentRoomIndex = (value: number) => {\n    this.currentRoomIndex.next(value);\n  };\n\n  updateCanStartBreakout = (value: boolean) => {\n    this.canStartBreakout.next(value);\n  };\n\n  updateBreakOutRoomStarted = (value: boolean) => {\n    this.breakOutRoomStarted.next(value);\n  };\n\n  updateBreakOutRoomEnded = (value: boolean) => {\n    this.breakOutRoomEnded.next(value);\n  };\n\n  updateHostNewRoom = (value: number) => {\n    this.hostNewRoom.next(value);\n  };\n\n  updateLimitedBreakRoom = (value: BreakoutParticipant[]) => {\n    this.limitedBreakRoom.next(value);\n  };\n\n  updateMainRoomsLength = (value: number) => {\n    this.mainRoomsLength.next(value);\n  };\n\n  updateMemberRoom = (value: number) => {\n    this.memberRoom.next(value);\n  };\n\n  updateIsBreakoutRoomsModalVisible = (value: boolean) => {\n    this.isBreakoutRoomsModalVisible.next(value);\n  };\n\n  updateWhiteboardUsers = (value: WhiteboardUser[]) => {\n    this.whiteboardUsers.next(value);\n  };\n\n  updateCurrentWhiteboardIndex = (value: number) => {\n    this.currentWhiteboardIndex.next(value);\n  };\n\n  updateCanStartWhiteboard = (value: boolean) => {\n    this.canStartWhiteboard.next(value);\n  };\n\n  updateWhiteboardStarted = (value: boolean) => {\n    this.whiteboardStarted.next(value);\n  };\n\n  updateWhiteboardEnded = (value: boolean) => {\n    this.whiteboardEnded.next(value);\n  };\n\n  updateWhiteboardLimit = (value: number) => {\n    this.whiteboardLimit.next(value);\n  };\n\n  updateIsWhiteboardModalVisible = (value: boolean) => {\n    this.isWhiteboardModalVisible.next(value);\n  };\n\n  updateIsConfigureWhiteboardModalVisible = (value: boolean) => {\n    this.isConfigureWhiteboardModalVisible.next(value);\n  };\n\n  updateShapes = (value: Shape[]) => {\n    this.shapes.next(value);\n  };\n\n  updateUseImageBackground = (value: boolean) => {\n    this.useImageBackground.next(value);\n  };\n\n  updateRedoStack = (value: Shape[]) => {\n    this.redoStack.next(value);\n  };\n\n  updateUndoStack = (value: string[]) => {\n    this.undoStack.next(value);\n  };\n\n  updateCanvasStream = (value: MediaStream | null) => {\n    this.canvasStream.next(value);\n  };\n\n  updateCanvasWhiteboard = (value: HTMLCanvasElement | null) => {\n    this.canvasWhiteboard.next(value);\n  };\n\n  updateCanvasScreenboard = (value: HTMLCanvasElement | null) => {\n    this.canvasScreenboard.next(value);\n  };\n\n  updateProcessedScreenStream = (value: MediaStream | null) => {\n    this.processedScreenStream.next(value);\n  };\n\n  updateAnnotateScreenStream = (value: boolean) => {\n    this.annotateScreenStream.next(value);\n  };\n\n  updateMainScreenCanvas = (value: HTMLCanvasElement | null) => {\n    this.mainScreenCanvas.next(value);\n  };\n\n  updateIsScreenboardModalVisible = (value: boolean) => {\n    this.isScreenboardModalVisible.next(value);\n  };\n\n  checkOrientation = () => {\n    const isPortrait = window.matchMedia('(orientation: portrait)').matches;\n    return isPortrait ? 'portrait' : 'landscape';\n  };\n\n  showAlert = ({\n    message,\n    type,\n    duration = 3000,\n  }: {\n    message: string;\n    type: 'success' | 'danger';\n    duration?: number;\n  }) => {\n    this.updateAlertMessage(message);\n    this.updateAlertType(type);\n    this.updateAlertDuration(duration);\n    this.updateAlertVisible(true);\n  };\n\n  getAllParams() {\n    return {\n      localUIMode: this.localUIMode.value, // Local UI mode\n\n      // Room Details\n      roomName: this.roomName.value,\n      member: this.member.value,\n      adminPasscode: this.adminPasscode.value,\n      youAreCoHost: this.youAreCoHost.value,\n      youAreHost: this.youAreHost.value,\n      islevel: this.islevel.value,\n      confirmedToRecord: this.confirmedToRecord.value,\n      meetingDisplayType: this.meetingDisplayType.value,\n      meetingVideoOptimized: this.meetingVideoOptimized.value,\n      eventType: this.eventType.value,\n      participants: this.participants.value,\n      filteredParticipants: this.filteredParticipants.value,\n      participantsCounter: this.participantsCounter.value,\n      participantsFilter: this.participantsFilter.value,\n\n      // More room details - media\n      consume_sockets: this.consume_sockets.value,\n      rtpCapabilities: this.rtpCapabilities.value,\n      roomRecvIPs: this.roomRecvIPs.value,\n      meetingRoomParams: this.meetingRoomParams.value,\n      itemPageLimit: this.itemPageLimit.value,\n      audioOnlyRoom: this.audioOnlyRoom.value,\n      addForBasic: this.addForBasic.value,\n      screenPageLimit: this.screenPageLimit.value,\n      shareScreenStarted: this.shareScreenStarted.value,\n      shared: this.shared.value,\n      targetOrientation: this.targetOrientation.value,\n      targetResolution: this.targetResolution.value,\n      targetResolutionHost: this.targetResolutionHost.value,\n      vidCons: this.vidCons.value,\n      frameRate: this.frameRate.value,\n      hParams: this.hParams.value,\n      vParams: this.vParams.value,\n      screenParams: this.screenParams.value,\n      aParams: this.aParams.value,\n\n      // More room details - recording\n      recordingAudioPausesLimit: this.recordingAudioPausesLimit.value,\n      recordingAudioPausesCount: this.recordingAudioPausesCount.value,\n      recordingAudioSupport: this.recordingAudioSupport.value,\n      recordingAudioPeopleLimit: this.recordingAudioPeopleLimit.value,\n      recordingAudioParticipantsTimeLimit: this.recordingAudioParticipantsTimeLimit.value,\n      recordingVideoPausesCount: this.recordingVideoPausesCount.value,\n      recordingVideoPausesLimit: this.recordingVideoPausesLimit.value,\n      recordingVideoSupport: this.recordingVideoSupport.value,\n      recordingVideoPeopleLimit: this.recordingVideoPeopleLimit.value,\n      recordingVideoParticipantsTimeLimit: this.recordingVideoParticipantsTimeLimit.value,\n      recordingAllParticipantsSupport: this.recordingAllParticipantsSupport.value,\n      recordingVideoParticipantsSupport: this.recordingVideoParticipantsSupport.value,\n      recordingAllParticipantsFullRoomSupport: this.recordingAllParticipantsFullRoomSupport.value,\n      recordingVideoParticipantsFullRoomSupport:\n        this.recordingVideoParticipantsFullRoomSupport.value,\n      recordingPreferredOrientation: this.recordingPreferredOrientation.value,\n      recordingSupportForOtherOrientation: this.recordingSupportForOtherOrientation.value,\n      recordingMultiFormatsSupport: this.recordingMultiFormatsSupport.value,\n\n      userRecordingParams: this.userRecordingParams.value,\n      canRecord: this.canRecord.value,\n      startReport: this.startReport.value,\n      endReport: this.endReport.value,\n      recordStartTime: this.recordStartTime.value,\n      recordElapsedTime: this.recordElapsedTime.value,\n      isTimerRunning: this.isTimerRunning.value,\n      canPauseResume: this.canPauseResume.value,\n      recordChangeSeconds: this.recordChangeSeconds.value,\n      pauseLimit: this.pauseLimit.value,\n      pauseRecordCount: this.pauseRecordCount.value,\n      canLaunchRecord: this.canLaunchRecord.value,\n      stopLaunchRecord: this.stopLaunchRecord.value,\n\n      participantsAll: this.participantsAll.value,\n\n      firstAll: this.firstAll.value,\n      updateMainWindow: this.updateMainWindow.value,\n      first_round: this.first_round.value,\n      landScaped: this.landScaped.value,\n      lock_screen: this.lock_screen.value,\n      screenId: this.screenId.value,\n      allVideoStreams: this.allVideoStreams.value,\n      newLimitedStreams: this.newLimitedStreams.value,\n      newLimitedStreamsIDs: this.newLimitedStreamsIDs.value,\n      activeSounds: this.activeSounds.value,\n      screenShareIDStream: this.screenShareIDStream.value,\n      screenShareNameStream: this.screenShareNameStream.value,\n      adminIDStream: this.adminIDStream.value,\n      adminNameStream: this.adminNameStream.value,\n      youYouStream: this.youYouStream.value,\n      youYouStreamIDs: this.youYouStreamIDs.value,\n      localStream: this.localStream.value,\n      recordStarted: this.recordStarted.value,\n      recordResumed: this.recordResumed.value,\n      recordPaused: this.recordPaused.value,\n      recordStopped: this.recordStopped.value,\n      adminRestrictSetting: this.adminRestrictSetting.value,\n      videoRequestState: this.videoRequestState.value,\n      videoRequestTime: this.videoRequestTime.value,\n      videoAction: this.videoAction.value,\n      localStreamVideo: this.localStreamVideo.value,\n      userDefaultVideoInputDevice: this.userDefaultVideoInputDevice.value,\n      currentFacingMode: this.currentFacingMode.value,\n      prevFacingMode: this.prevFacingMode.value,\n      defVideoID: this.defVideoID.value,\n      allowed: this.allowed.value,\n      dispActiveNames: this.dispActiveNames.value,\n      p_dispActiveNames: this.p_dispActiveNames.value,\n      activeNames: this.activeNames.value,\n      prevActiveNames: this.prevActiveNames.value,\n      p_activeNames: this.p_activeNames.value,\n      membersReceived: this.membersReceived.value,\n      deferScreenReceived: this.deferScreenReceived.value,\n      hostFirstSwitch: this.hostFirstSwitch.value,\n      micAction: this.micAction.value,\n      screenAction: this.screenAction.value,\n      chatAction: this.chatAction.value,\n      audioRequestState: this.audioRequestState.value,\n      screenRequestState: this.screenRequestState.value,\n      chatRequestState: this.chatRequestState.value,\n      audioRequestTime: this.audioRequestTime.value,\n      screenRequestTime: this.screenRequestTime.value,\n      chatRequestTime: this.chatRequestTime.value,\n      updateRequestIntervalSeconds: this.updateRequestIntervalSeconds.value,\n      oldSoundIds: this.oldSoundIds.value,\n      hostLabel: this.hostLabel.value,\n      mainScreenFilled: this.mainScreenFilled.value,\n      localStreamScreen: this.localStreamScreen.value,\n      screenAlreadyOn: this.screenAlreadyOn.value,\n      chatAlreadyOn: this.chatAlreadyOn.value,\n      redirectURL: this.redirectURL.value,\n      oldAllStreams: this.oldAllStreams.value,\n      adminVidID: this.adminVidID.value,\n      streamNames: this.streamNames.value,\n      non_alVideoStreams: this.non_alVideoStreams.value,\n      sortAudioLoudness: this.sortAudioLoudness.value,\n      audioDecibels: this.audioDecibels.value,\n      mixed_alVideoStreams: this.mixed_alVideoStreams.value,\n      non_alVideoStreams_muted: this.non_alVideoStreams_muted.value,\n      paginatedStreams: this.paginatedStreams.value,\n      localStreamAudio: this.localStreamAudio.value,\n      defAudioID: this.defAudioID.value,\n      userDefaultAudioInputDevice: this.userDefaultAudioInputDevice.value,\n      userDefaultAudioOutputDevice: this.userDefaultAudioOutputDevice.value,\n      prevAudioInputDevice: this.prevAudioInputDevice.value,\n      prevVideoInputDevice: this.prevVideoInputDevice.value,\n      audioPaused: this.audioPaused.value,\n      mainScreenPerson: this.mainScreenPerson.value,\n      adminOnMainScreen: this.adminOnMainScreen.value,\n      screenStates: this.screenStates.value,\n      prevScreenStates: this.prevScreenStates.value,\n      updateDateState: this.updateDateState.value,\n      lastUpdate: this.lastUpdate.value,\n      nForReadjustRecord: this.nForReadjustRecord.value,\n      fixedPageLimit: this.fixedPageLimit.value,\n      removeAltGrid: this.removeAltGrid.value,\n      nForReadjust: this.nForReadjust.value,\n      lastReorderTime: this.lastReorderTime.value,\n      reorderInterval: this.reorderInterval.value,\n      fastReorderInterval: this.fastReorderInterval.value,\n      audStreamNames: this.audStreamNames.value,\n      currentUserPage: this.currentUserPage.value,\n      mainHeightWidth: this.mainHeightWidth.value,\n      prevMainHeightWidth: this.prevMainHeightWidth.value,\n      prevDoPaginate: this.prevDoPaginate.value,\n      doPaginate: this.doPaginate.value,\n      shareEnded: this.shareEnded.value,\n      lStreams: this.lStreams.value,\n      chatRefStreams: this.chatRefStreams.value,\n      controlHeight: this.controlHeight.value,\n      isWideScreen: this.isWideScreen.value,\n      isMediumScreen: this.isMediumScreen.value,\n      isSmallScreen: this.isSmallScreen.value,\n      addGrid: this.addGrid.value,\n      addAltGrid: this.addAltGrid.value,\n      gridRows: this.gridRows.value,\n      gridCols: this.gridCols.value,\n      altGridRows: this.altGridRows.value,\n      altGridCols: this.altGridCols.value,\n      numberPages: this.numberPages.value,\n      currentStreams: this.currentStreams.value,\n      showMiniView: this.showMiniView.value,\n      nStream: this.nStream.value,\n      defer_receive: this.defer_receive.value,\n      allAudioStreams: this.allAudioStreams.value,\n      screenProducer: this.screenProducer.value,\n      remoteScreenStream: this.remoteScreenStream.value,\n      gotAllVids: this.gotAllVids.value,\n      paginationHeightWidth: this.paginationHeightWidth.value,\n      paginationDirection: this.paginationDirection.value,\n      gridSizes: this.gridSizes.value,\n      screenForceFullDisplay: this.screenForceFullDisplay.value,\n      mainGridStream: this.mainGridStream.value,\n      otherGridStreams: this.otherGridStreams.value,\n      audioOnlyStreams: this.audioOnlyStreams.value,\n      videoInputs: this.videoInputs.value,\n      audioInputs: this.audioInputs.value,\n      meetingProgressTime: this.meetingProgressTime.value,\n      meetingElapsedTime: this.meetingElapsedTime.value,\n\n      ref_participants: this.ref_participants.value,\n\n      messages: this.messages.value,\n      startDirectMessage: this.startDirectMessage.value,\n      directMessageDetails: this.directMessageDetails.value,\n      coHost: this.coHost.value,\n      coHostResponsibility: this.coHostResponsibility.value,\n\n      // Event settings\n      audioSetting: this.audioSetting.value,\n      videoSetting: this.videoSetting.value,\n      screenshareSetting: this.screenshareSetting.value,\n      chatSetting: this.chatSetting.value,\n\n      // Display settings\n      autoWave: this.autoWave.value,\n      forceFullDisplay: this.forceFullDisplay.value,\n      prevForceFullDisplay: this.prevForceFullDisplay.value,\n      prevMeetingDisplayType: this.prevMeetingDisplayType.value,\n\n      // Waiting room\n      waitingRoomFilter: this.waitingRoomFilter.value,\n      waitingRoomList: this.waitingRoomList.value,\n      waitingRoomCounter: this.waitingRoomCounter.value,\n      filteredWaitingRoomList: this.filteredWaitingRoomList.value,\n\n      // Requests\n      requestFilter: this.requestFilter.value,\n      requestList: this.requestList.value,\n      requestCounter: this.requestCounter.value,\n      filteredRequestList: this.filteredRequestList.value,\n\n      // Total requests and waiting room\n      totalReqWait: this.totalReqWait.value,\n\n      // Alerts\n      alertVisible: this.alertVisible.value,\n      alertMessage: this.alertMessage.value,\n      alertType: this.alertType.value,\n      alertDuration: this.alertDuration.value,\n\n      // Progress Timer\n      progressTimerVisible: this.progressTimerVisible.value,\n      progressTimerValue: this.progressTimerValue.value,\n\n      // Menu modals\n      isMenuModalVisible: this.isMenuModalVisible.value,\n      isRecordingModalVisible: this.isRecordingModalVisible.value,\n      isSettingsModalVisible: this.isSettingsModalVisible.value,\n      isRequestsModalVisible: this.isRequestsModalVisible.value,\n      isWaitingModalVisible: this.isWaitingModalVisible.value,\n      isCoHostModalVisible: this.isCoHostModalVisible.value,\n      isMediaSettingsModalVisible: this.isMediaSettingsModalVisible.value,\n      isDisplaySettingsModalVisible: this.isDisplaySettingsModalVisible.value,\n\n      // Other Modals\n      isParticipantsModalVisible: this.isParticipantsModalVisible.value,\n      isMessagesModalVisible: this.isMessagesModalVisible.value,\n      isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n      isConfirmHereModalVisible: this.isConfirmHereModalVisible.value,\n      isLoadingModalVisible: this.isLoadingModalVisible.value,\n\n      // Recording Options\n      recordingMediaOptions: this.recordingMediaOptions.value,\n      recordingAudioOptions: this.recordingAudioOptions.value,\n      recordingVideoOptions: this.recordingVideoOptions.value,\n      recordingVideoType: this.recordingVideoType.value,\n      recordingVideoOptimized: this.recordingVideoOptimized.value,\n      recordingDisplayType: this.recordingDisplayType.value,\n      recordingAddHLS: this.recordingAddHLS.value,\n      recordingAddText: this.recordingAddText.value,\n      recordingCustomText: this.recordingCustomText.value,\n      recordingCustomTextPosition: this.recordingCustomTextPosition.value,\n      recordingCustomTextColor: this.recordingCustomTextColor.value,\n      recordingNameTags: this.recordingNameTags.value,\n      recordingBackgroundColor: this.recordingBackgroundColor.value,\n      recordingNameTagsColor: this.recordingNameTagsColor.value,\n      recordingOrientationVideo: this.recordingOrientationVideo.value,\n      clearedToResume: this.clearedToResume.value,\n      clearedToRecord: this.clearedToRecord.value,\n      recordState: this.recordState.value,\n      showRecordButtons: this.showRecordButtons.value,\n      recordingProgressTime: this.recordingProgressTime.value,\n      audioSwitching: this.audioSwitching.value,\n      videoSwitching: this.videoSwitching.value,\n\n      // Media states\n      videoAlreadyOn: this.videoAlreadyOn.value,\n      audioAlreadyOn: this.audioAlreadyOn.value,\n      componentSizes: this.componentSizes.value,\n\n      // Permissions\n      hasCameraPermission: this.hasCameraPermission.value,\n      hasAudioPermission: this.hasAudioPermission.value,\n\n      // Transports\n      transportCreated: this.transportCreated.value,\n      transportCreatedVideo: this.transportCreatedVideo.value,\n      transportCreatedAudio: this.transportCreatedAudio.value,\n      transportCreatedScreen: this.transportCreatedScreen.value,\n      producerTransport: this.producerTransport.value,\n      videoProducer: this.videoProducer.value,\n      params: this.params.value,\n      videoParams: this.videoParams.value,\n      audioParams: this.audioParams.value,\n      audioProducer: this.audioProducer.value,\n      consumerTransports: this.consumerTransports.value,\n      consumingTransports: this.consumingTransports.value,\n\n      // Polls\n      polls: this.polls.value,\n      poll: this.poll.value,\n      isPollModalVisible: this.isPollModalVisible.value,\n\n      // Background\n      customImage: this.customImage.value,\n      selectedImage: this.selectedImage.value,\n      segmentVideo: this.segmentVideo.value,\n      selfieSegmentation: this.selfieSegmentation.value,\n      pauseSegmentation: this.pauseSegmentation.value,\n      processedStream: this.processedStream.value,\n      keepBackground: this.keepBackground.value,\n      backgroundHasChanged: this.backgroundHasChanged.value,\n      virtualStream: this.virtualStream.value,\n      mainCanvas: this.mainCanvas.value,\n      prevKeepBackground: this.prevKeepBackground.value,\n      appliedBackground: this.appliedBackground.value,\n      isBackgroundModalVisible: this.isBackgroundModalVisible.value,\n      autoClickBackground: this.autoClickBackground.value,\n\n      // Breakout rooms\n      breakoutRooms: this.breakoutRooms.value,\n      currentRoomIndex: this.currentRoomIndex.value,\n      canStartBreakout: this.canStartBreakout.value,\n      breakOutRoomStarted: this.breakOutRoomStarted.value,\n      breakOutRoomEnded: this.breakOutRoomEnded.value,\n      hostNewRoom: this.hostNewRoom.value,\n      limitedBreakRoom: this.limitedBreakRoom.value,\n      mainRoomsLength: this.mainRoomsLength.value,\n      memberRoom: this.memberRoom.value,\n      isBreakoutRoomsModalVisible: this.isBreakoutRoomsModalVisible.value,\n\n      // Whiteboard\n      whiteboardUsers: this.whiteboardUsers.value,\n      currentWhiteboardIndex: this.currentWhiteboardIndex.value,\n      canStartWhiteboard: this.canStartWhiteboard.value,\n      whiteboardStarted: this.whiteboardStarted.value,\n      whiteboardEnded: this.whiteboardEnded.value,\n      whiteboardLimit: this.whiteboardLimit.value,\n      isWhiteboardModalVisible: this.isWhiteboardModalVisible.value,\n      isConfigureWhiteboardModalVisible: this.isConfigureWhiteboardModalVisible.value,\n      shapes: this.shapes.value,\n      useImageBackground: this.useImageBackground.value,\n      redoStack: this.redoStack.value,\n      undoStack: this.undoStack.value,\n      canvasStream: this.canvasStream.value,\n      canvasWhiteboard: this.canvasWhiteboard.value,\n\n      // Screenboard\n      canvasScreenboard: this.canvasScreenboard.value,\n      processedScreenStream: this.processedScreenStream.value,\n      annotateScreenStream: this.annotateScreenStream.value,\n      mainScreenCanvas: this.mainScreenCanvas.value,\n      isScreenboardModalVisible: this.isScreenboardModalVisible.value,\n\n      validated: this.validated.value,\n      device: this.device.value,\n      socket: this.socket.value,\n      checkMediaPermission: false,\n      onWeb: true,\n\n      // Update functions\n      updateRoomName: this.updateRoomName.bind(this),\n      updateMember: this.updateMember.bind(this),\n      updateAdminPasscode: this.updateAdminPasscode.bind(this),\n      updateYouAreCoHost: this.updateYouAreCoHost.bind(this),\n      updateYouAreHost: this.updateYouAreHost.bind(this),\n      updateIslevel: this.updateIslevel.bind(this),\n      updateCoHost: this.updateCoHost.bind(this),\n      updateCoHostResponsibility: this.updateCoHostResponsibility.bind(this),\n      updateConfirmedToRecord: this.updateConfirmedToRecord.bind(this),\n      updateMeetingDisplayType: this.updateMeetingDisplayType.bind(this),\n      updateMeetingVideoOptimized: this.updateMeetingVideoOptimized.bind(this),\n      updateEventType: this.updateEventType.bind(this),\n      updateParticipants: this.updateParticipants.bind(this),\n      updateParticipantsCounter: this.updateParticipantsCounter.bind(this),\n      updateParticipantsFilter: this.updateParticipantsFilter.bind(this),\n\n      // More update functions for media details\n      updateConsume_sockets: this.updateConsume_sockets.bind(this),\n      updateRtpCapabilities: this.updateRtpCapabilities.bind(this),\n      updateRoomRecvIPs: this.updateRoomRecvIPs.bind(this),\n      updateMeetingRoomParams: this.updateMeetingRoomParams.bind(this),\n      updateItemPageLimit: this.updateItemPageLimit.bind(this),\n      updateAudioOnlyRoom: this.updateAudioOnlyRoom.bind(this),\n      updateAddForBasic: this.updateAddForBasic.bind(this),\n      updateScreenPageLimit: this.updateScreenPageLimit.bind(this),\n      updateShareScreenStarted: this.updateShareScreenStarted.bind(this),\n      updateShared: this.updateShared.bind(this),\n      updateTargetOrientation: this.updateTargetOrientation.bind(this),\n      updateTargetResolution: this.updateTargetResolution.bind(this),\n      updateTargetResolutionHost: this.updateTargetResolutionHost.bind(this),\n      updateVidCons: this.updateVidCons.bind(this),\n      updateFrameRate: this.updateFrameRate.bind(this),\n      updateHParams: this.updateHParams.bind(this),\n      updateVParams: this.updateVParams.bind(this),\n      updateScreenParams: this.updateScreenParams.bind(this),\n      updateAParams: this.updateAParams.bind(this),\n\n      // More update functions for recording details\n      updateRecordingAudioPausesLimit: this.updateRecordingAudioPausesLimit.bind(this),\n      updateRecordingAudioPausesCount: this.updateRecordingAudioPausesCount.bind(this),\n      updateRecordingAudioSupport: this.updateRecordingAudioSupport.bind(this),\n      updateRecordingAudioPeopleLimit: this.updateRecordingAudioPeopleLimit.bind(this),\n      updateRecordingAudioParticipantsTimeLimit:\n        this.updateRecordingAudioParticipantsTimeLimit.bind(this),\n      updateRecordingVideoPausesCount: this.updateRecordingVideoPausesCount.bind(this),\n      updateRecordingVideoPausesLimit: this.updateRecordingVideoPausesLimit.bind(this),\n      updateRecordingVideoSupport: this.updateRecordingVideoSupport.bind(this),\n      updateRecordingVideoPeopleLimit: this.updateRecordingVideoPeopleLimit.bind(this),\n      updateRecordingVideoParticipantsTimeLimit:\n        this.updateRecordingVideoParticipantsTimeLimit.bind(this),\n      updateRecordingAllParticipantsSupport: this.updateRecordingAllParticipantsSupport.bind(this),\n      updateRecordingVideoParticipantsSupport:\n        this.updateRecordingVideoParticipantsSupport.bind(this),\n      updateRecordingAllParticipantsFullRoomSupport:\n        this.updateRecordingAllParticipantsFullRoomSupport.bind(this),\n      updateRecordingVideoParticipantsFullRoomSupport:\n        this.updateRecordingVideoParticipantsFullRoomSupport.bind(this),\n      updateRecordingPreferredOrientation: this.updateRecordingPreferredOrientation.bind(this),\n      updateRecordingSupportForOtherOrientation:\n        this.updateRecordingSupportForOtherOrientation.bind(this),\n      updateRecordingMultiFormatsSupport: this.updateRecordingMultiFormatsSupport.bind(this),\n\n      updateUserRecordingParams: this.updateUserRecordingParams.bind(this),\n      updateCanRecord: this.updateCanRecord.bind(this),\n      updateStartReport: this.updateStartReport.bind(this),\n      updateEndReport: this.updateEndReport.bind(this),\n      updateRecordTimerInterval: this.updateRecordTimerInterval.bind(this),\n      updateRecordStartTime: this.updateRecordStartTime.bind(this),\n      updateRecordElapsedTime: this.updateRecordElapsedTime.bind(this),\n      updateIsTimerRunning: this.updateIsTimerRunning.bind(this),\n      updateCanPauseResume: this.updateCanPauseResume.bind(this),\n      updateRecordChangeSeconds: this.updateRecordChangeSeconds.bind(this),\n      updatePauseLimit: this.updatePauseLimit.bind(this),\n      updatePauseRecordCount: this.updatePauseRecordCount.bind(this),\n      updateCanLaunchRecord: this.updateCanLaunchRecord.bind(this),\n      updateStopLaunchRecord: this.updateStopLaunchRecord.bind(this),\n\n      updateParticipantsAll: this.updateParticipantsAll.bind(this),\n\n      updateFirstAll: this.updateFirstAll.bind(this),\n      updateUpdateMainWindow: this.updateUpdateMainWindow.bind(this),\n      updateFirst_round: this.updateFirst_round.bind(this),\n      updateLandScaped: this.updateLandScaped.bind(this),\n      updateLock_screen: this.updateLock_screen.bind(this),\n      updateScreenId: this.updateScreenId.bind(this),\n      updateAllVideoStreams: this.updateAllVideoStreams.bind(this),\n      updateNewLimitedStreams: this.updateNewLimitedStreams.bind(this),\n      updateNewLimitedStreamsIDs: this.updateNewLimitedStreamsIDs.bind(this),\n      updateActiveSounds: this.updateActiveSounds.bind(this),\n      updateScreenShareIDStream: this.updateScreenShareIDStream.bind(this),\n      updateScreenShareNameStream: this.updateScreenShareNameStream.bind(this),\n      updateAdminIDStream: this.updateAdminIDStream.bind(this),\n      updateAdminNameStream: this.updateAdminNameStream.bind(this),\n      updateYouYouStream: this.updateYouYouStream.bind(this),\n      updateYouYouStreamIDs: this.updateYouYouStreamIDs.bind(this),\n      updateLocalStream: this.updateLocalStream.bind(this),\n      updateRecordStarted: this.updateRecordStarted.bind(this),\n      updateRecordResumed: this.updateRecordResumed.bind(this),\n      updateRecordPaused: this.updateRecordPaused.bind(this),\n      updateRecordStopped: this.updateRecordStopped.bind(this),\n      updateAdminRestrictSetting: this.updateAdminRestrictSetting.bind(this),\n      updateVideoRequestState: this.updateVideoRequestState.bind(this),\n      updateVideoRequestTime: this.updateVideoRequestTime.bind(this),\n      updateVideoAction: this.updateVideoAction.bind(this),\n      updateLocalStreamVideo: this.updateLocalStreamVideo.bind(this),\n      updateUserDefaultVideoInputDevice: this.updateUserDefaultVideoInputDevice.bind(this),\n      updateCurrentFacingMode: this.updateCurrentFacingMode.bind(this),\n      updatePrevFacingMode: this.updatePrevFacingMode.bind(this),\n      updateDefVideoID: this.updateDefVideoID.bind(this),\n      updateAllowed: this.updateAllowed.bind(this),\n      updateDispActiveNames: this.updateDispActiveNames.bind(this),\n      updateP_dispActiveNames: this.updateP_dispActiveNames.bind(this),\n      updateActiveNames: this.updateActiveNames.bind(this),\n      updatePrevActiveNames: this.updatePrevActiveNames.bind(this),\n      updateP_activeNames: this.updateP_activeNames.bind(this),\n      updateMembersReceived: this.updateMembersReceived.bind(this),\n      updateDeferScreenReceived: this.updateDeferScreenReceived.bind(this),\n      updateHostFirstSwitch: this.updateHostFirstSwitch.bind(this),\n      updateMicAction: this.updateMicAction.bind(this),\n      updateScreenAction: this.updateScreenAction.bind(this),\n      updateChatAction: this.updateChatAction.bind(this),\n      updateAudioRequestState: this.updateAudioRequestState.bind(this),\n      updateScreenRequestState: this.updateScreenRequestState.bind(this),\n      updateChatRequestState: this.updateChatRequestState.bind(this),\n      updateAudioRequestTime: this.updateAudioRequestTime.bind(this),\n      updateScreenRequestTime: this.updateScreenRequestTime.bind(this),\n      updateChatRequestTime: this.updateChatRequestTime.bind(this),\n      updateOldSoundIds: this.updateOldSoundIds.bind(this),\n      updateHostLabel: this.updateHostLabel.bind(this),\n      updateMainScreenFilled: this.updateMainScreenFilled.bind(this),\n      updateLocalStreamScreen: this.updateLocalStreamScreen.bind(this),\n      updateScreenAlreadyOn: this.updateScreenAlreadyOn.bind(this),\n      updateChatAlreadyOn: this.updateChatAlreadyOn.bind(this),\n      updateRedirectURL: this.updateRedirectURL.bind(this),\n      updateOldAllStreams: this.updateOldAllStreams.bind(this),\n      updateAdminVidID: this.updateAdminVidID.bind(this),\n      updateStreamNames: this.updateStreamNames.bind(this),\n      updateNon_alVideoStreams: this.updateNon_alVideoStreams.bind(this),\n      updateSortAudioLoudness: this.updateSortAudioLoudness.bind(this),\n      updateAudioDecibels: this.updateAudioDecibels.bind(this),\n      updateMixed_alVideoStreams: this.updateMixed_alVideoStreams.bind(this),\n      updateNon_alVideoStreams_muted: this.updateNon_alVideoStreams_muted.bind(this),\n      updatePaginatedStreams: this.updatePaginatedStreams.bind(this),\n      updateLocalStreamAudio: this.updateLocalStreamAudio.bind(this),\n      updateDefAudioID: this.updateDefAudioID.bind(this),\n      updateUserDefaultAudioInputDevice: this.updateUserDefaultAudioInputDevice.bind(this),\n      updateUserDefaultAudioOutputDevice: this.updateUserDefaultAudioOutputDevice.bind(this),\n      updatePrevAudioInputDevice: this.updatePrevAudioInputDevice.bind(this),\n      updatePrevVideoInputDevice: this.updatePrevVideoInputDevice.bind(this),\n      updateAudioPaused: this.updateAudioPaused.bind(this),\n      updateMainScreenPerson: this.updateMainScreenPerson.bind(this),\n      updateAdminOnMainScreen: this.updateAdminOnMainScreen.bind(this),\n      updateScreenStates: this.updateScreenStates.bind(this),\n      updatePrevScreenStates: this.updatePrevScreenStates.bind(this),\n      updateUpdateDateState: this.updateUpdateDateState.bind(this),\n      updateLastUpdate: this.updateLastUpdate.bind(this),\n      updateNForReadjustRecord: this.updateNForReadjustRecord.bind(this),\n      updateFixedPageLimit: this.updateFixedPageLimit.bind(this),\n      updateRemoveAltGrid: this.updateRemoveAltGrid.bind(this),\n      updateNForReadjust: this.updateNForReadjust.bind(this),\n      updateLastReorderTime: this.updateLastReorderTime.bind(this),\n      updateAudStreamNames: this.updateAudStreamNames.bind(this),\n      updateCurrentUserPage: this.updateCurrentUserPage.bind(this),\n      updateMainHeightWidth: this.updateMainHeightWidth.bind(this),\n      updatePrevMainHeightWidth: this.updatePrevMainHeightWidth.bind(this),\n      updatePrevDoPaginate: this.updatePrevDoPaginate.bind(this),\n      updateDoPaginate: this.updateDoPaginate.bind(this),\n      updateShareEnded: this.updateShareEnded.bind(this),\n      updateLStreams: this.updateLStreams.bind(this),\n      updateChatRefStreams: this.updateChatRefStreams.bind(this),\n      updateControlHeight: this.updateControlHeight.bind(this),\n      updateIsWideScreen: this.updateIsWideScreen.bind(this),\n      updateIsMediumScreen: this.updateIsMediumScreen.bind(this),\n      updateIsSmallScreen: this.updateIsSmallScreen.bind(this),\n      updateAddGrid: this.updateAddGrid.bind(this),\n      updateAddAltGrid: this.updateAddAltGrid.bind(this),\n      updateGridRows: this.updateGridRows.bind(this),\n      updateGridCols: this.updateGridCols.bind(this),\n      updateAltGridRows: this.updateAltGridRows.bind(this),\n      updateAltGridCols: this.updateAltGridCols.bind(this),\n      updateNumberPages: this.updateNumberPages.bind(this),\n      updateCurrentStreams: this.updateCurrentStreams.bind(this),\n      updateShowMiniView: this.updateShowMiniView.bind(this),\n      updateNStream: this.updateNStream.bind(this),\n      updateDefer_receive: this.updateDefer_receive.bind(this),\n      updateAllAudioStreams: this.updateAllAudioStreams.bind(this),\n      updateRemoteScreenStream: this.updateRemoteScreenStream.bind(this),\n      updateScreenProducer: this.updateScreenProducer.bind(this),\n      updateGotAllVids: this.updateGotAllVids.bind(this),\n      updatePaginationHeightWidth: this.updatePaginationHeightWidth.bind(this),\n      updatePaginationDirection: this.updatePaginationDirection.bind(this),\n      updateGridSizes: this.updateGridSizes.bind(this),\n      updateScreenForceFullDisplay: this.updateScreenForceFullDisplay.bind(this),\n      updateMainGridStream: this.updateMainGridStream.bind(this),\n      updateOtherGridStreams: this.updateOtherGridStreams.bind(this),\n      updateAudioOnlyStreams: this.updateAudioOnlyStreams.bind(this),\n      updateVideoInputs: this.updateVideoInputs.bind(this),\n      updateAudioInputs: this.updateAudioInputs.bind(this),\n      updateMeetingProgressTime: this.updateMeetingProgressTime.bind(this),\n      updateMeetingElapsedTime: this.updateMeetingElapsedTime.bind(this),\n      updateRef_participants: this.updateRef_participants.bind(this),\n\n      updateMessages: this.updateMessages.bind(this),\n      updateStartDirectMessage: this.updateStartDirectMessage.bind(this),\n      updateDirectMessageDetails: this.updateDirectMessageDetails.bind(this),\n      updateShowMessagesBadge: this.updateShowMessagesBadge.bind(this),\n\n      // Event settings\n      updateAudioSetting: this.updateAudioSetting.bind(this),\n      updateVideoSetting: this.updateVideoSetting.bind(this),\n      updateScreenshareSetting: this.updateScreenshareSetting.bind(this),\n      updateChatSetting: this.updateChatSetting.bind(this),\n\n      // Display settings\n      updateAutoWave: this.updateAutoWave.bind(this),\n      updateForceFullDisplay: this.updateForceFullDisplay.bind(this),\n      updatePrevForceFullDisplay: this.updatePrevForceFullDisplay.bind(this),\n      updatePrevMeetingDisplayType: this.updatePrevMeetingDisplayType.bind(this),\n\n      // Waiting room\n      updateWaitingRoomFilter: this.updateWaitingRoomFilter.bind(this),\n      updateWaitingRoomList: this.updateWaitingRoomList.bind(this),\n      updateWaitingRoomCounter: this.updateWaitingRoomCounter.bind(this),\n\n      // Requests\n      updateRequestFilter: this.updateRequestFilter.bind(this),\n      updateRequestList: this.updateRequestList.bind(this),\n      updateRequestCounter: this.updateRequestCounter.bind(this),\n\n      // Total requests and waiting room\n      updateTotalReqWait: this.updateTotalReqWait.bind(this),\n\n      // Menu modals\n      updateIsMenuModalVisible: this.updateIsMenuModalVisible.bind(this),\n      updateIsRecordingModalVisible: this.updateIsRecordingModalVisible.bind(this),\n      updateIsSettingsModalVisible: this.updateIsSettingsModalVisible.bind(this),\n      updateIsRequestsModalVisible: this.updateIsRequestsModalVisible.bind(this),\n      updateIsWaitingModalVisible: this.updateIsWaitingModalVisible.bind(this),\n      updateIsCoHostModalVisible: this.updateIsCoHostModalVisible.bind(this),\n      updateIsMediaSettingsModalVisible: this.updateIsMediaSettingsModalVisible.bind(this),\n      updateIsDisplaySettingsModalVisible: this.updateIsDisplaySettingsModalVisible.bind(this),\n\n      // Other modals\n      updateIsParticipantsModalVisible: this.updateIsParticipantsModalVisible.bind(this),\n      updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n      updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n      updateIsConfirmHereModalVisible: this.updateIsConfirmHereModalVisible.bind(this),\n      updateIsLoadingModalVisible: this.updateIsLoadingModalVisible.bind(this),\n\n      // Recording Options\n      updateRecordingMediaOptions: this.updateRecordingMediaOptions.bind(this),\n      updateRecordingAudioOptions: this.updateRecordingAudioOptions.bind(this),\n      updateRecordingVideoOptions: this.updateRecordingVideoOptions.bind(this),\n      updateRecordingVideoType: this.updateRecordingVideoType.bind(this),\n      updateRecordingVideoOptimized: this.updateRecordingVideoOptimized.bind(this),\n      updateRecordingDisplayType: this.updateRecordingDisplayType.bind(this),\n      updateRecordingAddHLS: this.updateRecordingAddHLS.bind(this),\n      updateRecordingAddText: this.updateRecordingAddText.bind(this),\n      updateRecordingCustomText: this.updateRecordingCustomText.bind(this),\n      updateRecordingCustomTextPosition: this.updateRecordingCustomTextPosition.bind(this),\n      updateRecordingCustomTextColor: this.updateRecordingCustomTextColor.bind(this),\n      updateRecordingNameTags: this.updateRecordingNameTags.bind(this),\n      updateRecordingBackgroundColor: this.updateRecordingBackgroundColor.bind(this),\n      updateRecordingNameTagsColor: this.updateRecordingNameTagsColor.bind(this),\n      updateRecordingOrientationVideo: this.updateRecordingOrientationVideo.bind(this),\n      updateClearedToResume: this.updateClearedToResume.bind(this),\n      updateClearedToRecord: this.updateClearedToRecord.bind(this),\n      updateRecordState: this.updateRecordState.bind(this),\n      updateShowRecordButtons: this.updateShowRecordButtons.bind(this),\n      updateRecordingProgressTime: this.updateRecordingProgressTime.bind(this),\n      updateAudioSwitching: this.updateAudioSwitching.bind(this),\n      updateVideoSwitching: this.updateVideoSwitching.bind(this),\n\n      // Media states\n      updateVideoAlreadyOn: this.updateVideoAlreadyOn.bind(this),\n      updateAudioAlreadyOn: this.updateAudioAlreadyOn.bind(this),\n      updateComponentSizes: this.updateComponentSizes.bind(this),\n\n      // Permissions\n      updateHasCameraPermission: this.updateHasCameraPermission.bind(this),\n      updateHasAudioPermission: this.updateHasAudioPermission.bind(this),\n\n      // Transports\n      updateTransportCreated: this.updateTransportCreated.bind(this),\n      updateTransportCreatedVideo: this.updateTransportCreatedVideo.bind(this),\n      updateTransportCreatedAudio: this.updateTransportCreatedAudio.bind(this),\n      updateTransportCreatedScreen: this.updateTransportCreatedScreen.bind(this),\n      updateProducerTransport: this.updateProducerTransport.bind(this),\n      updateVideoProducer: this.updateVideoProducer.bind(this),\n      updateParams: this.updateParams.bind(this),\n      updateVideoParams: this.updateVideoParams.bind(this),\n      updateAudioParams: this.updateAudioParams.bind(this),\n      updateAudioProducer: this.updateAudioProducer.bind(this),\n      updateConsumerTransports: this.updateConsumerTransports.bind(this),\n      updateConsumingTransports: this.updateConsumingTransports.bind(this),\n\n      // Polls\n      updatePolls: this.updatePolls.bind(this),\n      updatePoll: this.updatePoll.bind(this),\n      updateIsPollModalVisible: this.updateIsPollModalVisible.bind(this),\n\n      // Background\n      updateCustomImage: this.updateCustomImage.bind(this),\n      updateSelectedImage: this.updateSelectedImage.bind(this),\n      updateSegmentVideo: this.updateSegmentVideo.bind(this),\n      updateSelfieSegmentation: this.updateSelfieSegmentation.bind(this),\n      updatePauseSegmentation: this.updatePauseSegmentation.bind(this),\n      updateProcessedStream: this.updateProcessedStream.bind(this),\n      updateKeepBackground: this.updateKeepBackground.bind(this),\n      updateBackgroundHasChanged: this.updateBackgroundHasChanged.bind(this),\n      updateVirtualStream: this.updateVirtualStream.bind(this),\n      updateMainCanvas: this.updateMainCanvas.bind(this),\n      updatePrevKeepBackground: this.updatePrevKeepBackground.bind(this),\n      updateAppliedBackground: this.updateAppliedBackground.bind(this),\n      updateIsBackgroundModalVisible: this.updateIsBackgroundModalVisible.bind(this),\n      updateAutoClickBackground: this.updateAutoClickBackground.bind(this),\n\n      // Breakout rooms\n      updateBreakoutRooms: this.updateBreakoutRooms.bind(this),\n      updateCurrentRoomIndex: this.updateCurrentRoomIndex.bind(this),\n      updateCanStartBreakout: this.updateCanStartBreakout.bind(this),\n      updateBreakOutRoomStarted: this.updateBreakOutRoomStarted.bind(this),\n      updateBreakOutRoomEnded: this.updateBreakOutRoomEnded.bind(this),\n      updateHostNewRoom: this.updateHostNewRoom.bind(this),\n      updateLimitedBreakRoom: this.updateLimitedBreakRoom.bind(this),\n      updateMainRoomsLength: this.updateMainRoomsLength.bind(this),\n      updateMemberRoom: this.updateMemberRoom.bind(this),\n      updateIsBreakoutRoomsModalVisible: this.updateIsBreakoutRoomsModalVisible.bind(this),\n\n      // Whiteboard\n      updateWhiteboardUsers: this.updateWhiteboardUsers.bind(this),\n      updateCurrentWhiteboardIndex: this.updateCurrentWhiteboardIndex.bind(this),\n      updateCanStartWhiteboard: this.updateCanStartWhiteboard.bind(this),\n      updateWhiteboardStarted: this.updateWhiteboardStarted.bind(this),\n      updateWhiteboardEnded: this.updateWhiteboardEnded.bind(this),\n      updateWhiteboardLimit: this.updateWhiteboardLimit.bind(this),\n      updateIsWhiteboardModalVisible: this.updateIsWhiteboardModalVisible.bind(this),\n      updateIsConfigureWhiteboardModalVisible:\n        this.updateIsConfigureWhiteboardModalVisible.bind(this),\n      updateShapes: this.updateShapes.bind(this),\n      updateUseImageBackground: this.updateUseImageBackground.bind(this),\n      updateRedoStack: this.updateRedoStack.bind(this),\n      updateUndoStack: this.updateUndoStack.bind(this),\n      updateCanvasStream: this.updateCanvasStream.bind(this),\n      updateCanvasWhiteboard: this.updateCanvasWhiteboard.bind(this),\n\n      // Screenboard\n      updateCanvasScreenboard: this.updateCanvasScreenboard.bind(this),\n      updateProcessedScreenStream: this.updateProcessedScreenStream.bind(this),\n      updateAnnotateScreenStream: this.updateAnnotateScreenStream.bind(this),\n      updateMainScreenCanvas: this.updateMainScreenCanvas.bind(this),\n      updateIsScreenboardModalVisible: this.updateIsScreenboardModalVisible.bind(this),\n\n      // Other functions\n      checkOrientation: this.checkOrientation.bind(this),\n\n      updateDevice: this.updateDevice.bind(this),\n      updateSocket: this.updateSocket.bind(this),\n      updateValidated: this.updateValidated.bind(this),\n\n      showAlert: this.showAlert.bind(this),\n      getUpdatedAllParams: () => {\n        return {\n          ...this.getAllParams(),\n          ...this.mediaSFUFunctions(),\n        };\n      },\n    };\n  }\n\n  mediaSFUParameters = {\n    ...this.getAllParams(),\n    ...this.mediaSFUFunctions(),\n  };\n\n  getUpdatedAllParams = () => {\n    return {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n  };\n\n  PrejoinPageComponent: any = {\n    component: this.PrejoinPage,\n    injector: null,\n  };\n\n  updatePrejoinPageComponent = () => {\n    const PrejoinComp = {\n      component: this.PrejoinPage,\n      injector: this.createInjector({\n        parameters: {\n          showAlert:\n            this.showAlert ||\n            (() => {\n              console.log('showAlert not defined');\n            }),\n          updateIsLoadingModalVisible: this.updateIsLoadingModalVisible,\n          connectSocket: this.socketManager.connectSocket,\n          updateSocket: this.updateSocket,\n          updateValidated: this.updateValidated,\n          updateApiUserName: this.updateApiUserName,\n          updateApiToken: this.updateApiToken,\n          updateLink: this.updateLink,\n          updateRoomName: this.updateRoomName,\n          updateMember: this.updateMember,\n        },\n        credentials: this.credentials,\n      }),\n    };\n\n    this.PrejoinPageComponent = { ...PrejoinComp };\n\n    this.cdr.detectChanges();\n  };\n\n  ngOnInit() {\n    if (this.PrejoinPage) {\n      this.updatePrejoinPageComponent();\n    }\n\n    this.setupResizeListener();\n    if (this.validated) {\n      this.connectAndAddSocketMethods();\n    }\n\n    this.mainHeightWidthSubscription = this.mainHeightWidth.subscribe(() => {\n      this.updateMainVideoSize();\n    });\n\n    this.validatedSubscription = this.validated.subscribe((validated) => {\n      if (validated) {\n        this.handleValidated();\n      }\n    });\n    this.islevelSubscription = this.islevel.subscribe((islevel) => {\n      if (islevel) {\n        this.updateControlChatButtons();\n      }\n    });\n    this.coHostSubscription = combineLatest([this.coHost, this.coHostResponsibility]).subscribe(\n      ([coHost, coHostResponsibility]) => {\n        if (coHost || coHostResponsibility) {\n          this.updateControlChatButtons();\n        }\n      },\n    );\n\n    this.mediaSFUParameters = {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('orientationchange', this.handleResize);\n    if (this.mainHeightWidthSubscription) {\n      this.mainHeightWidthSubscription.unsubscribe();\n    }\n    if (this.validatedSubscription) {\n      this.validatedSubscription.unsubscribe();\n    }\n    if (this.islevelSubscription) {\n      this.islevelSubscription.unsubscribe();\n    }\n    if (this.coHostSubscription) {\n      this.coHostSubscription.unsubscribe();\n    }\n    if (this.ScreenboardSubscription) {\n      this.ScreenboardSubscription.unsubscribe();\n    }\n    if (this.recordingSubscription) {\n      this.recordingSubscription.unsubscribe();\n    }\n  }\n\n  updateMainVideoSize = async () => {\n    if (!this.lock_screen.value && !this.shared.value) {\n      this.prepopulateUserMedia.prepopulateUserMedia({\n        name: this.hostLabel.value,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n    } else {\n      if (!this.first_round.value) {\n        this.prepopulateUserMedia.prepopulateUserMedia({\n          name: this.hostLabel.value,\n          parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n        });\n      }\n    }\n  };\n\n  async connectAndAddSocketMethods() {\n    this.mediaSFUParameters = {\n      ...this.getAllParams(),\n      ...this.mediaSFUFunctions(),\n    };\n    const socket_ = await this.connect_Socket(this.apiUserName.value, '', this.apiToken.value);\n    if (socket_) {\n      this.updateSocket(socket_);\n    }\n  }\n\n  async handleValidated() {\n    this.updateAllVideoStreams([\n      { producerId: 'youyou', stream: undefined, id: 'youyou', name: 'youyou' },\n    ]);\n\n    this.updateStreamNames([{ id: 'youyou', name: 'youyou', producerId: '' }]);\n\n    if (this.validated.value) {\n\n      try {\n        if (!this.localUIMode.value) {\n          await this.connectAndAddSocketMethods();\n          this.updateIsLoadingModalVisible(true);\n        } else {\n          this.updateIsLoadingModalVisible(false);\n        }\n      } catch (error) {\n        console.log('error connectAndaAddSocketMethods', error);\n      }\n\n      this.startMeetingProgressTimer.startMeetingProgressTimer({\n        startTime: Date.now() / 1000,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n\n    }\n  }\n\n  @HostListener('window:resize')\n  @HostListener('window:orientationchange')\n  async handleResize() {\n    let fraction = 0;\n\n    if (\n      window.innerHeight < window.innerWidth &&\n      (this.eventType.value == 'webinar' || this.eventType.value == 'conference')\n    ) {\n      const currentHeight = window.innerHeight;\n      fraction = Number((40 / currentHeight).toFixed(3));\n      if (fraction != this.controlHeight.value) {\n        this.updateControlHeight(Number(fraction));\n      }\n    } else {\n      // Set default control button height for portrait mode or other event types\n      const currentHeight = window.innerHeight;\n      fraction = Number((40 / currentHeight).toFixed(3));\n      fraction = Number(fraction);\n      if (fraction != this.controlHeight.value) {\n        this.updateControlHeight(Number(fraction));\n      }\n    }\n\n    const dimensions = this.computeDimensionsMethod({\n      containerWidthFraction: 1,\n      containerHeightFraction: 1,\n      mainSize: this.mainHeightWidth.value,\n      doStack: true,\n      defaultFraction:\n        this.eventType.value == 'webinar' || this.eventType.value == 'conference'\n          ? 1 - fraction\n          : 1,\n    });\n\n    this.updateComponentSizes(dimensions);\n\n    const orientation = this.checkOrientation();\n    if (orientation == 'portrait') {\n      if (!this.isWideScreen.value) {\n        if (this.shareScreenStarted.value || this.shared.value) {\n          this.updateScreenForceFullDisplay(true);\n        }\n      }\n    }\n\n    // Updates the main grid view\n    await this.prepopulateUserMedia.prepopulateUserMedia({\n      name: this.hostLabel.value,\n      parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n    });\n    // Updates the mini grid view\n    await this.onScreenChanges.onScreenChanges({\n      changed: true,\n      parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n    });\n  }\n\n  async disconnectAllSockets(consume_sockets: ConsumeSocket[]): Promise<void> {\n    for (const socket of consume_sockets) {\n      try {\n        const ip = Object.keys(socket)[0];\n        await socket[ip].disconnect();\n      } catch (error) {\n        console.log(`Error disconnecting socket with IP: ${Object.keys(socket)[0]}`, error);\n      }\n    }\n  }\n\n  async closeAndReset() {\n    //close and clean up all sockets, modals,... and reset all states to initial values\n\n    this.updateIsMessagesModalVisible(false);\n    this.updateIsParticipantsModalVisible(false);\n    this.updateIsWaitingModalVisible(false);\n    this.updateIsRequestsModalVisible(false);\n    this.updateIsCoHostModalVisible(false);\n    this.updateIsSettingsModalVisible(false);\n    this.updateIsDisplaySettingsModalVisible(false);\n    this.updateIsMediaSettingsModalVisible(false);\n    this.updateIsMenuModalVisible(false);\n    this.updateIsShareEventModalVisible(false);\n    this.updateIsConfirmExitModalVisible(false);\n    await this.disconnectAllSockets(this.consume_sockets.value);\n    await this.updateStatesToInitialValues();\n    this.updateMeetingProgressTime('00:00:00');\n    this.updateMeetingElapsedTime(0);\n    this.updateRecordingProgressTime('00:00:00');\n    this.updateRecordElapsedTime(0);\n    this.updateShowRecordButtons(false);\n\n    this.updateIsConfigureWhiteboardModalVisible(false);\n    this.updateIsWhiteboardModalVisible(false);\n    this.updateIsMenuModalVisible(false);\n    this.updateIsRecordingModalVisible(false);\n    this.updateIsPollModalVisible(false);\n    this.updateIsBreakoutRoomsModalVisible(false);\n    this.updateIsBackgroundModalVisible(false);\n    this.updateIsLoadingModalVisible(false);\n    this.updateIsConfirmHereModalVisible(false);\n\n    await sleep({ ms: 500 });\n    this.updateValidated(false);\n    //if on web, reload the page\n    window.location.reload();\n  }\n\n  computeDimensionsMethod = ({\n    containerWidthFraction = 1,\n    containerHeightFraction = 1,\n    mainSize,\n    doStack = true,\n    defaultFraction,\n  }: {\n    containerWidthFraction?: number;\n    containerHeightFraction?: number;\n    mainSize: number;\n    doStack?: boolean;\n    defaultFraction: number;\n  }): ComponentSizes => {\n    const parentWidth = window.innerWidth * containerWidthFraction;\n    const parentHeight = window.innerHeight * containerHeightFraction * defaultFraction;\n    let isWideScreen = parentWidth >= 768;\n\n    if (!isWideScreen && parentWidth > 1.5 * parentHeight) {\n      isWideScreen = true;\n    }\n\n    this.updateIsWideScreen(isWideScreen);\n\n    const dimensions = this.calculateDimensions({\n      parentWidth,\n      parentHeight,\n      isWideScreen,\n      mainSize,\n      doStack,\n    });\n    return dimensions;\n  };\n\n  calculateDimensions({\n    parentWidth,\n    parentHeight,\n    isWideScreen,\n    mainSize,\n    doStack,\n  }: {\n    parentWidth: number;\n    parentHeight: number;\n    isWideScreen: boolean;\n    mainSize: number;\n    doStack: boolean;\n  }): ComponentSizes {\n    if (doStack) {\n      return isWideScreen\n        ? {\n            mainHeight: Math.floor(parentHeight),\n            otherHeight: Math.floor(parentHeight),\n            mainWidth: Math.floor((mainSize / 100) * parentWidth),\n            otherWidth: Math.floor(((100 - mainSize) / 100) * parentWidth),\n          }\n        : {\n            mainHeight: Math.floor((mainSize / 100) * parentHeight),\n            otherHeight: Math.floor(((100 - mainSize) / 100) * parentHeight),\n            mainWidth: Math.floor(parentWidth),\n            otherWidth: Math.floor(parentWidth),\n          };\n    } else {\n      return {\n        mainHeight: Math.floor(parentHeight),\n        otherHeight: Math.floor(parentHeight),\n        mainWidth: Math.floor(parentWidth),\n        otherWidth: Math.floor(parentWidth),\n      };\n    }\n  }\n\n  handleOrientationChange() {\n    window.addEventListener('resize', this.handleResize.bind(this));\n    window.addEventListener('orientationchange', this.handleResize.bind(this));\n  }\n\n  setupResizeListener() {\n    this.handleResize();\n  }\n\n  orientation = window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';\n\n  async joinRoom(data: {\n    socket: Socket;\n    roomName: string;\n    islevel: string;\n    member: string;\n    sec: string;\n    apiUserName: string;\n  }): Promise<ResponseJoinRoom | null> {\n    const { socket, roomName, islevel, member, sec, apiUserName } = data;\n\n    try {\n      const response: ResponseJoinRoom | null = await this.joinRoomClient.joinRoomClient({\n        socket,\n        roomName,\n        islevel,\n        member,\n        sec,\n        apiUserName,\n      });\n\n      return response;\n    } catch (error) {\n      console.log('Error joining room:', error);\n      throw new Error('Failed to join the room. Please check your connection and try again.');\n    }\n  }\n\n  async join_Room({\n    socket,\n    roomName,\n    islevel,\n    member,\n    sec,\n    apiUserName,\n  }: {\n    socket: Socket;\n    roomName: string;\n    islevel: string;\n    member: string;\n    sec: string;\n    apiUserName: string;\n  }): Promise<void> {\n    const data: ResponseJoinRoom | null = await this.joinRoom({\n      socket: socket,\n      roomName: roomName,\n      islevel: islevel,\n      member: member,\n      sec: sec,\n      apiUserName: apiUserName,\n    });\n\n    if (data && data.success) {\n      this.roomData.next(data);\n\n      try {\n        this.updateRoomParametersClient.updateRoomParametersClient({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n            data: data,\n          },\n        });\n\n        if (data.isHost) {\n          this.updateIslevel('2');\n        } else {\n          this.updateIslevel('1');\n        }\n\n        if (data.secureCode) {\n          this.updateAdminPasscode(data.secureCode);\n        }\n\n        if (data.rtpCapabilities) {\n          const device_ = await this.createDeviceClient.createDeviceClient({\n            rtpCapabilities: data.rtpCapabilities,\n          });\n\n          if (device_) {\n            this.device.next(device_);\n          }\n        }\n      } catch {\n        /* handle error */\n      }\n    } else {\n      this.updateValidated(false);\n      try {\n        if (this.showAlert && data?.reason) {\n          this.showAlert({ message: data?.reason, type: 'danger', duration: 3000 });\n        }\n      } catch {\n        /* handle error */\n      }\n    }\n  }\n\n  updateStatesToInitialValues = async () => {\n    const initialValues = initialValuesState as { [key: string]: any };\n    const updateFunctions = this.getAllParams() as unknown as {\n      [key: string]: (value: any) => void;\n    };\n\n    for (const key in initialValues) {\n      if (Object.prototype.hasOwnProperty.call(initialValues, key)) {\n        const updateFunctionName = `update${key.charAt(0).toUpperCase() + key.slice(1)}`;\n        const updateFunction = updateFunctions[updateFunctionName];\n\n        if (typeof updateFunction === 'function') {\n          try {\n            updateFunction(initialValues[key]);\n          } catch {\n            /* handle error */\n          }\n        }\n      }\n    }\n  };\n\n  faMicrophone = faMicrophone;\n  faMicrophoneSlash = faMicrophoneSlash;\n  faVideo = faVideo;\n  faVideoSlash = faVideoSlash;\n  faSync = faSync;\n  faPhone = faPhone;\n  faShareAlt = faShareAlt;\n  faComments = faComments;\n\n  onCloseMenuModal = () => {\n    this.updateIsMenuModalVisible(false);\n  };\n\n  onEventSettingsClose = () => {\n    this.updateIsSettingsModalVisible(false);\n  };\n\n  onCoHostClose = () => {\n    this.updateIsCoHostModalVisible(false);\n  };\n\n  onMediaSettingsClose = () => {\n    this.updateIsMediaSettingsModalVisible(false);\n  };\n\n  onDisplaySettingsClose = () => {\n    this.updateIsDisplaySettingsModalVisible(false);\n  };\n\n  onPollClose = () => {\n    this.updateIsPollModalVisible(false);\n  };\n\n  onBreakoutRoomsClose = () => {\n    this.updateIsBreakoutRoomsModalVisible(false);\n  };\n\n  onConfigureWhiteboardClose = () => {\n    this.updateIsConfigureWhiteboardModalVisible(false);\n  };\n\n  onMessagesClose = () => {\n    this.updateIsMessagesModalVisible(false);\n  };\n\n  onRecordingClose = () => {\n    this.updateIsRecordingModalVisible(false);\n  };\n\n  onParticipantsClose = () => {\n    this.updateIsParticipantsModalVisible(false);\n  };\n\n  onBackgroundClose = () => {\n    this.updateIsBackgroundModalVisible(false);\n  };\n\n  onConfirmExitClose = () => {\n    this.updateIsConfirmExitModalVisible(false);\n  };\n\n  onConfirmHereClose = () => {\n    this.updateIsConfirmHereModalVisible(false);\n  };\n\n  onScreenboardClose = () => {\n    this.updateIsScreenboardModalVisible(false);\n  };\n\n  onShareEventClose = () => {\n    this.updateIsShareEventModalVisible(false);\n  };\n\n  onAlertHide = () => {\n    this.updateAlertVisible(false);\n  };\n\n  messageWidget = {\n    component: MessageWidget,\n    injector: this.createInjector({\n      icon: this.faComments,\n      showBadge: this.showMessagesBadge.value,\n      badgeValue: 1,\n      iconColor: 'black',\n    }),\n  };\n\n  controlChatButtons: ButtonTouch[] = [];\n\n  controlChatButtonsArray: ButtonTouch[] = [\n    {\n      icon: this.faShareAlt,\n      active: true,\n      alternateIcon: this.faShareAlt,\n      onPress: () => this.updateIsShareEventModalVisible(!this.isShareEventModalVisible.value),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: true,\n    },\n    {\n      customComponent: this.messageWidget,\n      onPress: () =>\n        this.launchMessages.launchMessages({\n          updateIsMessagesModalVisible: this.updateIsMessagesModalVisible.bind(this),\n          isMessagesModalVisible: this.isMessagesModalVisible.value,\n        }),\n      show: true,\n    },\n    {\n      icon: this.faSync,\n      active: true,\n      alternateIcon: this.faSync,\n      onPress: () =>\n        this.switchVideoAlt.switchVideoAlt({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'black',\n      inActiveColor: 'black',\n      show: true,\n    },\n    {\n      icon: this.faVideoSlash,\n      alternateIcon: this.faVideo,\n      active: () => this.videoActive.value,\n      onPress: () =>\n        this.clickVideo.clickVideo({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      show: true,\n    },\n    {\n      icon: this.faMicrophoneSlash,\n      alternateIcon: this.faMicrophone,\n      active: () => this.micActive.value,\n      onPress: () =>\n        this.clickAudio.clickAudio({\n          parameters: {\n            ...this.getAllParams(),\n            ...this.mediaSFUFunctions(),\n          },\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      show: true,\n    },\n    {\n      icon: this.faPhone,\n      active: this.endCallActive.value,\n      onPress: () =>\n        this.launchConfirmExit.launchConfirmExit({\n          updateIsConfirmExitModalVisible: this.updateIsConfirmExitModalVisible.bind(this),\n          isConfirmExitModalVisible: this.isConfirmExitModalVisible.value,\n        }),\n      activeColor: 'green',\n      inActiveColor: 'red',\n      show: true,\n    },\n  ];\n\n  updateControlChatButtons() {\n    this.controlChatButtons = this.controlChatButtonsArray.map((button) => {\n      return {\n        ...button,\n        show: typeof button.show === 'function' ? button.show() : button.show,\n        active: typeof button.active === 'function' ? button.active() : button.active,\n      };\n    });\n  }\n\n  async connect_Socket(\n    apiUserName: string,\n    apiKey: string,\n    apiToken: string,\n  ): Promise<Socket | null> {\n    if (this.socket.value && this.socket.value.id) {\n      this.socket.value.on('disconnect', async () => {\n        await this.disconnect.disconnect({\n          showAlert: this.showAlert.bind(this),\n          redirectURL: this.redirectURL.value,\n          onWeb: true,\n          updateValidated: this.updateValidated.bind(this),\n        });\n        if (this.videoAlreadyOn.value) {\n          await this.clickVideo.clickVideo({\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        }\n        if (this.audioAlreadyOn.value) {\n          await this.clickAudio.clickAudio({\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        }\n\n        await this.closeAndReset();\n      });\n\n      this.socket.value.on('allMembers', async (membersData: AllMembersData) => {\n        if (membersData) {\n          await this.allMembers.allMembers({\n            apiUserName: apiUserName,\n            apiKey: '', //not recommended - use apiToken instead. Use for testing/development only\n            apiToken: apiToken,\n            members: membersData.members,\n            requestss: membersData.requests ? membersData.requests : this.requestList.value,\n            coHoste: membersData.coHost ? membersData.coHost : this.coHost.value,\n            coHostRes: membersData.coHostResponsibilities\n              ? membersData.coHostResponsibilities\n              : this.coHostResponsibility.value,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            consume_sockets: this.consume_sockets.value,\n          });\n        }\n      });\n\n      this.socket.value.on('allMembersRest', async (membersData: AllMembersRestData) => {\n        if (membersData) {\n          await this.allMembersRest.allMembersRest({\n            apiUserName: apiUserName,\n            apiKey: '', // not recommended - use apiToken instead. Use for testing/development only\n            members: membersData.members,\n            apiToken: apiToken,\n            settings: membersData.settings,\n            coHoste: membersData.coHost ? membersData.coHost : this.coHost.value,\n            coHostRes: membersData.coHostResponsibilities\n              ? membersData.coHostResponsibilities\n              : this.coHostResponsibility.value,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            consume_sockets: this.consume_sockets.value,\n          });\n        }\n      });\n\n      this.socket.value.on(\n        'producer-media-paused',\n        async ({\n          producerId,\n          kind,\n          name,\n        }: {\n          producerId: string;\n          kind: 'video' | 'audio' | 'screenshare' | 'screen';\n          name: string;\n        }) => {\n          await this.producerMediaPaused.producerMediaPaused({\n            producerId,\n            kind,\n            name,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'producer-media-resumed',\n        async ({ kind, name }: { kind: 'audio'; name: string }) => {\n          await this.producerMediaResumed.producerMediaResumed({\n            kind,\n            name,\n            parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n          });\n        },\n      );\n\n      this.socket.value.on(\n        'producer-media-closed',\n        async ({\n          producerId,\n          kind,\n        }: {\n          producerId: string;\n          kind: 'video' | 'audio' | 'screenshare' | 'screen';\n        }) => {\n          if (producerId && kind) {\n            await this.producerMediaClosed.producerMediaClosed({\n              producerId,\n              kind,\n              parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n            });\n          }\n        },\n      );\n\n      this.socket.value.on('meetingEnded', async () => {\n        await this.meetingEnded.meetingEnded({\n          showAlert: this.showAlert.bind(this),\n          redirectURL: this.redirectURL.value,\n          onWeb: true,\n          eventType: this.eventType.value,\n          updateValidated: this.updateValidated.bind(this),\n        });\n\n        if (this.videoAlreadyOn.value) {\n          await this.clickVideo.clickVideo({\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        }\n        if (this.audioAlreadyOn.value) {\n          await this.clickAudio.clickAudio({\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        }\n\n        await this.closeAndReset();\n      });\n\n      this.socket.value.on('disconnectUserSelf', async () => {\n        await this.disconnectUserSelf.disconnectUserSelf({\n          socket: this.socket.value,\n          member: this.member.value,\n          roomName: this.roomName.value,\n        });\n      });\n\n      this.socket.value.on('receiveMessage', async ({ message }: { message: Message }) => {\n        await this.receiveMessage.receiveMessage({\n          message,\n          messages: this.messages.value,\n          participantsAll: this.participantsAll.value,\n          member: this.member.value,\n          eventType: this.eventType.value,\n          islevel: this.islevel.value,\n          coHost: this.coHost.value,\n          updateMessages: this.updateMessages.bind(this),\n          updateShowMessagesBadge: this.updateShowMessagesBadge.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'meetingTimeRemaining',\n        async ({ timeRemaining }: { timeRemaining: number }) => {\n          await this.meetingTimeRemaining.meetingTimeRemaining({\n            timeRemaining,\n            showAlert: this.showAlert.bind(this),\n            eventType: this.eventType.value,\n          });\n        },\n      );\n\n      this.socket.value.on('meetingStillThere', async () => {\n        this.meetingStillThere.meetingStillThere({\n          updateIsConfirmHereModalVisible: this.updateIsConfirmHereModalVisible.bind(this),\n        });\n      });\n\n      this.socket.value.on(\n        'updateConsumingDomains',\n        async ({ domains, alt_domains }: UpdateConsumingDomainsData) => {\n          await this.updateConsumingDomains.updateConsumingDomains({\n            domains,\n            alt_domains,\n            apiUserName,\n            apiKey,\n            apiToken,\n            parameters: {\n              ...this.getAllParams(),\n              ...this.mediaSFUFunctions(),\n            },\n          });\n        },\n      );\n\n      await this.join_Room({\n        socket: this.socket.value,\n        roomName: this.roomName.value,\n        islevel: this.islevel.value,\n        member: this.member.value,\n        sec: this.apiToken.value,\n        apiUserName: this.apiUserName.value,\n      });\n      await this.receiveRoomMessages.receiveRoomMessages({\n        socket: this.socket.value,\n        roomName: this.roomName.value,\n        updateMessages: this.updateMessages.bind(this),\n      });\n      this.prepopulateUserMedia.prepopulateUserMedia({\n        name: this.hostLabel.value,\n        parameters: { ...this.getAllParams(), ...this.mediaSFUFunctions() },\n      });\n\n      return this.socket.value;\n    } else {\n      return null;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Participant } from '../../@types/types';\nexport interface GenerateRandomParticipantsOptions {\n  member: string;\n  coHost?: string;\n  host: string;\n  forChatBroadcast?: boolean;\n}\n\n// Export the type definition for the function\nexport type GenerateRandomParticipantsType = (\n  options: GenerateRandomParticipantsOptions,\n) => Participant[];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenerateRandomParticipants {\n  /**\n   * Generates a list of random participants with specified options.\n   *\n   * @param {Object} options - The options for generating participants.\n   * @param {string} options.member - The member to include in the participants list.\n   * @param {string} [options.coHost=\"\"] - The co-host to include in the participants list.\n   * @param {string} options.host - The host to include in the participants list.\n   * @param {boolean} [options.forChatBroadcast=false] - Whether the participants are for a chat broadcast.\n   * @returns {Participant[]} An array of generated participants.\n   */\n  generateRandomParticipants({\n    member,\n    coHost = '',\n    host,\n    forChatBroadcast = false,\n  }: GenerateRandomParticipantsOptions): Participant[] {\n    const participants: Participant[] = [];\n    let names = [\n      'Alice',\n      'Bob',\n      'Charlie',\n      'David',\n      'Eve',\n      'Frank',\n      'Grace',\n      'Hank',\n      'Ivy',\n      'Jack',\n      'Kate',\n      'Liam',\n      'Mia',\n      'Nina',\n      'Olivia',\n      'Pete',\n      'Quinn',\n      'Rachel',\n      'Steve',\n      'Tina',\n      'Ursula',\n      'Vince',\n      'Wendy',\n      'Xander',\n      'Yvonne',\n      'Zack',\n    ];\n\n    // Limit names to 2 for chat broadcast\n    if (forChatBroadcast) {\n      names.splice(2);\n    }\n\n    // Place member, coHost, and host at the beginning if not already included\n    if (!names.includes(member)) {\n      names.unshift(member);\n    }\n    if (!names.includes(coHost) && !forChatBroadcast) {\n      names.unshift(coHost);\n    }\n    if (!names.includes(host)) {\n      names.unshift(host);\n    }\n\n    // Limit names to 2 for chat broadcast\n    if (forChatBroadcast) {\n      names.splice(2);\n    }\n\n    // Remove names of length 1 or less\n    names = names.filter((name) => name.length > 1);\n\n    // Shuffle the names array to ensure unique names for each participant\n    const shuffledNames = [...names];\n    for (let i = shuffledNames.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledNames[i], shuffledNames[j]] = [shuffledNames[j], shuffledNames[i]];\n    }\n\n    let hasLevel2Participant = false;\n\n    // Generate participant objects\n    for (let i = 0; i < shuffledNames.length; i++) {\n      const randomName = shuffledNames[i];\n      const randomLevel = hasLevel2Participant ? '1' : randomName == host ? '2' : '1'; // Set islevel to '2' only once\n      const randomMuted = forChatBroadcast ? true : Math.random() < 0.5; // Set muted to false for chat broadcast\n\n      if (randomLevel === '2') {\n        hasLevel2Participant = true;\n      }\n\n      participants.push({\n        name: randomName,\n        islevel: randomLevel,\n        muted: randomMuted,\n        id: i.toString(),\n        audioID: `audio-${i}`,\n        videoID: `video-${i}`,\n      });\n    }\n\n    return participants;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Message, Participant } from '../../@types/types';\n\nexport interface GenerateRandomMessagesOptions {\n  participants: Participant[];\n  member: string;\n  coHost?: string;\n  host: string;\n  forChatBroadcast?: boolean;\n}\n\n// Export the type definition for the function\nexport type GenerateRandomMessagesType = (options: GenerateRandomMessagesOptions) => Message[];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenerateRandomMessages {\n  /**\n   * Generates random messages for a given set of participants.\n   *\n   * @param {Object} options - The options for generating random messages.\n   * @param {Array} options.participants - The list of participants.\n   * @param {string} options.member - The member who is part of the chat.\n   * @param {string} [options.coHost=\"\"] - The co-host of the chat.\n   * @param {string} options.host - The host of the chat.\n   * @param {boolean} [options.forChatBroadcast=false] - Flag to indicate if the messages are for chat broadcast.\n   * @returns {Message[]} An array of generated messages.\n   */\n  generateRandomMessages({\n    participants,\n    member,\n    coHost = '',\n    host,\n    forChatBroadcast = false,\n  }: GenerateRandomMessagesOptions): Message[] {\n    const messages: Message[] = [];\n\n    // Function to get a random participant other than the sender\n    const getRandomReceiver = (sender: string): string => {\n      const potentialReceivers = participants.filter((participant) => participant.name !== sender);\n      const randomReceiver =\n        potentialReceivers[Math.floor(Math.random() * potentialReceivers.length)];\n      return randomReceiver.name || '';\n    };\n\n    // Force add messages for specific participants\n    let refNames: string[] = [];\n    if (forChatBroadcast) {\n      refNames = [member, host];\n    } else {\n      if (coHost) {\n        refNames = [\n          member,\n          coHost,\n          host,\n          ...participants\n            .map((participant) => participant.name)\n            .filter((name): name is string => name !== undefined),\n        ];\n      } else {\n        refNames = [\n          member,\n          host,\n          ...participants\n            .map((participant) => participant.name)\n            .filter((name): name is string => name !== undefined),\n        ];\n      }\n    }\n\n    // Return unique names for the refNames\n    refNames = [...new Set(refNames)];\n\n    // Generate messages\n    let timeIncrement = 0;\n    refNames.forEach((sender) => {\n      // Send direct messages\n      const directMessage: Message = {\n        sender: sender,\n        receivers: [getRandomReceiver(sender)],\n        message: `Direct message from ${sender}`,\n        timestamp: new Date(Date.now() + timeIncrement).toLocaleTimeString(),\n        group: false,\n      };\n\n      messages.push(directMessage);\n\n      // Send group messages\n      const groupMessage: Message = {\n        sender: sender,\n        receivers: participants\n          .map((participant) => participant.name)\n          .filter((name): name is string => name !== undefined),\n        message: `Group message from ${sender}`,\n        timestamp: new Date(Date.now() + timeIncrement).toLocaleTimeString(),\n        group: true,\n      };\n      messages.push(groupMessage);\n\n      timeIncrement += 15000; // Increment time by 15 seconds for each message\n    });\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Request, Participant } from '../../@types/types';\n\nexport interface GenerateRandomRequestListOptions {\n  participants: Participant[];\n  hostName: string;\n  coHostName?: string;\n  numberOfRequests: number;\n}\n\n// Export the type definition for the function\nexport type GenerateRandomRequestListType = (\n  options: GenerateRandomRequestListOptions,\n) => Request[];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenerateRandomRequestList {\n  /**\n   * Generates a list of random requests for participants, excluding the host and co-host.\n   *\n   * @param {GenerateRandomRequestListOptions} options - The options for generating the request list.\n   * @param {Participant[]} options.participants - The list of participants.\n   * @param {string} options.hostName - The name of the host.\n   * @param {string} options.coHostName - The name of the co-host.\n   * @param {number} options.numberOfRequests - The number of requests to generate for each participant.\n   * @returns {Request[]} The generated list of requests.\n   */\n  generateRandomRequestList({\n    participants,\n    hostName,\n    coHostName,\n    numberOfRequests,\n  }: GenerateRandomRequestListOptions): Request[] {\n    // Filter out the host and co-host from the participants\n    const filteredParticipants = participants.filter(\n      (participant) => participant.name !== hostName && participant.name !== coHostName,\n    );\n\n    // Create an array with three possible request icons\n    const requestIcons = ['fa-video', 'fa-desktop', 'fa-microphone'];\n\n    // Shuffle the request icons array to ensure unique icons for each participant and randomly select a minimum of 1 and a maximum of 3 icons\n    for (let i = requestIcons.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [requestIcons[i], requestIcons[j]] = [requestIcons[j], requestIcons[i]];\n    }\n\n    // Generate unique requests for each participant with unique icons\n    const requestList = filteredParticipants.flatMap((participant) => {\n      const uniqueIcons = new Set<string>(); // To ensure unique icons for each participant\n\n      const requests = [];\n      for (let i = 0; i < numberOfRequests; i++) {\n        let randomIcon;\n        do {\n          randomIcon = requestIcons[Math.floor(Math.random() * requestIcons.length)];\n        } while (uniqueIcons.has(randomIcon));\n\n        uniqueIcons.add(randomIcon);\n\n        requests.push({\n          id: participant.id || '',\n          name: participant.name.toLowerCase().replace(/\\s/g, '_'),\n          icon: randomIcon,\n          username: participant.name.toLowerCase().replace(/\\s/g, '_'),\n        });\n      }\n\n      return requests;\n    });\n\n    return requestList;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WaitingRoomParticipant } from '../../@types/types';\n\n// Export the type definition for the function\nexport type GenerateRandomWaitingRoomListType = () => WaitingRoomParticipant[];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenerateRandomWaitingRoomList {\n  /**\n   * Generates a random list of participants for a waiting room.\n   *\n   * @param options - Configuration options for generating the waiting room list.\n   * @returns An array of `WaitingRoomParticipant` objects, each with a random name, mute status, and unique ID.\n   *\n   * @example\n   * const options = {};\n   * const waitingRoomList = generateRandomWaitingRoomList(options);\n   * console.log(waitingRoomList);\n   */\n  generateRandomWaitingRoomList(): WaitingRoomParticipant[] {\n    // Array of random names to assign to participants in the waiting room\n    const names = ['Dimen', 'Nore', 'Ker', 'Lor', 'Mik'];\n\n    // Loop through the names array and add participants to the waiting room list\n    const waitingRoomList = [];\n    for (let i = 0; i < names.length; i++) {\n      const randomName = names[i];\n      waitingRoomList.push({\n        name: randomName,\n        id: i.toString(),\n      });\n    }\n\n    return waitingRoomList;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Poll } from '../../@types/types';\nexport interface GenerateRandomPollsOptions {\n  numberOfPolls: number;\n}\n\n// Export the type definition for the function\nexport type GenerateRandomPollsType = (options: GenerateRandomPollsOptions) => Poll[];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenerateRandomPolls {\n  /**\n   * Generates an array of random poll objects.\n   *\n   * @param {GenerateRandomPollsOptions} options - An object containing the number of polls to generate.\n   * @param {number} options.numberOfPolls - The number of random polls to generate.\n   * @returns {Poll[]} An array of random poll objects.\n   */\n  generateRandomPolls({ numberOfPolls }: GenerateRandomPollsOptions): Poll[] {\n    const pollTypes: string[] = ['trueFalse', 'yesNo', 'custom'];\n    const polls: Poll[] = [];\n\n    for (let i = 0; i < numberOfPolls; i++) {\n      const type = pollTypes[Math.floor(Math.random() * pollTypes.length)];\n      let options: string[];\n\n      switch (type) {\n        case 'trueFalse':\n          options = ['True', 'False'];\n          break;\n        case 'yesNo':\n          options = ['Yes', 'No'];\n          break;\n        case 'custom':\n          options = Array.from(\n            { length: Math.floor(Math.random() * 5) + 2 },\n            (_, idx) => `Option ${idx + 1}`,\n          );\n          break;\n        default:\n          options = [];\n      }\n\n      const poll: Poll = {\n        id: `${i + 1}`,\n        question: `Random Question ${i + 1}`,\n        type,\n        options,\n        votes: Array(options.length).fill(0),\n        status: 'inactive', // or 'active'\n        voters: {},\n      };\n\n      polls.push(poll);\n    }\n\n    return polls;\n  }\n}\n","import { Component, Input, OnInit, OnDestroy, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { getOverlayPosition } from '../../../methods/utils/get-overlay-position.util';\n\nexport interface MiniCardAudioOptions {\n  customStyle?: Partial<CSSStyleDeclaration>;\n  name?: string;\n  showWaveform?: boolean;\n  overlayPosition?: string;\n  barColor?: string;\n  textColor?: string;\n  imageSource?: string;\n  roundedImage?: boolean;\n  imageStyle?: Partial<CSSStyleDeclaration>;\n}\n\nexport type MiniCardAudioType = (options: MiniCardAudioOptions) => HTMLElement;\n\n/**\n * MiniCardAudio component displays an audio card with optional waveform animation.\n *\n * @component\n * @selector app-mini-card-audio\n * @standalone true\n * @imports CommonModule\n *\n * @template\n * The template includes:\n * - A card container with customizable styles.\n * - An optional background image.\n * - An overlay with the name and waveform animation.\n *\n * @styles\n * The styles include:\n * - Card dimensions and background color.\n * - Overlay positioning and grid layout.\n * - Name column styling.\n * - Waveform bar styling.\n * - Background image positioning and optional rounded corners.\n *\n * @inputs\n * @param {any} customStyle - Custom styles for the card.\n * @param {string} name - The name to display on the card.\n * @param {boolean} showWaveform - Flag to show or hide the waveform animation.\n * @param {string} overlayPosition - Position of the overlay on the card.\n * @param {string} barColor - Color of the waveform bars.\n * @param {string} textColor - Color of the name text.\n * @param {string} imageSource - Source URL for the background image.\n * @param {boolean} roundedImage - Flag to apply rounded corners to the background image.\n * @param {any} imageStyle - Custom styles for the background image.\n *\n * @class\n * @implements OnInit, OnDestroy\n *\n * @constructor\n * @param {Partial<CSSStyleDeclaration>} injectedCustomStyle - Injected custom styles for the card.\n * @param {string} injectedName - Injected name to display on the card.\n * @param {boolean} injectedShowWaveform - Injected flag to show or hide the waveform animation.\n * @param {string} injectedOverlayPosition - Injected position of the overlay on the card.\n * @param {string} injectedBarColor - Injected color of the waveform bars.\n * @param {string} injectedTextColor - Injected color of the name text.\n * @param {string} injectedImageSource - Injected source URL for the background image.\n * @param {boolean} injectedRoundedImage - Injected flag to apply rounded corners to the background image.\n * @param {Partial<CSSStyleDeclaration>} injectedImageStyle - Injected custom styles for the background image.\n *\n * @methods\n * @method ngOnInit - Lifecycle hook that is called after data-bound properties are initialized.\n * @method ngOnDestroy - Lifecycle hook that is called just before the component is destroyed.\n * @method animateWaveform - Starts the waveform animation.\n * @method resetWaveform - Resets the waveform animation.\n * @method clearIntervals - Clears all animation intervals.\n * @method getAnimationDuration - Returns the animation duration for a given index.\n * @method getImageStyle - Returns the styles for the background image.\n * @method getOverlayPosition - Returns the styles for the overlay position.\n */\n@Component({\n  selector: 'app-mini-card-audio',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"card\" [ngStyle]=\"customStyle\">\n      <img *ngIf=\"imageSource\" [src]=\"imageSource\" [ngStyle]=\"getImageStyle()\" alt=\"Background\" />\n      <div [ngStyle]=\"getOverlayPosition(overlayPosition)\" [class.overlay-web]=\"true\">\n        <div class=\"name-column\">\n          <span class=\"name-text\" [ngStyle]=\"{ color: textColor }\">{{ name }}</span>\n        </div>\n        <div [class.waveform-web]=\"true\">\n          <div\n            *ngFor=\"let animation of waveformAnimations\"\n            [ngStyle]=\"{\n              height: animation === 0 ? '1px' : '16px',\n              backgroundColor: barColor\n            }\"\n            class=\"bar\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .card {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n        background-color: #2c678f;\n      }\n      .overlay-web {\n        position: absolute;\n        min-width: 50%;\n        min-height: 5%;\n        max-height: 100%;\n        display: grid;\n        grid-template-columns: 4fr 2fr;\n        grid-gap: 3px;\n      }\n      .name-column {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(0, 0, 0, 0.5);\n        padding: 5px 10px;\n        margin-right: 2px;\n        font-size: 14px;\n      }\n      .name-text {\n        font-size: 14px;\n        color: white;\n      }\n      .waveform-web {\n        display: flex;\n        justify-content: left;\n        align-items: center;\n        background-color: rgba(0, 0, 0, 0.05);\n        padding: 0;\n        flex-direction: row;\n      }\n      .bar {\n        flex: 1;\n        opacity: 0.35;\n        margin: 0 1px;\n      }\n      .background-image {\n        position: absolute;\n        width: 80px;\n        height: 80px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        top: 50%;\n        left: 50%;\n        transform: translate(-40px, -40px);\n      }\n      .rounded-image {\n        border-radius: 20%;\n      }\n    `,\n  ],\n})\nexport class MiniCardAudio implements OnInit, OnDestroy {\n  @Input() customStyle: any;\n  @Input() name = '';\n  @Input() showWaveform = false;\n  @Input() overlayPosition = 'bottomLeft';\n  @Input() barColor = 'white';\n  @Input() textColor = 'white';\n  @Input() imageSource = '';\n  @Input() roundedImage = false;\n  @Input() imageStyle: any = {};\n\n  waveformAnimations: number[] = Array.from({ length: 9 }, () => 0);\n  intervals: NodeJS.Timeout[] = [];\n\n  constructor(\n    @Optional() @Inject('customStyle') injectedCustomStyle: Partial<CSSStyleDeclaration>,\n    @Optional() @Inject('name') injectedName: string,\n    @Optional() @Inject('showWaveform') injectedShowWaveform: boolean,\n    @Optional() @Inject('overlayPosition') injectedOverlayPosition: string,\n    @Optional() @Inject('barColor') injectedBarColor: string,\n    @Optional() @Inject('textColor') injectedTextColor: string,\n    @Optional() @Inject('imageSource') injectedImageSource: string,\n    @Optional() @Inject('roundedImage') injectedRoundedImage: boolean,\n    @Optional() @Inject('imageStyle') injectedImageStyle: Partial<CSSStyleDeclaration>,\n  ) {\n    // Use injected values if available\n    this.customStyle = injectedCustomStyle || this.customStyle;\n    this.name = injectedName || this.name;\n    this.showWaveform = injectedShowWaveform || this.showWaveform;\n    this.overlayPosition = injectedOverlayPosition || this.overlayPosition;\n    this.barColor = injectedBarColor || this.barColor;\n    this.textColor = injectedTextColor || this.textColor;\n    this.imageSource = injectedImageSource || this.imageSource;\n    this.roundedImage = injectedRoundedImage || this.roundedImage;\n    this.imageStyle = injectedImageStyle || this.imageStyle;\n  }\n\n  ngOnInit() {\n    if (this.showWaveform) {\n      this.animateWaveform();\n    } else {\n      this.resetWaveform();\n    }\n  }\n\n  ngOnDestroy() {\n    this.clearIntervals();\n  }\n\n  animateWaveform() {\n    this.intervals = this.waveformAnimations.map((_, index) =>\n      setInterval(() => {\n        this.waveformAnimations[index] = (this.waveformAnimations[index] + 1) % 2;\n      }, this.getAnimationDuration(index)),\n    );\n  }\n\n  resetWaveform() {\n    this.waveformAnimations.fill(0);\n  }\n\n  clearIntervals() {\n    this.intervals.forEach((interval) => clearInterval(interval));\n  }\n\n  getAnimationDuration(index: number): number {\n    const durations = [474, 433, 407, 458, 400, 427, 441, 419, 487];\n    return durations[index] || 0;\n  }\n\n  getImageStyle() {\n    return {\n      ...this.imageStyle,\n      ...(this.roundedImage ? { borderRadius: '20%' } : {}),\n    };\n  }\n\n  getOverlayPosition(position: string) {\n    return getOverlayPosition({ position });\n  }\n}\n","//initial values\nimport { initialValuesState } from './lib/methods/utils/initial-values.util';\n\n//import components for display (samples)\nimport { LoadingModal } from './lib/components/display-components/loading-modal/loading-modal.component';\nimport { MainAspectComponent } from './lib/components/display-components/main-aspect-component/main-aspect-component.component';\nimport { ControlButtonsComponent } from './lib/components/display-components/control-buttons-component/control-buttons-component.component';\nimport { ControlButtonsAltComponent } from './lib/components/display-components/control-buttons-alt-component/control-buttons-alt-component.component';\nimport { ControlButtonsComponentTouch } from './lib/components/display-components/control-buttons-component-touch/control-buttons-component-touch.component';\nimport { OtherGridComponent } from './lib/components/display-components/other-grid-component/other-grid-component.component';\nimport { MainScreenComponent } from './lib/components/display-components/main-screen-component/main-screen-component.component';\nimport { MainGridComponent } from './lib/components/display-components/main-grid-component/main-grid-component.component';\nimport { SubAspectComponent } from './lib/components/display-components/sub-aspect-component/sub-aspect-component.component';\nimport { MainContainerComponent } from './lib/components/display-components/main-container-component/main-container-component.component';\nimport { AlertComponent } from './lib/components/display-components/alert-component/alert.component.component';\nimport { MenuModal } from './lib/components/menu-components/menu-modal/menu-modal.component';\nimport { RecordingModal } from './lib/components/recording-components/recording-modal/recording-modal.component';\nimport { RequestsModal } from './lib/components/requests-components/requests-modal/requests-modal.component';\nimport { WaitingRoomModal } from './lib/components/waiting-components/waiting-room-modal.component';\nimport { DisplaySettingsModal } from './lib/components/display-settings-components/display-settings-modal.component';\nimport { EventSettingsModal } from './lib/components/event-settings-components/event-settings-modal/event-settings-modal.component';\nimport { CoHostModal } from './lib/components/co-host-components/co-host-modal/co-host-modal.component';\nimport { ParticipantsModal } from './lib/components/participants-components/participants-modal/participants-modal.component';\nimport { MessagesModal } from './lib/components/message-components/messages-modal/messages-modal.component';\nimport { MediaSettingsModal } from './lib/components/media-settings-components/media-settings-modal/media-settings-modal.component';\nimport { ConfirmExitModal } from './lib/components/exit-components/confirm-exit-modal/confirm-exit-modal.component';\nimport { ConfirmHereModal } from './lib/components/misc-components/confirm-here-modal/confirm-here-modal.component';\nimport { ShareEventModal } from './lib/components/misc-components/share-event-modal/share-event-modal.component';\nimport { WelcomePage } from './lib/components/misc-components/welcome-page/welcome-page.component';\nimport { PreJoinPage } from './lib/components/misc-components/pre-join-page/pre-join-page.component';\n\nimport { PollModal } from './lib/components/polls-components/poll-modal/poll-modal.component';\nimport { BackgroundModal } from './lib/components/background-components/background-modal/background-modal.component';\nimport { BreakoutRoomsModal } from './lib/components/breakout-components/breakout-rooms-modal.component';\nimport { ConfigureWhiteboardModal } from './lib/components/whiteboard-components/configure-whiteboard-modal/configure-whiteboard-modal.component';\nimport { Whiteboard } from './lib/components/whiteboard-components/whiteboard/whiteboard.component';\nimport { Screenboard } from './lib/components/screenboard-components/screenboard/screenboard.component';\nimport { ScreenboardModal } from './lib/components/screenboard-components/screenboard-modal/screenboard-modal.component';\n\n//pagination and display of media (samples)\nimport { Pagination } from './lib/components/display-components/pagination/pagination.component';\nimport { FlexibleGrid } from './lib/components/display-components/flexible-grid/flexible-grid.component';\nimport { FlexibleVideo } from './lib/components/display-components/flexible-video/flexible-video.component';\nimport { AudioGrid } from './lib/components/display-components/audio-grid/audio-grid.component';\n\n//import methods for control (samples)\nimport { LaunchMenuModal } from './lib/methods/menu-methods/launch-menu-modal.service';\nimport { LaunchRecording } from './lib/methods/recording-methods/launch-recording.service';\nimport { StartRecording } from './lib/methods/recording-methods/start-recording.service';\nimport { ConfirmRecording } from './lib/methods/recording-methods/confirm-recording.service';\nimport { LaunchWaiting } from './lib/methods/waiting-methods/launch-waiting.service';\nimport { launchCoHost } from './lib/methods/co-host-methods/launch-co-host.service';\nimport { LaunchMediaSettings } from './lib/methods/media-settings-methods/launch-media-settings.service';\nimport { LaunchDisplaySettings } from './lib/methods/display-settings-methods/launch-display-settings.service';\nimport { LaunchSettings } from './lib/methods/settings-methods/launch-settings.service';\nimport { LaunchRequests } from './lib/methods/requests-methods/launch-requests.service';\nimport { LaunchParticipants } from './lib/methods/participants-methods/launch-participants.service';\nimport { LaunchMessages } from './lib/methods/message-methods/launch-messages.service';\nimport { LaunchConfirmExit } from './lib/methods/exit-methods/launch-confirm-exit.service';\nimport { LaunchPoll } from './lib/methods/polls-methods/launch-poll.service';\nimport { LaunchBackground } from './lib/methods/background-methods/launch-background.service';\nimport { LaunchBreakoutRooms } from './lib/methods/breakout-room-methods/launch-breakout-rooms.service';\nimport { LaunchConfigureWhiteboard } from './lib/methods/whiteboard-methods/launch-configure-whiteboard.service';\n\n// mediasfu functions -- examples\nimport { SocketManager } from './lib/sockets/socket-manager.service';\nimport { JoinRoomClient } from './lib/producer-client/producer-client-emits/join-room-client.service';\nimport { UpdateRoomParametersClient } from './lib/producer-client/producer-client-emits/update-room-parameters-client.service';\nimport { CreateDeviceClient } from './lib/producer-client/producer-client-emits/create-device-client.service';\n\nimport { ClickVideo } from './lib/methods/stream-methods/click-video.service';\nimport { ClickAudio } from './lib/methods/stream-methods/click-audio.service';\nimport { ClickScreenShare } from './lib/methods/stream-methods/click-screen-share.service';\nimport { StreamSuccessVideo } from './lib/consumers/stream-success-video.service';\nimport { StreamSuccessAudio } from './lib/consumers/stream-success-audio.service';\nimport { StreamSuccessScreen } from './lib/consumers/stream-success-screen.service';\nimport { StreamSuccessAudioSwitch } from './lib/consumers/stream-success-audio-switch.service';\nimport { CheckPermission } from './lib/consumers/check-permission.service';\nimport { ProducerClosed } from './lib/consumers/socket-receive-methods/producer-closed.service';\nimport { NewPipeProducer } from './lib/consumers/socket-receive-methods/new-pipe-producer.service';\n\n//mediasfu functions\nimport { UpdateMiniCardsGrid } from './lib/consumers/update-mini-cards-grid.service';\nimport { MixStreams } from './lib/consumers/mix-streams.service';\nimport { DispStreams } from './lib/consumers/disp-streams.service';\nimport { StopShareScreen } from './lib/consumers/stop-share-screen.service';\nimport { CheckScreenShare } from './lib/consumers/check-screen-share.service';\nimport { StartShareScreen } from './lib/consumers/start-share-screen.service';\nimport { RequestScreenShare } from './lib/consumers/request-screen-share.service';\nimport { ReorderStreams } from './lib/consumers/reorder-streams.service';\nimport { PrepopulateUserMedia } from './lib/consumers/prepopulate-user-media.service';\nimport { GetVideos } from './lib/consumers/get-videos.service';\nimport { RePort } from './lib/consumers/re-port.service';\nimport { Trigger } from './lib/consumers/trigger.service';\nimport { ConsumerResume } from './lib/consumers/consumer-resume.service';\nimport { ConnectSendTransportAudio } from './lib/consumers/connect-send-transport-audio.service';\nimport { ConnectSendTransportVideo } from './lib/consumers/connect-send-transport-video.service';\nimport { ConnectSendTransportScreen } from './lib/consumers/connect-send-transport-screen.service';\nimport { ProcessConsumerTransports } from './lib/consumers/process-consumer-transports.service';\nimport { ResumePauseStreams } from './lib/consumers/resume-pause-streams.service';\nimport { Readjust } from './lib/consumers/readjust.service';\nimport { CheckGrid } from './lib/consumers/check-grid.service';\nimport { GetEstimate } from './lib/consumers/get-estimate.service';\nimport { CalculateRowsAndColumns } from './lib/consumers/calculate-rows-and-columns.service';\nimport { AddVideosGrid } from './lib/consumers/add-videos-grid.service';\nimport { OnScreenChanges } from './lib/consumers/on-screen-changes.service';\nimport { sleep } from './lib/methods/utils/sleep.util';\nimport { ChangeVids } from './lib/consumers/change-vids.service';\nimport { CompareActiveNames } from './lib/consumers/compare-active-names.service';\nimport { CompareScreenStates } from './lib/consumers/compare-screen-states.service';\nimport { CreateSendTransport } from './lib/consumers/create-send-transport.service';\nimport { ResumeSendTransportAudio } from './lib/consumers/resume-send-transport-audio.service';\nimport { ReceiveAllPipedTransports } from './lib/consumers/receive-all-piped-transports.service';\nimport { DisconnectSendTransportVideo } from './lib/consumers/disconnect-send-transport-video.service';\nimport { DisconnectSendTransportAudio } from './lib/consumers/disconnect-send-transport-audio.service';\nimport { DisconnectSendTransportScreen } from './lib/consumers/disconnect-send-transport-screen.service';\nimport { ConnectSendTransport } from './lib/consumers/connect-send-transport.service';\nimport { GetPipedProducersAlt } from './lib/consumers/get-piped-producers-alt.service';\nimport { SignalNewConsumerTransport } from './lib/consumers/signal-new-consumer-transport.service';\nimport { ConnectRecvTransport } from './lib/consumers/connect-recv-transport.service';\nimport { ReUpdateInter } from './lib/consumers/re-update-inter.service';\nimport { UpdateParticipantAudioDecibels } from './lib/consumers/update-participant-audio-decibels.service';\nimport { CloseAndResize } from './lib/consumers/close-and-resize.service';\nimport { AutoAdjust } from './lib/consumers/auto-adjust.service';\nimport { SwitchUserVideoAlt } from './lib/consumers/switch-user-video-alt.service';\nimport { SwitchUserVideo } from './lib/consumers/switch-user-video.service';\nimport { SwitchUserAudio } from './lib/consumers/switch-user-audio.service';\nimport { ReceiveRoomMessages } from './lib/consumers/receive-room-messages.service';\nimport { FormatNumber } from './lib/methods/utils/format-number.service';\nimport { ConnectIps } from './lib/consumers/connect-ips.service';\n\nimport { PollUpdated } from './lib/methods/polls-methods/poll-updated.service';\nimport { HandleCreatePoll } from './lib/methods/polls-methods/handle-create-poll.service';\nimport { HandleVotePoll } from './lib/methods/polls-methods/handle-vote-poll.service';\nimport { HandleEndPoll } from './lib/methods/polls-methods/handle-end-poll.service';\n\nimport { BreakoutRoomUpdated } from './lib/methods/breakout-room-methods/breakout-room-updated.service';\n\nimport { StartMeetingProgressTimer } from './lib/methods/utils/meeting-timer/start-meeting-progress-timer.service';\nimport { UpdateRecording } from './lib/methods/recording-methods/update-recording.service';\nimport { StopRecording } from './lib/methods/recording-methods/stop-recording.service';\n\nimport { UserWaiting } from './lib/producers/socket-receive-methods/user-waiting.service';\nimport { PersonJoined } from './lib/producers/socket-receive-methods/person-joined.service';\nimport { AllWaitingRoomMembers } from './lib/producers/socket-receive-methods/all-waiting-room-members.service';\nimport { RoomRecordParams } from './lib/producers/socket-receive-methods/room-record-params.service';\nimport { BanParticipant } from './lib/producers/socket-receive-methods/ban-participant.service';\nimport { UpdatedCoHost } from './lib/producers/socket-receive-methods/updated-co-host.service';\nimport { ParticipantRequested } from './lib/producers/socket-receive-methods/participant-requested.service';\nimport { ScreenProducerId } from './lib/producers/socket-receive-methods/screen-producer-id.service';\nimport { UpdateMediaSettings } from './lib/producers/socket-receive-methods/update-media-settings.service';\nimport { ProducerMediaPaused } from './lib/producers/socket-receive-methods/producer-media-paused.service';\nimport { ProducerMediaResumed } from './lib/producers/socket-receive-methods/producer-media-resumed.service';\nimport { ProducerMediaClosed } from './lib/producers/socket-receive-methods/producer-media-closed.service';\nimport { ControlMediaHost } from './lib/producers/socket-receive-methods/control-media-host.service';\nimport { MeetingEnded } from './lib/producers/socket-receive-methods/meeting-ended.service';\nimport { DisconnectUserSelf } from './lib/producers/socket-receive-methods/disconnect-user-self.service';\nimport { ReceiveMessage } from './lib/producers/socket-receive-methods/receive-message.service';\nimport { MeetingTimeRemaining } from './lib/producers/socket-receive-methods/meeting-time-remaining.service';\nimport { MeetingStillThere } from './lib/producers/socket-receive-methods/meeting-still-there.service';\nimport { StartRecords } from './lib/producers/socket-receive-methods/start-records.service';\nimport { ReInitiateRecording } from './lib/producers/socket-receive-methods/re-initiate-recording.service';\nimport { GetDomains } from './lib/producers/socket-receive-methods/get-domains.service';\nimport { UpdateConsumingDomains } from './lib/producers/socket-receive-methods/update-consuming-domains.service';\nimport { RecordingNotice } from './lib/producers/socket-receive-methods/recording-notice.service';\nimport { TimeLeftRecording } from './lib/producers/socket-receive-methods/time-left-recording.service';\nimport { StoppedRecording } from './lib/producers/socket-receive-methods/stopped-recording.service';\nimport { HostRequestResponse } from './lib/producers/socket-receive-methods/host-request-response.service';\nimport { AllMembers } from './lib/producers/socket-receive-methods/all-members.service';\nimport { AllMembersRest } from './lib/producers/socket-receive-methods/all-members-rest.service';\nimport { Disconnect } from './lib/producers/socket-receive-methods/disconnect.service';\n\nimport { CaptureCanvasStream } from './lib/methods/whiteboard-methods/capture-canvas-stream.service';\nimport { ResumePauseAudioStreams } from './lib/consumers/resume-pause-audio-streams.service';\nimport { ProcessConsumerTransportsAudio } from './lib/consumers/process-consumer-transports-audio.service';\n\n//Prebuilt Event Rooms\nimport { MediasfuGeneric } from './lib/components/mediasfu-components/mediasfu-generic.component';\nimport { MediasfuBroadcast } from './lib/components/mediasfu-components/mediasfu-broadcast.component';\nimport { MediasfuWebinar } from './lib/components/mediasfu-components/mediasfu-webinar.component';\nimport { MediasfuConference } from './lib/components/mediasfu-components/mediasfu-conference.component';\nimport { MediasfuChat } from './lib/components/mediasfu-components/mediasfu-chat.component';\n\n//Random Data\nimport { GenerateRandomParticipants } from './lib/methods/utils/generate-random-participants.service';\nimport { GenerateRandomMessages } from './lib/methods/utils/generate-random-messages.service';\nimport { GenerateRandomRequestList } from './lib/methods/utils/generate-random-request-list.service';\nimport { GenerateRandomWaitingRoomList } from './lib/methods/utils/generate-random-waiting-room-list.service';\nimport { GenerateRandomPolls } from './lib/methods/utils/generate-random-polls.service';\n\n//Key UI Components\nimport { MeetingProgressTimer } from './lib/components/display-components/meeting-progress-timer/meeting-progress-timer.component';\nimport { MiniAudio } from './lib/components/display-components/mini-audio/mini-audio.component';\nimport { MiniCard } from './lib/components/display-components/mini-card/mini-card.component';\nimport { AudioCard } from './lib/components/display-components/audio-card/audio-card.component';\nimport { VideoCard } from './lib/components/display-components/video-card/video-card.component';\nimport { CardVideoDisplay } from './lib/components/display-components/card-video-display/card-video-display.component';\nimport { MiniCardAudio } from './lib/components/display-components/mini-card-audio/mini-card-audio.component';\nimport { MiniAudioPlayer } from './lib/methods/utils/mini-audio-player/mini-audio-player.component';\nimport { SoundPlayer } from './lib/methods/utils/sound-player.service';\n\nexport {\n  initialValuesState,\n  LoadingModal,\n  MainAspectComponent,\n  ControlButtonsComponent,\n  ControlButtonsAltComponent,\n  ControlButtonsComponentTouch,\n  OtherGridComponent,\n  MainScreenComponent,\n  MainGridComponent,\n  SubAspectComponent,\n  MainContainerComponent,\n  AlertComponent,\n  MenuModal,\n  RecordingModal,\n  RequestsModal,\n  WaitingRoomModal,\n  DisplaySettingsModal,\n  EventSettingsModal,\n  CoHostModal,\n  ParticipantsModal,\n  MessagesModal,\n  MediaSettingsModal,\n  ConfirmExitModal,\n  ConfirmHereModal,\n  ShareEventModal,\n  WelcomePage,\n  PreJoinPage,\n  Pagination,\n  FlexibleGrid,\n  FlexibleVideo,\n  AudioGrid,\n  LaunchMenuModal,\n  LaunchRecording,\n  StartRecording,\n  ConfirmRecording,\n  LaunchWaiting,\n  launchCoHost,\n  LaunchMediaSettings,\n  LaunchDisplaySettings,\n  LaunchSettings,\n  LaunchRequests,\n  LaunchParticipants,\n  LaunchMessages,\n  LaunchConfirmExit,\n  JoinRoomClient,\n  UpdateRoomParametersClient,\n  CreateDeviceClient,\n  ClickVideo,\n  ClickAudio,\n  ClickScreenShare,\n  StreamSuccessVideo,\n  StreamSuccessAudio,\n  StreamSuccessScreen,\n  StreamSuccessAudioSwitch,\n  CheckPermission,\n  ProducerClosed,\n  NewPipeProducer,\n  UpdateMiniCardsGrid,\n  MixStreams,\n  DispStreams,\n  StopShareScreen,\n  CheckScreenShare,\n  StartShareScreen,\n  RequestScreenShare,\n  ReorderStreams,\n  PrepopulateUserMedia,\n  GetVideos,\n  RePort,\n  Trigger,\n  ConsumerResume,\n  ConnectSendTransportAudio,\n  ConnectSendTransportVideo,\n  ConnectSendTransportScreen,\n  ProcessConsumerTransports,\n  ResumePauseStreams,\n  Readjust,\n  CheckGrid,\n  GetEstimate,\n  CalculateRowsAndColumns,\n  AddVideosGrid,\n  OnScreenChanges,\n  sleep,\n  ChangeVids,\n  CompareActiveNames,\n  CompareScreenStates,\n  CreateSendTransport,\n  ResumeSendTransportAudio,\n  ReceiveAllPipedTransports,\n  DisconnectSendTransportVideo,\n  DisconnectSendTransportAudio,\n  DisconnectSendTransportScreen,\n  ConnectSendTransport,\n  GetPipedProducersAlt,\n  SignalNewConsumerTransport,\n  ConnectRecvTransport,\n  ReUpdateInter,\n  UpdateParticipantAudioDecibels,\n  CloseAndResize,\n  AutoAdjust,\n  SwitchUserVideoAlt,\n  SwitchUserVideo,\n  SwitchUserAudio,\n  ReceiveRoomMessages,\n  FormatNumber,\n  ConnectIps,\n  StartMeetingProgressTimer,\n  UpdateRecording,\n  StopRecording,\n  UserWaiting,\n  PersonJoined,\n  AllWaitingRoomMembers,\n  RoomRecordParams,\n  BanParticipant,\n  UpdatedCoHost,\n  ParticipantRequested,\n  ScreenProducerId,\n  UpdateMediaSettings,\n  ProducerMediaPaused,\n  ProducerMediaResumed,\n  ProducerMediaClosed,\n  ControlMediaHost,\n  MeetingEnded,\n  DisconnectUserSelf,\n  ReceiveMessage,\n  MeetingTimeRemaining,\n  MeetingStillThere,\n  StartRecords,\n  ReInitiateRecording,\n  GetDomains,\n  UpdateConsumingDomains,\n  RecordingNotice,\n  TimeLeftRecording,\n  StoppedRecording,\n  HostRequestResponse,\n  AllMembers,\n  AllMembersRest,\n  Disconnect,\n  MediasfuGeneric,\n  MediasfuBroadcast,\n  MediasfuWebinar,\n  MediasfuConference,\n  MediasfuChat,\n  GenerateRandomParticipants,\n  GenerateRandomMessages,\n  GenerateRandomRequestList,\n  GenerateRandomWaitingRoomList,\n  GenerateRandomPolls,\n  MeetingProgressTimer,\n  MiniAudio,\n  MiniCard,\n  AudioCard,\n  VideoCard,\n  CardVideoDisplay,\n  MiniCardAudio,\n  MiniAudioPlayer,\n  SoundPlayer,\n  CaptureCanvasStream,\n  ResumePauseAudioStreams,\n  ProcessConsumerTransportsAudio,\n  PollUpdated,\n  HandleCreatePoll,\n  HandleVotePoll,\n  HandleEndPoll,\n  BreakoutRoomUpdated,\n  LaunchPoll,\n  LaunchBackground,\n  LaunchBreakoutRooms,\n  LaunchConfigureWhiteboard,\n  PollModal,\n  BackgroundModal,\n  BreakoutRoomsModal,\n  ConfigureWhiteboardModal,\n  Whiteboard,\n  Screenboard,\n  ScreenboardModal,\n  SocketManager,\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","i1.RespondToRequests","i1.RespondToWaiting","i1.ModifyDisplaySettings","i4","i1.ModifySettings","i1.ModifyCoHostSettings","i1","i1.MuteParticipants","i2.MessageParticipants","i3.RemoveParticipants","i5","i1.SendMessage","i1.SwitchAudio","i2.SwitchVideo","i3.SwitchVideoAlt","i6","i1.ConfirmExit","i3","MAX_ATTEMPTS","RATE_LIMIT_DURATION","i1.GeneratePageContent","i1.RecordUpdateTimer","i1.RecordStartTimer","i2.RecordResumeTimer","i1.ValidateAlphanumeric","i1.JoinRoom","i2.JoinConRoom","i1.VideoCaptureConstraints","i2.HParams","i3.VParams","i4.ScreenParams","i5.AParams","i1.SignalNewConsumerTransport","i1.ControlMedia","i1.ClickVideo","i1.JoinConRoom","i1.SocketManager","i2.NewPipeProducer","i3.ProducerClosed","i4.JoinConsumeRoom","i1.CheckPauseState","i2.CheckResumeState","i3.RecordPauseTimer","i4.RecordResumeTimer","i1.RecordPauseTimer","i1.SoundPlayer","i1.UpdateMiniCardsGrid","i2.MixStreams","i3.DispStreams","i4.StopShareScreen","i5.CheckScreenShare","i6.StartShareScreen","i7.RequestScreenShare","i8.ReorderStreams","i9.PrepopulateUserMedia","i10.GetVideos","i11.RePort","i12.Trigger","i13.ConsumerResume","i14.ConnectSendTransport","i15.ConnectSendTransportAudio","i16.ConnectSendTransportVideo","i17.ConnectSendTransportScreen","i18.ProcessConsumerTransports","i19.ResumePauseStreams","i20.Readjust","i21.CheckGrid","i22.GetEstimate","i23.CalculateRowsAndColumns","i24.AddVideosGrid","i25.OnScreenChanges","i26.ChangeVids","i27.CompareActiveNames","i28.CompareScreenStates","i29.CreateSendTransport","i30.ResumeSendTransportAudio","i31.ReceiveAllPipedTransports","i32.DisconnectSendTransportVideo","i33.DisconnectSendTransportAudio","i34.DisconnectSendTransportScreen","i35.GetPipedProducersAlt","i36.SignalNewConsumerTransport","i37.ConnectRecvTransport","i38.ReUpdateInter","i39.UpdateParticipantAudioDecibels","i40.CloseAndResize","i41.AutoAdjust","i42.SwitchUserVideoAlt","i43.SwitchUserVideo","i44.SwitchUserAudio","i45.GetDomains","i46.FormatNumber","i47.ConnectIps","i48.CreateDeviceClient","i49.HandleCreatePoll","i50.HandleEndPoll","i51.HandleVotePoll","i52.CaptureCanvasStream","i53.ResumePauseAudioStreams","i54.ProcessConsumerTransportsAudio","i55.LaunchMenuModal","i56.LaunchRecording","i57.StartRecording","i58.ConfirmRecording","i59.LaunchWaiting","i60.launchCoHost","i61.LaunchMediaSettings","i62.LaunchDisplaySettings","i63.LaunchSettings","i64.LaunchRequests","i65.LaunchParticipants","i66.LaunchMessages","i67.LaunchConfirmExit","i68.LaunchPoll","i69.LaunchBreakoutRooms","i70.LaunchConfigureWhiteboard","i71.StartMeetingProgressTimer","i72.UpdateRecording","i73.StopRecording","i74.UserWaiting","i75.PersonJoined","i76.AllWaitingRoomMembers","i77.RoomRecordParams","i78.BanParticipant","i79.UpdatedCoHost","i80.ParticipantRequested","i81.ScreenProducerId","i82.UpdateMediaSettings","i83.ProducerMediaPaused","i84.ProducerMediaResumed","i85.ProducerMediaClosed","i86.ControlMediaHost","i87.MeetingEnded","i88.DisconnectUserSelf","i89.ReceiveMessage","i90.MeetingTimeRemaining","i91.MeetingStillThere","i92.StartRecords","i93.ReInitiateRecording","i94.RecordingNotice","i95.TimeLeftRecording","i96.StoppedRecording","i97.HostRequestResponse","i98.AllMembers","i99.AllMembersRest","i100.Disconnect","i101.PollUpdated","i102.BreakoutRoomUpdated","i103.SocketManager","i104.JoinRoomClient","i105.UpdateRoomParametersClient","i106.ClickVideo","i107.ClickAudio","i108.ClickScreenShare","i109.SwitchVideoAlt","i110.StreamSuccessVideo","i111.StreamSuccessAudio","i112.StreamSuccessScreen","i113.StreamSuccessAudioSwitch","i114.CheckPermission","i115.UpdateConsumingDomains","i116.ReceiveRoomMessages","i117","i49.CaptureCanvasStream","i50.ResumePauseAudioStreams","i51.ProcessConsumerTransportsAudio","i52.LaunchRecording","i53.StartRecording","i54.ConfirmRecording","i55.LaunchParticipants","i56.LaunchMessages","i57.LaunchConfirmExit","i58.StartMeetingProgressTimer","i59.UpdateRecording","i60.StopRecording","i61.PersonJoined","i62.RoomRecordParams","i63.BanParticipant","i64.ProducerMediaPaused","i65.ProducerMediaResumed","i66.ProducerMediaClosed","i67.MeetingEnded","i68.DisconnectUserSelf","i69.ReceiveMessage","i70.MeetingTimeRemaining","i71.MeetingStillThere","i72.StartRecords","i73.ReInitiateRecording","i74.RecordingNotice","i75.TimeLeftRecording","i76.StoppedRecording","i77.AllMembers","i78.AllMembersRest","i79.Disconnect","i80.SocketManager","i81.JoinRoomClient","i82.UpdateRoomParametersClient","i83.ClickVideo","i84.ClickAudio","i85.ClickScreenShare","i86.SwitchVideoAlt","i87.StreamSuccessVideo","i88.StreamSuccessAudio","i89.StreamSuccessScreen","i90.StreamSuccessAudioSwitch","i91.CheckPermission","i92.UpdateConsumingDomains","i93.ReceiveRoomMessages","i94","i109.StreamSuccessVideo","i110.StreamSuccessAudio","i111.StreamSuccessScreen","i112.StreamSuccessAudioSwitch","i113.CheckPermission","i114.UpdateConsumingDomains","i115.ReceiveRoomMessages","i116","i52.LaunchMessages","i53.LaunchConfirmExit","i54.StartMeetingProgressTimer","i55.ProducerMediaPaused","i56.ProducerMediaResumed","i57.ProducerMediaClosed","i58.MeetingEnded","i59.DisconnectUserSelf","i60.ReceiveMessage","i61.MeetingTimeRemaining","i62.MeetingStillThere","i63.AllMembers","i64.AllMembersRest","i65.Disconnect","i66.SocketManager","i67.JoinRoomClient","i68.UpdateRoomParametersClient","i69.ClickVideo","i70.ClickAudio","i71.ClickScreenShare","i72.SwitchVideoAlt","i73.StreamSuccessVideo","i74.StreamSuccessAudio","i75.StreamSuccessScreen","i76.StreamSuccessAudioSwitch","i77.CheckPermission","i78.UpdateConsumingDomains","i79.ReceiveRoomMessages","i80"],"mappings":"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"}