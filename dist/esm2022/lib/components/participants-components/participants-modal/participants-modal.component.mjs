import { Component, Input } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import { faTimes } from '@fortawesome/free-solid-svg-icons';
import { ParticipantList } from '../participant-list/participant-list.component';
import { ParticipantListOthers } from '../participant-list-others/participant-list-others.component';
import * as i0 from "@angular/core";
import * as i1 from "../../../methods/participants-methods/mute-participants.service";
import * as i2 from "../../../methods/participants-methods/message-participants.service";
import * as i3 from "../../../methods/participants-methods/remove-participants.service";
import * as i4 from "@angular/common";
import * as i5 from "@fortawesome/angular-fontawesome";
/**
 * Component for displaying a modal containing a list of participants with options to mute, message, or remove participants.
 * Supports both regular participants and a subset of "other" participants.
 *
 * @component
 * @selector app-participants-modal
 * @standalone true
 * @templateUrl ./participants-modal.component.html
 * @styleUrls ['./participants-modal.component.css']
 * @imports [CommonModule, FontAwesomeModule, ParticipantList, ParticipantListOthers]
 *
 * @example
 * ```html
 * <app-participants-modal
 *   [isParticipantsModalVisible]="true"
 *   [onParticipantsClose]="closeModalFunction"
 *   [onParticipantsFilterChange]="filterFunction"
 *   [participantsCounter]="5"
 *   [parameters]="participantsModalParameters"
 *   [position]="'topRight'"
 *   [backgroundColor]="'#83c0e9'"
 * ></app-participants-modal>
 * ```
 */
export class ParticipantsModal {
    muteParticipantsService;
    messageParticipantsService;
    removeParticipantsService;
    isParticipantsModalVisible = false;
    onParticipantsClose;
    onParticipantsFilterChange;
    participantsCounter = 0;
    onMuteParticipants;
    onMessageParticipants;
    onRemoveParticipants;
    parameters = {};
    position = 'topRight';
    backgroundColor = '#83c0e9';
    participant_s = [];
    participantsCounter_s = 0;
    reRender = false;
    faTimes = faTimes;
    constructor(muteParticipantsService, messageParticipantsService, removeParticipantsService) {
        this.muteParticipantsService = muteParticipantsService;
        this.messageParticipantsService = messageParticipantsService;
        this.removeParticipantsService = removeParticipantsService;
    }
    ngOnInit() {
        this.updateParticipantsData();
        if (!this.onMuteParticipants) {
            this.onMuteParticipants = this.muteParticipantsService.muteParticipants.bind(this.muteParticipantsService);
        }
        if (!this.onMessageParticipants) {
            this.onMessageParticipants = this.messageParticipantsService.messageParticipants.bind(this.messageParticipantsService);
        }
        if (!this.onRemoveParticipants) {
            this.onRemoveParticipants = this.removeParticipantsService.removeParticipants.bind(this.removeParticipantsService);
        }
    }
    ngOnChanges(changes) {
        if (changes['parameters'] || changes['participantsCounter']) {
            this.updateParticipantsData();
        }
    }
    updateParticipantsData() {
        let { getUpdatedAllParams } = this.parameters;
        this.parameters = getUpdatedAllParams();
        this.participant_s = this.parameters.filteredParticipants;
        this.participantsCounter_s = this.parameters.filteredParticipants.length;
    }
    handleFilterChange(event) {
        const inputElement = event.target;
        const filterValue = inputElement.value;
        this.onParticipantsFilterChange(filterValue);
        this.reRender = !this.reRender;
    }
    handleClose() {
        this.onParticipantsClose();
    }
    canShowParticipantList() {
        const participantsValue = this.parameters.coHostResponsibility?.find((item) => item.name === 'participants')?.value;
        return (this.parameters.islevel === '2' ||
            (this.parameters.coHost === this.parameters.member && participantsValue === true));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.8", ngImport: i0, type: ParticipantsModal, deps: [{ token: i1.MuteParticipants }, { token: i2.MessageParticipants }, { token: i3.RemoveParticipants }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.8", type: ParticipantsModal, isStandalone: true, selector: "app-participants-modal", inputs: { isParticipantsModalVisible: "isParticipantsModalVisible", onParticipantsClose: "onParticipantsClose", onParticipantsFilterChange: "onParticipantsFilterChange", participantsCounter: "participantsCounter", onMuteParticipants: "onMuteParticipants", onMessageParticipants: "onMessageParticipants", onRemoveParticipants: "onRemoveParticipants", parameters: "parameters", position: "position", backgroundColor: "backgroundColor" }, usesOnChanges: true, ngImport: i0, template: "<div *ngIf=\"isParticipantsModalVisible\" class=\"modal-container\" [ngStyle]=\"{'background-color': 'rgba(0, 0, 0, 0.5)'}\">\r\n  <div class=\"modal-content\" [ngStyle]=\"{'background-color': backgroundColor, 'top': position.includes('top') ? '10px' : 'auto', 'bottom': position.includes('bottom') ? '10px' : 'auto', 'left': position.includes('Left') ? '10px' : 'auto', 'right': position.includes('Right') ? '10px' : 'auto'}\">\r\n    <div class=\"modal-header\">\r\n      <div>\r\n        Participants <span class=\"badge\">{{ participantsCounter_s }}</span>\r\n      </div>\r\n      <div class=\"close-icon\" (click)=\"handleClose()\">\r\n        <fa-icon [icon]=\"faTimes\" size=\"xl\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <input type=\"text\" class=\"filter-input\" placeholder=\"Search ...\" (input)=\"handleFilterChange($event)\">\r\n      <ng-container *ngIf=\"parameters.participants\">\r\n        <ng-container *ngIf=\"canShowParticipantList()\">\r\n          <app-participant-list\r\n            [participants]=\"participant_s\"\r\n            [isBroadcast]=\"parameters.eventType === 'broadcast'\"\r\n            [onMuteParticipants]=\"onMuteParticipants\"\r\n            [onMessageParticipants]=\"onMessageParticipants\"\r\n            [onRemoveParticipants]=\"onRemoveParticipants\"\r\n            [socket]=\"parameters.socket\"\r\n            [coHostResponsibility]=\"parameters.coHostResponsibility\"\r\n            [coHost]=\"parameters.coHost\"\r\n            [member]=\"parameters.member\"\r\n            [islevel]=\"parameters.islevel\"\r\n            [roomName]=\"parameters.roomName\"\r\n            [updateIsMessagesModalVisible]=\"parameters.updateIsMessagesModalVisible\"\r\n            [updateStartDirectMessage]=\"parameters.updateStartDirectMessage\"\r\n            [updateDirectMessageDetails]=\"parameters.updateDirectMessageDetails\"\r\n            [updateParticipants]=\"parameters.updateParticipants\"\r\n          >\r\n          </app-participant-list>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!canShowParticipantList()\">\r\n          <app-participant-list-others\r\n            [participants]=\"participant_s\"\r\n            [coHost]=\"parameters.coHost\"\r\n            [member]=\"parameters.member\"\r\n            >\r\n          </app-participant-list-others>\r\n        </ng-container>\r\n      </ng-container>\r\n      <div *ngIf=\"!parameters.participants\">No participants</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", styles: [".modal-container{position:fixed;top:0;left:0;width:100%;height:100%;display:block;z-index:999}.modal-content{position:fixed;border-radius:10px;padding:10px;width:80%;max-width:400px;max-height:75%;overflow-y:auto}.modal-header{display:flex;justify-content:space-between;align-items:center}.badge{background-color:#fff;color:#000;border-radius:10px;padding:5px}.close-icon{padding:5px;cursor:pointer}.modal-body{margin-top:10px}.filter-input{width:90%;padding:10px;border-radius:5px;border:1px solid #000;font-size:16px;margin-bottom:10px}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "ngmodule", type: FontAwesomeModule }, { kind: "component", type: i5.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "animation", "mask", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "transform", "a11yRole"] }, { kind: "component", type: ParticipantList, selector: "app-participant-list", inputs: ["participants", "isBroadcast", "onMuteParticipants", "onMessageParticipants", "onRemoveParticipants", "socket", "coHostResponsibility", "member", "islevel", "showAlert", "coHost", "roomName", "updateIsMessagesModalVisible", "updateDirectMessageDetails", "updateStartDirectMessage", "updateParticipants"] }, { kind: "component", type: ParticipantListOthers, selector: "app-participant-list-others", inputs: ["participants", "coHost", "member"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.8", ngImport: i0, type: ParticipantsModal, decorators: [{
            type: Component,
            args: [{ selector: 'app-participants-modal', standalone: true, imports: [CommonModule, FontAwesomeModule, ParticipantList, ParticipantListOthers], template: "<div *ngIf=\"isParticipantsModalVisible\" class=\"modal-container\" [ngStyle]=\"{'background-color': 'rgba(0, 0, 0, 0.5)'}\">\r\n  <div class=\"modal-content\" [ngStyle]=\"{'background-color': backgroundColor, 'top': position.includes('top') ? '10px' : 'auto', 'bottom': position.includes('bottom') ? '10px' : 'auto', 'left': position.includes('Left') ? '10px' : 'auto', 'right': position.includes('Right') ? '10px' : 'auto'}\">\r\n    <div class=\"modal-header\">\r\n      <div>\r\n        Participants <span class=\"badge\">{{ participantsCounter_s }}</span>\r\n      </div>\r\n      <div class=\"close-icon\" (click)=\"handleClose()\">\r\n        <fa-icon [icon]=\"faTimes\" size=\"xl\"></fa-icon>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <input type=\"text\" class=\"filter-input\" placeholder=\"Search ...\" (input)=\"handleFilterChange($event)\">\r\n      <ng-container *ngIf=\"parameters.participants\">\r\n        <ng-container *ngIf=\"canShowParticipantList()\">\r\n          <app-participant-list\r\n            [participants]=\"participant_s\"\r\n            [isBroadcast]=\"parameters.eventType === 'broadcast'\"\r\n            [onMuteParticipants]=\"onMuteParticipants\"\r\n            [onMessageParticipants]=\"onMessageParticipants\"\r\n            [onRemoveParticipants]=\"onRemoveParticipants\"\r\n            [socket]=\"parameters.socket\"\r\n            [coHostResponsibility]=\"parameters.coHostResponsibility\"\r\n            [coHost]=\"parameters.coHost\"\r\n            [member]=\"parameters.member\"\r\n            [islevel]=\"parameters.islevel\"\r\n            [roomName]=\"parameters.roomName\"\r\n            [updateIsMessagesModalVisible]=\"parameters.updateIsMessagesModalVisible\"\r\n            [updateStartDirectMessage]=\"parameters.updateStartDirectMessage\"\r\n            [updateDirectMessageDetails]=\"parameters.updateDirectMessageDetails\"\r\n            [updateParticipants]=\"parameters.updateParticipants\"\r\n          >\r\n          </app-participant-list>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!canShowParticipantList()\">\r\n          <app-participant-list-others\r\n            [participants]=\"participant_s\"\r\n            [coHost]=\"parameters.coHost\"\r\n            [member]=\"parameters.member\"\r\n            >\r\n          </app-participant-list-others>\r\n        </ng-container>\r\n      </ng-container>\r\n      <div *ngIf=\"!parameters.participants\">No participants</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", styles: [".modal-container{position:fixed;top:0;left:0;width:100%;height:100%;display:block;z-index:999}.modal-content{position:fixed;border-radius:10px;padding:10px;width:80%;max-width:400px;max-height:75%;overflow-y:auto}.modal-header{display:flex;justify-content:space-between;align-items:center}.badge{background-color:#fff;color:#000;border-radius:10px;padding:5px}.close-icon{padding:5px;cursor:pointer}.modal-body{margin-top:10px}.filter-input{width:90%;padding:10px;border-radius:5px;border:1px solid #000;font-size:16px;margin-bottom:10px}\n"] }]
        }], ctorParameters: () => [{ type: i1.MuteParticipants }, { type: i2.MessageParticipants }, { type: i3.RemoveParticipants }], propDecorators: { isParticipantsModalVisible: [{
                type: Input
            }], onParticipantsClose: [{
                type: Input
            }], onParticipantsFilterChange: [{
                type: Input
            }], participantsCounter: [{
                type: Input
            }], onMuteParticipants: [{
                type: Input
            }], onMessageParticipants: [{
                type: Input
            }], onRemoveParticipants: [{
                type: Input
            }], parameters: [{
                type: Input
            }], position: [{
                type: Input
            }], backgroundColor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,